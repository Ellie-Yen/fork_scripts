var window = window || {};

/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/Rerouter/dist/index.js":
/*!*********************************************!*\
  !*** ./node_modules/Rerouter/dist/index.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.version = void 0;
__exportStar(__webpack_require__(/*! ./src/screen */ "./node_modules/Rerouter/dist/src/screen.js"), exports);
__exportStar(__webpack_require__(/*! ./src/rerouter */ "./node_modules/Rerouter/dist/src/rerouter.js"), exports);
__exportStar(__webpack_require__(/*! ./src/struct */ "./node_modules/Rerouter/dist/src/struct.js"), exports);
__exportStar(__webpack_require__(/*! ./src/utils */ "./node_modules/Rerouter/dist/src/utils.js"), exports);
exports.version = 1;
if (typeof writeFile === 'function') {
    var writeFileTmp_1 = writeFile;
    writeFile = function (path, content) {
        var rtn = writeFileTmp_1(path, content);
        execute("chmod 777 ".concat(path));
        return rtn;
    };
}
else {
    console.log('writeFile is not defined');
}
if (typeof s3UploadFile === 'function') {
    var s3UploadFileTmp_1 = s3UploadFile;
    s3UploadFile = function (filepath, objectName, contentType, endpoint, bucket, keyId, accessKey, token, ssl, retry, retryInterval) {
        if (retry === void 0) { retry = 3; }
        if (retryInterval === void 0) { retryInterval = 10000; }
        var sizeOrErrorMsg = '';
        for (var r = 0; r < retry; r++) {
            if (r > 0) {
                sleep(retryInterval);
            }
            sizeOrErrorMsg = s3UploadFileTmp_1(filepath, objectName, contentType, endpoint, bucket, keyId, accessKey, token, ssl);
            if (typeof sizeOrErrorMsg === 'number') {
                break;
            }
        }
        return sizeOrErrorMsg;
    };
}
if (typeof s3DownloadFile === 'function') {
    var s3DownloadFileTmp_1 = s3DownloadFile;
    s3DownloadFile = function (filepath, objectName, endpoint, bucket, keyId, accessKey, token, ssl, retry, retryInterval) {
        if (retry === void 0) { retry = 3; }
        if (retryInterval === void 0) { retryInterval = 10000; }
        var fileNotExistedMsg = 'The specified key does not exist.';
        var successOrErrorMsg = '';
        for (var r = 0; r < retry; r++) {
            if (r > 0) {
                sleep(retryInterval);
            }
            successOrErrorMsg = s3DownloadFileTmp_1(filepath, objectName, endpoint, bucket, keyId, accessKey, token, ssl);
            if (successOrErrorMsg === true) {
                break;
            }
            if (successOrErrorMsg === fileNotExistedMsg) {
                break;
            }
        }
        return successOrErrorMsg;
    };
}
//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/rerouter.js":
/*!****************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/rerouter.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rerouter = exports.Rerouter = void 0;
var struct_1 = __webpack_require__(/*! ./struct */ "./node_modules/Rerouter/dist/src/struct.js");
var screen_1 = __webpack_require__(/*! ./screen */ "./node_modules/Rerouter/dist/src/screen.js");
var utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/Rerouter/dist/src/utils.js");
var xr_1 = __webpack_require__(/*! ./xr */ "./node_modules/Rerouter/dist/src/xr.js");
__webpack_require__(/*! core-js/es/object/assign */ "./node_modules/core-js/es/object/assign.js");
__webpack_require__(/*! core-js/es/array/find-index */ "./node_modules/core-js/es/array/find-index.js");
// singleton class
var Rerouter = /** @class */ (function () {
    function Rerouter() {
        this.debug = true;
        this.defaultConfig = struct_1.DefaultConfigValue;
        this.rerouterConfig = struct_1.DefaultRerouterConfig;
        this.screenConfig = struct_1.DefaultScreenConfig;
        this.screen = new screen_1.Screen(this.screenConfig);
        this.running = false;
        this.routeConflictRecord = [];
        this.routes = [];
        this.tasks = [];
        this.routeContext = null;
        this.unknownRouteAction = null;
        this.startAppRouteAction = null;
        this.localGameStatus = null;
        this.cloudGameStatus = null;
    }
    Rerouter.getInstance = function () {
        if (Rerouter.instance === undefined) {
            Rerouter.instance = new Rerouter();
        }
        return Rerouter.instance;
    };
    Rerouter.prototype.reset = function () {
        // NOTE: this is an another way that resets Rerouter, just leaving here for memory
        // rerouterContainer.instance = new Rerouter();
        // @ts-ignore included 'core-js/es/object/assign'
        Object.assign(this, new Rerouter());
    };
    /**
     * Recalculate some value like device width or height in screenConfig
     */
    Rerouter.prototype.init = function () {
        var _a;
        // sort routes by priority
        this.routes.sort(function (a, b) { return b.priority - a.priority; });
        // check and calculate screen config
        var deviceWH = getScreenSize();
        var max = Math.max(deviceWH.width, deviceWH.height);
        var min = Math.min(deviceWH.width, deviceWH.height);
        var dWidth = this.screenConfig.rotation === 'horizontal' ? max : min;
        var dHeight = this.screenConfig.rotation === 'vertical' ? max : min;
        this.screenConfig.deviceWidth = this.screenConfig.deviceWidth || dWidth;
        this.screenConfig.deviceHeight = this.screenConfig.deviceHeight || dHeight;
        this.screenConfig.screenWidth = this.screenConfig.screenWidth || dWidth;
        this.screenConfig.screenHeight = this.screenConfig.screenHeight || dHeight;
        this.log("screenWidth: ".concat(this.screenConfig.screenWidth, ", screenHeight: ").concat(this.screenConfig.screenHeight));
        this.screenConfig.logScreenshotFolder = utils_1.Utils.joinPaths(this.rerouterConfig.saveImageRoot, this.rerouterConfig.deviceId);
        if ((_a = this.rerouterConfig.savePageReference) === null || _a === void 0 ? void 0 : _a.enable) {
            var folderPath = this.rerouterConfig.savePageReference.folderPath || utils_1.Utils.joinPaths(this.rerouterConfig.saveImageRoot, 'pageReference');
            this.rerouterConfig.savePageReference.folderPath = folderPath;
            execute("mkdir -p ".concat(folderPath));
        }
        // new screen if screen config changed
        this.screen = new screen_1.Screen(this.screenConfig);
    };
    /**
     * Add RouteConfig to Rerouter routes, after starting Rerouter will run over all RouteConfigs to match screen and do action
     * @param config information about how route match and route action
     */
    Rerouter.prototype.addRoute = function (config) {
        // @ts-ignore included 'core-js/es/array/find-index'
        var existingRouteIndex = this.routes.findIndex(function (route) { return route.path === config.path; });
        // If it exists, log a warning and decide what to do next
        if (existingRouteIndex !== -1) {
            this.warning("A route with the path '".concat(config.path, "' already exists. Duplicate route will not be added."));
            // Option 1: Update the existing route with the new configuration
            // this.routes[existingRouteIndex] = this.wrapRouteConfigWithDefault(config);
            // Option 2: Simply return and don't add the new route
            return;
        }
        // If it doesn't exist, push the new route
        this.routes.push(this.wrapRouteConfigWithDefault(config));
    };
    /**
     * Gets a copy of all route configurations to prevent external modifications.
     * @returns an array of RouteConfig
     */
    Rerouter.prototype.getRoutes = function () {
        return this.routes.slice(); // Return a copy of the routes array to prevent modifications
    };
    /**
     * Tell Rerouter what to do if not matching any route
     * @param action function to do if not matching
     */
    Rerouter.prototype.addUnknownAction = function (action) {
        this.unknownRouteAction = action;
    };
    Rerouter.prototype.addStartAppAction = function (action) {
        this.startAppRouteAction = action;
    };
    /**
     * Add TaskConfig to Rerouter tasks, after starting Rerouter will run over all Tasks by task condition
     * @param config information about how task works
     */
    Rerouter.prototype.addTask = function (config) {
        this.tasks.push({
            name: config.name,
            config: this.wrapTaskConfigWithDefault(config),
            startTime: 0,
            lastRunTime: 0,
            runTimes: 0,
        });
    };
    /**
     * start Rerouter to run over tasks and routes
     * @param packageName
     */
    Rerouter.prototype.start = function (packageName) {
        this.rerouterConfig.packageName = packageName;
        // check tasks
        if (this.tasks.length === 0) {
            this.log("Rerouter start failed, no tasks ...");
            return;
        }
        this.init();
        this.log("Rerouter started ...");
        // task controller
        this.running = true;
        this.startTaskLoop();
        this.log("Rerouter stopped ...");
    };
    /**
     * stop Rerouter
     */
    Rerouter.prototype.stop = function () {
        this.log("Rerouter stop called, trying to stop task loop");
        this.running = false;
        if (this.routeContext !== null) {
            this.routeContext.scriptRunning = false;
        }
    };
    Rerouter.prototype.checkInApp = function () {
        var packageName = utils_1.Utils.getCurrentApp()[0];
        if (packageName === this.rerouterConfig.packageName) {
            return true;
        }
        return utils_1.Utils.isAppOnTop(this.rerouterConfig.packageName);
    };
    Rerouter.prototype.checkAndStartApp = function () {
        if (!this.checkInApp()) {
            this.log("AppIsNotStarted, startApp ".concat(this.rerouterConfig.packageName));
            this.startApp();
            return true;
        }
        return false;
    };
    Rerouter.prototype.startApp = function () {
        if (!this.rerouterConfig.packageName) {
            this.log("Rerouter start app failed, no packageName ...");
            return;
        }
        utils_1.Utils.startApp(this.rerouterConfig.packageName);
        utils_1.Utils.sleep(this.rerouterConfig.startAppDelay);
    };
    Rerouter.prototype.stopApp = function () {
        if (!this.rerouterConfig.packageName) {
            this.log("Rerouter stop app failed, no packageName ...");
            return;
        }
        utils_1.Utils.stopApp(this.rerouterConfig.packageName);
        utils_1.Utils.sleep(1000);
    };
    Rerouter.prototype.restartApp = function () {
        this.stopApp();
        this.startApp();
    };
    Rerouter.prototype.goNext = function (page) {
        if (page.next !== undefined) {
            this.screen.tap(page.next);
        }
        else {
            this.warning("".concat(page.name, " action == goNext, but no next xy"));
        }
    };
    Rerouter.prototype.goBack = function (page) {
        if (page.back !== undefined) {
            this.screen.tap(page.back);
        }
        else {
            this.warning("".concat(page.name, " action == goBack, but no back xy"));
        }
    };
    Rerouter.prototype.isPageMatch = function (page) {
        var image = this.screen.getCvtDevScreenshot();
        var isMatch = this.isPageMatchImage(page, image);
        releaseImage(image);
        return isMatch;
    };
    Rerouter.prototype.isPageMatchImage = function (page, image) {
        if (typeof page === 'string') {
            var p = this.getPageByName(page);
            if (p === null) {
                this.warning("isPageMatchImage ".concat(page, " not exist"));
                return false;
            }
            page = p;
        }
        if (page instanceof struct_1.Page) {
            return this.isMatchPageImpl(image, page, this.defaultConfig.PageThres, this.debug);
        }
        else {
            var pages = this.isMatchGroupPageImpl(image, page, this.defaultConfig.GroupPageThres, this.debug);
            return pages.length > 0;
        }
    };
    Rerouter.prototype.getPagesMatch = function (groupPage) {
        var image = this.screen.getCvtDevScreenshot();
        var match = this.getPagesMatchImage(groupPage, image, this.defaultConfig.GroupPageThres);
        releaseImage(image);
        return match;
    };
    Rerouter.prototype.getPagesMatchImage = function (groupPage, image, parentThres, debug) {
        var _a, _b;
        var pages = [];
        var thres = (_b = (_a = groupPage.thres) !== null && _a !== void 0 ? _a : parentThres) !== null && _b !== void 0 ? _b : this.defaultConfig.PageThres;
        for (var i = 0; i < groupPage.pages.length; i++) {
            var page = groupPage.pages[i];
            var isPageMatch = this.isMatchPageImpl(image, page, thres, this.debug);
            if (isPageMatch) {
                pages.push(page);
            }
        }
        return pages;
    };
    Rerouter.prototype.waitScreenForMatchingPage = function (page, timeout, matchTimes, interval) {
        var _this = this;
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        return utils_1.Utils.waitForAction(function () { return _this.isPageMatch(page); }, timeout, matchTimes, interval);
    };
    Rerouter.prototype.isRouteMatch = function (route) {
        var image = this.screen.getCvtDevScreenshot();
        var isMatch = this.isRouteMatchImage(route, image);
        releaseImage(image);
        return isMatch;
    };
    Rerouter.prototype.isRouteMatchImage = function (route, image) {
        var routeConfig = this.getRouteConfig(route);
        if (routeConfig === null) {
            this.warning("isRouteMatchImage ".concat(route, " not exist"));
            return false;
        }
        var filledRouteConfig = this.wrapRouteConfigWithDefault(routeConfig);
        var rotation = this.screen.getImageRotation(image);
        var isMatched = this.isMatchRouteImpl(image, rotation, filledRouteConfig, 'waitScreenForMatchingRoute').isMatched;
        if (isMatched) {
            return true;
        }
        return false;
    };
    Rerouter.prototype.waitScreenForMatchingRoute = function (route, timeout, matchTimes, interval) {
        var _this = this;
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        return utils_1.Utils.waitForAction(function () { return _this.isRouteMatch(route); }, timeout, matchTimes, interval);
    };
    Rerouter.prototype.getPageByName = function (name) {
        var _a;
        for (var _i = 0, _b = this.routes; _i < _b.length; _i++) {
            var route = _b[_i];
            if (name === ((_a = route.match) === null || _a === void 0 ? void 0 : _a.name)) {
                return route.match;
            }
        }
        return null;
    };
    Rerouter.prototype.getRouteConfigByPath = function (path) {
        for (var _i = 0, _a = this.routes; _i < _a.length; _i++) {
            var route = _a[_i];
            if (path === route.path) {
                return route;
            }
        }
        return null;
    };
    Rerouter.prototype.getCurrentMatchNames = function () {
        var _this = this;
        var image = this.screen.getCvtDevScreenshot();
        var matchedNames = [];
        this.routes.forEach(function (route) {
            var match = route.match;
            if ((match instanceof struct_1.Page && _this.isMatchPageImpl(image, match, _this.defaultConfig.PageThres, _this.debug)) ||
                (match instanceof struct_1.GroupPage && _this.isMatchGroupPageImpl(image, match, _this.defaultConfig.PageThres, _this.debug).length > 0)) {
                matchedNames.push(match.name);
            }
        });
        this.log("current match: ", matchedNames);
        releaseImage(image);
        return matchedNames;
    };
    Rerouter.prototype.getRouteConfig = function (r) {
        var route;
        if (typeof r === 'string') {
            route = this.getRouteConfigByPath(r);
        }
        else {
            route = r;
        }
        return route;
    };
    Rerouter.prototype.wrapRouteConfigWithDefault = function (config) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        return {
            path: config.path,
            action: config.action,
            match: (_a = config.match) !== null && _a !== void 0 ? _a : null,
            customMatch: (_b = config.customMatch) !== null && _b !== void 0 ? _b : null,
            rotation: (_c = config.rotation) !== null && _c !== void 0 ? _c : this.screenConfig.rotation,
            shouldMatchTimes: (_d = config.shouldMatchTimes) !== null && _d !== void 0 ? _d : this.defaultConfig.RouteConfigShouldMatchTimes,
            shouldMatchDuring: (_e = config.shouldMatchDuring) !== null && _e !== void 0 ? _e : this.defaultConfig.RouteConfigShouldMatchDuring,
            beforeActionDelay: (_f = config.beforeActionDelay) !== null && _f !== void 0 ? _f : this.defaultConfig.RouteConfigBeforeActionDelay,
            afterActionDelay: (_g = config.afterActionDelay) !== null && _g !== void 0 ? _g : this.defaultConfig.RouteConfigAfterActionDelay,
            priority: (_h = config.priority) !== null && _h !== void 0 ? _h : this.defaultConfig.RouteConfigPriority,
            debug: (_j = config.debug) !== null && _j !== void 0 ? _j : this.defaultConfig.RouteConfigDebug,
        };
    };
    Rerouter.prototype.wrapTaskConfigWithDefault = function (config) {
        var _a, _b, _c, _d, _e, _f, _g;
        return {
            name: config.name,
            maxTaskRunTimes: (_a = config.maxTaskRunTimes) !== null && _a !== void 0 ? _a : this.defaultConfig.TaskConfigMaxTaskRunTimes,
            maxTaskDuring: (_b = config.maxTaskDuring) !== null && _b !== void 0 ? _b : this.defaultConfig.TaskConfigMaxTaskDuring,
            minRoundInterval: (_c = config.minRoundInterval) !== null && _c !== void 0 ? _c : this.defaultConfig.TaskConfigMinRoundInterval,
            forceStop: (_d = config.forceStop) !== null && _d !== void 0 ? _d : this.defaultConfig.TaskConfigAutoStop,
            findRouteDelay: (_e = config.findRouteDelay) !== null && _e !== void 0 ? _e : this.defaultConfig.TaskConfigFindRouteDelay,
            beforeRoute: (_f = config.beforeRoute) !== null && _f !== void 0 ? _f : null,
            afterRoute: (_g = config.afterRoute) !== null && _g !== void 0 ? _g : null,
        };
    };
    Rerouter.prototype.startTaskLoop = function () {
        var taskIdx = 0;
        while (this.running) {
            var task = this.tasks[taskIdx % this.tasks.length];
            taskIdx++;
            var now = Date.now();
            var isTaskRunFirstTime = task.lastRunTime === 0;
            if (now - task.lastRunTime <= task.config.minRoundInterval && !isTaskRunFirstTime) {
                this.log("Task: ".concat(task.name, " during: ").concat(now - task.lastRunTime, " <= minRoundInterval, skip"));
                utils_1.Utils.sleep(this.rerouterConfig.taskDelay);
                continue;
            }
            task.startTime = now;
            task.runTimes = 0;
            var exitTask = false;
            for (var i = 0; i < task.config.maxTaskRunTimes && this.running && !exitTask; i++) {
                this.log("Task: ".concat(task.name, " run ").concat(task.runTimes));
                var skipRoute = false;
                if (task.config.beforeRoute !== null) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " do beforeRoute()"));
                    if (task.config.beforeRoute(task) === 'skipRouteLoop') {
                        skipRoute = true;
                    }
                }
                if (skipRoute) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " skipRouteLoop"));
                }
                else {
                    exitTask = this.startRouteLoop(task);
                }
                if (task.config.afterRoute !== null) {
                    this.log("Task: ".concat(task.name, " run ").concat(task.runTimes, " do afterRoute()"));
                    task.config.afterRoute(task);
                }
                task.runTimes++;
                task.lastRunTime = now;
                var during = now - task.startTime;
                if (task.config.maxTaskDuring > 0 && during >= task.config.maxTaskDuring) {
                    this.log("Task: ".concat(task.name, " taskDuring: ").concat(during, "/").concat(task.config.maxTaskDuring, " reached, stop"));
                    break;
                }
            }
            utils_1.Utils.sleep(this.rerouterConfig.taskDelay);
        }
    };
    Rerouter.prototype.startRouteLoop = function (task) {
        var _this = this;
        var _a, _b, _c, _d, _e;
        this.routeContext = {
            task: task,
            screen: this.screen,
            scriptRunning: this.running,
            path: '',
            lastMatchedPath: (_b = (_a = this.routeContext) === null || _a === void 0 ? void 0 : _a.lastMatchedPath) !== null && _b !== void 0 ? _b : '',
            matchTimes: 0,
            matchStartTS: 0,
            matchDuring: 0,
        };
        var routeLoop = true;
        var exitTaskResult = false;
        var finishRoundFunc = function (exitTask) {
            var _a;
            if (exitTask === void 0) { exitTask = false; }
            routeLoop = false;
            exitTaskResult = exitTask;
            _this.log("finish round: ".concat((_a = _this.routeContext) === null || _a === void 0 ? void 0 : _a.task.name, "; exitTask: ").concat(exitTask));
        };
        // pointer for short code
        var context = this.routeContext;
        while (routeLoop && this.running) {
            var now = Date.now();
            // check task.autoStop
            var taskRunDuring = now - task.startTime;
            if (task.config.forceStop && taskRunDuring > task.config.maxTaskDuring) {
                this.log("Task ".concat(task.name, " AutoStop, exceed taskRunDuring"));
                break;
            }
            // check isAppOn or auto launch it
            if (this.rerouterConfig.autoLaunchApp) {
                if (this.checkAndStartApp()) {
                    if (this.startAppRouteAction !== null) {
                        this.startAppRouteAction(context, finishRoundFunc);
                    }
                    continue;
                }
            }
            var rotation = this.screen.getRotation();
            var image = this.screen.getCvtDevScreenshot();
            var matches = this.findMatchedRouteImpl(task.name, image, rotation);
            var matchedRoute = (_c = matches[0]) === null || _c === void 0 ? void 0 : _c.matchedRoute;
            var matchedPages = (_d = matches[0]) === null || _d === void 0 ? void 0 : _d.matchedPages;
            // context.matchStartTS = 0 if init run
            context.matchStartTS = context.matchStartTS || now;
            context.path = (_e = matchedRoute === null || matchedRoute === void 0 ? void 0 : matchedRoute.path) !== null && _e !== void 0 ? _e : '';
            // first match
            if (context.path !== context.lastMatchedPath) {
                context.matchTimes = 0;
                context.matchStartTS = now;
            }
            context.matchDuring = now - context.matchStartTS;
            context.matchTimes++;
            switch (matches.length) {
                case 0:
                    // no match
                    if (this.unknownRouteAction !== null) {
                        this.unknownRouteAction(context, image, finishRoundFunc);
                    }
                    break;
                case 1:
                    // perfect match 1
                    if (this.rerouterConfig.saveMatchedScreen) {
                        utils_1.Utils.saveScreenshotToDisk("".concat(this.rerouterConfig.saveImageRoot, "/matched"), "".concat(matches[0].matchedRoute.path), false, image);
                    }
                    this.doActionForRoute(context, image, matchedRoute, matchedPages, finishRoundFunc);
                    break;
                default:
                    // conflict
                    var error = this.handleConflictRoutes(task.name, image, matches, finishRoundFunc);
                    if (error) {
                        releaseImage(image);
                        throw error;
                    }
                    break;
            }
            // update lastMatchedPath after action done
            // otherwise the lastMatchedPath will be current path when doing action
            context.lastMatchedPath = context.path;
            releaseImage(image);
            utils_1.Utils.sleep(task.config.findRouteDelay);
        }
        return exitTaskResult;
    };
    Rerouter.prototype.doActionForRoute = function (context, image, route, matchedPages, finishRound) {
        var _a, _b;
        this.logImpl(route.debug, "handleMatchedRoute: ".concat(route.path, ", times: ").concat(context.matchTimes, ", during: ").concat(context.matchDuring));
        if (context.matchTimes < route.shouldMatchTimes || context.matchDuring < route.shouldMatchDuring) {
            // should still wait for matching condition
            return;
        }
        var nextXY = (_a = matchedPages[0]) === null || _a === void 0 ? void 0 : _a.next;
        var backXY = (_b = matchedPages[0]) === null || _b === void 0 ? void 0 : _b.back;
        // matched and fit condition, do action
        utils_1.Utils.sleep(route.beforeActionDelay);
        if (route.action === 'goNext') {
            if (nextXY !== undefined) {
                this.screen.tap(nextXY);
            }
            else {
                this.warning("".concat(route.path, " action == goNext, but no next xy"));
            }
        }
        else if (route.action === 'goBack') {
            if (backXY !== undefined) {
                this.screen.tap(backXY);
            }
            else {
                this.warning("".concat(route.path, " action == goBack, but no back xy"));
            }
        }
        else if (route.action === 'keycodeBack') {
            keycode('BACK', this.screenConfig.actionDuring);
        }
        else {
            route.action(context, image, matchedPages, finishRound);
        }
        this.savePageReferenceImage(image, matchedPages);
        utils_1.Utils.sleep(route.afterActionDelay);
    };
    Rerouter.prototype.findMatchedRouteImpl = function (taskName, image, rotation) {
        var matches = [];
        for (var _i = 0, _a = this.routes; _i < _a.length; _i++) {
            var route = _a[_i];
            var _b = this.isMatchRouteImpl(image, rotation, route, taskName), isMatched = _b.isMatched, matchedPages = _b.matchedPages;
            if (isMatched) {
                this.logImpl(route.debug, 'current match:', matchedPages.map(function (p) { return p.name; }));
                matches.push({ matchedRoute: route, matchedPages: matchedPages });
            }
        }
        return matches;
    };
    Rerouter.prototype.handleConflictRoutes = function (taskName, image, matches, finishRound) {
        var matchDetails = matches
            .map(function (item) {
            var _a;
            var path = ((_a = item.matchedRoute) === null || _a === void 0 ? void 0 : _a.path) || 'emptyRoutePath';
            var pages = item.matchedPages.map(function (p) { return p.name; });
            return "".concat(path, ": (").concat(pages.join(', '), ")");
        })
            .join('\n');
        var warningMsg = "a route conflict when in Task: \"".concat(taskName, "\", details: \n").concat(matchDetails);
        this.warning(warningMsg);
        if (this.rerouterConfig.debugSlackUrl !== '') {
            utils_1.Utils.sendSlackMessage(this.rerouterConfig.debugSlackUrl, 'Conflict Routes Report', "".concat(struct_1.DefaultRerouterConfig.deviceId, " just logged ").concat(warningMsg));
        }
        if (this.rerouterConfig.strictMode) {
            // TODO: save image rather than take another screenshot
            utils_1.Utils.saveScreenshotToDisk(this.rerouterConfig.saveImageRoot, "".concat(struct_1.DefaultRerouterConfig.deviceId, "_conflictedRoutes"));
            return new Error("Intentional crash due to multiple route applied to current screen: ".concat(matchDetails));
        }
        // default handle conflict routes in non-strict mode
        this.log("try handle conflict");
        finishRound(true);
        var now = Date.now();
        this.routeConflictRecord.push(now);
        var duringLimit = 60 * 1000;
        var countsLimit = 5;
        while (this.routeConflictRecord.length > 0 && now - this.routeConflictRecord[0] > duringLimit) {
            this.routeConflictRecord.shift();
        }
        if (this.routeConflictRecord.length >= countsLimit) {
            this.routeConflictRecord = [now];
            this.restartApp();
            return;
        }
        keycode('BACK', this.screenConfig.actionDuring);
    };
    Rerouter.prototype.isMatchRouteImpl = function (image, rotation, route, taskName) {
        var _a;
        // check rotation
        if (route.rotation !== rotation) {
            this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " not match rotation, skip"));
            return { isMatched: false, matchedPages: [] };
        }
        var isMatched = false;
        var matchedPages = [];
        // check route.match
        if (route.match !== null) {
            if (route.match instanceof struct_1.Page) {
                var match = this.isMatchPageImpl(image, route.match, this.defaultConfig.PageThres, route.debug);
                if (match) {
                    isMatched = true;
                    matchedPages.push(route.match);
                }
            }
            else if (route.match instanceof struct_1.GroupPage) {
                var match = this.isMatchGroupPageImpl(image, route.match, this.defaultConfig.GroupPageThres, route.debug);
                if (match.length !== 0) {
                    isMatched = true;
                    matchedPages.push.apply(matchedPages, match);
                }
            }
        }
        // check route.isMatch function
        if (!isMatched && route.customMatch !== null) {
            isMatched = route.customMatch(taskName, image);
            this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " isMatch() => ").concat(isMatched));
        }
        this.logImpl(route.debug, "findMatchedRoute ".concat(route.path, " match: ").concat(isMatched, ", firstPage: ").concat((_a = matchedPages[0]) === null || _a === void 0 ? void 0 : _a.name));
        return {
            isMatched: isMatched,
            matchedPages: matchedPages,
        };
    };
    Rerouter.prototype.isMatchPageImpl = function (image, page, parentThres, debug) {
        var _a, _b, _c;
        var pageThres = page.thres;
        var isSame = true;
        this.logImpl(debug, "checkMatchPage[".concat(page.name, "]"));
        for (var i = 0; isSame && i < page.points.length; i++) {
            var point = page.points[i];
            var thres = (_b = (_a = point.thres) !== null && _a !== void 0 ? _a : pageThres) !== null && _b !== void 0 ? _b : parentThres;
            var shouldMatch = (_c = point.match) !== null && _c !== void 0 ? _c : true;
            var color = getImageColor(image, point.x, point.y);
            var score = utils_1.Utils.identityColor(point, color);
            var isPointColorMatch = score >= thres === shouldMatch;
            if (!isPointColorMatch) {
                isSame = false;
                this.logImpl(debug, "point[".concat(i, "] match false: score: ").concat(score, ", thres: ").concat(thres, "\n"), "expect: ".concat(utils_1.Utils.formatXYRGB(point), "\n"), "   get: ".concat(utils_1.Utils.formatXYRGB(__assign(__assign({}, color), { x: point.x, y: point.y }))));
            }
        }
        this.logImpl(debug, "checkMatchPage[".concat(page.name, "][match: ").concat(isSame, "]"));
        return isSame;
    };
    Rerouter.prototype.isMatchGroupPageImpl = function (image, groupPage, parentThres, debug) {
        var _a;
        var thres = (_a = groupPage.thres) !== null && _a !== void 0 ? _a : parentThres;
        for (var i = 0; i < groupPage.pages.length; i++) {
            var page = groupPage.pages[i];
            var isPageMatch = this.isMatchPageImpl(image, page, thres, debug);
            this.logImpl(debug, "checkMatchGroupPage: ".concat(groupPage.name, ", page[").concat(i, "]: ").concat(page.name, " match: ").concat(isPageMatch));
            if (groupPage.matchOP === '||' && isPageMatch) {
                return [page];
            }
            if (groupPage.matchOP === '&&' && !isPageMatch) {
                return [];
            }
        }
        return groupPage.matchOP === '&&' ? groupPage.pages : [];
    };
    Rerouter.prototype.savePageReferenceImage = function (image, matchedPages) {
        var _a = this.rerouterConfig.savePageReference || {}, enable = _a.enable, folderPath = _a.folderPath, rgba = _a.rgba;
        if (!enable || !folderPath || matchedPages.length === 0) {
            return;
        }
        matchedPages.forEach(function (page) {
            utils_1.Utils.savePointsMarkedImage({
                image: image,
                name: page.name,
                points: page.points,
                folderPath: folderPath,
                rgba: rgba,
            });
        });
    };
    Rerouter.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this.logImpl.apply(this, __spreadArray([this.debug], args, false));
    };
    Rerouter.prototype.logImpl = function (debug) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (!debug || !this.debug) {
            return;
        }
        // only log when debug + this.debug is true
        utils_1.Utils.log.apply(utils_1.Utils, __spreadArray(['[Rerouter][debug]'], args, false));
    };
    Rerouter.prototype.warning = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        utils_1.Utils.log.apply(utils_1.Utils, __spreadArray(['[Rerouter][warning]'], args, false));
    };
    Rerouter.prototype.updateGameStatus = function (status) {
        this.localGameStatus = status; // Update local status first
        // If instanceId or deviceId is empty, skip updating cloud status
        if (!this.rerouterConfig.instanceId || !this.rerouterConfig.deviceId) {
            console.warn('Instance ID or Device ID is empty. Skipping cloud status update.');
            return true; // Local update is considered successful
        }
        if (this.cloudGameStatus === status) {
            return false; // No update is needed if the cloud status hasn't changed
        }
        if (this.rerouterConfig.deviceId === '' || this.rerouterConfig.instanceId === '') {
            console.log("deviceId or instanceId is empty, cannot update game status");
            return false;
        }
        var maxRetries = 3;
        var attempts = 0;
        while (true) {
            var result = (0, xr_1.updateGameStatus)(this.rerouterConfig.deviceId, this.rerouterConfig.instanceId, status);
            if (result === true) {
                this.cloudGameStatus = status; // Update cloud status on success
                return true; // Operation successful, return true
            }
            attempts++;
            if (attempts >= maxRetries) {
                break; // Exit the loop after maxRetries attempts
            }
            utils_1.Utils.sleep(3000); // Sleep between attempts
        }
        return false; // Return false after all attempts failed
    };
    Rerouter.prototype.getGameStatus = function () {
        return this.localGameStatus;
    };
    return Rerouter;
}());
exports.Rerouter = Rerouter;
// NOTE: this is an another way that resets Rerouter, just leaving here for memory
// const rerouterContainer = {
//   instance: new Rerouter(),
// };
// import 'proxy-polyfill';
// export const rerouter: Rerouter = new Proxy(rerouterContainer, {
//   get: (target, prop: keyof Rerouter) => {
//     return target.instance[prop];
//   },
//   set: (target, prop: keyof Rerouter, value: any) => {
//     target.instance[prop] = value;
//     return true;
//   },
// }) as any as Rerouter;
exports.rerouter = Rerouter.getInstance();
//# sourceMappingURL=rerouter.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/screen.js":
/*!**************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/screen.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Screen = void 0;
var utils_1 = __webpack_require__(/*! ./utils */ "./node_modules/Rerouter/dist/src/utils.js");
var Screen = /** @class */ (function () {
    function Screen(config) {
        this.config = config;
    }
    Screen.prototype.calculateDeviceOffset = function (func) {
        var results = func(this);
        this.config.screenWidth = results.screenWidth;
        this.config.screenHeight = results.screenHeight;
        this.config.screenOffsetX = results.screenOffsetX;
        this.config.screenOffsetY = results.screenOffsetY;
    };
    Screen.prototype.getScreenX = function (devX) {
        return Math.floor(this.config.screenOffsetX + (devX * this.config.screenWidth) / this.config.devWidth) || 0;
    };
    Screen.prototype.getScreenY = function (devY) {
        return Math.floor(this.config.screenOffsetY + (devY * this.config.screenHeight) / this.config.devHeight) || 0;
    };
    Screen.prototype.getScreenXY = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            return { x: x, y: y };
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            return { x: x, y: y };
        }
        else {
            throw new Error("getScreenXY wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tap = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tap(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tap(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tapDown = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tapDown(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tapDown(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.moveTo = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            moveTo(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            moveTo(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.tapUp = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var x = this.getScreenX(p1.x);
            var y = this.getScreenY(p1.y);
            tapUp(x, y, this.config.actionDuring);
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var x = this.getScreenX(p1);
            var y = this.getScreenY(p2);
            tapUp(x, y, this.config.actionDuring);
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.swipe = function (fromPnt, toPnt, steps) {
        if (steps === void 0) { steps = 4; }
        var step_x = (toPnt.x - fromPnt.x) / steps;
        var step_y = (toPnt.y - fromPnt.y) / steps;
        var x = this.getScreenX(fromPnt.x);
        var y = this.getScreenY(fromPnt.y);
        tapDown(x, y, 40, 0);
        sleep(10);
        moveTo(x, y, 40, 0);
        sleep(10);
        for (var i = 0; i < steps; i++) {
            x = this.getScreenX(fromPnt.x + step_x * i);
            y = this.getScreenY(fromPnt.y + step_y * i);
            moveTo(x, y, 40, 0);
            sleep(100);
        }
        moveTo(this.getScreenX(toPnt.x), this.getScreenY(toPnt.y), 40, 0);
        sleep(500);
        tapUp(this.getScreenX(toPnt.x), this.getScreenY(toPnt.y), 40, 0);
        sleep(500);
    };
    Screen.prototype.getScreenColor = function (p1, p2) {
        if (p2 === void 0) { p2 = undefined; }
        if (typeof p1 === 'object') {
            var img = this.getCvtDevScreenshot();
            var rgb = getImageColor(img, p1.x, p1.y);
            releaseImage(img);
            return rgb;
        }
        else if (typeof p1 === 'number' && typeof p2 === 'number') {
            var img = this.getCvtDevScreenshot();
            var rgb = getImageColor(img, p1, p2);
            releaseImage(img);
            return rgb;
        }
        else {
            throw new Error("tapDown wrong params ".concat(p1, ", ").concat(p2));
        }
    };
    Screen.prototype.findImage = function (devImg) {
        var img = this.getCvtDevScreenshot();
        var result = findImage(img, devImg);
        releaseImage(img);
        return result;
    };
    Screen.prototype.tapImage = function (devImg) {
        var xy = this.findImage(devImg);
        this.tap(xy);
    };
    Screen.prototype.isSameColor = function (devColorPoint, thres) {
        if (thres === void 0) { thres = 0.9; }
        var rgb = this.getScreenColor(devColorPoint);
        var score = utils_1.Utils.identityColor(rgb, devColorPoint);
        if (score > thres) {
            return true;
        }
        return false;
    };
    Screen.prototype.isSameColorImage = function (devColorPoint, image, thres) {
        if (thres === void 0) { thres = 0.9; }
        var rgb = getImageColor(image, devColorPoint.x, devColorPoint.y);
        var score = utils_1.Utils.identityColor(rgb, devColorPoint);
        if (score > thres) {
            return true;
        }
        return false;
    };
    // currently real device screenshot
    Screen.prototype.getDeviceScreenshot = function () {
        return getScreenshot();
    };
    // currently device screenshot cut by offset
    Screen.prototype.getScreenScreenshot = function () {
        return getScreenshotModify(this.config.screenOffsetX, this.config.screenOffsetY, this.config.screenWidth, this.config.screenHeight, this.config.screenWidth, this.config.screenHeight, 100);
    };
    Screen.prototype.checkAndSaveScreenshots = function () {
        if (this.config.logScreenshotFolder !== '' && Date.now() - this.config.logScreenshotLastTime > this.config.logScreenshotMinIntervalInSec * 1000) {
            this.config.logScreenshotLastTime = Date.now();
            utils_1.Utils.saveScreenshotToDisk(this.config.logScreenshotFolder, 'log');
            utils_1.Utils.removeOldestFilesIfExceedsLimit(this.config.logScreenshotFolder, this.config.logScreenshotMaxFiles);
        }
    };
    Screen.prototype.getCvtDevScreenshot = function () {
        this.checkAndSaveScreenshots();
        return getScreenshotModify(this.config.screenOffsetX, this.config.screenOffsetY, this.config.screenWidth, this.config.screenHeight, this.config.devWidth, this.config.devHeight, 100);
    };
    Screen.prototype.getRotation = function () {
        var _a = getScreenSize(), width = _a.width, height = _a.height;
        if (width > height) {
            return 'horizontal';
        }
        return 'vertical';
    };
    Screen.prototype.getImageRotation = function (image) {
        var _a = getImageSize(image), width = _a.width, height = _a.height;
        if (width > height) {
            return 'horizontal';
        }
        return 'vertical';
    };
    Screen.prototype.setActionDuring = function (during) {
        this.config.actionDuring = during;
    };
    Screen.debug = false;
    return Screen;
}());
exports.Screen = Screen;
//# sourceMappingURL=screen.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/struct.js":
/*!**************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/struct.js ***!
  \**************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GameStatus = exports.DefaultScreenConfig = exports.DefaultRerouterConfig = exports.DefaultConfigValue = exports.GroupPage = exports.Page = void 0;
var Page = /** @class */ (function () {
    function Page(name, devPoints, next, back, thres) {
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        if (thres === void 0) { thres = undefined; }
        this.name = name;
        this.points = devPoints;
        this.next = next;
        this.back = back;
        this.thres = thres;
    }
    return Page;
}());
exports.Page = Page;
var GroupPage = /** @class */ (function () {
    function GroupPage(name, pages, next, back, thres, matchOP) {
        if (next === void 0) { next = undefined; }
        if (back === void 0) { back = undefined; }
        if (thres === void 0) { thres = undefined; }
        if (matchOP === void 0) { matchOP = undefined; }
        this.name = name;
        this.pages = pages;
        this.next = next;
        this.back = back;
        this.thres = thres;
        this.matchOP = matchOP || '||';
    }
    return GroupPage;
}());
exports.GroupPage = GroupPage;
exports.DefaultConfigValue = {
    XYRGBThres: 0.9,
    PageThres: 0.9,
    GroupPageThres: 0.9,
    GroupPageMatchOP: '||',
    RouteConfigShouldMatchTimes: 1,
    RouteConfigShouldMatchDuring: 0,
    RouteConfigBeforeActionDelay: 250,
    RouteConfigAfterActionDelay: 250,
    RouteConfigPriority: 1,
    RouteConfigDebug: false,
    TaskConfigMaxTaskRunTimes: 1,
    TaskConfigMaxTaskDuring: 0,
    TaskConfigMinRoundInterval: 0,
    TaskConfigAutoStop: false,
    TaskConfigFindRouteDelay: 2000,
};
exports.DefaultRerouterConfig = {
    packageName: '',
    taskDelay: 2000,
    startAppDelay: 6000,
    autoLaunchApp: true,
    testingScreenshotPath: './screenshot',
    instanceId: '',
    deviceId: '',
    strictMode: false,
    debugSlackUrl: '',
    saveImageRoot: '/sdcard/Pictures/Screenshots/robotmon',
    saveMatchedScreen: false,
};
exports.DefaultScreenConfig = {
    devWidth: 640,
    devHeight: 360,
    deviceWidth: 0,
    deviceHeight: 0,
    screenWidth: 0,
    screenHeight: 0,
    screenOffsetX: 0,
    screenOffsetY: 0,
    actionDuring: 180,
    rotation: 'horizontal',
    logScreenshotLastTime: 0,
    logScreenshotMinIntervalInSec: 10,
    logScreenshotMaxFiles: 100,
    logScreenshotFolder: '',
};
var GameStatus;
(function (GameStatus) {
    GameStatus["WAIT_FOR_LOGIN_INPUT"] = "wait-for-input";
    GameStatus["LOGIN_SUCCEEDED"] = "login-succeeded";
    GameStatus["LOGIN_FAILED"] = "login-failed";
    GameStatus["LAUNCHING"] = "launching";
    GameStatus["PLAYING"] = "playing";
})(GameStatus = exports.GameStatus || (exports.GameStatus = {}));
//# sourceMappingURL=struct.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/utils.js":
/*!*************************************************!*\
  !*** ./node_modules/Rerouter/dist/src/utils.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Utils = exports.log = void 0;
function log() {
    var msgs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        msgs[_i] = arguments[_i];
    }
    var date = new Date().toLocaleString('en-US', {
        timeZone: 'Asia/Taipei',
    });
    var message = "[".concat(date, "] ");
    for (var _a = 0, msgs_1 = msgs; _a < msgs_1.length; _a++) {
        var msg = msgs_1[_a];
        if (typeof msg === 'object') {
            message += "".concat(JSON.stringify(msg), " ");
        }
        else {
            message += "".concat(msg, " ");
        }
    }
    console.log(message.substr(0, message.length - 1));
}
exports.log = log;
var Utils = /** @class */ (function () {
    function Utils() {
    }
    Utils.identityColor = function (e1, e2) {
        var mean = (e1.r + e2.r) / 2;
        var r = e1.r - e2.r;
        var g = e1.g - e2.g;
        var b = e1.b - e2.b;
        return 1 - Math.sqrt((((512 + mean) * r * r) >> 8) + 4 * g * g + (((767 - mean) * b * b) >> 8)) / 768;
    };
    Utils.formatXYRGB = function (xyrgb) {
        var keys = Object.keys(xyrgb);
        var formatObj = {};
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var k = keys_1[_i];
            var str = "".concat(xyrgb[k]);
            while (str.length < 3) {
                str = ' ' + str;
            }
            formatObj[k] = str;
        }
        var x = formatObj.x, y = formatObj.y, r = formatObj.r, g = formatObj.g, b = formatObj.b;
        return "{ x: ".concat(x, ", y: ").concat(y, ", r: ").concat(r, ", g: ").concat(g, ", b: ").concat(b, " }");
    };
    Utils.sortStringNumberMap = function (map) {
        var results = [];
        for (var key in map) {
            results.push({ key: key, count: map[key] });
        }
        results.sort(function (a, b) { return b.count - a.count; });
        return results;
    };
    Utils.sleep = function (during) {
        while (during > 200) {
            during -= 200;
            sleep(200);
        }
        if (during > 0) {
            sleep(during);
        }
    };
    Utils.getTaiwanTime = function () {
        return Date.now() + 8 * 60 * 60 * 1000;
    };
    Utils.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        for (var i = 0; i < args.length; i++) {
            var arg = args[i];
            if (typeof arg === 'object') {
                args[i] = JSON.stringify(arg);
            }
        }
        var date = new Date(Utils.getTaiwanTime());
        var dateString = "[".concat(date.getMonth() + 1, "-").concat(date.getDate(), "T").concat(date.getHours(), ":").concat(date.getMinutes(), ":").concat(date.getSeconds(), "]");
        console.log.apply(console, __spreadArray([dateString], args, false));
    };
    Utils.startApp = function (packageName) {
        execute("BOOTCLASSPATH=/system/framework/core.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/webviewchromium.jar am start -n ".concat(packageName));
        execute("ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am start -n ".concat(packageName));
        execute("ANDROID_DATA=/data monkey --pct-syskeys 0 -p ".concat(packageName, " -c android.intent.category.LAUNCHER 1"));
        execute('ANDROID_BOOTLOGO=1 ' +
            'ANDROID_ROOT=/system ' +
            'ANDROID_ASSETS=/system/app ' +
            'ANDROID_DATA=/data ' +
            'ANDROID_STORAGE=/storage ' +
            'ANDROID_ART_ROOT=/apex/com.android.art ' +
            'ANDROID_I18N_ROOT=/apex/com.android.i18n ' +
            'ANDROID_TZDATA_ROOT=/apex/com.android.tzdata ' +
            'EXTERNAL_STORAGE=/sdcard ' +
            'ASEC_MOUNTPOINT=/mnt/asec ' +
            'BOOTCLASSPATH=/apex/com.android.art/javalib/core-oj.jar:/apex/com.android.art/javalib/core-libart.jar:/apex/com.android.art/javalib/core-icu4j.jar:/apex/com.android.art/javalib/okhttp.jar:/apex/com.android.art/javalib/bouncycastle.jar:/apex/com.android.art/javalib/apache-xml.jar:/system/framework/framework.jar:/system/framework/ext.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/framework-atb-backward-compatibility.jar:/apex/com.android.conscrypt/javalib/conscrypt.jar:/apex/com.android.media/javalib/updatable-media.jar:/apex/com.android.mediaprovider/javalib/framework-mediaprovider.jar:/apex/com.android.os.statsd/javalib/framework-statsd.jar:/apex/com.android.permission/javalib/framework-permission.jar:/apex/com.android.sdkext/javalib/framework-sdkextensions.jar:/apex/com.android.wifi/javalib/framework-wifi.jar:/apex/com.android.tethering/javalib/framework-tethering.jar ' +
            'DEX2OATBOOTCLASSPATH=/apex/com.android.art/javalib/core-oj.jar:/apex/com.android.art/javalib/core-libart.jar:/apex/com.android.art/javalib/core-icu4j.jar:/apex/com.android.art/javalib/okhttp.jar:/apex/com.android.art/javalib/bouncycastle.jar:/apex/com.android.art/javalib/apache-xml.jar:/system/framework/framework.jar:/system/framework/ext.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/framework-atb-backward-compatibility.jar ' +
            'SYSTEMSERVERCLASSPATH=/system/framework/com.android.location.provider.jar:/system/framework/services.jar:/system/framework/ethernet-service.jar:/apex/com.android.permission/javalib/service-permission.jar:/apex/com.android.ipsec/javalib/android.net.ipsec.ike.jar ' +
            "monkey --pct-syskeys 0 -p ".concat(packageName, " -c android.intent.category.LAUNCHER 1"));
    };
    Utils.stopApp = function (packageName) {
        execute("BOOTCLASSPATH=/system/framework/core.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/framework2.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/services.jar:/system/framework/apache-xml.jar:/system/framework/webviewchromium.jar am force-stop ".concat(packageName));
        execute("ANDROID_DATA=/data BOOTCLASSPATH=/system/framework/core-oj.jar:/system/framework/core-libart.jar:/system/framework/conscrypt.jar:/system/framework/okhttp.jar:/system/framework/core-junit.jar:/system/framework/bouncycastle.jar:/system/framework/ext.jar:/system/framework/framework.jar:/system/framework/telephony-common.jar:/system/framework/voip-common.jar:/system/framework/ims-common.jar:/system/framework/mms-common.jar:/system/framework/android.policy.jar:/system/framework/apache-xml.jar:/system/framework/org.apache.http.legacy.boot.jar am force-stop ".concat(packageName));
    };
    Utils.getCurrentApp = function () {
        var result = execute('dumpsys window windows').split('mCurrentFocus');
        if (result.length < 2) {
            return ['', ''];
        }
        result = result[1].split(' ');
        if (result.length < 3) {
            return ['', ''];
        }
        result[2] = result[2].replace('}', '');
        result = result[2].split('/');
        var packageName = '';
        var activityName = '';
        if (result.length == 1) {
            packageName = result[0].trim();
        }
        else if (result.length > 1) {
            packageName = result[0].trim();
            activityName = result[1].trim();
        }
        return [packageName, activityName];
    };
    Utils.isAppOnTop = function (packageName) {
        var topInfo = execute('dumpsys activity activities | grep mResumedActivity');
        return topInfo.indexOf(packageName) !== -1;
    };
    Utils.sendSlackMessage = function (url, title, message) {
        var body = {
            blocks: [
                {
                    type: 'section',
                    text: {
                        type: 'mrkdwn',
                        text: '*' + title + '*',
                    },
                },
                {
                    type: 'divider',
                },
                {
                    type: 'section',
                    text: {
                        type: 'mrkdwn',
                        text: message,
                    },
                },
            ],
        };
        httpClient('POST', url, JSON.stringify(body), {
            'Content-Type': 'application/json',
        });
    };
    Utils.sendLog = function (apiKey, channel, level, title, message) {
        var body = {
            apiKey: apiKey,
            channel: channel,
            level: level,
            title: title,
            message: message,
        };
        httpClient('POST', 'https://asia-east1-robotmon-98370.cloudfunctions.net/xLoggingAPI-log', JSON.stringify(body), {
            'Content-Type': 'application/json',
        });
    };
    Utils.waitForAction = function (action, timeout, matchTimes, interval) {
        if (matchTimes === void 0) { matchTimes = 1; }
        if (interval === void 0) { interval = 600; }
        var now = Date.now();
        var matchs = 0;
        while (Date.now() - now < timeout) {
            if (action()) {
                matchs++;
            }
            if (matchs >= matchTimes) {
                break;
            }
            Utils.sleep(interval);
        }
        if (matchs >= matchTimes) {
            return true;
        }
        return false;
    };
    Utils.padZero = function (num) {
        return num < 10 ? "0".concat(num) : "".concat(num);
    };
    Utils.saveScreenshotToDisk = function (folderPath, suffix, timestamp, img) {
        var _this = this;
        if (suffix === void 0) { suffix = ''; }
        if (timestamp === void 0) { timestamp = true; }
        if (img === void 0) { img = undefined; }
        var date = new Date(Utils.getTaiwanTime());
        var _a = [date.getFullYear(), date.getMonth() + 1, date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()].map(function (item) { return _this.padZero(item); }), YYYY = _a[0], MM = _a[1], dd = _a[2], hh = _a[3], mm = _a[4], ss = _a[5];
        var filename = "".concat(suffix, ".png");
        if (timestamp) {
            filename = "".concat(YYYY, "-").concat(MM, "-").concat(dd, "T").concat(hh, ".").concat(mm, ".").concat(ss, "_").concat(suffix, ".png");
        }
        if (img !== undefined) {
            saveImage(img, "".concat(folderPath, "/").concat(filename));
        }
        else {
            img = getScreenshot();
            saveImage(img, "".concat(folderPath, "/").concat(filename));
            releaseImage(img);
        }
        Utils.log("Write to file: ".concat(folderPath, "/").concat(filename));
    };
    Utils.removeOldestFilesIfExceedsLimit = function (folderPath, maxFiles) {
        if (maxFiles === void 0) { maxFiles = 100; }
        var fileList = execute("ls -l ".concat(folderPath)).split('\n');
        // Some OS return first line total 8 (Mac, redroid), some not (Memu)
        if (fileList[0] && fileList[0].indexOf('total') === 0) {
            fileList.shift();
        }
        var filesWithDates = fileList.map(function (line) {
            var parts = line.trim().split(' ');
            var filename = parts[parts.length - 1]; // 2023-09-02T15.08.17_log.png
            var dateObj = new Date(parts[parts.length - 3].split('_')[0]);
            return {
                date: dateObj,
                filename: filename,
            };
        });
        filesWithDates.sort(function (a, b) { return a.date.getTime() - b.date.getTime(); });
        // If there are more than ${maxFiles} files, remove the oldest
        while (filesWithDates.length > maxFiles) {
            var oldestFile = filesWithDates.shift();
            if (oldestFile) {
                execute("rm ".concat(folderPath, "/").concat(oldestFile.filename));
                Utils.log("rm: ".concat(folderPath, "/").concat(oldestFile.filename));
            }
        }
    };
    Utils.joinPaths = function (path1, path2) {
        if (path2 === '') {
            return path1;
        }
        if (path1.charAt(path1.length - 1) === '/') {
            return path1 + path2;
        }
        else {
            return path1 + '/' + path2;
        }
    };
    Utils.savePointsMarkedImage = function (_a) {
        var image = _a.image, name = _a.name, points = _a.points, folderPath = _a.folderPath, rgba = _a.rgba;
        var filepath = "".concat(folderPath, "/").concat(name, ".png");
        // if file exists, skip
        var res = execute("test -e ".concat(filepath, " && echo 1"));
        if (res === '1') {
            return;
        }
        var clonedImg = clone(image);
        var _b = rgba || { r: 255, g: 0, b: 0, a: 255 }, r = _b.r, g = _b.g, b = _b.b, a = _b.a;
        var radius = 3;
        for (var i in points) {
            var _c = points[i], x = _c.x, y = _c.y;
            drawCircle(clonedImg, x, y, radius, r, g, b, a);
        }
        saveImage(clonedImg, filepath);
        releaseImage(clonedImg);
        console.log("[savePointsMarkedImage]: ".concat(name));
    };
    return Utils;
}());
exports.Utils = Utils;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ "./node_modules/Rerouter/dist/src/xr.js":
/*!**********************************************!*\
  !*** ./node_modules/Rerouter/dist/src/xr.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateGameStatus = void 0;
var updateGameStatus = function (deviceId, instanceId, status) {
    var encodeKey = '2dbe1483caabfe6d089927dd1b4764a87cf224e2aebe0faa8cad6f5a6a0d4b5faf433b10a16a6e0ff4d1f317adddd22c';
    var decodeKey = xDecodeHex(encodeKey);
    var obj = {
        deviceId: deviceId,
        licenseId: instanceId,
        status: status,
        key: decodeKey,
    };
    var result = httpClient('POST', 'https://us-central1-robotmon-98370.cloudfunctions.net/XRobotmonGroup-xPostStatus', JSON.stringify(obj), {
        'Content-Type': 'application/json',
    });
    var resultObj = JSON.parse(result);
    console.log('result', 'success', resultObj.success, 'error', resultObj.error);
    return resultObj.success;
};
exports.updateGameStatus = updateGameStatus;
//# sourceMappingURL=xr.js.map

/***/ }),

/***/ "./node_modules/charenc/charenc.js":
/*!*****************************************!*\
  !*** ./node_modules/charenc/charenc.js ***!
  \*****************************************/
/***/ (function(module) {

var charenc = {
  // UTF-8 encoding
  utf8: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));
    }
  },

  // Binary encoding
  bin: {
    // Convert a string to a byte array
    stringToBytes: function(str) {
      for (var bytes = [], i = 0; i < str.length; i++)
        bytes.push(str.charCodeAt(i) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a string
    bytesToString: function(bytes) {
      for (var str = [], i = 0; i < bytes.length; i++)
        str.push(String.fromCharCode(bytes[i]));
      return str.join('');
    }
  }
};

module.exports = charenc;


/***/ }),

/***/ "./node_modules/crypt/crypt.js":
/*!*************************************!*\
  !*** ./node_modules/crypt/crypt.js ***!
  \*************************************/
/***/ (function(module) {

(function() {
  var base64map
      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',

  crypt = {
    // Bit-wise rotation left
    rotl: function(n, b) {
      return (n << b) | (n >>> (32 - b));
    },

    // Bit-wise rotation right
    rotr: function(n, b) {
      return (n << (32 - b)) | (n >>> b);
    },

    // Swap big-endian to little-endian and vice versa
    endian: function(n) {
      // If number given, swap endian
      if (n.constructor == Number) {
        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;
      }

      // Else, assume array and swap all items
      for (var i = 0; i < n.length; i++)
        n[i] = crypt.endian(n[i]);
      return n;
    },

    // Generate an array of any length of random bytes
    randomBytes: function(n) {
      for (var bytes = []; n > 0; n--)
        bytes.push(Math.floor(Math.random() * 256));
      return bytes;
    },

    // Convert a byte array to big-endian 32-bit words
    bytesToWords: function(bytes) {
      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)
        words[b >>> 5] |= bytes[i] << (24 - b % 32);
      return words;
    },

    // Convert big-endian 32-bit words to a byte array
    wordsToBytes: function(words) {
      for (var bytes = [], b = 0; b < words.length * 32; b += 8)
        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);
      return bytes;
    },

    // Convert a byte array to a hex string
    bytesToHex: function(bytes) {
      for (var hex = [], i = 0; i < bytes.length; i++) {
        hex.push((bytes[i] >>> 4).toString(16));
        hex.push((bytes[i] & 0xF).toString(16));
      }
      return hex.join('');
    },

    // Convert a hex string to a byte array
    hexToBytes: function(hex) {
      for (var bytes = [], c = 0; c < hex.length; c += 2)
        bytes.push(parseInt(hex.substr(c, 2), 16));
      return bytes;
    },

    // Convert a byte array to a base-64 string
    bytesToBase64: function(bytes) {
      for (var base64 = [], i = 0; i < bytes.length; i += 3) {
        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];
        for (var j = 0; j < 4; j++)
          if (i * 8 + j * 6 <= bytes.length * 8)
            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));
          else
            base64.push('=');
      }
      return base64.join('');
    },

    // Convert a base-64 string to a byte array
    base64ToBytes: function(base64) {
      // Remove non-base-64 characters
      base64 = base64.replace(/[^A-Z0-9+\/]/ig, '');

      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;
          imod4 = ++i % 4) {
        if (imod4 == 0) continue;
        bytes.push(((base64map.indexOf(base64.charAt(i - 1))
            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))
            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));
      }
      return bytes;
    }
  };

  module.exports = crypt;
})();


/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/***/ (function(module) {

/*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
module.exports = function (obj) {
  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
}

function isBuffer (obj) {
  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
}

// For Node v0.10 support. Remove this eventually.
function isSlowBuffer (obj) {
  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
}


/***/ }),

/***/ "./node_modules/md5/md5.js":
/*!*********************************!*\
  !*** ./node_modules/md5/md5.js ***!
  \*********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

(function(){
  var crypt = __webpack_require__(/*! crypt */ "./node_modules/crypt/crypt.js"),
      utf8 = (__webpack_require__(/*! charenc */ "./node_modules/charenc/charenc.js").utf8),
      isBuffer = __webpack_require__(/*! is-buffer */ "./node_modules/is-buffer/index.js"),
      bin = (__webpack_require__(/*! charenc */ "./node_modules/charenc/charenc.js").bin),

  // The core
  md5 = function (message, options) {
    // Convert to byte array
    if (message.constructor == String)
      if (options && options.encoding === 'binary')
        message = bin.stringToBytes(message);
      else
        message = utf8.stringToBytes(message);
    else if (isBuffer(message))
      message = Array.prototype.slice.call(message, 0);
    else if (!Array.isArray(message) && message.constructor !== Uint8Array)
      message = message.toString();
    // else, assume byte array already

    var m = crypt.bytesToWords(message),
        l = message.length * 8,
        a =  1732584193,
        b = -271733879,
        c = -1732584194,
        d =  271733878;

    // Swap endian
    for (var i = 0; i < m.length; i++) {
      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |
             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;
    }

    // Padding
    m[l >>> 5] |= 0x80 << (l % 32);
    m[(((l + 64) >>> 9) << 4) + 14] = l;

    // Method shortcuts
    var FF = md5._ff,
        GG = md5._gg,
        HH = md5._hh,
        II = md5._ii;

    for (var i = 0; i < m.length; i += 16) {

      var aa = a,
          bb = b,
          cc = c,
          dd = d;

      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);
      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);
      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);
      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);
      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);
      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);
      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);
      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);
      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);
      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);
      c = FF(c, d, a, b, m[i+10], 17, -42063);
      b = FF(b, c, d, a, m[i+11], 22, -1990404162);
      a = FF(a, b, c, d, m[i+12],  7,  1804603682);
      d = FF(d, a, b, c, m[i+13], 12, -40341101);
      c = FF(c, d, a, b, m[i+14], 17, -1502002290);
      b = FF(b, c, d, a, m[i+15], 22,  1236535329);

      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);
      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);
      c = GG(c, d, a, b, m[i+11], 14,  643717713);
      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);
      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);
      d = GG(d, a, b, c, m[i+10],  9,  38016083);
      c = GG(c, d, a, b, m[i+15], 14, -660478335);
      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);
      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);
      d = GG(d, a, b, c, m[i+14],  9, -1019803690);
      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);
      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);
      a = GG(a, b, c, d, m[i+13],  5, -1444681467);
      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);
      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);
      b = GG(b, c, d, a, m[i+12], 20, -1926607734);

      a = HH(a, b, c, d, m[i+ 5],  4, -378558);
      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);
      c = HH(c, d, a, b, m[i+11], 16,  1839030562);
      b = HH(b, c, d, a, m[i+14], 23, -35309556);
      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);
      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);
      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);
      b = HH(b, c, d, a, m[i+10], 23, -1094730640);
      a = HH(a, b, c, d, m[i+13],  4,  681279174);
      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);
      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);
      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);
      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);
      d = HH(d, a, b, c, m[i+12], 11, -421815835);
      c = HH(c, d, a, b, m[i+15], 16,  530742520);
      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);

      a = II(a, b, c, d, m[i+ 0],  6, -198630844);
      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);
      c = II(c, d, a, b, m[i+14], 15, -1416354905);
      b = II(b, c, d, a, m[i+ 5], 21, -57434055);
      a = II(a, b, c, d, m[i+12],  6,  1700485571);
      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);
      c = II(c, d, a, b, m[i+10], 15, -1051523);
      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);
      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);
      d = II(d, a, b, c, m[i+15], 10, -30611744);
      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);
      b = II(b, c, d, a, m[i+13], 21,  1309151649);
      a = II(a, b, c, d, m[i+ 4],  6, -145523070);
      d = II(d, a, b, c, m[i+11], 10, -1120210379);
      c = II(c, d, a, b, m[i+ 2], 15,  718787259);
      b = II(b, c, d, a, m[i+ 9], 21, -343485551);

      a = (a + aa) >>> 0;
      b = (b + bb) >>> 0;
      c = (c + cc) >>> 0;
      d = (d + dd) >>> 0;
    }

    return crypt.endian([a, b, c, d]);
  };

  // Auxiliary functions
  md5._ff  = function (a, b, c, d, x, s, t) {
    var n = a + (b & c | ~b & d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._gg  = function (a, b, c, d, x, s, t) {
    var n = a + (b & d | c & ~d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._hh  = function (a, b, c, d, x, s, t) {
    var n = a + (b ^ c ^ d) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };
  md5._ii  = function (a, b, c, d, x, s, t) {
    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;
    return ((n << s) | (n >>> (32 - s))) + b;
  };

  // Package private blocksize
  md5._blocksize = 16;
  md5._digestsize = 16;

  module.exports = function (message, options) {
    if (message === undefined || message === null)
      throw new Error('Illegal argument ' + message);

    var digestbytes = crypt.wordsToBytes(md5(message, options));
    return options && options.asBytes ? digestbytes :
        options && options.asString ? bin.bytesToString(digestbytes) :
        crypt.bytesToHex(digestbytes);
  };

})();


/***/ }),

/***/ "./config.ts":
/*!*******************!*\
  !*** ./config.ts ***!
  \*******************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isProduction = void 0;
exports.isProduction = true;


/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.leagueYearMax = exports.leagueYearMin = exports.logScreenshotMaxFiles = exports.logScreenshotMinIntervalInSec = exports.uploadSessionInterval = exports.sendWaitInputEventInterval = exports.sendRunningEventInterval = exports.switchWaitingLoginPagesInterval = exports.duringMaxAdRetry = exports.sleepForAd = exports.sleepWaitPageLong = exports.sleepLong = exports.sleepMedium = exports.sleepShort = exports.defaultMatchThres = exports.startAppDelay = exports.actionDuring = exports.taskDelay = exports.taskConfigFindRouteDelay = exports.devWidth = exports.devHeight = exports.rotation = exports.saveImageRoot = exports.loggerConfig = exports.debugSlackUrl = exports.packageName = exports.FREE_USER_MAX_GAME_DURING_MS = exports.dayInMs = exports.hourInMs = exports.minuteInMs = void 0;
var utils_1 = __webpack_require__(/*! ./utils */ "./src/utils.ts");
// general constants
var secondInMs = 1000;
exports.minuteInMs = 60 * secondInMs;
exports.hourInMs = 60 * exports.minuteInMs;
exports.dayInMs = 24 * exports.hourInMs;
// script version settings
exports.FREE_USER_MAX_GAME_DURING_MS = 8 * exports.hourInMs;
// rerouter settings
exports.packageName = 'com.com2us.ninepb3d.normal.freefull.google.global.android.common';
exports.debugSlackUrl = '';
// logger settings
exports.loggerConfig = {
    apiKey: (0, utils_1.decodeHex)('c0a35b06f59d8b8694c75e2fb1aeb00cebfd894e0bc9eaf95c5387bd11d89ff59850a20a983bfe218f426143d7ae7156'),
    channel: 'mlb9i',
};
exports.saveImageRoot = '/data/media/0/Downloads/';
exports.rotation = 'horizontal';
exports.devHeight = 360;
exports.devWidth = 640;
exports.taskConfigFindRouteDelay = 2 * secondInMs;
exports.taskDelay = 0.5 * secondInMs;
exports.actionDuring = 0.18 * secondInMs;
exports.startAppDelay = 10 * secondInMs;
exports.defaultMatchThres = 0.9;
// page related settings
exports.sleepShort = 1.5 * secondInMs;
exports.sleepMedium = 3 * secondInMs;
exports.sleepLong = 4 * secondInMs;
exports.sleepWaitPageLong = 24 * secondInMs;
exports.sleepForAd = 30 * secondInMs;
exports.duringMaxAdRetry = 3 * secondInMs;
// cloud state settings
exports.switchWaitingLoginPagesInterval = 30 * exports.minuteInMs;
exports.sendRunningEventInterval = 5 * exports.minuteInMs;
exports.sendWaitInputEventInterval = 5 * exports.minuteInMs;
exports.uploadSessionInterval = 1 * exports.hourInMs;
// log screenshot settings
exports.logScreenshotMinIntervalInSec = 30;
exports.logScreenshotMaxFiles = (60 / exports.logScreenshotMinIntervalInSec) * 60 * 1; // keep 1 hours
// user defined settings
exports.leagueYearMin = 2025;
exports.leagueYearMax = 2034;


/***/ }),

/***/ "./src/debugUtils.ts":
/*!***************************!*\
  !*** ./src/debugUtils.ts ***!
  \***************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.findUnchangedPoints = exports.findUnmatchedPoints = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var utils_1 = __webpack_require__(/*! ./utils */ "./src/utils.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ./constants */ "./src/constants.ts"));
/** @description: used to find unmatched points for checking why a page is not match */
function findUnmatchedPoints(components, image) {
    var needRelease = !image;
    if (!image) {
        image = getScreenshot();
    }
    var results = {};
    for (var _i = 0, components_1 = components; _i < components_1.length; _i++) {
        var component = components_1[_i];
        var name_1 = component.name, points = component.points, thres = component.thres;
        var scoreThres = thres !== null && thres !== void 0 ? thres : CONSTANTS.defaultMatchThres;
        for (var i in points) {
            var p = points[i];
            var _a = getImageColor(image, p.x, p.y), r = _a.r, g = _a.g, b = _a.b;
            var score = Rerouter_1.Utils.identityColor({ r: r, g: g, b: b }, p);
            var isMatched = score >= scoreThres;
            if (isMatched) {
                continue;
            }
            if (!results[name_1]) {
                results[name_1] = '';
            }
            results[name_1] += "expected: ".concat(formatXYRGB(p), "\n     get: ").concat(formatXYRGB({ x: p.x, y: p.y, r: r, g: g, b: b }), " (p: ").concat(i, ", ").concat(score, " < ").concat(scoreThres, ")\n");
        }
    }
    if (needRelease) {
        releaseImage(image);
    }
    for (var name_2 in results) {
        console.log("[Unmatched]: ".concat(name_2, "\n").concat(results[name_2], "\n"));
    }
}
exports.findUnmatchedPoints = findUnmatchedPoints;
/** @description: used to find unchanged points in animation to add new pages */
function findUnchangedPoints(leftTop, rightBottom, times, interval, specificColor) {
    var res = {};
    for (var i = 0; i < times; i++) {
        var screenshot = getScreenshot();
        var points = (0, utils_1.getPointsInRange)(screenshot, leftTop, rightBottom);
        if (i === 0) {
            for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
                var p = points_1[_i];
                res[formatXYRGB(p)] = 1;
            }
            continue;
        }
        for (var _a = 0, points_2 = points; _a < points_2.length; _a++) {
            var p = points_2[_a];
            if (res[formatXYRGB(p)]) {
                res[formatXYRGB(p)]++;
            }
        }
        releaseImage(screenshot);
        Rerouter_1.Utils.sleep(interval);
    }
    if (specificColor) {
        var targetKey = formatXYRGB(__assign(__assign({}, specificColor), { x: 0, y: 0 }));
        var target = targetKey.substring(13);
        var lenStart = targetKey.length - 13;
        for (var k in res) {
            if (res[k] === times) {
                var len = k.length;
                if (k.substring(len - lenStart) === target) {
                    console.log(k);
                }
            }
        }
    }
    else {
        console.log(JSON.stringify(res));
    }
    console.log('done');
}
exports.findUnchangedPoints = findUnchangedPoints;
function formatXYRGB(p) {
    return "{x: ".concat(p.x, ", y: ").concat(p.y, ", r: ").concat(p.r, ", g: ").concat(p.g, ", b: ").concat(p.b, "}");
}


/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(/*! ./mlb9i */ "./src/mlb9i.ts"), exports);


/***/ }),

/***/ "./src/mlb9i.ts":
/*!**********************!*\
  !*** ./src/mlb9i.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MLB9I = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ./modules */ "./src/modules/index.ts");
var tasks_1 = __webpack_require__(/*! ./tasks */ "./src/tasks/index.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ./constants */ "./src/constants.ts"));
var VERSION = __importStar(__webpack_require__(/*! ./version */ "./src/version.ts"));
var utils_1 = __webpack_require__(/*! ./utils */ "./src/utils.ts");
var debugUtils_1 = __webpack_require__(/*! ./debugUtils */ "./src/debugUtils.ts");
var VERSION_CODE = VERSION.PRODUCTION_VERSION_CODE;
var GIT_VERSION = VERSION.GIT_VERSION;
var MLB9I = /** @class */ (function () {
    function MLB9I(jsonConfig) {
        console.log('############ new MLB9I ############');
        console.log("script version ".concat(VERSION_CODE));
        console.log("git version ".concat(GIT_VERSION));
        modules_1.state.init(jsonConfig);
    }
    MLB9I.prototype.start = function () {
        if (modules_1.Config.scriptConfig.isLocalPaid) {
            var plan = getUserPlan();
            if (plan != 'user_plan_mlb9i') {
                console.log('user plan id: ', JSON.stringify(plan));
                console.log('please subscribe premium plan');
                return;
            }
        }
        modules_1.state.resetBeforeAddRouteAndTask();
        this.addRoutesAndTasks();
        if (true) {
            modules_1.state.start();
            return;
        }
        // debug current page
        modules_1.state.onRunning();
        console.log(modules_1.rerouter.getCurrentMatchNames());
        var debugPage = new Rerouter_1.Page('', []);
        var image = getScreenshot();
        console.log((0, debugUtils_1.findUnmatchedPoints)([debugPage], image));
        var isMatch = modules_1.rerouter.isPageMatchImage(debugPage, image);
        console.log(isMatch);
        if (isMatch) {
            saveImage(image, "/data/media/0/Downloads/pageReference/".concat(debugPage.name, ".png"));
            Rerouter_1.Utils.savePointsMarkedImage({
                image: image,
                name: "marked_".concat(debugPage.name),
                points: debugPage.points,
                folderPath: '/data/media/0/Downloads/pageReference',
            });
        }
        (0, debugUtils_1.findUnchangedPoints)({ x: 305, y: 296 }, { x: 359, y: 307 }, 5, CONSTANTS.sleepMedium, { r: 255, g: 255, b: 255 });
        (0, utils_1.getPointsInRange)(image, { x: 316, y: 52 }, { x: 446, y: 59 }).forEach(function (p) { return p.x % 5 == 0 && p.y % 5 == 0 && console.log("{x: ".concat(p.x, ", y: ").concat(p.y, ", r: ").concat(p.r, ", g: ").concat(p.g, ", b: ").concat(p.b, "}")); });
        for (var i = 0; i < 5; i++) {
            modules_1.state.onRunning();
            console.log('match');
            console.log(modules_1.rerouter.getCurrentMatchNames());
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
        }
        releaseImage(image);
        console.log('debug end');
    };
    MLB9I.prototype.stop = function () {
        modules_1.state.end();
    };
    MLB9I.prototype.addRoutesAndTasks = function () {
        this.addRoutes();
        this.handleUnknown();
        // rerouter.getCurrentMatchNames();
        if (modules_1.Config.scriptConfig.isLocalPaid || modules_1.Config.scriptConfig.isDev) {
            this.addPremiumTasks();
            return;
        }
        if (!modules_1.Config.scriptConfig.isCloud) {
            this.addBasicTasks();
            return;
        }
        if (!modules_1.Config.scriptConfig.licenseId) {
            console.log('no license id');
            tasks_1.stayInLogin.addTask();
            return;
        }
        this.addPremiumTasks();
    };
    MLB9I.prototype.addBasicTasks = function () {
        tasks_1.playLeagueGame.addTask();
    };
    MLB9I.prototype.addPremiumTasks = function () {
        tasks_1.setting.addTask();
        tasks_1.playLeagueGame.addTask();
        modules_1.Config.scriptConfig.isRunPlayBattleGame && tasks_1.playBattleGame.addTask();
        // Config.config.isRunWeeklyMission && weeklyMission.addTask();
        modules_1.Config.scriptConfig.isRunAdReward && tasks_1.adReward.addTask();
        // Config.config.isDev && receiveInbox.addTask();
        modules_1.rerouter.addTask({
            name: tasks_1.TASKS.restartAppPerDay,
            // maxTaskRunTimes: 1,
            minRoundInterval: CONSTANTS.dayInMs,
            beforeRoute: function (task) {
                if (task.lastRunTime !== 0) {
                    console.log('restart app task');
                    modules_1.rerouter.restartApp();
                }
                return 'skipRouteLoop';
            },
            maxTaskDuring: 30 * CONSTANTS.minuteInMs,
            forceStop: true,
        });
    };
    MLB9I.prototype.addRoutes = function () {
        // ** login pages
        tasks_1.stayInLogin.addRoutes();
        // ** game setting
        tasks_1.setting.addRoutes();
        // ** ad reward
        tasks_1.adReward.addRoutes();
        // ** weekly mission
        tasks_1.weeklyMission.addRoutes();
        // ** receive inbox
        tasks_1.receiveInbox.addRoutes();
        // ** playBattleGame
        tasks_1.playBattleGame.addRoutes();
        // ** playLeagueGame
        tasks_1.playLeagueGame.addRoutes();
        // ** common pages
        tasks_1.commons.addRoutes();
    };
    MLB9I.prototype.handleUnknown = function () {
        modules_1.rerouter.addUnknownAction(function (context, image, finishRound) {
            // rerouter.getCurrentMatchNames();
            var lastMatchedPath = context.lastMatchedPath.substring(1);
            Rerouter_1.Utils.log("unknown count ".concat(context.matchTimes, ", during ").concat(context.matchDuring, ", last matched: ").concat(lastMatchedPath));
            var isInApp = modules_1.rerouter.checkInApp();
            if (!isInApp) {
                console.log('not in app');
                if (modules_1.Config.scriptConfig.hasCoolFeature) {
                    modules_1.rerouter.restartApp();
                }
                return;
            }
            if (modules_1.Config.scriptConfig.isCloud && modules_1.state.isWaitingLogin) {
                console.log('wait user input');
                return;
            }
            switch (context.task.name) {
                case tasks_1.TASKS.playBattleGame:
                case tasks_1.TASKS.playLeagueGame:
                    if (context.matchDuring < CONSTANTS.minuteInMs * 2) {
                        console.log('might be in playing animation');
                        modules_1.rerouter.screen.tap({ x: 0, y: 0 });
                        console.log('tap');
                        return;
                    }
                    break;
                default:
                    break;
            }
            modules_1.rerouter.screen.tap({ x: 0, y: 0 });
            console.log('tap');
            if (context.matchTimes % 11 === 0) {
                keycode('KEYCODE_BACK', 100);
                Rerouter_1.Utils.log('keycode back for unknown');
            }
            if (context.matchDuring > CONSTANTS.minuteInMs * 30) {
                console.log('stuck in unknown page more than 30 min');
                modules_1.Config.scriptConfig.hasCoolFeature && modules_1.rerouter.restartApp();
            }
        });
    };
    MLB9I.prototype.handleCloseAd = function () {
        console.log('try close ad');
        keycode('BACK', 100);
        console.log('key code back');
        Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
        if (modules_1.rerouter.getCurrentMatchNames().length !== 0) {
            return;
        }
        // try tap close btn
        for (var _i = 0, _a = [
            // right
            { x: 622, y: 19 },
            // left
            { x: 8, y: 15 },
        ]; _i < _a.length; _i++) {
            var closeBtn = _a[_i];
            modules_1.rerouter.screen.tap(closeBtn);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
        }
    };
    MLB9I.prototype.handlePowerSavingPage = function () {
        console.log('handlePowerSavingPage');
        modules_1.rerouter.screen.tapDown({ x: 100, y: 180 });
        Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
        modules_1.rerouter.screen.moveTo({ x: 500, y: 180 });
        Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
        modules_1.rerouter.screen.tapUp({ x: 500, y: 180 });
        Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
    };
    MLB9I.prototype.wrapRouteAction = function (action) {
        if (!modules_1.Config.scriptConfig.isCloud) {
            return action;
        }
        return function (context, image, matched, finishRound) {
            console.log('wrapRouteAction', context.task.name, matched[0].name);
            if (typeof action === 'function') {
                action(context, image, matched, finishRound);
            }
            if (action === 'goNext') {
                modules_1.rerouter.goNext(matched[0]);
            }
            if (action === 'goBack') {
                modules_1.rerouter.goBack(matched[0]);
            }
            // upload session if needed
            modules_1.state.checkUploadSession();
        };
    };
    MLB9I.packageName = 'com.com2us.ninepb3d.normal.freefull.google.global.android.common';
    return MLB9I;
}());
exports.MLB9I = MLB9I;


/***/ }),

/***/ "./src/modules/config.ts":
/*!*******************************!*\
  !*** ./src/modules/config.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.set = exports.scriptConfig = void 0;
var constants_1 = __webpack_require__(/*! ../constants */ "./src/constants.ts");
var config_1 = __webpack_require__(/*! ../../config */ "./config.ts");
exports.scriptConfig = {
    leagueSeasonMode: 'full',
    leagueYear: constants_1.leagueYearMin,
    leagueMode: 'master',
    useDrink: config_1.isProduction ? false : true,
    isRunPlayBattleGame: true,
    isRunAdReward: false,
    isRunWeeklyMission: false,
    isProduction: config_1.isProduction,
};
function set(jsonConfig) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
    if (typeof jsonConfig !== 'string') {
        return;
    }
    var c = JSON.parse(jsonConfig);
    exports.scriptConfig.leagueSeasonMode = (_a = c.leagueSeasonMode) !== null && _a !== void 0 ? _a : exports.scriptConfig.leagueSeasonMode;
    exports.scriptConfig.leagueYear = (_b = c.leagueYear) !== null && _b !== void 0 ? _b : exports.scriptConfig.leagueYear;
    exports.scriptConfig.leagueMode = (_c = c.leagueMode) !== null && _c !== void 0 ? _c : exports.scriptConfig.leagueMode;
    exports.scriptConfig.useDrink = (_d = c.useDrink) !== null && _d !== void 0 ? _d : exports.scriptConfig.useDrink;
    exports.scriptConfig.xrobotmonS3Key = (_e = c.xrobotmonS3Key) !== null && _e !== void 0 ? _e : exports.scriptConfig.xrobotmonS3Key;
    exports.scriptConfig.xrobotmonS3Token = (_f = c.xrobotmonS3Token) !== null && _f !== void 0 ? _f : exports.scriptConfig.xrobotmonS3Token;
    exports.scriptConfig.amazonawsS3Key = (_g = c.amazonawsS3Key) !== null && _g !== void 0 ? _g : exports.scriptConfig.amazonawsS3Key;
    exports.scriptConfig.amazonawsS3Token = (_h = c.amazonawsS3Token) !== null && _h !== void 0 ? _h : exports.scriptConfig.amazonawsS3Token;
    exports.scriptConfig.licenseId = (_j = c.licenseId) !== null && _j !== void 0 ? _j : exports.scriptConfig.licenseId;
    exports.scriptConfig.deviceId = (_k = c.deviceId) !== null && _k !== void 0 ? _k : exports.scriptConfig.deviceId;
    // script version settings
    exports.scriptConfig.isProduction; // this is not in the json config
    var _p = c.isCloud, isCloud = _p === void 0 ? true : _p, _q = c.isLocalPaid, isLocalPaid = _q === void 0 ? false : _q, _r = c.isDev, isDev = _r === void 0 ? false : _r;
    exports.scriptConfig.isCloud = isCloud;
    exports.scriptConfig.isLocalPaid = isLocalPaid;
    exports.scriptConfig.isFreeUser = !isCloud && !isLocalPaid && !isDev;
    exports.scriptConfig.isDev = isDev;
    exports.scriptConfig.hasCoolFeature = !exports.scriptConfig.isFreeUser;
    exports.scriptConfig.isRunWeeklyMission = exports.scriptConfig.hasCoolFeature && ((_l = c.isRunWeeklyMission) !== null && _l !== void 0 ? _l : exports.scriptConfig.isRunWeeklyMission);
    exports.scriptConfig.isRunAdReward = exports.scriptConfig.hasCoolFeature && ((_m = c.isRunAdReward) !== null && _m !== void 0 ? _m : exports.scriptConfig.isRunAdReward);
    exports.scriptConfig.isRunPlayBattleGame = exports.scriptConfig.hasCoolFeature && ((_o = c.isRunPlayBattleGame) !== null && _o !== void 0 ? _o : exports.scriptConfig.isRunPlayBattleGame);
}
exports.set = set;


/***/ }),

/***/ "./src/modules/eventSender.ts":
/*!************************************!*\
  !*** ./src/modules/eventSender.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.running = exports.playing = exports.launching = exports.loginSuccess = exports.loginInputing = exports.lastGameStatusEvent = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var lastRunningEvent = 0;
var lastSendGameStatusEventAt = 0;
var cnt = 0;
var EventName;
(function (EventName) {
    EventName["RUNNING"] = "running";
    EventName["GAME_STATUS"] = "gameStatus";
})(EventName || (EventName = {}));
var prefix = '[Event]';
exports.lastGameStatusEvent = '';
function loginInputing() {
    cnt++;
    console.log("loginInputing: ".concat(cnt));
    var content = Rerouter_1.GameStatus.WAIT_FOR_LOGIN_INPUT;
    return Rerouter_1.rerouter.updateGameStatus(content);
}
exports.loginInputing = loginInputing;
function loginSuccess() {
    if (exports.lastGameStatusEvent !== Rerouter_1.GameStatus.WAIT_FOR_LOGIN_INPUT) {
        return false;
    }
    var content = Rerouter_1.GameStatus.LOGIN_SUCCEEDED;
    return Rerouter_1.rerouter.updateGameStatus(content);
}
exports.loginSuccess = loginSuccess;
function launching() {
    // set to default once app is launched (first and again)
    lastRunningEvent = 0;
    var content = Rerouter_1.GameStatus.LAUNCHING;
    return Rerouter_1.rerouter.updateGameStatus(content);
}
exports.launching = launching;
function playing() {
    var content = Rerouter_1.GameStatus.PLAYING;
    return Rerouter_1.rerouter.updateGameStatus(content);
}
exports.playing = playing;
function running(useInterval) {
    if (useInterval === void 0) { useInterval = false; }
    var now = Date.now();
    if (useInterval && now - lastRunningEvent < CONSTANTS.sendRunningEventInterval) {
        return;
    }
    lastRunningEvent = now;
    sendEvent(EventName.RUNNING, '');
    console.log("".concat(prefix, " running"));
}
exports.running = running;


/***/ }),

/***/ "./src/modules/index.ts":
/*!******************************!*\
  !*** ./src/modules/index.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.logger = exports.state = exports.Config = exports.rerouter = void 0;
var rerouter_1 = __webpack_require__(/*! ./rerouter */ "./src/modules/rerouter.ts");
Object.defineProperty(exports, "rerouter", ({ enumerable: true, get: function () { return rerouter_1.rerouter; } }));
exports.Config = __importStar(__webpack_require__(/*! ./config */ "./src/modules/config.ts"));
exports.state = __importStar(__webpack_require__(/*! ./state */ "./src/modules/state.ts"));
var logger_1 = __webpack_require__(/*! ./logger */ "./src/modules/logger.ts");
Object.defineProperty(exports, "logger", ({ enumerable: true, get: function () { return logger_1.logger; } }));


/***/ }),

/***/ "./src/modules/logger.ts":
/*!*******************************!*\
  !*** ./src/modules/logger.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.logger = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var Config = __importStar(__webpack_require__(/*! ./config */ "./src/modules/config.ts"));
var LogLevel;
(function (LogLevel) {
    LogLevel["INFO"] = "info";
    LogLevel["WARNING"] = "warning";
    LogLevel["ERROR"] = "error";
})(LogLevel || (LogLevel = {}));
function sendLog(level, title, message) {
    if (!Config.scriptConfig.isCloud) {
        console.log("[".concat(level, "] ").concat(title, ": ").concat(message));
        return;
    }
    var userInfo = "\n        deviceId: ".concat(Config.scriptConfig.deviceId, "\n\n        license: ").concat(Config.scriptConfig.licenseId || 'DEBUG', "\n\n      ");
    Rerouter_1.Utils.sendLog(CONSTANTS.loggerConfig.apiKey, CONSTANTS.loggerConfig.channel, level, title, userInfo + message);
}
exports.logger = {
    info: function (title, message) {
        sendLog(LogLevel.INFO, title, message);
    },
    warning: function (title, message) {
        sendLog(LogLevel.WARNING, title, message);
    },
    error: function (title, message) {
        sendLog(LogLevel.ERROR, title, message);
    },
};


/***/ }),

/***/ "./src/modules/rerouter.ts":
/*!*********************************!*\
  !*** ./src/modules/rerouter.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rerouter = exports.resetRerouter = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
function resetRerouter() {
    Rerouter_1.rerouter.reset();
    Rerouter_1.rerouter.defaultConfig.TaskConfigAutoStop = true;
    Rerouter_1.rerouter.defaultConfig.RouteConfigDebug = false;
    Rerouter_1.rerouter.defaultConfig.TaskConfigFindRouteDelay = CONSTANTS.taskConfigFindRouteDelay;
    Rerouter_1.rerouter.defaultConfig.PageThres = CONSTANTS.defaultMatchThres;
    Rerouter_1.rerouter.defaultConfig.GroupPageThres = CONSTANTS.defaultMatchThres;
    // if not set packageName first, cannot handle start/ stop app
    Rerouter_1.rerouter.rerouterConfig.packageName = CONSTANTS.packageName;
    Rerouter_1.rerouter.rerouterConfig.debugSlackUrl = CONSTANTS.debugSlackUrl;
    Rerouter_1.rerouter.rerouterConfig.saveImageRoot = CONSTANTS.saveImageRoot;
    Rerouter_1.rerouter.rerouterConfig.startAppDelay = CONSTANTS.startAppDelay;
    Rerouter_1.rerouter.rerouterConfig.taskDelay = CONSTANTS.taskDelay;
    Rerouter_1.rerouter.screenConfig.actionDuring = CONSTANTS.actionDuring;
    Rerouter_1.rerouter.screenConfig.logScreenshotMaxFiles = CONSTANTS.logScreenshotMaxFiles;
    Rerouter_1.rerouter.screenConfig.logScreenshotMinIntervalInSec = CONSTANTS.logScreenshotMinIntervalInSec;
    Rerouter_1.rerouter.screenConfig.rotation = CONSTANTS.rotation;
    Rerouter_1.rerouter.screenConfig.devHeight = CONSTANTS.devHeight;
    Rerouter_1.rerouter.screenConfig.devWidth = CONSTANTS.devWidth;
}
exports.resetRerouter = resetRerouter;
resetRerouter();
exports.rerouter = Rerouter_1.rerouter;


/***/ }),

/***/ "./src/modules/session.ts":
/*!********************************!*\
  !*** ./src/modules/session.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.uploadSession = exports.endSession = exports.initSession = void 0;
var md5_1 = __importDefault(__webpack_require__(/*! md5 */ "./node_modules/md5/md5.js"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
var rerouter_1 = __webpack_require__(/*! ./rerouter */ "./src/modules/rerouter.ts");
var config_1 = __webpack_require__(/*! ./config */ "./src/modules/config.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var IS_DEBUG = true;
// app origin info
var appSessionRoot = "data/data/".concat(CONSTANTS.packageName);
var appRecordRoot = "/sdcard/Android/data/".concat(CONSTANTS.packageName, "/files");
// cache info
var licenseFilePath = '/sdcard/Robotmon/license.txt';
var scriptCacheRoot = '/sdcard/Robotmon/loginCache';
var androidIdFilePath = "".concat(scriptCacheRoot, "/android_id.txt");
var gameRecordCacheRoot = "".concat(scriptCacheRoot, "/gameRecord");
// cloud info
var endpoint = 's3.robotmon.app:9000';
var bucket = 'mlb-record';
function initSession() {
    if (!config_1.scriptConfig.isCloud) {
        return;
    }
    console.log("init session start");
    var licenseId = config_1.scriptConfig.licenseId;
    licenseId = licenseId || '';
    var lastLicenseId = readFile(licenseFilePath) || '';
    console.log("lastLicenseId: ".concat(lastLicenseId, ", currentLicenseId: ").concat(licenseId));
    if (lastLicenseId === '' && licenseId === '') {
        console.log('initSession case 1');
        // case 1: clear session, set random android id, stop app
        logOut();
    }
    else if (lastLicenseId !== '' && licenseId === '') {
        console.log('initSession case 2');
        // case 2: clear session, set random android id, stop app
        logOut();
    }
    else if (lastLicenseId === '' && licenseId !== '') {
        console.log('initSession case 3');
        // case 3: check has session
        var hasCloudSession = fetchSession();
        if (hasCloudSession) {
            console.log('hasCloudSession doLogin');
            logIn();
            sleep(3000);
        }
    }
    else if (lastLicenseId !== '' && licenseId !== '' && lastLicenseId !== licenseId) {
        console.log('initSession case 4');
        // case 4: clear session, set random android id, stop app
        logOut();
        var hasCloudSession = fetchSession();
        if (hasCloudSession) {
            console.log('hasCloudSession doLogin');
            logIn();
            sleep(3000);
        }
    }
    else if (lastLicenseId !== '' && licenseId !== '' && lastLicenseId === licenseId) {
        console.log('initSession case 5');
        // case 5: check has session
        // TODO try to do nothing
        var hasCloudSession = fetchSession();
        if (hasCloudSession) {
            console.log('hasCloudSession doLogin');
            logIn();
            sleep(3000);
        }
    }
    else {
        console.log('Unknown case !!!');
    }
    // restart app if needed
    startApp();
    sleep(3000);
    // console.log(`init session done`);
}
exports.initSession = initSession;
function startApp() {
    var isInApp = rerouter_1.rerouter.checkInApp();
    while (!isInApp) {
        rerouter_1.rerouter.startApp();
        sleep(3000);
        isInApp = rerouter_1.rerouter.checkInApp();
    }
}
function stopApp() {
    var isInApp = rerouter_1.rerouter.checkInApp();
    while (isInApp) {
        rerouter_1.rerouter.stopApp();
        sleep(3000);
        isInApp = rerouter_1.rerouter.checkInApp();
    }
}
function endSession() {
    if (!config_1.scriptConfig.isCloud) {
        return;
    }
    var licenseId = config_1.scriptConfig.licenseId;
    licenseId = licenseId || '';
    if (licenseId) {
        logOut();
        sleep(3000);
        console.log('==== stop script: has licenseId; close app and clear session');
    }
    else {
        console.log('==== stop script: no licenseId; not to close app for let new user login');
    }
}
exports.endSession = endSession;
function uploadSession() {
    if (!config_1.scriptConfig.isCloud) {
        return;
    }
    var xrobotmonS3Key = config_1.scriptConfig.xrobotmonS3Key, xrobotmonS3Token = config_1.scriptConfig.xrobotmonS3Token, licenseId = config_1.scriptConfig.licenseId;
    licenseId = licenseId || '';
    if (!(xrobotmonS3Key && xrobotmonS3Token && licenseId)) {
        console.log('failed upload; required key is empty');
        return false;
    }
    console.log("upload session ".concat(licenseId, " start"));
    (0, utils_1.executeCommands)(
    // remove tmp file root
    "rm -rf ".concat(scriptCacheRoot), "rm -f ".concat(scriptCacheRoot, ".gz"), 
    // copy local session to tmp file root
    "mkdir -p ".concat(scriptCacheRoot, "/"), "cp -r ".concat(appSessionRoot, "/files ").concat(scriptCacheRoot, "/"), "cp -r ".concat(appSessionRoot, "/shared_prefs ").concat(scriptCacheRoot, "/"), 
    // rm ad files
    "rm -rf ".concat(scriptCacheRoot, "/files/al"));
    copyGameRecordToCache();
    // copy current android id to tmp file root
    var androidId = execute('ANDROID_DATA=/data settings get secure android_id');
    console.log("upload androidId: ".concat(androidId));
    writeFile(androidIdFilePath, androidId);
    targz("".concat(scriptCacheRoot, ".gz"), "".concat(scriptCacheRoot));
    // upload session
    var now = Date.now();
    var sessionFileName = "loginCache/".concat(licenseId, ".gz");
    var sizeOrError = s3UploadFile("".concat(scriptCacheRoot, ".gz"), sessionFileName, 'application/octet-stream', endpoint, bucket, xrobotmonS3Key, xrobotmonS3Token, '', false);
    console.log("upload session to ".concat(endpoint, " finish. sizeOrError ").concat(sizeOrError, "; usedTime ").concat(Date.now() - now));
    // remove tmp file root
    (0, utils_1.executeCommands)("rm -rf ".concat(scriptCacheRoot), "rm -f ".concat(scriptCacheRoot, ".gz"));
}
exports.uploadSession = uploadSession;
function logOut() {
    console.log("script logout start");
    // stop app
    stopApp();
    console.log('app is stopped, clear session start');
    clearSession();
    writeFile(licenseFilePath, '');
    console.log('script logout done');
}
function logIn() {
    var licenseId = config_1.scriptConfig.licenseId;
    licenseId = licenseId || '';
    console.log("script login start, startApp -> stopApp -> setSession");
    // start app, session or image data may be old
    startApp();
    sleep(10000);
    // stop app
    stopApp();
    console.log('app is stopped, set session start');
    setSession();
    writeFile(licenseFilePath, licenseId);
    console.log("script login done");
}
function fetchSession() {
    var xrobotmonS3Key = config_1.scriptConfig.xrobotmonS3Key, xrobotmonS3Token = config_1.scriptConfig.xrobotmonS3Token, licenseId = config_1.scriptConfig.licenseId;
    licenseId = licenseId || '';
    if (!(xrobotmonS3Key && xrobotmonS3Token && licenseId)) {
        console.log('fetch failed: required key is empty');
        return false;
    }
    console.log("fetchSession start ".concat(licenseId));
    var now = Date.now();
    (0, utils_1.executeCommands)(
    // remove old files
    "rm -rf ".concat(scriptCacheRoot), "rm -f ".concat(scriptCacheRoot, ".gz"), 
    // create tmp file root
    "mkdir -p ".concat(scriptCacheRoot));
    var sessionFileName = "loginCache/".concat(licenseId, ".gz");
    var resultOrError = s3DownloadFile("".concat(scriptCacheRoot, ".gz"), sessionFileName, endpoint, bucket, xrobotmonS3Key, xrobotmonS3Token, '', false);
    if (resultOrError !== true) {
        console.log("fetchSession failed ".concat(resultOrError));
        return false;
    }
    console.log("Download session from ".concat(endpoint, " finish. usedTime"), Date.now() - now, licenseId, resultOrError);
    return true;
}
function setSession() {
    // clear app session to avoid cannot overwrite
    var gameRecordFileName = getGameRecordFileName() || 'NOT_EXIST_RECORD';
    console.log("rm app session files");
    (0, utils_1.executeCommands)(
    //
    "rm -rf ".concat(appSessionRoot, "/files"), "rm -rf ".concat(appSessionRoot, "/shared_prefs"), "rm -rf ".concat(appRecordRoot, "/").concat(gameRecordFileName));
    // untargz cloud session and overwrite app session
    console.log("set session start");
    untargz("".concat(scriptCacheRoot, ".gz"));
    (0, utils_1.executeCommands)("cp -r ".concat(scriptCacheRoot, "/files ").concat(appSessionRoot, "/"), "cp -r ".concat(scriptCacheRoot, "/shared_prefs ").concat(appSessionRoot, "/"), "cp -r ".concat(scriptCacheRoot, "/gameRecord/* ").concat(appRecordRoot, "/"), "chmod -R 777 ".concat(appSessionRoot, "/files"), "chmod -R 777 ".concat(appSessionRoot, "/shared_prefs"), "chmod -R 777 ".concat(appRecordRoot));
    console.log("copy cache session to app session done");
    setAndroidId('cloud');
    sleep(2000);
    console.log('set session done');
}
function clearSession() {
    console.log("clear session start");
    setAndroidId('random');
    var gameRecordFileName = getGameRecordFileName() || 'NOT_EXIST_RECORD';
    console.log("rm app session files & cache session files");
    (0, utils_1.executeCommands)("rm -rf ".concat(scriptCacheRoot, ".gz"), "rm -rf ".concat(scriptCacheRoot), "rm -rf ".concat(appSessionRoot, "/files"), "rm -rf ".concat(appSessionRoot, "/shared_prefs"), "rm -rf ".concat(appRecordRoot, "/").concat(gameRecordFileName));
    sleep(2000);
    console.log('clear session done');
}
function setAndroidId(source) {
    var oriAndroidId = (0, utils_1.executeCommands)('ANDROID_DATA=/data settings get secure android_id')[0];
    var androidId = (0, md5_1.default)("".concat(Date.now()).concat(oriAndroidId)).substring(0, 16);
    if (source === 'cloud') {
        androidId = readFile(androidIdFilePath) || androidId;
    }
    (0, utils_1.executeCommands)('ANDROID_DATA=/data settings put secure android_id ' + androidId);
    console.log("set androidId; ".concat(oriAndroidId, " set to-> ").concat(androidId));
}
function copyGameRecordToCache() {
    var fileName = getGameRecordFileName();
    if (!fileName) {
        console.log('cannot copy game record file bc no found');
        return;
    }
    (0, utils_1.executeCommands)("mkdir -p ".concat(gameRecordCacheRoot), "cp -r ".concat(appRecordRoot, "/").concat(fileName, " ").concat(gameRecordCacheRoot, "/").concat(fileName, "/"));
    console.log("copy game record file done: ".concat(gameRecordCacheRoot, "/").concat(fileName));
}
function getGameRecordFileName() {
    var files = (0, utils_1.executeCommands)("ls ".concat(appRecordRoot))[0].split('\n');
    for (var _i = 0, files_1 = files; _i < files_1.length; _i++) {
        var fileName = files_1[_i];
        if (fileName.length === 32) {
            fileName = fileName.trim();
            console.log("game record file founded: ".concat(fileName));
            return fileName;
        }
    }
    return '';
}
function compareFilesForLog(filesAfter, filesBefore) {
    if (!IS_DEBUG) {
        return;
    }
    var countMap = {};
    for (var _i = 0, filesAfter_1 = filesAfter; _i < filesAfter_1.length; _i++) {
        var file = filesAfter_1[_i];
        var count = countMap[file] || 0;
        countMap[file] = count + 1;
    }
    for (var _a = 0, filesBefore_1 = filesBefore; _a < filesBefore_1.length; _a++) {
        var file = filesBefore_1[_a];
        var count = countMap[file] || 0;
        countMap[file] = count - 1;
    }
    var commonFiles = [];
    var beforeNotHasFiles = [];
    var afterNotHasFiles = [];
    for (var _b = 0, _c = Object.keys(countMap); _b < _c.length; _b++) {
        var f = _c[_b];
        var count = countMap[f];
        switch (count) {
            case 0:
                commonFiles.push(f);
                break;
            case 1:
                beforeNotHasFiles.push(f);
                break;
            case -1:
                afterNotHasFiles.push(f);
                break;
            default:
                console.log('error count', count);
                break;
        }
    }
    console.log("commonFiles:\n".concat(commonFiles.join('\n')));
    console.log("beforeNotHasFiles:\n".concat(beforeNotHasFiles.join('\n')));
    console.log("afterNotHasFiles:\n".concat(afterNotHasFiles.join('\n')));
}


/***/ }),

/***/ "./src/modules/state.ts":
/*!******************************!*\
  !*** ./src/modules/state.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkUploadSession = exports.onFinishResetLeagueProgress = exports.onNeedResetLeagueError = exports.onFreezedError = exports.onUnexpectedNetworkError = exports.onLoading = exports.onLaunching = exports.onLoginSuccess = exports.onLoginPage = exports.onRunning = exports.end = exports.start = exports.resetBeforeAddRouteAndTask = exports.init = exports.hasSession = exports.isWaitingLogin = exports.rankGame = exports.leagueGame = void 0;
var rerouter_1 = __webpack_require__(/*! ./rerouter */ "./src/modules/rerouter.ts");
var EventSender = __importStar(__webpack_require__(/*! ./eventSender */ "./src/modules/eventSender.ts"));
var logger_1 = __webpack_require__(/*! ./logger */ "./src/modules/logger.ts");
var Session = __importStar(__webpack_require__(/*! ./session */ "./src/modules/session.ts"));
var Config = __importStar(__webpack_require__(/*! ./config */ "./src/modules/config.ts"));
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
exports.leagueGame = {
    tryEnterGameCnts: 0,
    needResetProgress: false,
    needResetProgressReason: '',
    lastCheckPowerSaveAt: 0,
    powerSaveColorCount: {},
    needSetDrink: true,
};
exports.rankGame = {
    needSetDrink: true,
};
exports.isWaitingLogin = false;
exports.hasSession = false;
var lastUploadSessionAt = 0;
var unexpectedNetworkErrorTimestamps = [];
var freeUserGameDurationCounter = (function () {
    var startAt = Date.now();
    var reset = function () {
        startAt = Date.now();
        console.log('reset free user game duration counter');
    };
    var check = function () {
        var remainMs = CONSTANTS.FREE_USER_MAX_GAME_DURING_MS - (Date.now() - startAt);
        if (remainMs <= 0) {
            console.log('free user game duration reached');
            rerouter_1.rerouter.stop();
            throw new Error('free user game duration reached');
        }
        console.log("free user game duration remain: ".concat(remainMs / CONSTANTS.minuteInMs, " minutes"));
    };
    return { reset: reset, check: check };
})();
function init(jsonConfig) {
    Config.set(jsonConfig);
    if (Config.scriptConfig.isCloud) {
        Session.initSession();
        (0, utils_1.executeCommands)('pm disable-user com.android.inputmethod.latin');
    }
}
exports.init = init;
function resetBeforeAddRouteAndTask() {
    var _a, _b;
    (0, rerouter_1.resetRerouter)();
    rerouter_1.rerouter.debug = false; // Config.config.isCloud || Config.config.isDev || false;
    rerouter_1.rerouter.rerouterConfig.strictMode = !((_a = Config.scriptConfig.isProduction) !== null && _a !== void 0 ? _a : false);
    rerouter_1.rerouter.rerouterConfig.autoLaunchApp = Config.scriptConfig.hasCoolFeature || false;
    rerouter_1.rerouter.rerouterConfig.deviceId = Config.scriptConfig.deviceId || '';
    rerouter_1.rerouter.rerouterConfig.instanceId = Config.scriptConfig.licenseId || '';
    rerouter_1.rerouter.rerouterConfig.saveMatchedScreen = !((_b = Config.scriptConfig.isProduction) !== null && _b !== void 0 ? _b : false);
    exports.leagueGame.tryEnterGameCnts = 0;
    exports.leagueGame.needResetProgress = false;
    exports.leagueGame.needResetProgressReason = '';
    exports.leagueGame.lastCheckPowerSaveAt = 0;
    exports.leagueGame.powerSaveColorCount = {};
    exports.leagueGame.needSetDrink = true;
    exports.rankGame.needSetDrink = true;
    exports.isWaitingLogin = false;
    lastUploadSessionAt = 0;
    exports.hasSession = false;
}
exports.resetBeforeAddRouteAndTask = resetBeforeAddRouteAndTask;
function start() {
    if (Config.scriptConfig.isDev) {
        console.log("init config: ".concat(JSON.stringify(Config.scriptConfig)));
    }
    if (Config.scriptConfig.isFreeUser) {
        freeUserGameDurationCounter.reset();
    }
    rerouter_1.rerouter.start(CONSTANTS.packageName);
}
exports.start = start;
function end() {
    if (Config.scriptConfig.isCloud) {
        Session.endSession();
    }
    rerouter_1.rerouter.stop();
}
exports.end = end;
function onRunning(useInterval) {
    if (useInterval === void 0) { useInterval = false; }
    (Config.scriptConfig.isCloud || Config.scriptConfig.isDev) && EventSender.running(useInterval);
    if (Config.scriptConfig.isFreeUser) {
        freeUserGameDurationCounter.check();
    }
}
exports.onRunning = onRunning;
function onLoginPage(needUserInput) {
    if (needUserInput === void 0) { needUserInput = false; }
    exports.hasSession = false;
    if (!(Config.scriptConfig.isCloud || Config.scriptConfig.isDev)) {
        return;
    }
    // use interval in running
    EventSender.running(true);
    if (needUserInput) {
        exports.isWaitingLogin = true;
        EventSender.loginInputing();
    }
}
exports.onLoginPage = onLoginPage;
function onLoginSuccess() {
    exports.hasSession = true;
    exports.isWaitingLogin = false;
    if (!(Config.scriptConfig.isCloud || Config.scriptConfig.isDev)) {
        return;
    }
    EventSender.loginSuccess();
    EventSender.playing();
}
exports.onLoginSuccess = onLoginSuccess;
function onLaunching() {
    exports.hasSession = false;
    exports.isWaitingLogin = false;
    lastUploadSessionAt = 0;
    exports.leagueGame.tryEnterGameCnts;
    exports.leagueGame.needResetProgress;
    exports.leagueGame.needResetProgressReason;
    exports.leagueGame.lastCheckPowerSaveAt = 0;
    exports.leagueGame.powerSaveColorCount = {};
    exports.leagueGame.needSetDrink = true;
    exports.rankGame.needSetDrink = true;
    (Config.scriptConfig.isCloud || Config.scriptConfig.isDev) && EventSender.launching();
}
exports.onLaunching = onLaunching;
function onLoading() {
    exports.isWaitingLogin = false;
    if (Config.scriptConfig.isCloud || Config.scriptConfig.isDev) {
        EventSender.launching();
    }
}
exports.onLoading = onLoading;
function onUnexpectedNetworkError() {
    var now = Date.now();
    // rm all old timestamp if last one happened 2 hours before
    var before2Hr = now - CONSTANTS.hourInMs * 2;
    var cnt = unexpectedNetworkErrorTimestamps.length;
    if (cnt > 0 && unexpectedNetworkErrorTimestamps[cnt - 1] < before2Hr) {
        unexpectedNetworkErrorTimestamps = [];
        cnt = 0;
    }
    // add new timestamp
    unexpectedNetworkErrorTimestamps.push(now);
    cnt++;
    // log
    var msg = "unstable network error happened, cnt ".concat(cnt);
    console.log(msg);
    // only do anything if it happened 3x times accumulatively
    if (cnt % 3) {
        return;
    }
    if (cnt >= 30) {
        var action_1 = 'unstable network error > 30 times, try reset league progress';
        console.log(action_1);
        onNeedResetLeagueError(action_1);
        logger_1.logger.error('', msg + ', ' + action_1);
        return;
    }
    var action = 'unstable network error > 3 times, restart app';
    console.log(action);
    if (cnt >= 5) {
        logger_1.logger.error('', msg + ', ' + action);
    }
    rerouter_1.rerouter.restartApp();
}
exports.onUnexpectedNetworkError = onUnexpectedNetworkError;
function onFreezedError(pageName) {
    if (pageName === void 0) { pageName = 'unknown'; }
    var msg = "restart app bc freeze at ".concat(pageName);
    console.log(msg);
    logger_1.logger.warning('', msg);
    rerouter_1.rerouter.restartApp();
}
exports.onFreezedError = onFreezedError;
function onNeedResetLeagueError(reason) {
    if (reason === void 0) { reason = 'unknown'; }
    exports.leagueGame.needResetProgress = true;
    exports.leagueGame.needResetProgressReason = reason;
}
exports.onNeedResetLeagueError = onNeedResetLeagueError;
function onFinishResetLeagueProgress() {
    var msg = "reset league progress done, reason: ".concat(exports.leagueGame.needResetProgressReason);
    console.log(msg);
    logger_1.logger.error('', msg);
    exports.leagueGame.needResetProgress = false;
    exports.leagueGame.needResetProgressReason = '';
}
exports.onFinishResetLeagueProgress = onFinishResetLeagueProgress;
function checkUploadSession() {
    // only upload session when is playing
    if (!Config.scriptConfig.isCloud || !exports.hasSession) {
        return;
    }
    var now = Date.now();
    if (now - lastUploadSessionAt < CONSTANTS.uploadSessionInterval) {
        return;
    }
    lastUploadSessionAt = now;
    console.log('upload session');
    Session.uploadSession();
}
exports.checkUploadSession = checkUploadSession;


/***/ }),

/***/ "./src/tasks/adReward.ts":
/*!*******************************!*\
  !*** ./src/tasks/adReward.ts ***!
  \*******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
function addTask() {
    console.log('addTask adReward');
    // only run once
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.adReward,
        // maxTaskRunTimes: 1,
        minRoundInterval: CONSTANTS.minuteInMs * 30,
        findRouteDelay: CONSTANTS.sleepMedium,
        maxTaskDuring: CONSTANTS.sleepForAd + CONSTANTS.duringMaxAdRetry,
        forceStop: true,
    });
}
exports.addTask = addTask;
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(adReward.name),
        match: adReward,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.adReward) {
                modules_1.rerouter.goBack(adReward);
                return;
            }
            modules_1.rerouter.goNext(adReward);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            var screenshot = getScreenshot();
            var isEnterAd = !modules_1.rerouter.isPageMatchImage(adReward, screenshot);
            releaseImage(screenshot);
            if (!isEnterAd) {
                console.log('error: cannot play ad, try later');
                finishRound(true);
                return;
            }
            console.log('watch ad');
            Rerouter_1.Utils.sleep(CONSTANTS.sleepForAd - CONSTANTS.sleepMedium);
            // handle ad close
            console.log('try close ad');
            var isAdClosed = false;
            // try key code back 5 times
            for (var i = 0; i < 5 && !isAdClosed; i++) {
                keycode('BACK', 100);
                console.log("key code back to close ad ".concat(i + 1));
                Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
                var screenshot_1 = getScreenshot();
                isAdClosed = modules_1.rerouter.isPageMatchImage(adRewardRedeem, screenshot_1);
                releaseImage(screenshot_1);
            }
            if (isAdClosed) {
                console.log('ad closed');
                modules_1.state.onRunning();
                return;
            }
            // restart app if ad not closed
            console.log('ad not closed, restart app');
            modules_1.rerouter.stopApp();
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            modules_1.rerouter.startApp();
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(adRewardRedeem.name),
        match: adRewardRedeem,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('ad reward get');
            modules_1.rerouter.goNext(adRewardRedeem);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            if (context.task.name === taskNames_1.TASKS.adReward) {
                finishRound(true);
                modules_1.state.onRunning();
            }
        },
    });
}
exports.addRoutes = addRoutes;
// adReward pages
var adReward = new Rerouter_1.Page('adReward', [
    // bg
    { x: 28, y: 45, r: 222, g: 219, b: 222 },
    { x: 36, y: 267, r: 181, g: 186, b: 197 },
    { x: 32, y: 307, r: 238, g: 243, b: 238 },
    { x: 605, y: 52, r: 222, g: 219, b: 222 },
    { x: 611, y: 244, r: 181, g: 186, b: 197 },
    { x: 607, y: 319, r: 238, g: 243, b: 238 },
    // watch ad icon & btn bg
    { x: 344, y: 300, r: 49, g: 162, b: 90 },
    { x: 490, y: 318, r: 41, g: 142, b: 82 },
    { x: 361, y: 308, r: 0, g: 147, b: 141 },
    { x: 375, y: 316, r: 0, g: 110, b: 107 },
    // cancel
    { x: 190, y: 310, r: 8, g: 109, b: 247 },
    { x: 204, y: 310, r: 8, g: 109, b: 247 },
    { x: 219, y: 310, r: 242, g: 246, b: 253 },
    { x: 232, y: 310, r: 8, g: 109, b: 247 },
    { x: 247, y: 310, r: 8, g: 109, b: 247 },
    { x: 258, y: 310, r: 8, g: 109, b: 247 },
], { x: 404, y: 310 }, { x: 224, y: 310 });
var adRewardRedeem = new Rerouter_1.Page('adRewardRedeem', [
    // ad reward title
    { x: 274, y: 51, r: 222, g: 219, b: 222 },
    { x: 302, y: 49, r: 16, g: 24, b: 33 },
    { x: 334, y: 51, r: 16, g: 24, b: 33 },
    { x: 356, y: 52, r: 90, g: 94, b: 102 },
    // bg
    { x: 25, y: 46, r: 222, g: 219, b: 222 },
    { x: 36, y: 307, r: 238, g: 243, b: 238 },
    { x: 601, y: 42, r: 123, g: 118, b: 123 },
    { x: 591, y: 318, r: 238, g: 243, b: 238 },
    { x: 21, y: 273, r: 181, g: 186, b: 197 },
    { x: 18, y: 81, r: 181, g: 186, b: 197 },
    { x: 616, y: 85, r: 181, g: 186, b: 197 },
    { x: 608, y: 269, r: 181, g: 186, b: 197 },
    // ok
    { x: 301, y: 310, r: 8, g: 109, b: 247 },
    { x: 319, y: 307, r: 86, g: 158, b: 247 },
    { x: 349, y: 307, r: 8, g: 113, b: 255 },
], { x: 303, y: 304 }, { x: 303, y: 304 });


/***/ }),

/***/ "./src/tasks/commons/confirms.ts":
/*!***************************************!*\
  !*** ./src/tasks/commons/confirms.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.downloadData2 = exports.downloadData = exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var modules_2 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../../constants */ "./src/constants.ts"));
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(confirmWithYSGroup.name),
        match: confirmWithYSGroup,
        action: function (context, image, matched, finishRound) {
            if (modules_1.rerouter.isPageMatchImage(alwaysUseTheConditionDrinkConfirm, image)) {
                if (!modules_2.Config.scriptConfig.useDrink) {
                    modules_1.rerouter.goBack(alwaysUseTheConditionDrinkConfirm);
                    return;
                }
                var taskName = context.task.name;
                var useDrinkInLeague = taskName == taskNames_1.TASKS.playLeagueGame && modules_2.state.leagueGame.needSetDrink;
                var useDrinkInRank = taskName == taskNames_1.TASKS.playBattleGame && modules_2.state.rankGame.needSetDrink;
                if (!useDrinkInLeague && !useDrinkInRank) {
                    console.log('not need to set drink, go back');
                    modules_1.rerouter.goBack(alwaysUseTheConditionDrinkConfirm);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                    return;
                }
                var useInMode = '';
                if (useDrinkInLeague) {
                    modules_2.state.leagueGame.needSetDrink = false;
                    useInMode = 'league game';
                }
                else if (useDrinkInRank) {
                    modules_2.state.rankGame.needSetDrink = false;
                    useInMode = 'rank game';
                }
                modules_1.rerouter.goNext(alwaysUseTheConditionDrinkConfirm);
                console.log("confirm condition drink always use in ".concat(useInMode));
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                return;
            }
            if (modules_1.rerouter.isPageMatchImage(dontUseTheConditionDrinkConfirm, image)) {
                if (!modules_2.Config.scriptConfig.useDrink) {
                    // unaccessible path
                    modules_1.rerouter.goBack(alwaysUseTheConditionDrinkConfirm);
                    return;
                }
                var taskName = context.task.name;
                var useDrinkInLeague = taskName == taskNames_1.TASKS.playLeagueGame && modules_2.state.leagueGame.needSetDrink;
                var useDrinkInRank = taskName == taskNames_1.TASKS.playBattleGame && modules_2.state.rankGame.needSetDrink;
                var useInMode = '';
                if (useDrinkInLeague) {
                    modules_2.state.leagueGame.needSetDrink = false;
                    useInMode = 'league game';
                }
                else if (useDrinkInRank) {
                    modules_2.state.rankGame.needSetDrink = false;
                    useInMode = 'rank game';
                }
                modules_1.rerouter.goNext(dontUseTheConditionDrinkConfirm);
                console.log("not enough condition drink in ".concat(useInMode));
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                return;
            }
            for (var _i = 0, _a = [exports.downloadData, exports.downloadData2, quitApp, quitApp1, weeklyMissionBoxConfirm]; _i < _a.length; _i++) {
                var p = _a[_i];
                if (modules_1.rerouter.isPageMatchImage(p, image)) {
                    modules_1.rerouter.goNext(p);
                    if (p.name === exports.downloadData.name || p.name === exports.downloadData2.name) {
                        console.log('download data & wait');
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
                    }
                    return;
                }
            }
            modules_1.rerouter.goNext(confirmWithYS);
        },
    });
    [okGroup].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'goNext',
        });
    });
}
exports.addRoutes = addRoutes;
// page has ok button
var ok = new Rerouter_1.Page('ok', [
    { x: 279, y: 300, r: 0, g: 113, b: 247 },
    { x: 310, y: 301, r: 136, g: 188, b: 254 },
    { x: 326, y: 301, r: 255, g: 255, b: 255 },
    { x: 362, y: 300, r: 0, g: 113, b: 247 },
    { x: 369, y: 312, r: 8, g: 101, b: 255 },
], { x: 319, y: 303 }, { x: 319, y: 303 });
var ok2 = new Rerouter_1.Page('ok2', [
    // btn
    { x: 267, y: 301, r: 8, g: 113, b: 247 },
    { x: 318, y: 302, r: 206, g: 221, b: 243 },
    { x: 328, y: 305, r: 8, g: 102, b: 240 },
    { x: 375, y: 301, r: 8, g: 113, b: 247 },
    { x: 380, y: 313, r: 1, g: 89, b: 238 },
    // bg
    { x: 122, y: 304, r: 238, g: 243, b: 238 },
    { x: 520, y: 308, r: 238, g: 243, b: 238 },
    { x: 110, y: 42, r: 197, g: 198, b: 206 },
    { x: 534, y: 38, r: 197, g: 198, b: 206 },
    // x
    { x: 523, y: 53, r: 75, g: 78, b: 83 },
], { x: 319, y: 300 }, { x: 319, y: 300 });
var okGroup = new Rerouter_1.GroupPage('ok', [ok, ok2], ok.next, ok.next);
// non-specific confirm page with no and yes btn
var confirmWithYS = new Rerouter_1.Page('confirmWithYS', [
    // x on right top
    { x: 513, y: 46, r: 182, g: 186, b: 188 },
    { x: 520, y: 52, r: 70, g: 69, b: 70 },
    { x: 527, y: 45, r: 67, g: 68, b: 70 },
    { x: 531, y: 54, r: 174, g: 175, b: 176 },
    { x: 511, y: 51, r: 178, g: 180, b: 186 },
    // no btn
    { x: 212, y: 301, r: 49, g: 85, b: 123 },
    { x: 249, y: 300, r: 125, g: 152, b: 188 },
    { x: 278, y: 307, r: 49, g: 81, b: 123 },
    // yes btn
    { x: 363, y: 294, r: 8, g: 122, b: 255 },
    { x: 384, y: 297, r: 244, g: 248, b: 255 },
    { x: 419, y: 307, r: 0, g: 101, b: 247 },
    { x: 395, y: 294, r: 8, g: 122, b: 255 },
    // footer bg
    { x: 142, y: 304, r: 222, g: 219, b: 222 },
    { x: 530, y: 296, r: 222, g: 219, b: 222 },
], { x: 520, y: 56 }, // x btn
{ x: 520, y: 56 });
exports.downloadData = new Rerouter_1.Page('downloadData', [
    // title
    { x: 166, y: 58, r: 140, g: 146, b: 150 },
    { x: 183, y: 59, r: 16, g: 24, b: 33 },
    { x: 206, y: 61, r: 55, g: 63, b: 66 },
    { x: 244, y: 58, r: 87, g: 90, b: 96 },
    { x: 282, y: 58, r: 16, g: 24, b: 33 },
    { x: 336, y: 63, r: 16, g: 24, b: 33 },
    { x: 368, y: 63, r: 176, g: 179, b: 184 },
    { x: 404, y: 63, r: 132, g: 137, b: 140 },
    { x: 432, y: 63, r: 133, g: 138, b: 141 },
    { x: 459, y: 61, r: 49, g: 56, b: 64 },
    // content
    { x: 186, y: 156, r: 109, g: 156, b: 205 },
    { x: 207, y: 157, r: 17, g: 120, b: 226 },
    { x: 224, y: 160, r: 120, g: 160, b: 201 },
    { x: 412, y: 159, r: 74, g: 142, b: 214 },
    { x: 438, y: 159, r: 0, g: 113, b: 230 },
    { x: 450, y: 159, r: 81, g: 147, b: 213 },
    // no
    { x: 224, y: 297, r: 49, g: 85, b: 123 },
    { x: 255, y: 298, r: 180, g: 201, b: 229 },
    // yes
    { x: 387, y: 298, r: 253, g: 254, b: 255 },
    { x: 429, y: 302, r: 8, g: 110, b: 247 },
    { x: 478, y: 304, r: 214, g: 219, b: 222 },
], { x: 421, y: 293 }, { x: 421, y: 293 });
exports.downloadData2 = new Rerouter_1.Page('downloadData2', [
    // title, check for additional data download
    { x: 195, y: 61, r: 136, g: 140, b: 144 },
    { x: 271, y: 62, r: 16, g: 24, b: 33 },
    { x: 335, y: 62, r: 60, g: 65, b: 72 },
    { x: 417, y: 61, r: 66, g: 74, b: 80 },
    // content we recommend you using a Wi-Fi connection
    { x: 187, y: 157, r: 40, g: 128, b: 221 },
    { x: 213, y: 161, r: 82, g: 147, b: 209 },
    { x: 231, y: 165, r: 113, g: 160, b: 201 },
    { x: 254, y: 164, r: 112, g: 159, b: 202 },
    { x: 269, y: 163, r: 57, g: 137, b: 216 },
    { x: 295, y: 162, r: 0, g: 113, b: 230 },
    { x: 320, y: 163, r: 25, g: 123, b: 222 },
    { x: 392, y: 162, r: 103, g: 154, b: 207 },
    { x: 434, y: 165, r: 92, g: 150, b: 207 },
], { x: 387, y: 305 }, { x: 387, y: 305 });
// with more games button
var quitApp = new Rerouter_1.Page('quitApp', [
    // title quit game
    { x: 274, y: 59, r: 197, g: 198, b: 206 },
    { x: 286, y: 59, r: 21, g: 29, b: 37 },
    { x: 307, y: 57, r: 134, g: 138, b: 146 },
    { x: 325, y: 60, r: 44, g: 49, b: 54 },
    { x: 334, y: 59, r: 61, g: 67, b: 74 },
    { x: 347, y: 59, r: 65, g: 72, b: 78 },
    { x: 355, y: 58, r: 68, g: 70, b: 78 },
    // yes bg
    { x: 155, y: 300, r: 49, g: 85, b: 123 },
    { x: 215, y: 301, r: 49, g: 85, b: 123 },
    // no bg
    { x: 274, y: 301, r: 49, g: 85, b: 123 },
    { x: 336, y: 305, r: 49, g: 85, b: 123 },
    // more games bg
    { x: 387, y: 303, r: 8, g: 109, b: 247 },
    { x: 495, y: 300, r: 8, g: 114, b: 248 },
], { x: 519, y: 52 }, // x btn
{ x: 519, y: 52 });
var quitApp1 = new Rerouter_1.Page('quitApp1', [
    { x: 262, y: 56, r: 181, g: 186, b: 189 },
    { x: 300, y: 54, r: 16, g: 24, b: 24 },
    { x: 323, y: 55, r: 24, g: 30, b: 32 },
    { x: 511, y: 50, r: 178, g: 180, b: 186 },
    { x: 522, y: 54, r: 141, g: 139, b: 141 },
    { x: 522, y: 54, r: 141, g: 139, b: 141 },
    { x: 167, y: 299, r: 222, g: 219, b: 222 },
    { x: 243, y: 295, r: 49, g: 85, b: 123 },
    { x: 318, y: 298, r: 222, g: 219, b: 222 },
    { x: 382, y: 297, r: 83, g: 158, b: 255 },
    { x: 503, y: 301, r: 222, g: 219, b: 222 },
    { x: 433, y: 310, r: 0, g: 94, b: 247 },
    { x: 404, y: 301, r: 8, g: 113, b: 255 },
    { x: 213, y: 307, r: 49, g: 81, b: 123 },
], { x: 213, y: 307 }, // not to quit
{ x: 213, y: 307 });
var alwaysUseTheConditionDrinkConfirm = new Rerouter_1.Page('alwaysUseTheConditionDrinkConfirm', [
    // title (only condition drink part)
    { x: 320, y: 55, r: 39, g: 44, b: 51 },
    { x: 325, y: 55, r: 32, g: 39, b: 44 },
    { x: 330, y: 55, r: 35, g: 43, b: 48 },
    { x: 335, y: 55, r: 20, g: 28, b: 37 },
    { x: 340, y: 55, r: 16, g: 24, b: 33 },
    { x: 345, y: 55, r: 16, g: 24, b: 33 },
    { x: 350, y: 55, r: 16, g: 24, b: 33 },
    { x: 355, y: 55, r: 16, g: 24, b: 33 },
    { x: 360, y: 55, r: 16, g: 24, b: 33 },
    { x: 365, y: 55, r: 96, g: 98, b: 107 },
    { x: 370, y: 55, r: 146, g: 149, b: 158 },
    { x: 375, y: 55, r: 79, g: 84, b: 91 },
    { x: 380, y: 55, r: 33, g: 38, b: 44 },
    { x: 385, y: 55, r: 21, g: 26, b: 33 },
    { x: 390, y: 55, r: 16, g: 24, b: 33 },
    { x: 395, y: 55, r: 16, g: 24, b: 33 },
    { x: 400, y: 55, r: 197, g: 198, b: 206 },
    { x: 405, y: 55, r: 32, g: 35, b: 43 },
    { x: 410, y: 55, r: 21, g: 26, b: 33 },
    { x: 415, y: 55, r: 16, g: 24, b: 33 },
    { x: 420, y: 55, r: 16, g: 24, b: 33 },
    { x: 425, y: 55, r: 28, g: 34, b: 41 },
    { x: 430, y: 55, r: 65, g: 72, b: 79 },
    { x: 435, y: 55, r: 72, g: 76, b: 86 },
    { x: 440, y: 55, r: 65, g: 71, b: 79 },
    { x: 445, y: 55, r: 25, g: 33, b: 41 },
    // content might change due to different teams
    // x
    { x: 519, y: 52, r: 111, g: 112, b: 118 },
    // bg
    { x: 110, y: 48, r: 197, g: 198, b: 206 },
    { x: 117, y: 254, r: 197, g: 198, b: 206 },
    { x: 522, y: 261, r: 197, g: 198, b: 206 },
    { x: 518, y: 70, r: 197, g: 198, b: 206 },
    { x: 121, y: 304, r: 238, g: 243, b: 238 },
    { x: 502, y: 308, r: 238, g: 243, b: 238 },
], { x: 395, y: 300 }, // yes
{ x: 235, y: 300 } // no
);
// when drink is not enough to use, yes will lead to shop
var dontUseTheConditionDrinkConfirm = new Rerouter_1.Page('dontUseTheConditionDrinkConfirm', [
    // title
    { x: 197, y: 61, r: 192, g: 193, b: 200 },
    { x: 223, y: 61, r: 80, g: 88, b: 95 },
    { x: 266, y: 61, r: 63, g: 70, b: 75 },
    { x: 299, y: 61, r: 28, g: 34, b: 41 },
    { x: 397, y: 61, r: 52, g: 59, b: 64 },
    { x: 411, y: 61, r: 22, g: 29, b: 38 },
    { x: 427, y: 62, r: 23, g: 31, b: 40 },
    { x: 360, y: 59, r: 49, g: 56, b: 65 },
    { x: 375, y: 60, r: 96, g: 103, b: 109 },
    // bg
    { x: 142, y: 302, r: 238, g: 243, b: 238 },
    { x: 514, y: 301, r: 238, g: 243, b: 238 },
    { x: 125, y: 55, r: 197, g: 198, b: 206 },
    // no
    { x: 268, y: 303, r: 41, g: 73, b: 116 },
    // yes
    { x: 426, y: 304, r: 8, g: 106, b: 247 },
], { x: 240, y: 300 }, // no, not to use drink
{ x: 240, y: 300 } // no, not to use drink
);
var weeklyMissionBoxConfirm = new Rerouter_1.Page('weeklyMissionBoxConfirm', [
    // bg
    { x: 111, y: 42, r: 181, g: 186, b: 189 },
    { x: 117, y: 304, r: 214, g: 219, b: 222 },
    { x: 515, y: 300, r: 214, g: 219, b: 222 },
    { x: 519, y: 177, r: 181, g: 186, b: 189 },
    // title
    { x: 240, y: 58, r: 155, g: 160, b: 163 },
    { x: 267, y: 58, r: 141, g: 147, b: 149 },
    { x: 325, y: 59, r: 161, g: 167, b: 170 },
    { x: 383, y: 59, r: 171, g: 179, b: 179 },
    { x: 407, y: 59, r: 181, g: 186, b: 189 },
    // x
    { x: 515, y: 49, r: 187, g: 185, b: 188 },
    { x: 519, y: 55, r: 91, g: 91, b: 92 },
    // no & yes btn
    { x: 210, y: 293, r: 41, g: 81, b: 123 },
    { x: 238, y: 296, r: 45, g: 81, b: 128 },
    { x: 284, y: 294, r: 41, g: 78, b: 123 },
    { x: 397, y: 299, r: 40, g: 134, b: 253 },
    { x: 433, y: 307, r: 8, g: 98, b: 247 },
], { x: 387, y: 300 }, // yes btn
{ x: 387, y: 300 });
var confirmWithYSGroup = new Rerouter_1.GroupPage('confirmWithYSGroup', [confirmWithYS, exports.downloadData, exports.downloadData2, quitApp, quitApp1, alwaysUseTheConditionDrinkConfirm, dontUseTheConditionDrinkConfirm, weeklyMissionBoxConfirm], confirmWithYS.next, confirmWithYS.back);


/***/ }),

/***/ "./src/tasks/commons/enterApp.ts":
/*!***************************************!*\
  !*** ./src/tasks/commons/enterApp.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../../utils */ "./src/utils.ts");
function addRoutes() {
    // ** launching pages
    modules_1.rerouter.addRoute({
        path: "/".concat(logo.name),
        match: logo,
        action: function (context) {
            console.log('wait app loading ...');
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            if (!modules_1.Config.scriptConfig.hasCoolFeature) {
                return;
            }
            modules_1.state.onLaunching();
            // reopen if stuck
            var now = Date.now();
            if (now - context.matchStartTS > 3 * CONSTANTS.minuteInMs) {
                console.log('stuck in launch page too long, restart app');
                modules_1.rerouter.restartApp();
                Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
                return;
            }
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(landingLoadingProgressBar.name),
        match: landingLoadingProgressBar,
        action: function () {
            console.log('landing loading (progress bar)...');
            modules_1.state.onLaunching();
        },
        afterActionDelay: CONSTANTS.sleepMedium,
    });
    [TOS, TOS90, TOS90v2].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'goNext',
        });
    });
    // ** main
    modules_1.rerouter.addRoute({
        path: "/".concat(main.name),
        match: main,
        action: function (context, image, matched, finishRound) {
            var task = context.task.name;
            console.log(task);
            if (!modules_1.state.hasSession) {
                modules_1.state.onLoginSuccess();
            }
            modules_1.state.checkUploadSession();
            // every time in main need to check if chat is on
            var isChatOn = (0, utils_1.isSameColor)(image, { x: 596, y: 30, r: 246, g: 242, b: 246 });
            if (isChatOn) {
                handleTurnOffChat(image);
            }
            switch (task) {
                case taskNames_1.TASKS.stayInLogin:
                    // should be inaccessible unless clear session is failed
                    return;
                case taskNames_1.TASKS.settingDefault:
                case taskNames_1.TASKS.settingResetLeagueProgress:
                    modules_1.rerouter.screen.tap(mainBtns.settings);
                    break;
                case taskNames_1.TASKS.playLeagueGame:
                    if (!modules_1.state.leagueGame.needResetProgress) {
                        modules_1.rerouter.screen.tap(mainBtns.leagueMode);
                        modules_1.state.leagueGame.tryEnterGameCnts++;
                        break;
                    }
                    else {
                        console.log('need reset league progress');
                        finishRound(true);
                    }
                case taskNames_1.TASKS.playBattleGame:
                    modules_1.rerouter.screen.tap(mainBtns.battleMode);
                    break;
                case taskNames_1.TASKS.adReward:
                    // sometimes won't trigger anything if still on cd
                    if (context.matchTimes > 2) {
                        console.log('ad is still on cd');
                        finishRound(true);
                    }
                    else {
                        modules_1.rerouter.screen.tap(mainBtns.adTab);
                    }
                    break;
                case taskNames_1.TASKS.weeklyMission:
                    modules_1.rerouter.screen.tap(mainBtns.achievement);
                    break;
                case taskNames_1.TASKS.receiveInbox:
                    modules_1.rerouter.screen.tap(mainBtns.inbox);
                    break;
                default:
                    break;
            }
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(mainFreezed.name),
        match: mainFreezed,
        action: function (context, image, matched, finishRound) {
            modules_1.state.onFreezedError(mainFreezed.name);
        },
    });
}
exports.addRoutes = addRoutes;
function handleTurnOffChat(image) {
    var chatOnBtn = { x: 595, y: 30, r: 245, g: 242, b: 245 };
    var isChatOn = (0, utils_1.isSameColor)(image, chatOnBtn);
    if (!isChatOn) {
        console.log('chat is off');
        return;
    }
    console.log('turn off chat, open dialog');
    modules_1.rerouter.screen.tap(chatOnBtn);
    Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
    // in dialog
    var isEnableChat = true;
    for (var remainClick = 10; remainClick > 0 && isEnableChat; remainClick--) {
        modules_1.rerouter.goNext(chatDialogChatOnBtn);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
        var screenshot = getScreenshot();
        isEnableChat = modules_1.rerouter.isPageMatchImage(chatDialogChatOnBtn, screenshot);
        releaseImage(screenshot);
    }
    if (!isEnableChat) {
        console.log('turn off chat ok');
        modules_1.rerouter.goBack(chatDialogChatOnBtn);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
        modules_1.state.onRunning();
        return;
    }
}
var logo = new Rerouter_1.Page('logo', [
    { x: 227, y: 184, r: 228, g: 4, b: 33 },
    { x: 258, y: 187, r: 228, g: 4, b: 33 },
    { x: 278, y: 190, r: 232, g: 48, b: 72 },
    { x: 285, y: 183, r: 254, g: 254, b: 254 },
    { x: 301, y: 172, r: 229, g: 19, b: 46 },
    { x: 316, y: 187, r: 254, g: 254, b: 254 },
    { x: 335, y: 188, r: 228, g: 4, b: 33 },
    { x: 372, y: 188, r: 252, g: 233, b: 235 },
    { x: 375, y: 169, r: 228, g: 4, b: 33 },
    { x: 395, y: 184, r: 254, g: 254, b: 254 },
    { x: 398, y: 170, r: 228, g: 4, b: 33 },
    { x: 403, y: 186, r: 254, g: 254, b: 254 },
    { x: 117, y: 114, r: 254, g: 254, b: 254 },
    // loading on left top if stuck
    // { x: 2, y: 5, r: 142, g: 208, b: 202 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
// term of service
var TOS = new Rerouter_1.Page('TOS', [
    // logo
    { x: 289, y: 40, r: 232, g: 52, b: 74 },
    { x: 293, y: 34, r: 229, g: 21, b: 46 },
    { x: 299, y: 38, r: 227, g: 6, b: 33 },
    { x: 308, y: 37, r: 248, g: 192, b: 199 },
    { x: 313, y: 39, r: 248, g: 192, b: 199 },
    { x: 321, y: 37, r: 255, g: 255, b: 255 },
    { x: 325, y: 42, r: 255, g: 255, b: 255 },
    { x: 333, y: 33, r: 252, g: 223, b: 227 },
    { x: 338, y: 38, r: 255, g: 255, b: 255 },
    { x: 342, y: 38, r: 246, g: 176, b: 185 },
    { x: 344, y: 37, r: 246, g: 177, b: 185 },
    { x: 346, y: 36, r: 234, g: 68, b: 89 },
    { x: 335, y: 34, r: 234, g: 67, b: 87 },
    { x: 335, y: 37, r: 255, g: 255, b: 255 },
    { x: 344, y: 35, r: 227, g: 6, b: 33 },
    // copyright
    { x: 289, y: 335, r: 255, g: 255, b: 255 },
    { x: 300, y: 336, r: 194, g: 197, b: 195 },
    { x: 301, y: 336, r: 187, g: 192, b: 189 },
    { x: 307, y: 336, r: 255, g: 255, b: 255 },
    { x: 310, y: 336, r: 255, g: 255, b: 255 },
    { x: 320, y: 335, r: 255, g: 255, b: 255 },
    { x: 323, y: 336, r: 255, g: 255, b: 255 },
    { x: 332, y: 336, r: 181, g: 186, b: 183 },
    { x: 340, y: 336, r: 255, g: 255, b: 255 },
    // agree btn bg
    { x: 17, y: 293, r: 232, g: 232, b: 232 },
    { x: 54, y: 305, r: 255, g: 255, b: 255 },
    { x: 62, y: 317, r: 255, g: 255, b: 255 },
    { x: 111, y: 316, r: 255, g: 255, b: 255 },
    { x: 243, y: 297, r: 232, g: 232, b: 232 },
    { x: 255, y: 291, r: 232, g: 232, b: 232 },
    { x: 599, y: 304, r: 255, g: 255, b: 255 },
    { x: 613, y: 295, r: 232, g: 232, b: 232 },
    { x: 603, y: 316, r: 255, g: 255, b: 255 },
    { x: 421, y: 322, r: 232, g: 232, b: 232 },
    // bg corner outside
    { x: 72, y: 32, r: 255, g: 255, b: 255 },
    { x: 511, y: 40, r: 255, g: 255, b: 255 },
    { x: 586, y: 39, r: 255, g: 255, b: 255 },
    { x: 14, y: 340, r: 255, g: 255, b: 255 },
    { x: 619, y: 340, r: 255, g: 255, b: 255 },
    // bg corner inside
    { x: 22, y: 77, r: 232, g: 232, b: 232 },
    { x: 100, y: 77, r: 197, g: 197, b: 197 },
    { x: 18, y: 253, r: 232, g: 232, b: 232 },
    { x: 613, y: 286, r: 216, g: 216, b: 216 },
    { x: 613, y: 80, r: 215, g: 215, b: 215 },
    { x: 609, y: 73, r: 232, g: 232, b: 232 },
    { x: 305, y: 76, r: 183, g: 183, b: 183 },
    { x: 304, y: 291, r: 232, g: 232, b: 232 },
], { x: 320, y: 306 }, { x: 320, y: 306 });
// term of service, suit dgi90
var TOS90 = new Rerouter_1.Page('TOS90', [
    // bg
    { x: 32, y: 28, r: 255, g: 255, b: 255 },
    { x: 10, y: 342, r: 255, g: 255, b: 255 },
    { x: 622, y: 343, r: 255, g: 255, b: 255 },
    { x: 621, y: 32, r: 255, g: 255, b: 255 },
    // logo
    { x: 288, y: 27, r: 255, g: 255, b: 255 },
    { x: 301, y: 27, r: 246, g: 177, b: 185 },
    { x: 321, y: 24, r: 255, g: 255, b: 255 },
    { x: 320, y: 28, r: 245, g: 161, b: 171 },
    { x: 330, y: 28, r: 230, g: 36, b: 60 },
    { x: 344, y: 28, r: 255, g: 255, b: 255 },
], { x: 321, y: 321 }, { x: 321, y: 321 });
// for dgi90 and navi bar is smaller
var TOS90v2 = new Rerouter_1.Page('TOS90v2', [
    // bg
    { x: 2, y: 23, r: 255, g: 255, b: 255 },
    { x: 1, y: 42, r: 232, g: 232, b: 232 },
    { x: 1, y: 325, r: 232, g: 232, b: 232 },
    { x: 7, y: 348, r: 255, g: 255, b: 255 },
    { x: 631, y: 350, r: 255, g: 255, b: 255 },
    { x: 628, y: 321, r: 255, g: 255, b: 255 },
    { x: 633, y: 292, r: 213, g: 213, b: 213 },
    { x: 630, y: 40, r: 232, g: 232, b: 232 },
    { x: 628, y: 21, r: 255, g: 255, b: 255 },
    // logo
    { x: 296, y: 21, r: 248, g: 192, b: 199 },
    { x: 316, y: 24, r: 227, g: 6, b: 33 },
    { x: 340, y: 22, r: 239, g: 115, b: 130 },
], { x: 321, y: 321 }, { x: 321, y: 321 });
// like landing but has progress bar, logo position is diff
var landingLoadingProgressBar = new Rerouter_1.Page('landingLoadingProgressBar', [
    // logo in center
    // 9innings
    { x: 215, y: 243, r: 209, g: 196, b: 199 },
    { x: 261, y: 254, r: 16, g: 36, b: 66 },
    { x: 306, y: 248, r: 25, g: 45, b: 74 },
    { x: 345, y: 250, r: 255, g: 255, b: 255 },
    // yellow loading bar
    { x: 247, y: 329, r: 255, g: 202, b: 0 },
    { x: 361, y: 330, r: 255, g: 210, b: 0 },
    { x: 410, y: 329, r: 255, g: 214, b: 0 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var main = new Rerouter_1.Page('main', [
    // navi bar right
    { x: 622, y: 9, r: 214, g: 210, b: 214 },
    { x: 598, y: 11, r: 214, g: 226, b: 238 },
    { x: 592, y: 14, r: 74, g: 93, b: 123 },
    { x: 494, y: 15, r: 239, g: 179, b: 28 },
    { x: 503, y: 17, r: 74, g: 84, b: 90 },
    { x: 389, y: 12, r: 197, g: 202, b: 197 },
    { x: 313, y: 11, r: 174, g: 178, b: 179 },
    { x: 297, y: 15, r: 214, g: 214, b: 214 },
    // btn left, with settings
    { x: 31, y: 326, r: 255, g: 255, b: 255 },
    { x: 87, y: 326, r: 255, g: 255, b: 255 },
    { x: 137, y: 326, r: 140, g: 139, b: 132 },
    { x: 189, y: 325, r: 255, g: 255, b: 255 },
    { x: 243, y: 328, r: 126, g: 129, b: 126 },
    { x: 299, y: 328, r: 103, g: 107, b: 99 },
    // btn right
    { x: 514, y: 324, r: 33, g: 98, b: 164 },
    { x: 570, y: 327, r: 133, g: 27, b: 35 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var mainBtns = {
    leagueMode: { x: 204, y: 154 },
    battleMode: { x: 350, y: 145 },
    specialMode: { x: 438, y: 145 },
    clubMode: { x: 556, y: 145 },
    settings: { x: 298, y: 327 },
    adTab: { x: 590, y: 77 },
    achievement: { x: 139, y: 320 },
    inbox: { x: 45, y: 318 },
};
var chatDialogChatOnBtn = new Rerouter_1.Page('chatDialogChatOnBtn', [
    { x: 526, y: 276, r: 199, g: 207, b: 214 },
    { x: 541, y: 286, r: 2, g: 86, b: 238 },
    { x: 566, y: 273, r: 188, g: 218, b: 255 },
    { x: 584, y: 284, r: 8, g: 90, b: 238 },
    { x: 594, y: 279, r: 33, g: 102, b: 201 },
], { x: 567, y: 280 }, // turn off
{ x: 40, y: 313 } // back
);
// like main but freeze
var mainFreezed = new Rerouter_1.Page('mainFreezed', [
    // right top dialog
    { x: 388, y: 30, r: 41, g: 53, b: 74 },
    { x: 451, y: 47, r: 41, g: 53, b: 74 },
    { x: 497, y: 16, r: 90, g: 101, b: 115 },
    { x: 611, y: 56, r: 33, g: 49, b: 66 },
    { x: 410, y: 27, r: 172, g: 156, b: 102 },
    { x: 521, y: 28, r: 104, g: 96, b: 72 },
    // grass in middle
    { x: 327, y: 156, r: 27, g: 27, b: 27 },
    { x: 602, y: 166, r: 20, g: 26, b: 33 },
    // bottom btn left
    { x: 47, y: 341, r: 191, g: 196, b: 191 },
    { x: 295, y: 329, r: 125, g: 127, b: 121 },
    { x: 356, y: 334, r: 41, g: 53, b: 33 },
    // bottom btn right
    { x: 550, y: 335, r: 25, g: 73, b: 140 },
    { x: 618, y: 336, r: 100, g: 27, b: 27 },
]);


/***/ }),

/***/ "./src/tasks/commons/errors.ts":
/*!*************************************!*\
  !*** ./src/tasks/commons/errors.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../../constants */ "./src/constants.ts"));
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(unexpectedError.name),
        customMatch: function (context, image) {
            return modules_1.rerouter.isPageMatchImage(unexpectedError, image) &&
                !modules_1.rerouter.isPageMatchImage(leagueModeUnexpectedError, image) &&
                !modules_1.rerouter.isPageMatchImage(adRewardOnCD, image) &&
                !modules_1.rerouter.isPageMatchImage(playerReserveError, image) &&
                !modules_1.rerouter.isPageMatchImage(invalidGameStatus1801, image);
        },
        action: function (context, image, matched, finishRound) {
            if (modules_1.rerouter.isPageMatchImage(weeklyMissionBoxReceived, image)) {
                modules_1.rerouter.goNext(weeklyMissionBoxReceived);
                return;
            }
            if (modules_1.rerouter.isPageMatchImage(networkError112, image)) {
                // can only resolved by resetting league mode progress
                console.log('turnOnResetLeagueModeProgress');
                modules_1.state.onNeedResetLeagueError(networkError112.name);
                modules_1.rerouter.goNext(networkErrorInvalidMasterLeagueStatus);
                finishRound(true);
                return;
            }
            // check child & its child pages
            if (modules_1.rerouter.isPageMatchImage(networkErrorMoveToLobby, image)) {
                // a special case
                if (modules_1.rerouter.isPageMatchImage(networkErrorInvalidMasterLeagueStatus, image)) {
                    // can only resolved by resetting league mode progress
                    console.log('turnOnResetLeagueModeProgress');
                    modules_1.state.onNeedResetLeagueError(networkErrorInvalidMasterLeagueStatus.name);
                    modules_1.rerouter.goNext(networkErrorInvalidMasterLeagueStatus);
                    finishRound(true);
                    return;
                }
                modules_1.rerouter.goNext(networkErrorMoveToLobby);
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                modules_1.state.onUnexpectedNetworkError();
                return;
            }
            modules_1.rerouter.goNext(unexpectedError);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(networkNoticeMoveToLobby.name),
        match: networkNoticeMoveToLobby,
        action: function (context, image, matched, finishRound) {
            modules_1.rerouter.goNext(networkNoticeMoveToLobby);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            modules_1.state.onUnexpectedNetworkError();
        },
        debug: true,
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueModeUnexpectedError.name),
        match: leagueModeUnexpectedError,
        action: function (context, image, matched, finishRound) {
            switch (context.task.name) {
                case taskNames_1.TASKS.playLeagueGame:
                    if (!modules_1.Config.scriptConfig.hasCoolFeature) {
                        break;
                    }
                    // sometimes some unknown reason cannot enter game
                    var tryEnterGameCnts = modules_1.state.leagueGame.tryEnterGameCnts;
                    console.log('try enter game cnts', tryEnterGameCnts);
                    if (tryEnterGameCnts === 3) {
                        modules_1.rerouter.restartApp();
                    }
                    if (tryEnterGameCnts > 3) {
                        // can only resolved by resetting league mode progress
                        console.log('turnOnResetLeagueModeProgress');
                        modules_1.state.onNeedResetLeagueError(leagueModeUnexpectedError.name);
                        finishRound(true);
                    }
                    break;
                default:
                    break;
            }
            modules_1.rerouter.goNext(leagueModeUnexpectedError);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(invalidGameStatus1801.name),
        match: invalidGameStatus1801,
        action: function (context, image, matched, finishRound) {
            console.log('invalid game status 1801, must resart app & reset league progress');
            console.log('turnOnResetLeagueModeProgress');
            modules_1.state.onNeedResetLeagueError(invalidGameStatus1801.name);
            finishRound(true);
            modules_1.rerouter.restartApp();
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(adRewardOnCD.name),
        match: adRewardOnCD,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('ad is still cd');
            modules_1.rerouter.goBack(adRewardOnCD);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            if (context.task.name === taskNames_1.TASKS.adReward) {
                finishRound(true);
                modules_1.state.onRunning();
            }
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(playerReserveError.name),
        match: playerReserveError,
        action: function (context, image, matched, finishRound) {
            console.log('player reserve error');
            modules_1.rerouter.goNext(playerReserveError);
            modules_1.state.onRunning();
            if (context.task.name === taskNames_1.TASKS.receiveInbox) {
                finishRound(true);
            }
        },
    });
    [errorNewUpdateAvailable, appIsNotResponding].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'goNext',
            afterActionDelay: CONSTANTS.sleepWaitPageLong,
        });
    });
}
exports.addRoutes = addRoutes;
// for some situation, unexpectedError happens
// this also includes network error
var unexpectedError = new Rerouter_1.Page('unexpectedError', [
    { x: 323, y: 39, r: 181, g: 186, b: 189 },
    // x might be covered by other elements
    // { x: 514, y: 44, r: 80, g: 81, b: 81 },
    // { x: 524, y: 48, r: 64, g: 70, b: 71 },
    // { x: 518, y: 54, r: 65, g: 71, b: 71 },
    { x: 315, y: 269, r: 181, g: 186, b: 189 },
    { x: 315, y: 293, r: 8, g: 125, b: 255 },
    { x: 316, y: 299, r: 241, g: 247, b: 255 },
    { x: 317, y: 310, r: 0, g: 92, b: 245 },
    { x: 317, y: 313, r: 0, g: 85, b: 240 },
    { x: 317, y: 323, r: 222, g: 219, b: 222 },
], { x: 314, y: 299 }, { x: 314, y: 299 });
// happen in league master mode when unstable network error
// only move to lobby, should restart app for entering game
var networkErrorMoveToLobby = new Rerouter_1.Page('networkErrorMoveToLobby', [
    // title
    { x: 252, y: 53, r: 181, g: 186, b: 189 },
    { x: 269, y: 57, r: 36, g: 43, b: 49 },
    { x: 281, y: 57, r: 181, g: 186, b: 189 },
    { x: 278, y: 63, r: 16, g: 24, b: 33 },
    { x: 290, y: 61, r: 16, g: 24, b: 33 },
    { x: 301, y: 62, r: 38, g: 43, b: 50 },
    { x: 309, y: 60, r: 38, g: 40, b: 47 },
    { x: 316, y: 61, r: 144, g: 148, b: 152 },
    { x: 328, y: 59, r: 181, g: 186, b: 189 },
    { x: 337, y: 64, r: 160, g: 165, b: 169 },
    { x: 351, y: 64, r: 24, g: 30, b: 37 },
    { x: 356, y: 60, r: 16, g: 24, b: 33 },
    { x: 366, y: 64, r: 100, g: 104, b: 109 },
    { x: 370, y: 59, r: 132, g: 138, b: 144 },
    { x: 380, y: 65, r: 98, g: 103, b: 110 },
    // content
    // { x: 147, y: 166, r: 41, g: 49, b: 58 },
    // { x: 160, y: 171, r: 41, g: 49, b: 58 },
    // { x: 200, y: 166, r: 129, g: 136, b: 141 },
    // { x: 228, y: 171, r: 181, g: 186, b: 189 },
    // { x: 260, y: 162, r: 181, g: 186, b: 189 },
    // { x: 273, y: 169, r: 78, g: 83, b: 91 },
    // { x: 404, y: 167, r: 104, g: 111, b: 118 },
    // { x: 417, y: 172, r: 60, g: 69, b: 77 },
    // { x: 434, y: 166, r: 130, g: 138, b: 142 },
    // { x: 452, y: 174, r: 151, g: 157, b: 164 },
    // { x: 468, y: 165, r: 41, g: 50, b: 60 },
    // { x: 482, y: 174, r: 156, g: 160, b: 167 },
    // { x: 489, y: 172, r: 79, g: 83, b: 95 },
    // { x: 504, y: 175, r: 181, g: 186, b: 189 },
], { x: 314, y: 299 }, { x: 314, y: 299 });
// happen in league master mode when unstable network error
// no move to lobby, but still cannot play master game (can enter game, but cannot continue animation)
var networkErrorInvalidMasterLeagueStatus = new Rerouter_1.Page('networkErrorInvalidMasterLeagueStatus', [
    // content: invalid master league status
    { x: 230, y: 173, r: 94, g: 101, b: 111 },
    { x: 241, y: 175, r: 133, g: 137, b: 144 },
    { x: 257, y: 174, r: 64, g: 70, b: 77 },
    { x: 268, y: 174, r: 58, g: 67, b: 74 },
    { x: 287, y: 173, r: 110, g: 117, b: 126 },
    { x: 304, y: 174, r: 110, g: 118, b: 126 },
    { x: 325, y: 176, r: 128, g: 134, b: 141 },
    { x: 342, y: 174, r: 81, g: 88, b: 98 },
    { x: 362, y: 175, r: 160, g: 166, b: 170 },
    { x: 375, y: 174, r: 45, g: 54, b: 61 },
    { x: 389, y: 170, r: 79, g: 86, b: 95 },
    { x: 398, y: 174, r: 131, g: 139, b: 143 },
    { x: 422, y: 175, r: 181, g: 186, b: 189 },
], { x: 314, y: 299 }, // ok
{ x: 314, y: 299 });
// same as error, diff layout
var networkNoticeMoveToLobby = new Rerouter_1.Page('networkNoticeMoveToLobby', [
    // content
    { x: 232, y: 148, r: 182, g: 185, b: 194 },
    { x: 213, y: 174, r: 75, g: 80, b: 90 },
    { x: 202, y: 191, r: 197, g: 198, b: 206 },
    { x: 224, y: 191, r: 91, g: 99, b: 107 },
    { x: 382, y: 146, r: 191, g: 192, b: 200 },
    { x: 398, y: 150, r: 118, g: 123, b: 129 },
    { x: 393, y: 172, r: 137, g: 141, b: 150 },
    { x: 420, y: 172, r: 93, g: 100, b: 110 },
    { x: 422, y: 190, r: 67, g: 74, b: 83 },
    { x: 448, y: 199, r: 197, g: 198, b: 206 },
    { x: 448, y: 199, r: 197, g: 198, b: 206 },
    // yes
    { x: 362, y: 300, r: 8, g: 117, b: 255 },
    { x: 403, y: 303, r: 247, g: 250, b: 253 },
    { x: 427, y: 309, r: 8, g: 93, b: 240 },
    // no
    { x: 206, y: 300, r: 41, g: 77, b: 123 },
    { x: 241, y: 301, r: 176, g: 195, b: 225 },
    { x: 279, y: 310, r: 34, g: 69, b: 115 },
], { x: 362, y: 300 }, // yes, don't move to lobby
{ x: 362, y: 300 });
// seems related to league reset
var networkError112 = new Rerouter_1.Page('networkError112', [
    // title network error (112)
    { x: 227, y: 58, r: 197, g: 198, b: 206 },
    { x: 257, y: 56, r: 147, g: 150, b: 155 },
    { x: 294, y: 56, r: 108, g: 113, b: 116 },
    { x: 324, y: 66, r: 59, g: 62, b: 67 },
    { x: 342, y: 58, r: 136, g: 138, b: 148 },
    { x: 365, y: 63, r: 80, g: 87, b: 92 },
    { x: 380, y: 60, r: 197, g: 198, b: 206 },
    { x: 394, y: 62, r: 80, g: 83, b: 92 },
    { x: 406, y: 62, r: 197, g: 198, b: 206 },
    // content (112)
    { x: 313, y: 169, r: 66, g: 59, b: 57 },
    { x: 326, y: 169, r: 169, g: 168, b: 173 },
    { x: 341, y: 169, r: 197, g: 198, b: 206 },
], { x: 310, y: 304 }, { x: 310, y: 304 });
var invalidGameStatus1801 = new Rerouter_1.Page('invalidGameStatus1801', [
    // bg
    { x: 197, y: 200, r: 197, g: 198, b: 206 },
    { x: 479, y: 207, r: 197, g: 198, b: 206 },
    { x: 156, y: 131, r: 197, g: 198, b: 206 },
    { x: 496, y: 129, r: 197, g: 198, b: 206 },
    { x: 147, y: 308, r: 238, g: 243, b: 238 },
    { x: 465, y: 311, r: 238, g: 243, b: 238 },
    { x: 522, y: 290, r: 238, g: 243, b: 238 },
    // no title
    { x: 160, y: 53, r: 197, g: 198, b: 206 },
    { x: 493, y: 53, r: 197, g: 198, b: 206 },
    // content: invalid game status (1801)
    { x: 224, y: 169, r: 197, g: 198, b: 206 },
    { x: 253, y: 169, r: 144, g: 142, b: 147 },
    { x: 274, y: 170, r: 136, g: 136, b: 140 },
    { x: 296, y: 173, r: 111, g: 107, b: 111 },
    { x: 308, y: 170, r: 109, g: 105, b: 109 },
    { x: 327, y: 170, r: 180, g: 181, b: 187 },
    { x: 339, y: 169, r: 135, g: 133, b: 135 },
    { x: 352, y: 173, r: 73, g: 72, b: 67 },
    { x: 367, y: 170, r: 197, g: 198, b: 206 },
    { x: 379, y: 170, r: 70, g: 67, b: 64 },
    { x: 387, y: 173, r: 134, g: 130, b: 131 },
    { x: 392, y: 170, r: 197, g: 196, b: 206 },
    { x: 400, y: 172, r: 158, g: 157, b: 161 },
    { x: 418, y: 171, r: 197, g: 198, b: 206 },
    // ok btn
    { x: 269, y: 298, r: 8, g: 118, b: 255 },
    { x: 318, y: 299, r: 155, g: 192, b: 246 },
    { x: 354, y: 299, r: 8, g: 114, b: 255 },
    { x: 382, y: 305, r: 8, g: 102, b: 247 },
], { x: 315, y: 298 }, { x: 315, y: 298 });
// cannot go to league mode due to unexpected error
var leagueModeUnexpectedError = new Rerouter_1.Page('leagueModeUnexpectedError', [
    // title notice
    { x: 292, y: 54, r: 197, g: 198, b: 206 },
    { x: 297, y: 56, r: 60, g: 67, b: 77 },
    { x: 312, y: 56, r: 96, g: 99, b: 109 },
    // content
    { x: 159, y: 142, r: 52, g: 59, b: 69 },
    { x: 141, y: 169, r: 197, g: 198, b: 206 },
    { x: 193, y: 167, r: 197, g: 198, b: 206 },
    { x: 164, y: 182, r: 81, g: 87, b: 96 },
    { x: 200, y: 184, r: 194, g: 195, b: 203 },
    { x: 273, y: 202, r: 141, g: 147, b: 155 },
    { x: 296, y: 202, r: 103, g: 107, b: 115 },
    { x: 329, y: 209, r: 197, g: 198, b: 206 },
    { x: 381, y: 208, r: 136, g: 139, b: 147 },
    { x: 435, y: 140, r: 83, g: 89, b: 97 },
    { x: 456, y: 141, r: 124, g: 127, b: 134 },
    { x: 480, y: 159, r: 79, g: 86, b: 97 },
    { x: 486, y: 183, r: 41, g: 49, b: 58 },
    // ok & bg
    { x: 164, y: 304, r: 239, g: 242, b: 239 },
    { x: 487, y: 303, r: 241, g: 240, b: 241 },
], { x: 320, y: 300 }, { x: 320, y: 300 });
var appIsNotResponding = new Rerouter_1.Page('appIsNotResponding', [
    { x: 164, y: 154, r: 255, g: 255, b: 255 },
    { x: 189, y: 157, r: 203, g: 203, b: 203 },
    { x: 223, y: 158, r: 171, g: 171, b: 171 },
    { x: 254, y: 158, r: 48, g: 48, b: 48 },
    { x: 273, y: 157, r: 96, g: 96, b: 96 },
    { x: 302, y: 157, r: 54, g: 54, b: 54 },
    { x: 168, y: 185, r: 255, g: 255, b: 255 },
    { x: 205, y: 190, r: 119, g: 119, b: 119 },
    { x: 218, y: 184, r: 255, g: 255, b: 255 },
    { x: 230, y: 186, r: 85, g: 85, b: 85 },
    { x: 170, y: 211, r: 127, g: 202, b: 195 },
    { x: 210, y: 213, r: 255, g: 255, b: 255 },
    { x: 199, y: 213, r: 111, g: 111, b: 111 },
    { x: 466, y: 166, r: 255, g: 255, b: 255 },
    { x: 469, y: 218, r: 255, g: 255, b: 255 },
], { x: 220, y: 186 }, // close app
{ x: 220, y: 186 });
// need to update apk ver
var errorNewUpdateAvailable = new Rerouter_1.Page('errorNewUpdateAvailable', [
    // title
    { x: 208, y: 45, r: 181, g: 186, b: 189 },
    { x: 236, y: 58, r: 16, g: 24, b: 24 },
    { x: 260, y: 58, r: 125, g: 129, b: 133 },
    { x: 272, y: 57, r: 128, g: 136, b: 140 },
    { x: 313, y: 56, r: 181, g: 186, b: 189 },
    { x: 335, y: 56, r: 16, g: 24, b: 24 },
    { x: 363, y: 60, r: 181, g: 186, b: 189 },
    { x: 381, y: 61, r: 16, g: 24, b: 24 },
    { x: 388, y: 63, r: 126, g: 131, b: 134 },
    { x: 397, y: 63, r: 57, g: 64, b: 70 },
    { x: 407, y: 54, r: 181, g: 186, b: 189 },
    { x: 419, y: 59, r: 181, g: 186, b: 189 },
    // new update in content (104)
    { x: 227, y: 139, r: 176, g: 178, b: 184 },
    { x: 289, y: 144, r: 117, g: 121, b: 121 },
    { x: 260, y: 144, r: 108, g: 110, b: 108 },
    { x: 309, y: 144, r: 181, g: 186, b: 189 },
    { x: 326, y: 142, r: 87, g: 91, b: 90 },
    { x: 343, y: 143, r: 83, g: 88, b: 88 },
    { x: 376, y: 144, r: 69, g: 71, b: 69 },
    { x: 395, y: 144, r: 68, g: 72, b: 71 },
    { x: 409, y: 144, r: 122, g: 123, b: 125 },
    { x: 421, y: 144, r: 181, g: 186, b: 189 },
    // ok
    { x: 285, y: 297, r: 8, g: 118, b: 255 },
    { x: 312, y: 294, r: 8, g: 125, b: 255 },
    { x: 320, y: 299, r: 135, g: 188, b: 255 },
    { x: 364, y: 307, r: 0, g: 102, b: 247 },
    // popup bg and x
    { x: 117, y: 46, r: 181, g: 186, b: 189 },
    { x: 512, y: 46, r: 188, g: 186, b: 189 },
    { x: 524, y: 57, r: 189, g: 189, b: 189 },
    { x: 157, y: 232, r: 181, g: 186, b: 189 },
    { x: 209, y: 296, r: 222, g: 219, b: 222 },
    { x: 423, y: 304, r: 222, g: 219, b: 222 },
    { x: 443, y: 227, r: 181, g: 186, b: 189 },
], 
// TODO: check whether need to press ok
{ x: 314, y: 299 }, { x: 314, y: 299 });
var adRewardOnCD = new Rerouter_1.Page('adRewardOnCD', [
    // title coming soon
    { x: 266, y: 60, r: 197, g: 198, b: 206 },
    { x: 299, y: 59, r: 154, g: 157, b: 162 },
    { x: 328, y: 61, r: 197, g: 198, b: 206 },
    { x: 340, y: 57, r: 141, g: 145, b: 149 },
    { x: 365, y: 56, r: 57, g: 63, b: 70 },
    // ok
    { x: 288, y: 301, r: 8, g: 114, b: 248 },
    { x: 313, y: 304, r: 159, g: 190, b: 235 },
    { x: 362, y: 307, r: 8, g: 98, b: 247 },
], { x: 516, y: 48 }, // close
{ x: 516, y: 48 });
var playerReserveError = new Rerouter_1.Page('playerReserveError', [
    // title
    { x: 228, y: 54, r: 197, g: 198, b: 206 },
    { x: 236, y: 62, r: 197, g: 198, b: 206 },
    { x: 259, y: 56, r: 16, g: 24, b: 33 },
    { x: 268, y: 64, r: 16, g: 24, b: 33 },
    { x: 276, y: 57, r: 16, g: 24, b: 33 },
    { x: 283, y: 63, r: 189, g: 190, b: 198 },
    { x: 293, y: 58, r: 109, g: 110, b: 118 },
    { x: 304, y: 61, r: 124, g: 128, b: 137 },
    { x: 309, y: 60, r: 197, g: 198, b: 206 },
    { x: 315, y: 62, r: 20, g: 24, b: 33 },
    { x: 324, y: 56, r: 197, g: 198, b: 206 },
    { x: 329, y: 59, r: 21, g: 26, b: 33 },
    { x: 337, y: 61, r: 197, g: 196, b: 206 },
    { x: 337, y: 64, r: 197, g: 198, b: 206 },
    { x: 346, y: 62, r: 162, g: 163, b: 170 },
    { x: 357, y: 57, r: 197, g: 198, b: 206 },
    { x: 368, y: 62, r: 23, g: 31, b: 40 },
    { x: 379, y: 55, r: 23, g: 31, b: 40 },
    { x: 389, y: 68, r: 197, g: 198, b: 206 },
    { x: 394, y: 59, r: 147, g: 146, b: 155 },
    { x: 401, y: 65, r: 16, g: 24, b: 33 },
    { x: 408, y: 56, r: 65, g: 71, b: 76 },
    // ok
    { x: 293, y: 303, r: 8, g: 109, b: 247 },
    { x: 313, y: 298, r: 195, g: 216, b: 242 },
    { x: 322, y: 298, r: 230, g: 239, b: 251 },
    { x: 339, y: 304, r: 8, g: 109, b: 247 },
    { x: 369, y: 291, r: 8, g: 125, b: 255 },
    // x
    { x: 514, y: 45, r: 85, g: 88, b: 93 },
    { x: 519, y: 52, r: 111, g: 112, b: 112 },
    { x: 527, y: 44, r: 111, g: 110, b: 113 },
], { x: 315, y: 300 }, // ok
{ x: 315, y: 300 });
// Somehow it use same layout as unexpectedError
var weeklyMissionBoxReceived = new Rerouter_1.Page('weeklyMissionBoxReceived', [
    // bg
    { x: 113, y: 53, r: 181, g: 186, b: 189 },
    { x: 117, y: 307, r: 214, g: 219, b: 222 },
    { x: 496, y: 299, r: 214, g: 219, b: 222 },
    // title
    { x: 217, y: 55, r: 181, g: 186, b: 189 },
    { x: 259, y: 55, r: 177, g: 181, b: 185 },
    { x: 298, y: 59, r: 181, g: 186, b: 189 },
    { x: 341, y: 60, r: 120, g: 124, b: 128 },
    { x: 386, y: 58, r: 16, g: 24, b: 33 },
    { x: 407, y: 58, r: 181, g: 186, b: 189 },
    // x
    { x: 512, y: 47, r: 181, g: 186, b: 182 },
    { x: 519, y: 53, r: 71, g: 70, b: 71 },
    // ok btn
    { x: 288, y: 297, r: 8, g: 122, b: 255 },
    { x: 320, y: 300, r: 136, g: 190, b: 255 },
    { x: 364, y: 301, r: 8, g: 114, b: 248 },
], { x: 320, y: 300 }, // ok btn
{ x: 320, y: 300 });


/***/ }),

/***/ "./src/tasks/commons/gameLineUp.ts":
/*!*****************************************!*\
  !*** ./src/tasks/commons/gameLineUp.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../../utils */ "./src/utils.ts");
// TODO: let user set up and handle
var playerDrinkSetting = {
    selectPitcherIndexes: [-1],
    selectBatterIndexes: [-1],
    isAlwaysUse: true,
};
function addRoutes() {
    // enter game info
    modules_1.rerouter.addRoute({
        path: "/".concat(gameLineUp.name),
        match: gameLineUp,
        action: function (context, image, matched, finishRound) {
            if (!modules_1.Config.scriptConfig.useDrink) {
                console.log('no useDrink go back');
                modules_1.rerouter.goBack(gameLineUp);
                return;
            }
            var taskName = context.task.name;
            var useDrinkInLeague = taskName == taskNames_1.TASKS.playLeagueGame && modules_1.state.leagueGame.needSetDrink;
            var useDrinkInRank = taskName == taskNames_1.TASKS.playBattleGame && modules_1.state.rankGame.needSetDrink;
            if (!useDrinkInLeague && !useDrinkInRank) {
                console.log('not need to set drink, go back');
                modules_1.rerouter.goBack(gameLineUp);
                return;
            }
            modules_1.rerouter.screen.tap(gameLineUpBtns.condition);
            console.log('enter condition drink');
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(conditionDrink.name),
        match: conditionDrink,
        action: function (context, image, matched, finishRound) {
            if (!modules_1.Config.scriptConfig.useDrink) {
                console.log('no useDrink go back');
                modules_1.rerouter.goBack(gameLineUp);
                return;
            }
            var taskName = context.task.name;
            var useDrinkInLeague = taskName == taskNames_1.TASKS.playLeagueGame && modules_1.state.leagueGame.needSetDrink;
            var useDrinkInRank = taskName == taskNames_1.TASKS.playBattleGame && modules_1.state.rankGame.needSetDrink;
            if (!useDrinkInLeague && !useDrinkInRank) {
                console.log('not need to set drink, go back');
                modules_1.rerouter.goBack(gameLineUp);
                return;
            }
            // select always use or not (current is sync among pitcher & batter tabs)
            if (playerDrinkSetting.isAlwaysUse && (0, utils_1.isSameColor)(image, conditionDrinkBtns.alwaysUseNotTurnOn)) {
                modules_1.rerouter.screen.tap(conditionDrinkBtns.alwaysUseNotTurnOn);
                console.log('turn on condition drink always use');
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            }
            for (var _i = 0, _a = [
                { indexes: playerDrinkSetting.selectBatterIndexes, btn: conditionDrinkBtns.batterNotSelect },
                { indexes: playerDrinkSetting.selectPitcherIndexes, btn: conditionDrinkBtns.pitcherNotSelect },
            ]; _i < _a.length; _i++) {
                var _b = _a[_i], indexes = _b.indexes, btn = _b.btn;
                if (indexes.length == 0) {
                    continue;
                }
                // select tab
                modules_1.rerouter.screen.tap(btn);
                console.log('select tab in condition drink');
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                // select use in that tab
                var img_1 = getScreenshot();
                handleSelectUseDrinkPlayers(img_1, indexes);
                releaseImage(img_1);
            }
            // apply changes
            var img = getScreenshot();
            if ((0, utils_1.isSameColor)(img, conditionDrinkBtns.useDrinkOn)) {
                modules_1.rerouter.screen.tap(conditionDrinkBtns.useDrinkOn);
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            }
            else {
                // might be mid of the game or no drink, cannot change
                var useInMode = '';
                if (useDrinkInLeague) {
                    modules_1.state.leagueGame.needSetDrink = false;
                    useInMode = 'league game';
                }
                else if (useDrinkInRank) {
                    modules_1.state.rankGame.needSetDrink = false;
                    useInMode = 'rank game';
                }
                console.log("cannot use condition drink in ".concat(useInMode, ", go back"));
                modules_1.rerouter.goBack(conditionDrink);
            }
            releaseImage(img);
        },
    });
}
exports.addRoutes = addRoutes;
function handleSelectUseDrinkPlayers(image, indexes) {
    // FIXME: current only support select all
    if ((0, utils_1.isSameColor)(image, conditionDrinkBtns.selectAllNotTurnOn)) {
        modules_1.rerouter.screen.tap(conditionDrinkBtns.selectAllNotTurnOn);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
    }
    console.log('select all players for drink');
}
var gameLineUp = new Rerouter_1.Page('gameLineUp', [
    // content top bg
    { x: 591, y: 59, r: 49, g: 73, b: 107 },
    // progress bg
    { x: 19, y: 211, r: 24, g: 32, b: 49 },
    // battle lineup button in bottom
    { x: 536, y: 322, r: 41, g: 81, b: 137 },
    { x: 553, y: 322, r: 188, g: 209, b: 224 },
    { x: 568, y: 322, r: 204, g: 220, b: 234 },
    { x: 585, y: 324, r: 107, g: 139, b: 177 },
    { x: 604, y: 324, r: 80, g: 115, b: 155 },
    // back
    { x: 26, y: 314, r: 214, g: 219, b: 214 },
    { x: 43, y: 321, r: 214, g: 219, b: 214 },
    { x: 36, y: 329, r: 211, g: 216, b: 210 },
], { x: 40, y: 324 }, { x: 40, y: 324 });
var gameLineUpBtns = {
    autoSwitch: { x: 123, y: 325 },
    condition: { x: 319, y: 320 },
    otherLineUp: { x: 580, y: 325 },
};
var conditionDrink = new Rerouter_1.Page('conditionDrink', [
    // condition drink
    { x: 19, y: 39, r: 251, g: 251, b: 251 },
    { x: 41, y: 39, r: 217, g: 221, b: 224 },
    { x: 48, y: 36, r: 255, g: 255, b: 255 },
    { x: 59, y: 38, r: 255, g: 255, b: 255 },
    { x: 65, y: 34, r: 211, g: 208, b: 211 },
    { x: 84, y: 36, r: 102, g: 112, b: 118 },
    { x: 100, y: 37, r: 255, g: 255, b: 255 },
    { x: 120, y: 31, r: 84, g: 91, b: 99 },
    { x: 130, y: 35, r: 255, g: 255, b: 255 },
    { x: 146, y: 29, r: 103, g: 112, b: 122 },
    { x: 157, y: 41, r: 38, g: 41, b: 46 },
    { x: 172, y: 38, r: 16, g: 16, b: 16 },
    { x: 165, y: 37, r: 197, g: 200, b: 203 },
    { x: 166, y: 29, r: 255, g: 255, b: 255 },
    { x: 176, y: 29, r: 14, g: 16, b: 16 },
    // always use btn (exclude checkbox)
    { x: 165, y: 227, r: 164, g: 193, b: 218 },
    { x: 176, y: 222, r: 104, g: 150, b: 191 },
    { x: 192, y: 229, r: 102, g: 144, b: 187 },
    { x: 206, y: 221, r: 63, g: 119, b: 168 },
    { x: 221, y: 228, r: 182, g: 204, b: 217 },
    // select all btn (exclude checkbox)
    { x: 109, y: 313, r: 58, g: 117, b: 164 },
    { x: 130, y: 313, r: 230, g: 247, b: 255 },
    { x: 136, y: 327, r: 190, g: 215, b: 232 },
    { x: 144, y: 317, r: 101, g: 139, b: 171 },
    { x: 157, y: 327, r: 58, g: 109, b: 156 },
], { x: 246, y: 323 }, // use
{ x: 43, y: 318 } // back
);
var conditionDrinkBtns = {
    pitcherNotSelect: { x: 82, y: 89, r: 41, g: 73, b: 115 },
    batterNotSelect: { x: 92, y: 127, r: 41, g: 73, b: 115 },
    openOtherLineUp: { x: 52, y: 183, r: 57, g: 98, b: 134 },
    selectAllNotTurnOn: { x: 83, y: 328, r: 16, g: 40, b: 66 },
    alwaysUseNotTurnOn: { x: 139, y: 230, r: 16, g: 40, b: 66 },
    useDrinkOn: { x: 278, y: 324, r: 222, g: 130, b: 8 },
};
// when click other lineup btn in condition drink or in game lineup
var otherLineUp = new Rerouter_1.Page('otherLineUp', [
    // bg all semi-transparent black
    { x: 42, y: 319, r: 206, g: 206, b: 206 },
    { x: 58, y: 55, r: 8, g: 8, b: 8 },
    { x: 60, y: 192, r: 8, g: 12, b: 16 },
    { x: 169, y: 329, r: 8, g: 12, b: 16 },
    { x: 339, y: 325, r: 0, g: 4, b: 8 },
    { x: 553, y: 318, r: 0, g: 0, b: 0 },
    { x: 605, y: 107, r: 16, g: 12, b: 11 },
    { x: 561, y: 39, r: 0, g: 0, b: 0 },
    { x: 287, y: 37, r: 0, g: 0, b: 0 },
    // league line up btn
    { x: 252, y: 120, r: 49, g: 85, b: 123 },
    { x: 286, y: 114, r: 154, g: 179, b: 210 },
    { x: 324, y: 122, r: 181, g: 202, b: 230 },
    { x: 357, y: 113, r: 175, g: 200, b: 230 },
    { x: 381, y: 120, r: 49, g: 85, b: 123 },
    // battle line up btn
    { x: 247, y: 176, r: 49, g: 87, b: 123 },
    { x: 280, y: 176, r: 49, g: 87, b: 123 },
    { x: 295, y: 174, r: 112, g: 139, b: 169 },
    { x: 353, y: 173, r: 62, g: 97, b: 131 },
    { x: 358, y: 174, r: 50, g: 88, b: 116 },
    { x: 386, y: 181, r: 49, g: 85, b: 123 },
    // club line up btn
    { x: 244, y: 234, r: 49, g: 89, b: 123 },
    { x: 280, y: 239, r: 91, g: 120, b: 156 },
    { x: 309, y: 238, r: 115, g: 143, b: 175 },
    { x: 333, y: 239, r: 181, g: 202, b: 230 },
    { x: 357, y: 239, r: 153, g: 176, b: 205 },
    { x: 385, y: 239, r: 49, g: 85, b: 123 },
], { x: 42, y: 319 }, // back
{ x: 42, y: 319 });
var otherLineUpBtns = {
    league: { x: 278, y: 120 },
    battle: { x: 278, y: 180 },
    club: { x: 278, y: 240 },
};


/***/ }),

/***/ "./src/tasks/commons/index.ts":
/*!************************************!*\
  !*** ./src/tasks/commons/index.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var confirmRoutes = __importStar(__webpack_require__(/*! ./confirms */ "./src/tasks/commons/confirms.ts"));
var enterAppRoutes = __importStar(__webpack_require__(/*! ./enterApp */ "./src/tasks/commons/enterApp.ts"));
var errorsRoutes = __importStar(__webpack_require__(/*! ./errors */ "./src/tasks/commons/errors.ts"));
var gameLineUpRoutes = __importStar(__webpack_require__(/*! ./gameLineUp */ "./src/tasks/commons/gameLineUp.ts"));
var nextsRoutes = __importStar(__webpack_require__(/*! ./nexts */ "./src/tasks/commons/nexts.ts"));
var playRelatedRoutes = __importStar(__webpack_require__(/*! ./playRelated */ "./src/tasks/commons/playRelated.ts"));
var powerSavingsRoutes = __importStar(__webpack_require__(/*! ./powerSavings */ "./src/tasks/commons/powerSavings.ts"));
var promotionsRoutes = __importStar(__webpack_require__(/*! ./promotions */ "./src/tasks/commons/promotions.ts"));
function addRoutes() {
    [confirmRoutes, enterAppRoutes, errorsRoutes, gameLineUpRoutes, nextsRoutes, playRelatedRoutes, powerSavingsRoutes, promotionsRoutes].forEach(function (route) {
        route.addRoutes();
    });
}
exports.addRoutes = addRoutes;


/***/ }),

/***/ "./src/tasks/commons/nexts.ts":
/*!************************************!*\
  !*** ./src/tasks/commons/nexts.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(nextGroup.name),
        match: nextGroup,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            var task = context.task.name;
            if (modules_1.rerouter.isPageMatchImage(endSeasonRelated, image)) {
                if (modules_1.rerouter.isPageMatchImage(endPostSeason, image)) {
                    console.log('endPostSeason detected, reset progress');
                    modules_1.state.leagueGame.needResetProgress = true;
                    modules_1.rerouter.goNext(nextGroup);
                    modules_1.state.onRunning();
                    return;
                }
                console.log('endSeasonRelated');
                modules_1.rerouter.goNext(nextGroup);
                modules_1.state.onRunning();
                return;
            }
            if (modules_1.rerouter.isPageMatchImage(rechargeBallGroup, image)) {
                console.log("match rechargeBallGroup");
                switch (context.task.name) {
                    case taskNames_1.TASKS.playLeagueGame:
                    case taskNames_1.TASKS.playBattleGame:
                        console.log('cannot continue: recharge ball needed');
                        finishRound(true);
                    default:
                        break;
                }
                modules_1.rerouter.goBack(rechargeBallLeagueMode);
                return;
            }
            modules_1.rerouter.goNext(nextGroup);
        },
    });
}
exports.addRoutes = addRoutes;
// page has next button
var next = new Rerouter_1.Page('next', [
    { x: 273, y: 304, r: 8, g: 117, b: 255 },
    { x: 305, y: 307, r: 255, g: 255, b: 255 },
    { x: 314, y: 314, r: 255, g: 255, b: 255 },
    { x: 321, y: 305, r: 224, g: 236, b: 255 },
    { x: 328, y: 310, r: 1, g: 106, b: 255 },
    { x: 333, y: 299, r: 8, g: 125, b: 255 },
    { x: 374, y: 305, r: 8, g: 117, b: 255 },
    { x: 380, y: 319, r: 0, g: 89, b: 247 },
    { x: 265, y: 318, r: 0, g: 89, b: 247 },
], { x: 346, y: 307 }, { x: 346, y: 307 });
var next2 = new Rerouter_1.Page('next', [
    { x: 226, y: 296, r: 222, g: 219, b: 222 },
    { x: 275, y: 296, r: 8, g: 121, b: 255 },
    { x: 306, y: 299, r: 254, g: 254, b: 255 },
    { x: 314, y: 303, r: 255, g: 255, b: 255 },
    { x: 321, y: 299, r: 201, g: 223, b: 255 },
    { x: 331, y: 299, r: 255, g: 255, b: 255 },
    { x: 364, y: 310, r: 0, g: 94, b: 247 },
], { x: 346, y: 307 }, { x: 346, y: 307 });
// include endSeason, reward ....
var endSeasonRelated = new Rerouter_1.Page('endSeasonRelated', [
    // logo mlb
    { x: 353, y: 143, r: 8, g: 32, b: 66 },
    { x: 372, y: 153, r: 255, g: 255, b: 255 },
    { x: 386, y: 143, r: 201, g: 31, b: 61 },
    // players on left
    { x: 320, y: 144, r: 54, g: 56, b: 58 },
    { x: 309, y: 145, r: 197, g: 198, b: 206 },
    { x: 301, y: 154, r: 191, g: 192, b: 199 },
    { x: 317, y: 151, r: 67, g: 68, b: 69 },
    { x: 275, y: 148, r: 195, g: 197, b: 204 },
    { x: 248, y: 148, r: 124, g: 127, b: 129 },
    // don't choose the descriptions bc it changes by league amount
]);
var endRegularSeason = new Rerouter_1.Page('endRegularSeason', [
    // title
    { x: 229, y: 57, r: 135, g: 137, b: 144 },
    { x: 229, y: 57, r: 135, g: 137, b: 144 },
    { x: 236, y: 57, r: 197, g: 198, b: 206 },
    { x: 243, y: 58, r: 25, g: 33, b: 41 },
    { x: 243, y: 58, r: 25, g: 33, b: 41 },
    { x: 255, y: 58, r: 75, g: 79, b: 89 },
    { x: 256, y: 58, r: 178, g: 177, b: 186 },
    { x: 265, y: 55, r: 159, g: 158, b: 167 },
    { x: 268, y: 57, r: 16, g: 24, b: 33 },
    { x: 273, y: 60, r: 16, g: 24, b: 33 },
    { x: 285, y: 60, r: 16, g: 24, b: 33 },
    { x: 278, y: 59, r: 182, g: 183, b: 190 },
    { x: 294, y: 59, r: 118, g: 120, b: 126 },
    { x: 295, y: 55, r: 21, g: 26, b: 33 },
    { x: 304, y: 60, r: 16, g: 24, b: 33 },
    { x: 311, y: 58, r: 190, g: 189, b: 198 },
    { x: 320, y: 62, r: 84, g: 89, b: 96 },
    { x: 325, y: 57, r: 46, g: 51, b: 58 },
    { x: 334, y: 62, r: 38, g: 45, b: 53 },
    { x: 341, y: 56, r: 16, g: 24, b: 33 },
    { x: 347, y: 59, r: 140, g: 142, b: 148 },
    { x: 351, y: 58, r: 197, g: 198, b: 206 },
    { x: 358, y: 58, r: 16, g: 24, b: 33 },
    { x: 368, y: 58, r: 16, g: 24, b: 33 },
    { x: 377, y: 60, r: 17, g: 25, b: 33 },
    { x: 374, y: 55, r: 16, g: 24, b: 33 },
    { x: 386, y: 58, r: 98, g: 101, b: 107 },
    { x: 382, y: 60, r: 196, g: 197, b: 204 },
    { x: 390, y: 60, r: 77, g: 84, b: 91 },
    { x: 398, y: 56, r: 73, g: 77, b: 84 },
    { x: 403, y: 63, r: 139, g: 143, b: 151 },
]);
var endPostSeason = new Rerouter_1.Page('endPostSeason', 
// title
[
    { x: 243, y: 54, r: 197, g: 198, b: 206 },
    { x: 243, y: 57, r: 197, g: 198, b: 206 },
    { x: 243, y: 60, r: 197, g: 198, b: 206 },
    { x: 243, y: 63, r: 197, g: 198, b: 206 },
    { x: 243, y: 66, r: 197, g: 198, b: 206 },
    { x: 246, y: 54, r: 131, g: 132, b: 139 },
    { x: 246, y: 57, r: 131, g: 132, b: 139 },
    { x: 246, y: 60, r: 131, g: 132, b: 139 },
    { x: 246, y: 63, r: 131, g: 132, b: 139 },
    { x: 246, y: 66, r: 182, g: 183, b: 190 },
    { x: 249, y: 54, r: 67, g: 72, b: 80 },
    { x: 249, y: 57, r: 68, g: 73, b: 81 },
    { x: 249, y: 60, r: 75, g: 80, b: 89 },
    { x: 249, y: 63, r: 72, g: 76, b: 85 },
    { x: 249, y: 66, r: 157, g: 159, b: 165 },
    { x: 252, y: 54, r: 169, g: 171, b: 182 },
    { x: 252, y: 57, r: 189, g: 188, b: 197 },
    { x: 252, y: 60, r: 193, g: 194, b: 201 },
    { x: 252, y: 63, r: 180, g: 181, b: 188 },
    { x: 252, y: 66, r: 168, g: 169, b: 176 },
    { x: 255, y: 54, r: 21, g: 27, b: 33 },
    { x: 255, y: 57, r: 21, g: 27, b: 33 },
    { x: 255, y: 60, r: 21, g: 27, b: 33 },
    { x: 255, y: 63, r: 21, g: 27, b: 33 },
    { x: 255, y: 66, r: 157, g: 159, b: 165 },
    { x: 258, y: 54, r: 177, g: 180, b: 185 },
    { x: 258, y: 57, r: 60, g: 65, b: 73 },
    { x: 258, y: 60, r: 43, g: 48, b: 54 },
    { x: 258, y: 63, r: 154, g: 155, b: 162 },
    { x: 258, y: 66, r: 197, g: 198, b: 206 },
    { x: 261, y: 54, r: 43, g: 49, b: 56 },
    { x: 261, y: 57, r: 43, g: 49, b: 56 },
    { x: 261, y: 60, r: 43, g: 49, b: 56 },
    { x: 261, y: 63, r: 43, g: 49, b: 56 },
    { x: 261, y: 66, r: 163, g: 164, b: 171 },
    { x: 264, y: 54, r: 126, g: 128, b: 134 },
    { x: 264, y: 57, r: 126, g: 128, b: 134 },
    { x: 264, y: 60, r: 126, g: 128, b: 134 },
    { x: 264, y: 63, r: 126, g: 128, b: 134 },
    { x: 264, y: 66, r: 181, g: 182, b: 189 },
    { x: 267, y: 54, r: 68, g: 73, b: 81 },
    { x: 267, y: 57, r: 85, g: 90, b: 98 },
    { x: 267, y: 60, r: 85, g: 90, b: 98 },
    { x: 267, y: 63, r: 76, g: 81, b: 89 },
    { x: 267, y: 66, r: 157, g: 159, b: 165 },
    { x: 270, y: 54, r: 18, g: 25, b: 34 },
    { x: 270, y: 57, r: 26, g: 34, b: 38 },
    { x: 270, y: 60, r: 26, g: 34, b: 38 },
    { x: 270, y: 63, r: 20, g: 26, b: 33 },
    { x: 270, y: 66, r: 182, g: 184, b: 190 },
    { x: 273, y: 54, r: 191, g: 192, b: 199 },
    { x: 273, y: 57, r: 178, g: 182, b: 187 },
    { x: 273, y: 60, r: 178, g: 182, b: 187 },
    { x: 273, y: 63, r: 190, g: 191, b: 198 },
    { x: 273, y: 66, r: 197, g: 198, b: 206 },
    { x: 276, y: 54, r: 197, g: 198, b: 206 },
    { x: 276, y: 57, r: 197, g: 198, b: 206 },
    { x: 276, y: 60, r: 197, g: 198, b: 206 },
    { x: 276, y: 63, r: 197, g: 198, b: 206 },
    { x: 276, y: 66, r: 197, g: 198, b: 206 },
    { x: 279, y: 54, r: 64, g: 69, b: 76 },
    { x: 279, y: 57, r: 40, g: 45, b: 51 },
    { x: 279, y: 60, r: 40, g: 45, b: 51 },
    { x: 279, y: 63, r: 56, g: 63, b: 73 },
    { x: 279, y: 66, r: 197, g: 198, b: 206 },
    { x: 282, y: 54, r: 109, g: 111, b: 121 },
    { x: 282, y: 57, r: 156, g: 160, b: 164 },
    { x: 282, y: 60, r: 156, g: 160, b: 164 },
    { x: 282, y: 63, r: 127, g: 129, b: 135 },
    { x: 282, y: 66, r: 138, g: 141, b: 150 },
    { x: 285, y: 54, r: 16, g: 24, b: 33 },
    { x: 285, y: 57, r: 16, g: 24, b: 33 },
    { x: 285, y: 60, r: 16, g: 24, b: 33 },
    { x: 285, y: 63, r: 16, g: 24, b: 33 },
    { x: 285, y: 66, r: 186, g: 187, b: 194 },
    { x: 288, y: 54, r: 157, g: 157, b: 165 },
    { x: 288, y: 57, r: 157, g: 157, b: 165 },
    { x: 288, y: 60, r: 157, g: 157, b: 165 },
    { x: 288, y: 63, r: 157, g: 157, b: 165 },
    { x: 288, y: 66, r: 188, g: 188, b: 196 },
    { x: 291, y: 54, r: 40, g: 48, b: 53 },
    { x: 291, y: 57, r: 42, g: 49, b: 55 },
    { x: 291, y: 60, r: 43, g: 51, b: 59 },
    { x: 291, y: 63, r: 47, g: 54, b: 59 },
    { x: 291, y: 66, r: 163, g: 165, b: 171 },
    { x: 294, y: 54, r: 166, g: 167, b: 177 },
    { x: 294, y: 57, r: 179, g: 180, b: 188 },
    { x: 294, y: 60, r: 183, g: 188, b: 191 },
    { x: 294, y: 63, r: 197, g: 198, b: 206 },
    { x: 294, y: 66, r: 197, g: 198, b: 206 },
    { x: 297, y: 54, r: 197, g: 198, b: 206 },
    { x: 297, y: 57, r: 197, g: 198, b: 206 },
    { x: 297, y: 60, r: 197, g: 198, b: 206 },
    { x: 297, y: 63, r: 197, g: 198, b: 206 },
    { x: 297, y: 66, r: 197, g: 198, b: 206 },
    { x: 300, y: 54, r: 151, g: 153, b: 159 },
    { x: 300, y: 57, r: 151, g: 153, b: 159 },
    { x: 300, y: 60, r: 151, g: 153, b: 159 },
    { x: 300, y: 63, r: 151, g: 153, b: 159 },
    { x: 300, y: 66, r: 185, g: 187, b: 193 },
    { x: 303, y: 54, r: 41, g: 47, b: 54 },
    { x: 303, y: 57, r: 44, g: 51, b: 56 },
    { x: 303, y: 60, r: 41, g: 48, b: 54 },
    { x: 303, y: 63, r: 48, g: 55, b: 60 },
    { x: 303, y: 66, r: 163, g: 165, b: 172 },
    { x: 306, y: 54, r: 56, g: 63, b: 71 },
    { x: 306, y: 57, r: 86, g: 91, b: 98 },
    { x: 306, y: 60, r: 170, g: 169, b: 178 },
    { x: 306, y: 63, r: 197, g: 198, b: 206 },
    { x: 306, y: 66, r: 197, g: 198, b: 206 },
    { x: 309, y: 54, r: 126, g: 129, b: 135 },
    { x: 309, y: 57, r: 117, g: 121, b: 129 },
    { x: 309, y: 60, r: 197, g: 198, b: 206 },
    { x: 309, y: 63, r: 197, g: 198, b: 206 },
    { x: 309, y: 66, r: 197, g: 198, b: 206 },
    { x: 312, y: 54, r: 16, g: 24, b: 33 },
    { x: 312, y: 57, r: 16, g: 24, b: 33 },
    { x: 312, y: 60, r: 16, g: 24, b: 33 },
    { x: 312, y: 63, r: 16, g: 24, b: 33 },
    { x: 312, y: 66, r: 191, g: 190, b: 199 },
    { x: 315, y: 54, r: 127, g: 127, b: 136 },
    { x: 315, y: 57, r: 169, g: 170, b: 177 },
    { x: 315, y: 60, r: 169, g: 170, b: 177 },
    { x: 315, y: 63, r: 139, g: 141, b: 148 },
    { x: 315, y: 66, r: 137, g: 139, b: 145 },
    { x: 318, y: 54, r: 50, g: 57, b: 66 },
    { x: 318, y: 57, r: 29, g: 32, b: 41 },
    { x: 318, y: 60, r: 29, g: 32, b: 41 },
    { x: 318, y: 63, r: 46, g: 53, b: 62 },
    { x: 318, y: 66, r: 197, g: 197, b: 206 },
    { x: 321, y: 54, r: 51, g: 58, b: 67 },
    { x: 321, y: 57, r: 79, g: 86, b: 95 },
    { x: 321, y: 60, r: 197, g: 198, b: 206 },
    { x: 321, y: 63, r: 58, g: 65, b: 74 },
    { x: 321, y: 66, r: 197, g: 198, b: 206 },
    { x: 324, y: 54, r: 110, g: 113, b: 121 },
    { x: 324, y: 57, r: 62, g: 66, b: 75 },
    { x: 324, y: 60, r: 71, g: 78, b: 87 },
    { x: 324, y: 63, r: 144, g: 145, b: 153 },
    { x: 324, y: 66, r: 137, g: 137, b: 145 },
    { x: 327, y: 54, r: 52, g: 59, b: 65 },
    { x: 327, y: 57, r: 197, g: 198, b: 206 },
    { x: 327, y: 60, r: 68, g: 74, b: 80 },
    { x: 327, y: 63, r: 24, g: 30, b: 37 },
    { x: 327, y: 66, r: 194, g: 195, b: 202 },
    { x: 330, y: 54, r: 115, g: 117, b: 126 },
    { x: 330, y: 57, r: 180, g: 184, b: 189 },
    { x: 330, y: 60, r: 180, g: 184, b: 189 },
    { x: 330, y: 63, r: 180, g: 184, b: 189 },
    { x: 330, y: 66, r: 194, g: 195, b: 202 },
    { x: 333, y: 54, r: 17, g: 25, b: 33 },
    { x: 333, y: 57, r: 21, g: 26, b: 33 },
    { x: 333, y: 60, r: 21, g: 26, b: 33 },
    { x: 333, y: 63, r: 21, g: 26, b: 33 },
    { x: 333, y: 66, r: 157, g: 159, b: 165 },
    { x: 336, y: 54, r: 154, g: 159, b: 165 },
    { x: 336, y: 57, r: 197, g: 198, b: 206 },
    { x: 336, y: 60, r: 197, g: 198, b: 206 },
    { x: 336, y: 63, r: 197, g: 198, b: 206 },
    { x: 336, y: 66, r: 197, g: 198, b: 206 },
    { x: 339, y: 54, r: 16, g: 24, b: 33 },
    { x: 339, y: 57, r: 21, g: 29, b: 37 },
    { x: 339, y: 60, r: 194, g: 193, b: 203 },
    { x: 339, y: 63, r: 16, g: 24, b: 33 },
    { x: 339, y: 66, r: 187, g: 188, b: 195 },
    { x: 342, y: 54, r: 71, g: 78, b: 84 },
    { x: 342, y: 57, r: 143, g: 145, b: 152 },
    { x: 342, y: 60, r: 23, g: 30, b: 39 },
    { x: 342, y: 63, r: 81, g: 86, b: 93 },
    { x: 342, y: 66, r: 145, g: 148, b: 156 },
    { x: 345, y: 54, r: 146, g: 150, b: 158 },
    { x: 345, y: 57, r: 197, g: 198, b: 206 },
    { x: 345, y: 60, r: 161, g: 162, b: 170 },
    { x: 345, y: 63, r: 121, g: 124, b: 130 },
    { x: 345, y: 66, r: 197, g: 198, b: 206 },
    { x: 348, y: 54, r: 16, g: 24, b: 33 },
    { x: 348, y: 57, r: 16, g: 24, b: 33 },
    { x: 348, y: 60, r: 16, g: 24, b: 33 },
    { x: 348, y: 63, r: 16, g: 24, b: 33 },
    { x: 348, y: 66, r: 157, g: 159, b: 165 },
    { x: 351, y: 54, r: 156, g: 160, b: 171 },
    { x: 351, y: 57, r: 161, g: 164, b: 171 },
    { x: 351, y: 60, r: 184, g: 185, b: 192 },
    { x: 351, y: 63, r: 173, g: 174, b: 181 },
    { x: 351, y: 66, r: 157, g: 159, b: 165 },
    { x: 354, y: 54, r: 197, g: 198, b: 206 },
    { x: 354, y: 57, r: 197, g: 198, b: 206 },
    { x: 354, y: 60, r: 190, g: 193, b: 199 },
    { x: 354, y: 63, r: 135, g: 139, b: 143 },
    { x: 354, y: 66, r: 172, g: 175, b: 180 },
    { x: 357, y: 54, r: 26, g: 32, b: 39 },
    { x: 357, y: 57, r: 17, g: 25, b: 33 },
    { x: 357, y: 60, r: 42, g: 48, b: 54 },
    { x: 357, y: 63, r: 73, g: 80, b: 89 },
    { x: 357, y: 66, r: 180, g: 182, b: 191 },
    { x: 360, y: 54, r: 56, g: 63, b: 72 },
    { x: 360, y: 57, r: 16, g: 24, b: 33 },
    { x: 360, y: 60, r: 17, g: 25, b: 33 },
    { x: 360, y: 63, r: 49, g: 54, b: 62 },
    { x: 360, y: 66, r: 172, g: 173, b: 180 },
    { x: 363, y: 54, r: 191, g: 190, b: 199 },
    { x: 363, y: 57, r: 197, g: 198, b: 206 },
    { x: 363, y: 60, r: 197, g: 198, b: 206 },
    { x: 363, y: 63, r: 173, g: 171, b: 181 },
    { x: 363, y: 66, r: 183, g: 184, b: 191 },
    { x: 366, y: 54, r: 23, g: 28, b: 35 },
    { x: 366, y: 57, r: 16, g: 24, b: 33 },
    { x: 366, y: 60, r: 182, g: 185, b: 190 },
    { x: 366, y: 63, r: 36, g: 40, b: 48 },
    { x: 366, y: 66, r: 175, g: 176, b: 183 },
    { x: 369, y: 54, r: 38, g: 44, b: 52 },
    { x: 369, y: 57, r: 177, g: 180, b: 186 },
    { x: 369, y: 60, r: 17, g: 25, b: 33 },
    { x: 369, y: 63, r: 48, g: 54, b: 61 },
    { x: 369, y: 66, r: 160, g: 163, b: 171 },
    { x: 372, y: 54, r: 191, g: 192, b: 199 },
    { x: 372, y: 57, r: 188, g: 187, b: 196 },
    { x: 372, y: 60, r: 183, g: 182, b: 191 },
    { x: 372, y: 63, r: 160, g: 162, b: 169 },
    { x: 372, y: 66, r: 197, g: 198, b: 206 },
    { x: 375, y: 54, r: 16, g: 24, b: 33 },
    { x: 375, y: 57, r: 16, g: 24, b: 33 },
    { x: 375, y: 60, r: 16, g: 24, b: 33 },
    { x: 375, y: 63, r: 16, g: 24, b: 33 },
    { x: 375, y: 66, r: 179, g: 181, b: 187 },
    { x: 378, y: 54, r: 77, g: 84, b: 92 },
    { x: 378, y: 57, r: 120, g: 122, b: 128 },
    { x: 378, y: 60, r: 120, g: 122, b: 128 },
    { x: 378, y: 63, r: 91, g: 95, b: 101 },
    { x: 378, y: 66, r: 146, g: 148, b: 154 },
    { x: 381, y: 54, r: 108, g: 109, b: 117 },
    { x: 381, y: 57, r: 66, g: 70, b: 77 },
    { x: 381, y: 60, r: 66, g: 70, b: 77 },
    { x: 381, y: 63, r: 97, g: 103, b: 108 },
    { x: 381, y: 66, r: 197, g: 198, b: 206 },
    { x: 384, y: 54, r: 20, g: 28, b: 36 },
    { x: 384, y: 57, r: 20, g: 28, b: 36 },
    { x: 384, y: 60, r: 20, g: 28, b: 36 },
    { x: 384, y: 63, r: 20, g: 28, b: 36 },
    { x: 384, y: 66, r: 157, g: 159, b: 165 },
    { x: 387, y: 54, r: 170, g: 171, b: 178 },
    { x: 387, y: 57, r: 47, g: 52, b: 59 },
    { x: 387, y: 60, r: 51, g: 58, b: 64 },
    { x: 387, y: 63, r: 168, g: 169, b: 176 },
    { x: 387, y: 66, r: 197, g: 198, b: 206 },
    { x: 390, y: 54, r: 31, g: 37, b: 43 },
    { x: 390, y: 57, r: 31, g: 37, b: 43 },
    { x: 390, y: 60, r: 31, g: 37, b: 43 },
    { x: 390, y: 63, r: 31, g: 37, b: 43 },
    { x: 390, y: 66, r: 157, g: 161, b: 169 },
]);
var rechargeBallLeagueMode = new Rerouter_1.Page('rechargeBallLeagueMode', [
    // title
    { x: 224, y: 55, r: 197, g: 198, b: 206 },
    { x: 268, y: 60, r: 24, g: 32, b: 37 },
    { x: 316, y: 62, r: 197, g: 198, b: 206 },
    { x: 368, y: 61, r: 23, g: 31, b: 40 },
    { x: 401, y: 56, r: 197, g: 198, b: 206 },
    { x: 440, y: 60, r: 197, g: 198, b: 206 },
    // bg
    { x: 110, y: 53, r: 197, g: 198, b: 206 },
    { x: 114, y: 298, r: 238, g: 243, b: 238 },
    { x: 315, y: 307, r: 234, g: 241, b: 234 },
    { x: 521, y: 306, r: 238, g: 243, b: 238 },
    { x: 518, y: 51, r: 197, g: 198, b: 198 },
], { x: 518, y: 49 }, // cancel
{ x: 518, y: 49 });
var rechargeBallRankMode = new Rerouter_1.Page('rechargeBallRankMode', [
    // title
    { x: 199, y: 56, r: 143, g: 145, b: 152 },
    { x: 231, y: 53, r: 70, g: 76, b: 84 },
    { x: 283, y: 54, r: 125, g: 125, b: 133 },
    { x: 310, y: 53, r: 46, g: 53, b: 58 },
    { x: 338, y: 54, r: 48, g: 55, b: 64 },
    { x: 358, y: 54, r: 176, g: 176, b: 184 },
    { x: 378, y: 60, r: 16, g: 24, b: 33 },
    { x: 387, y: 60, r: 136, g: 139, b: 144 },
    { x: 405, y: 56, r: 26, g: 30, b: 39 },
    { x: 418, y: 60, r: 37, g: 44, b: 53 },
    { x: 427, y: 58, r: 27, g: 35, b: 38 },
    { x: 455, y: 55, r: 197, g: 198, b: 206 },
    { x: 147, y: 55, r: 197, g: 198, b: 206 },
    // recharge btns
    { x: 141, y: 309, r: 8, g: 92, b: 243 },
    { x: 156, y: 293, r: 225, g: 236, b: 247 },
    { x: 175, y: 305, r: 8, g: 102, b: 247 },
    { x: 298, y: 305, r: 0, g: 53, b: 107 },
    { x: 362, y: 299, r: 254, g: 255, b: 255 },
    { x: 344, y: 308, r: 255, g: 255, b: 255 },
    { x: 366, y: 308, r: 8, g: 97, b: 247 },
    { x: 501, y: 303, r: 0, g: 53, b: 107 },
], { x: 518, y: 49 }, // cancel
{ x: 518, y: 49 });
var rechargeBallGroup = new Rerouter_1.GroupPage('rechargeBallGroup', [rechargeBallLeagueMode, rechargeBallRankMode], rechargeBallLeagueMode.next, rechargeBallLeagueMode.back);
var nextGroup = new Rerouter_1.GroupPage('nextGroup', [next, next2, rechargeBallLeagueMode, rechargeBallRankMode], next.next, next.back);


/***/ }),

/***/ "./src/tasks/commons/playRelated.ts":
/*!******************************************!*\
  !*** ./src/tasks/commons/playRelated.ts ***!
  \******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(gameResult.name),
        match: gameResult,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            switch (context.task.name) {
                case taskNames_1.TASKS.playBattleGame:
                case taskNames_1.TASKS.playLeagueGame:
                    console.log('complete a game');
                    finishRound();
                    modules_1.state.onRunning();
                    break;
                default:
                    break;
            }
            modules_1.rerouter.goNext(gameResult);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(onQuickPlay.name),
        match: onQuickPlay,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('on quick playing');
            if (context.task.name === taskNames_1.TASKS.playLeagueGame) {
                // success enter game
                modules_1.state.leagueGame.tryEnterGameCnts = 0;
                modules_1.state.leagueGame.needSetDrink = true; // reset for next drink
            }
            else if (context.task.name === taskNames_1.TASKS.playBattleGame) {
                modules_1.state.rankGame.needSetDrink = true; // reset for next drink
            }
            modules_1.state.onRunning(true);
            if (modules_1.rerouter.isPageMatchImage(onQuickPlayPause, image)) {
                console.log('game paused, resume it');
                modules_1.rerouter.goNext(onQuickPlayPause);
                return;
            }
            modules_1.rerouter.goNext(onQuickPlay);
        },
    });
    [gameResultOther, gameResultAquired, selectOneItemOtherThanBasicReward, selectOneItemOtherThanBasicRewardProceed].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'goNext',
        });
    });
}
exports.addRoutes = addRoutes;
var gameResult = new Rerouter_1.Page('gameResult', [
    // title bg
    { x: 97, y: 22, r: 41, g: 45, b: 58 },
    { x: 131, y: 27, r: 41, g: 45, b: 58 },
    { x: 180, y: 24, r: 41, g: 45, b: 58 },
    { x: 423, y: 23, r: 41, g: 45, b: 58 },
    { x: 473, y: 23, r: 41, g: 45, b: 58 },
    { x: 513, y: 23, r: 41, g: 45, b: 58 },
    { x: 19, y: 23, r: 41, g: 49, b: 58 },
    { x: 615, y: 26, r: 41, g: 45, b: 58 },
    // view all btn
    { x: 115, y: 325, r: 49, g: 85, b: 123 },
    { x: 124, y: 337, r: 41, g: 77, b: 115 },
    // box score btn
    { x: 223, y: 328, r: 144, g: 166, b: 193 },
    { x: 240, y: 324, r: 49, g: 85, b: 123 },
    { x: 242, y: 332, r: 49, g: 81, b: 116 },
    // next btn
    { x: 510, y: 326, r: 8, g: 117, b: 247 },
    { x: 540, y: 326, r: 255, g: 255, b: 255 },
    { x: 560, y: 329, r: 8, g: 114, b: 254 },
    { x: 586, y: 329, r: 8, g: 121, b: 255 },
    // bg between btns
    { x: 315, y: 331, r: 238, g: 247, b: 247 },
    { x: 369, y: 331, r: 238, g: 247, b: 247 },
    { x: 417, y: 329, r: 238, g: 247, b: 247 },
], { x: 609, y: 335 }, { x: 609, y: 335 });
var gameResultAquired = new Rerouter_1.Page('gameResultAquired', [
    { x: 449, y: 23, r: 41, g: 44, b: 49 },
    { x: 39, y: 329, r: 213, g: 218, b: 213 },
    { x: 158, y: 287, r: 247, g: 126, b: 51 },
    { x: 612, y: 328, r: 8, g: 109, b: 247 }, // ok btn
], { x: 612, y: 328 }, { x: 612, y: 328 });
var gameResultOther = new Rerouter_1.Page('gameResultOther', [
    { x: 71, y: 29, r: 0, g: 85, b: 156 },
    { x: 556, y: 15, r: 212, g: 228, b: 241 },
    { x: 595, y: 13, r: 0, g: 93, b: 181 },
    { x: 610, y: 13, r: 0, g: 28, b: 57 },
    { x: 618, y: 13, r: 17, g: 26, b: 58 },
    { x: 624, y: 8, r: 243, g: 244, b: 245 },
    { x: 627, y: 24, r: 165, g: 186, b: 202 },
    { x: 578, y: 23, r: 70, g: 132, b: 182 },
    { x: 249, y: 56, r: 84, g: 121, b: 161 },
    { x: 267, y: 56, r: 255, g: 255, b: 255 },
    { x: 319, y: 60, r: 168, g: 191, b: 208 },
    { x: 377, y: 58, r: 255, g: 255, b: 255 },
    { x: 29, y: 93, r: 0, g: 36, b: 66 },
    { x: 617, y: 314, r: 16, g: 24, b: 17 },
    { x: 108, y: 322, r: 8, g: 20, b: 16 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var onQuickPlay = new Rerouter_1.Page('onQuickPlay', [
    // away
    { x: 4, y: 224, r: 238, g: 226, b: 222 },
    { x: 14, y: 224, r: 182, g: 63, b: 9 },
    { x: 26, y: 224, r: 185, g: 64, b: 8 },
    { x: 34, y: 224, r: 238, g: 227, b: 222 },
    // home
    { x: 605, y: 226, r: 238, g: 231, b: 222 },
    { x: 619, y: 226, r: 204, g: 201, b: 222 },
    { x: 631, y: 227, r: 9, g: 81, b: 206 },
    // play-by-play
    { x: 287, y: 277, r: 230, g: 226, b: 222 },
    { x: 302, y: 277, r: 74, g: 74, b: 74 },
    { x: 338, y: 276, r: 230, g: 227, b: 222 },
    // play manually
    // in ranked battle mode, there's no this btn
    // { x: 555, y: 186, r: 236, g: 244, b: 255 },
    // { x: 571, y: 186, r: 92, g: 151, b: 222 },
    // { x: 588, y: 187, r: 50, g: 144, b: 252 },
    // { x: 604, y: 187, r: 238, g: 246, b: 251 },
    // { x: 615, y: 187, r: 8, g: 121, b: 255 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
// sometimes the quick play will be paused
var onQuickPlayPause = new Rerouter_1.Page('onQuickPlayPause', [
    // set inning
    { x: 550, y: 168, r: 0, g: 95, b: 247 },
    { x: 568, y: 163, r: 219, g: 231, b: 254 },
    { x: 592, y: 162, r: 245, g: 246, b: 255 },
    { x: 620, y: 165, r: 8, g: 101, b: 247 },
    // play ball
    { x: 546, y: 204, r: 0, g: 93, b: 247 },
    { x: 569, y: 193, r: 189, g: 218, b: 250 },
    { x: 590, y: 198, r: 59, g: 128, b: 240 },
    { x: 623, y: 196, r: 8, g: 109, b: 247 },
], { x: 590, y: 198 }, // play ball // TODO: might need to set inning
{ x: 590, y: 198 });
var selectOneItemOtherThanBasicReward = new Rerouter_1.Page('selectOneItemOtherThanBasicReward', [
    // title
    { x: 174, y: 46, r: 127, g: 159, b: 192 },
    { x: 199, y: 46, r: 151, g: 182, b: 203 },
    { x: 231, y: 46, r: 216, g: 227, b: 237 },
    { x: 269, y: 46, r: 8, g: 77, b: 139 },
    { x: 308, y: 45, r: 44, g: 104, b: 157 },
    { x: 345, y: 44, r: 8, g: 77, b: 140 },
    { x: 381, y: 44, r: 219, g: 230, b: 239 },
    { x: 420, y: 43, r: 254, g: 254, b: 254 },
    { x: 450, y: 41, r: 107, g: 147, b: 186 },
    // unselectable ok
    { x: 517, y: 311, r: 0, g: 73, b: 148 },
    { x: 534, y: 325, r: 8, g: 65, b: 148 },
    { x: 548, y: 318, r: 29, g: 83, b: 148 },
    { x: 566, y: 318, r: 155, g: 153, b: 156 },
    { x: 591, y: 310, r: 0, g: 73, b: 148 },
    { x: 595, y: 325, r: 8, g: 65, b: 148 },
    // bg on boards
    { x: 26, y: 287, r: 74, g: 77, b: 66 },
    { x: 25, y: 319, r: 41, g: 45, b: 33 },
    { x: 300, y: 287, r: 66, g: 73, b: 58 },
    { x: 302, y: 322, r: 41, g: 48, b: 37 },
    { x: 5, y: 89, r: 132, g: 146, b: 82 },
    { x: 623, y: 97, r: 49, g: 117, b: 156 },
    { x: 626, y: 223, r: 49, g: 117, b: 156 },
], { x: 169, y: 98 }, // second card
{ x: 169, y: 98 } // second card
);
// after select ok
var selectOneItemOtherThanBasicRewardProceed = new Rerouter_1.Page('selectOneItemOtherThanBasicRewardProceed', [
    // title
    { x: 174, y: 46, r: 127, g: 159, b: 192 },
    { x: 199, y: 46, r: 151, g: 182, b: 203 },
    { x: 231, y: 46, r: 216, g: 227, b: 237 },
    { x: 269, y: 46, r: 8, g: 77, b: 139 },
    { x: 308, y: 45, r: 44, g: 104, b: 157 },
    { x: 345, y: 44, r: 8, g: 77, b: 140 },
    { x: 381, y: 44, r: 219, g: 230, b: 239 },
    { x: 420, y: 43, r: 254, g: 254, b: 254 },
    { x: 450, y: 41, r: 107, g: 147, b: 186 },
    // selectable ok
    { x: 523, y: 319, r: 8, g: 113, b: 247 },
    { x: 553, y: 314, r: 60, g: 144, b: 244 },
    { x: 581, y: 315, r: 8, g: 113, b: 247 },
    // bg on boards
    { x: 26, y: 287, r: 74, g: 77, b: 66 },
    { x: 25, y: 319, r: 41, g: 45, b: 33 },
    { x: 300, y: 287, r: 66, g: 73, b: 58 },
    { x: 302, y: 322, r: 41, g: 48, b: 37 },
    { x: 5, y: 89, r: 132, g: 146, b: 82 },
    { x: 623, y: 97, r: 49, g: 117, b: 156 },
    { x: 626, y: 223, r: 49, g: 117, b: 156 },
], { x: 523, y: 319 }, // ok
{ x: 523, y: 319 } // ok
);


/***/ }),

/***/ "./src/tasks/commons/powerSavings.ts":
/*!*******************************************!*\
  !*** ./src/tasks/commons/powerSavings.ts ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.powerSaving = exports.handlePowerSavingPage = exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ../taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../../utils */ "./src/utils.ts");
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueOnPlayPowerSaveOn.name),
        match: leagueOnPlayPowerSaveOn,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            var isOnPlayTask = context.task.name === taskNames_1.TASKS.playLeagueGame;
            if (!modules_1.Config.scriptConfig.hasCoolFeature || !isOnPlayTask || modules_1.rerouter.isPageMatchImage(exports.powerSaving, image)) {
                handlePowerSavingPage();
                return;
            }
            var now = Date.now();
            var _a = modules_1.state.leagueGame, lastCheckTimeAt = _a.lastCheckPowerSaveAt, colorCount = _a.powerSaveColorCount;
            if (now - lastCheckTimeAt < CONSTANTS.sendRunningEventInterval) {
                Rerouter_1.Utils.sleep(10000);
                return;
            }
            // use time to check whether game is still playing
            var colorCntNow = (0, utils_1.getColorCountInRange)(image, { x: 331, y: 310 }, { x: 403, y: 311 });
            var isSame = (0, utils_1.isSameColorCount)(colorCntNow, colorCount);
            modules_1.state.leagueGame.lastCheckPowerSaveAt = now;
            modules_1.state.leagueGame.powerSaveColorCount = colorCntNow;
            if (!isSame) {
                console.log('game is still playing with power save on');
                modules_1.state.onRunning();
                Rerouter_1.Utils.sleep(10000);
                return;
            }
            console.log('game is stuck');
        },
    });
}
exports.addRoutes = addRoutes;
function handlePowerSavingPage() {
    console.log('handlePowerSavingPage');
    modules_1.rerouter.screen.tapDown({ x: 100, y: 180 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
    modules_1.rerouter.screen.moveTo({ x: 500, y: 180 });
    Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
    modules_1.rerouter.screen.tapUp({ x: 500, y: 180 });
}
exports.handlePowerSavingPage = handlePowerSavingPage;
exports.powerSaving = new Rerouter_1.Page('powerSaving', [
    { x: 304, y: 136, r: 156, g: 160, b: 165 },
    { x: 305, y: 136, r: 156, g: 160, b: 165 },
    { x: 306, y: 136, r: 156, g: 160, b: 165 },
    { x: 307, y: 136, r: 156, g: 160, b: 165 },
    { x: 308, y: 136, r: 156, g: 160, b: 165 },
    { x: 301, y: 133, r: 165, g: 162, b: 165 },
    { x: 302, y: 133, r: 165, g: 162, b: 165 },
    { x: 303, y: 133, r: 165, g: 162, b: 165 },
    { x: 304, y: 133, r: 165, g: 162, b: 165 },
    { x: 305, y: 133, r: 165, g: 162, b: 165 },
    { x: 137, y: 155, r: 0, g: 0, b: 0 },
    { x: 521, y: 160, r: 0, g: 0, b: 0 },
    { x: 298, y: 50, r: 0, g: 0, b: 0 },
    { x: 618, y: 10, r: 0, g: 0, b: 0 },
    // to diff from power saving during playing
    { x: 497, y: 300, r: 0, g: 0, b: 0 },
    { x: 498, y: 300, r: 0, g: 0, b: 0 },
    { x: 499, y: 300, r: 0, g: 0, b: 0 },
    { x: 500, y: 300, r: 0, g: 0, b: 0 },
    { x: 501, y: 300, r: 0, g: 0, b: 0 },
    { x: 502, y: 300, r: 0, g: 0, b: 0 },
    { x: 503, y: 300, r: 0, g: 0, b: 0 },
    { x: 555, y: 282, r: 0, g: 0, b: 0 },
    { x: 555, y: 292, r: 0, g: 0, b: 0 },
    { x: 545, y: 291, r: 0, g: 0, b: 0 },
    // score
    { x: 520, y: 280, r: 0, g: 0, b: 0 },
    { x: 525, y: 280, r: 0, g: 0, b: 0 },
    { x: 530, y: 280, r: 0, g: 0, b: 0 },
    { x: 535, y: 280, r: 0, g: 0, b: 0 },
    { x: 540, y: 280, r: 0, g: 0, b: 0 },
    { x: 545, y: 280, r: 0, g: 0, b: 0 },
    { x: 550, y: 280, r: 0, g: 0, b: 0 },
    { x: 520, y: 295, r: 0, g: 0, b: 0 },
    { x: 525, y: 295, r: 0, g: 0, b: 0 },
    { x: 530, y: 295, r: 0, g: 0, b: 0 },
    { x: 535, y: 295, r: 0, g: 0, b: 0 },
    { x: 540, y: 295, r: 0, g: 0, b: 0 },
    { x: 545, y: 295, r: 0, g: 0, b: 0 },
    { x: 550, y: 295, r: 0, g: 0, b: 0 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var leagueOnPlayPowerSaveOn = new Rerouter_1.Page('leagueOnPlayPowerSaveOn', [
    { x: 304, y: 136, r: 156, g: 160, b: 165 },
    { x: 305, y: 136, r: 156, g: 160, b: 165 },
    { x: 306, y: 136, r: 156, g: 160, b: 165 },
    { x: 307, y: 136, r: 156, g: 160, b: 165 },
    { x: 308, y: 136, r: 156, g: 160, b: 165 },
    { x: 301, y: 133, r: 165, g: 162, b: 165 },
    { x: 302, y: 133, r: 165, g: 162, b: 165 },
    { x: 303, y: 133, r: 165, g: 162, b: 165 },
    { x: 304, y: 133, r: 165, g: 162, b: 165 },
    { x: 305, y: 133, r: 165, g: 162, b: 165 },
    { x: 36, y: 26, r: 0, g: 0, b: 0 },
    { x: 36, y: 326, r: 0, g: 0, b: 0 },
    { x: 613, y: 330, r: 0, g: 0, b: 0 },
    { x: 618, y: 10, r: 0, g: 0, b: 0 },
    { x: 602, y: 27, r: 0, g: 0, b: 0 },
    { x: 174, y: 162, r: 0, g: 0, b: 0 },
    { x: 476, y: 158, r: 0, g: 0, b: 0 },
    // score bg
    { x: 497, y: 300, r: 16, g: 20, b: 16 },
    { x: 498, y: 300, r: 16, g: 20, b: 16 },
    { x: 499, y: 300, r: 16, g: 20, b: 16 },
    { x: 500, y: 300, r: 16, g: 20, b: 16 },
    { x: 501, y: 300, r: 16, g: 20, b: 16 },
    { x: 502, y: 300, r: 16, g: 20, b: 16 },
    { x: 503, y: 300, r: 16, g: 20, b: 16 },
], { x: 0, y: 0 }, { x: 0, y: 0 });


/***/ }),

/***/ "./src/tasks/commons/promotions.ts":
/*!*****************************************!*\
  !*** ./src/tasks/commons/promotions.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../../modules */ "./src/modules/index.ts");
function addRoutes() {
    [
        reviewApp,
        dailyPromotion,
        promotion1,
        promotion2,
        // promotion3,
        teamSupportPackagePromotion,
        enterGamePromotion,
        event,
    ].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'goNext',
        });
    });
}
exports.addRoutes = addRoutes;
var dailyPromotion = new Rerouter_1.Page('dailyPromotion', [
    // black bg
    { x: 45, y: 148, r: 10, g: 2, b: 3 },
    { x: 600, y: 145, r: 10, g: 9, b: 10 },
    { x: 328, y: 336, r: 3, g: 3, b: 3 },
    // don't show this again today (unselcted)
    { x: 176, y: 279, r: 111, g: 122, b: 146 },
    { x: 205, y: 280, r: 2, g: 2, b: 2 },
    { x: 241, y: 280, r: 10, g: 6, b: 7 },
    { x: 272, y: 282, r: 9, g: 8, b: 8 },
    // x
    { x: 480, y: 275, r: 115, g: 115, b: 115 },
    { x: 484, y: 278, r: 129, g: 129, b: 129 },
    { x: 479, y: 280, r: 204, g: 204, b: 205 },
    { x: 486, y: 281, r: 148, g: 148, b: 148 },
], { x: 483, y: 280 }, // x
{ x: 483, y: 280 });
var promotion1 = new Rerouter_1.Page('promotion1', [
    // x
    { x: 612, y: 33, r: 60, g: 60, b: 60 },
    { x: 605, y: 40, r: 174, g: 178, b: 181 },
    { x: 605, y: 35, r: 181, g: 178, b: 181 },
    { x: 612, y: 39, r: 181, g: 178, b: 181 },
    { x: 616, y: 39, r: 181, g: 178, b: 181 },
    { x: 615, y: 29, r: 142, g: 144, b: 142 },
    // title bg right
    { x: 577, y: 38, r: 132, g: 133, b: 140 },
    { x: 582, y: 29, r: 132, g: 133, b: 140 },
    { x: 583, y: 41, r: 132, g: 133, b: 140 },
    { x: 590, y: 27, r: 132, g: 133, b: 140 },
    { x: 591, y: 38, r: 132, g: 133, b: 140 },
    { x: 592, y: 28, r: 132, g: 133, b: 140 },
    { x: 592, y: 41, r: 132, g: 133, b: 140 },
    // title bg left
    { x: 14, y: 29, r: 132, g: 133, b: 140 },
    { x: 14, y: 38, r: 132, g: 133, b: 140 },
], { x: 611, y: 36 }, { x: 611, y: 36 });
var promotion2 = new Rerouter_1.Page('promotion2', [
    { x: 43, y: 31, r: 206, g: 211, b: 222 },
    { x: 306, y: 29, r: 206, g: 211, b: 222 },
    { x: 546, y: 32, r: 206, g: 211, b: 222 },
    { x: 576, y: 36, r: 173, g: 174, b: 180 },
    { x: 580, y: 40, r: 174, g: 172, b: 175 },
    { x: 587, y: 36, r: 206, g: 207, b: 213 },
    { x: 576, y: 46, r: 213, g: 211, b: 215 },
    { x: 584, y: 45, r: 212, g: 210, b: 213 },
    { x: 595, y: 55, r: 206, g: 211, b: 222 },
], { x: 578, y: 39 }, { x: 578, y: 39 });
var promotion3 = new Rerouter_1.Page('promotion3', [
    { x: 598, y: 37, r: 101, g: 103, b: 102 },
    { x: 604, y: 45, r: 71, g: 73, b: 71 },
    { x: 612, y: 53, r: 174, g: 175, b: 176 },
    { x: 617, y: 33, r: 181, g: 186, b: 189 },
], { x: 601, y: 43 }, { x: 601, y: 43 });
var teamSupportPackagePromotion = new Rerouter_1.Page('teamSupportPackagePromotion', [
    // header bg and x
    { x: 558, y: 37, r: 90, g: 190, b: 148 },
    { x: 576, y: 42, r: 148, g: 203, b: 173 },
    { x: 590, y: 45, r: 145, g: 203, b: 171 },
    // purchase button
    { x: 576, y: 277, r: 255, g: 223, b: 0 },
    { x: 480, y: 278, r: 255, g: 210, b: 0 },
    { x: 506, y: 278, r: 120, g: 76, b: 8 },
    { x: 522, y: 274, r: 249, g: 245, b: 0 },
    { x: 538, y: 277, r: 128, g: 81, b: 7 },
], { x: 583, y: 45 }, { x: 583, y: 45 });
var enterGamePromotion = new Rerouter_1.Page('enterGamePromotion', [
    // x
    { x: 277, y: 280, r: 113, g: 124, b: 147 },
    // dont show this again today
    { x: 240, y: 280, r: 10, g: 7, b: 3 },
    { x: 207, y: 281, r: 36, g: 39, b: 47 },
    // bg
    { x: 279, y: 36, r: 3, g: 3, b: 3 },
    { x: 76, y: 169, r: 0, g: 2, b: 5 },
    { x: 326, y: 337, r: 3, g: 3, b: 2 },
    { x: 571, y: 211, r: 2, g: 2, b: 5 },
], { x: 485, y: 281 }, { x: 485, y: 281 });
// a page with a close btn but taller than promotion page
var event = new Rerouter_1.Page('event', [
    { x: 20, y: 21, r: 253, g: 254, b: 254 },
    { x: 47, y: 32, r: 132, g: 134, b: 140 },
    { x: 48, y: 23, r: 246, g: 247, b: 247 },
    { x: 603, y: 19, r: 162, g: 160, b: 171 },
    { x: 612, y: 22, r: 49, g: 52, b: 49 },
    { x: 622, y: 26, r: 181, g: 178, b: 181 },
], { x: 611, y: 23 }, { x: 611, y: 23 });
var reviewApp = new Rerouter_1.Page('reviewApp', [
    { x: 106, y: 42, r: 181, g: 186, b: 189 },
    { x: 316, y: 58, r: 84, g: 90, b: 93 },
    { x: 510, y: 43, r: 168, g: 176, b: 176 },
    { x: 525, y: 57, r: 143, g: 144, b: 144 },
    { x: 305, y: 61, r: 16, g: 24, b: 24 },
    { x: 338, y: 61, r: 16, g: 24, b: 24 },
    { x: 114, y: 301, r: 222, g: 219, b: 222 },
    { x: 153, y: 297, r: 49, g: 85, b: 123 },
    { x: 178, y: 299, r: 168, g: 190, b: 224 },
    { x: 241, y: 298, r: 222, g: 219, b: 222 },
    { x: 285, y: 305, r: 49, g: 85, b: 123 },
    { x: 308, y: 302, r: 79, g: 108, b: 145 },
    { x: 365, y: 302, r: 222, g: 219, b: 222 },
    { x: 421, y: 299, r: 8, g: 114, b: 255 },
    { x: 438, y: 299, r: 47, g: 138, b: 254 },
    { x: 489, y: 301, r: 8, g: 113, b: 255 },
    { x: 528, y: 305, r: 222, g: 219, b: 222 },
], { x: 161, y: 292 }, { x: 161, y: 292 });


/***/ }),

/***/ "./src/tasks/customPage.ts":
/*!*********************************!*\
  !*** ./src/tasks/customPage.ts ***!
  \*********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CustomPage = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var CustomPage = /** @class */ (function (_super) {
    __extends(CustomPage, _super);
    function CustomPage(name, customMatch, next, back, thres) {
        var _this = _super.call(this, name, [], next, back, thres) || this;
        _this.customMatch = customMatch;
        return _this;
    }
    return CustomPage;
}(Rerouter_1.Page));
exports.CustomPage = CustomPage;


/***/ }),

/***/ "./src/tasks/index.ts":
/*!****************************!*\
  !*** ./src/tasks/index.ts ***!
  \****************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.playBattleGame = exports.playLeagueGame = exports.adReward = exports.setting = exports.receiveInbox = exports.weeklyMission = exports.stayInLogin = exports.commons = void 0;
__exportStar(__webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts"), exports);
exports.commons = __importStar(__webpack_require__(/*! ./commons */ "./src/tasks/commons/index.ts"));
exports.stayInLogin = __importStar(__webpack_require__(/*! ./stayInLogin */ "./src/tasks/stayInLogin.ts"));
exports.weeklyMission = __importStar(__webpack_require__(/*! ./weeklyMission */ "./src/tasks/weeklyMission.ts"));
exports.receiveInbox = __importStar(__webpack_require__(/*! ./receiveInbox */ "./src/tasks/receiveInbox.ts"));
exports.setting = __importStar(__webpack_require__(/*! ./setting */ "./src/tasks/setting.ts"));
exports.adReward = __importStar(__webpack_require__(/*! ./adReward */ "./src/tasks/adReward.ts"));
exports.playLeagueGame = __importStar(__webpack_require__(/*! ./playLeagueGame */ "./src/tasks/playLeagueGame.ts"));
exports.playBattleGame = __importStar(__webpack_require__(/*! ./playBattleGame */ "./src/tasks/playBattleGame.ts"));


/***/ }),

/***/ "./src/tasks/playBattleGame.ts":
/*!*************************************!*\
  !*** ./src/tasks/playBattleGame.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
function addTask() {
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.playBattleGame,
        minRoundInterval: 20 * CONSTANTS.minuteInMs,
        maxTaskDuring: 20 * CONSTANTS.minuteInMs,
        maxTaskRunTimes: 15,
        forceStop: true,
    });
}
exports.addTask = addTask;
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(battleModePanel.name),
        match: battleModePanel,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playBattleGame) {
                modules_1.rerouter.goBack(battleModePanel);
                return;
            }
            // TODO: check if play other mode too
            modules_1.rerouter.screen.tap(battleModePanelBtns.rankedBattle);
            console.log('play ranked battle');
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(rankedBattlePanel.name),
        match: rankedBattlePanel,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playBattleGame) {
                modules_1.rerouter.goBack(rankedBattlePanel);
                return;
            }
            // cannot play
            if (context.matchTimes > 5) {
                finishRound(true);
                modules_1.state.onRunning();
                return;
            }
            // check if play is available
            var isPlayDisabled = (0, utils_1.isSameColor)(image, rankedBattlePanelBtns.disabledPlayBtn);
            if (isPlayDisabled) {
                finishRound(true);
                modules_1.state.onRunning();
                console.log('ranked battle play disabled');
                return;
            }
            // check if energy is enough
            var hasEnergyLessThan10 = (0, utils_1.isSameColor)(image, rankedBattlePanelBtns.hasEnergyLessThan10);
            if (hasEnergyLessThan10) {
                finishRound(true);
                modules_1.state.onRunning();
                console.log('stop battle bc energy is less than 10');
                return;
            }
            // drink setting
            if (modules_1.Config.scriptConfig.useDrink && modules_1.state.rankGame.needSetDrink) {
                console.log('need to set drink before play game');
                modules_1.rerouter.screen.tap(rankedBattlePanelBtns.lineUp);
                modules_1.state.onRunning();
                return;
            }
            modules_1.rerouter.goNext(rankedBattlePanel);
            console.log('play ranked battle (single)');
            Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(rankedBattleWaitToRefresh.name),
        match: rankedBattleWaitToRefresh,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name === taskNames_1.TASKS.playBattleGame) {
                console.log('play rank game disabled');
                finishRound(true);
                modules_1.state.onRunning();
            }
            modules_1.rerouter.goBack(rankedBattleWaitToRefresh);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(rankedBattleGameInfo.name),
        match: rankedBattleGameInfo,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playBattleGame) {
                modules_1.rerouter.goBack(rankedBattleGameInfo);
                return;
            }
            modules_1.rerouter.goNext(rankedBattleGameInfo);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(autoGameConfirm.name),
        match: autoGameConfirm,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playBattleGame) {
                modules_1.rerouter.goBack(autoGameConfirm);
                return;
            }
            modules_1.rerouter.goNext(autoGameConfirm);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(autoGameConfirmEnd.name),
        match: autoGameConfirmEnd,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playBattleGame) {
                modules_1.rerouter.goBack(autoGameConfirmEnd);
                return;
            }
            modules_1.rerouter.goNext(autoGameConfirmEnd);
        },
    });
    [rankedBattleResult, rankedBattleWeeklyRankking].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: function (context, image, matched, finishRound) {
                modules_1.state.checkUploadSession();
                modules_1.rerouter.goNext(p);
            },
        });
    });
}
exports.addRoutes = addRoutes;
var battleModePanel = new Rerouter_1.Page('battleModePanel', [
    // nav bar right
    { x: 301, y: 5, r: 206, g: 214, b: 222 },
    { x: 313, y: 10, r: 229, g: 225, b: 229 },
    { x: 324, y: 7, r: 58, g: 97, b: 132 },
    { x: 388, y: 10, r: 238, g: 234, b: 238 },
    { x: 492, y: 10, r: 246, g: 208, b: 45 },
    { x: 486, y: 4, r: 206, g: 214, b: 222 },
    { x: 598, y: 13, r: 104, g: 126, b: 153 },
    { x: 616, y: 12, r: 206, g: 214, b: 222 },
    // bg in right part
    { x: 595, y: 107, r: 39, g: 19, b: 22 },
    { x: 629, y: 176, r: 16, g: 12, b: 16 },
    { x: 629, y: 227, r: 36, g: 22, b: 19 },
    { x: 625, y: 317, r: 26, g: 12, b: 16 },
    // player angels 27
    { x: 110, y: 89, r: 196, g: 58, b: 59 },
    { x: 13, y: 183, r: 4, g: 6, b: 4 },
    // back
    { x: 25, y: 313, r: 206, g: 210, b: 214 },
    { x: 42, y: 320, r: 206, g: 210, b: 214 },
    { x: 31, y: 333, r: 206, g: 210, b: 214 },
], { x: 41, y: 320 }, // back
{ x: 41, y: 320 });
var battleModePanelBtns = {
    rankedBattle: { x: 287, y: 160 },
    friendBattle: { x: 287, y: 245 },
    powerRanking: { x: 526, y: 160 },
    pvp: { x: 525, y: 245 },
};
var rankedBattlePanel = new Rerouter_1.Page('rankedBattlePanel', [
    // sometimes nav bar will disappear
    // bg in left will change by team
    // top right ranking bg
    { x: 491, y: 60, r: 41, g: 40, b: 49 },
    { x: 496, y: 81, r: 247, g: 243, b: 247 },
    // team record bg
    { x: 487, y: 86, r: 247, g: 243, b: 247 },
    { x: 614, y: 95, r: 247, g: 243, b: 247 },
    // bg of win/lose ratio in bottom left
    { x: 144, y: 286, r: 66, g: 61, b: 66 },
    { x: 354, y: 286, r: 66, g: 69, b: 66 },
    // // energy (ball) in bottom
    // { x: 424, y: 325, r: 51, g: 58, b: 51 },
    // { x: 428, y: 326, r: 253, g: 251, b: 253 },
    // line up , stats, power ranking btn bg
    { x: 70, y: 324, r: 100, g: 130, b: 165 },
    { x: 83, y: 324, r: 25, g: 73, b: 132 },
    { x: 159, y: 326, r: 155, g: 165, b: 181 },
    { x: 201, y: 324, r: 25, g: 73, b: 132 },
    { x: 237, y: 324, r: 203, g: 208, b: 216 },
    { x: 241, y: 327, r: 25, g: 69, b: 123 },
    // back
    { x: 42, y: 323, r: 183, g: 185, b: 176 },
], { x: 557, y: 332 }, // play ball
{ x: 41, y: 320 });
var rankedBattlePanelBtns = {
    awayGame: { x: 185, y: 65 },
    homeGame: { x: 293, y: 65 },
    lineUp: { x: 95, y: 323 },
    // BACKLOG: the panel is text-align: left, so we check the right-most part of panel
    hasEnergyLessThan10: { x: 476, y: 328, r: 49, g: 53, b: 33 },
    disabledPlayBtn: { x: 502, y: 317, r: 90, g: 73, b: 49 },
};
// click refresh btn in rankedBattlePanel
var rankedBattleWaitToRefresh = new Rerouter_1.Page('rankedBattleWaitToRefresh', [
    // title and x
    { x: 207, y: 52, r: 181, g: 186, b: 189 },
    { x: 286, y: 53, r: 127, g: 131, b: 135 },
    { x: 362, y: 57, r: 181, g: 186, b: 189 },
    { x: 396, y: 51, r: 36, g: 44, b: 52 },
    { x: 518, y: 50, r: 145, g: 146, b: 145 },
    // count down bg
    { x: 114, y: 151, r: 25, g: 85, b: 82 },
    { x: 520, y: 155, r: 25, g: 53, b: 49 },
    // other bg
    { x: 106, y: 91, r: 181, g: 186, b: 189 },
    { x: 106, y: 311, r: 214, g: 219, b: 222 },
    { x: 527, y: 300, r: 214, g: 219, b: 222 },
    { x: 528, y: 255, r: 181, g: 186, b: 189 },
    { x: 523, y: 99, r: 181, g: 186, b: 189 },
], { x: 520, y: 50 }, // x
{ x: 520, y: 50 });
// same type as screen
var rankedBattleWeeklyRankking = new Rerouter_1.Page('rankedBattleWeeklyRankking', [
    // weekly rankking
    { x: 309, y: 44, r: 54, g: 61, b: 69 },
    { x: 344, y: 54, r: 16, g: 24, b: 33 },
    { x: 374, y: 54, r: 16, g: 24, b: 33 },
    // bg
    { x: 51, y: 48, r: 222, g: 219, b: 222 },
    { x: 51, y: 313, r: 238, g: 243, b: 238 },
    { x: 606, y: 304, r: 238, g: 243, b: 238 },
    // x
    { x: 603, y: 42, r: 90, g: 85, b: 90 },
    // ok
    { x: 296, y: 307, r: 8, g: 114, b: 255 },
    { x: 315, y: 310, r: 163, g: 202, b: 251 },
    { x: 364, y: 308, r: 8, g: 113, b: 248 },
], { x: 316, y: 301 }, // ok
{ x: 316, y: 301 });
var rankedBattleResult = new Rerouter_1.Page('rankedBattleResult', [
    // bg in mid
    { x: 10, y: 94, r: 58, g: 93, b: 140 },
    { x: 8, y: 248, r: 140, g: 158, b: 181 },
    { x: 624, y: 95, r: 58, g: 94, b: 140 },
    { x: 621, y: 246, r: 140, g: 158, b: 181 },
    { x: 336, y: 98, r: 58, g: 97, b: 140 },
    { x: 345, y: 255, r: 148, g: 162, b: 181 },
    // tier/ score / rank
    { x: 49, y: 127, r: 198, g: 203, b: 214 },
    { x: 59, y: 130, r: 196, g: 205, b: 212 },
    { x: 74, y: 133, r: 216, g: 221, b: 228 },
    { x: 101, y: 130, r: 85, g: 117, b: 153 },
    { x: 126, y: 126, r: 207, g: 216, b: 227 },
    { x: 168, y: 129, r: 233, g: 235, b: 238 },
    { x: 188, y: 132, r: 222, g: 229, b: 230 },
    // ok
    { x: 284, y: 296, r: 8, g: 118, b: 255 },
    { x: 330, y: 297, r: 8, g: 117, b: 255 },
    { x: 364, y: 306, r: 8, g: 101, b: 247 },
    { x: 317, y: 297, r: 229, g: 237, b: 250 },
], { x: 316, y: 310 }, // ok
{ x: 316, y: 310 });
var rankedBattleGameInfo = new Rerouter_1.Page('rankedBattleGameInfo', [
    // right part of nav bar
    { x: 616, y: 10, r: 214, g: 210, b: 214 },
    { x: 595, y: 13, r: 74, g: 93, b: 123 },
    { x: 589, y: 15, r: 75, g: 94, b: 123 },
    { x: 567, y: 14, r: 74, g: 85, b: 90 },
    { x: 573, y: 15, r: 74, g: 85, b: 90 },
    { x: 478, y: 20, r: 214, g: 210, b: 214 },
    { x: 471, y: 11, r: 205, g: 218, b: 230 },
    { x: 473, y: 10, r: 206, g: 219, b: 230 },
    { x: 393, y: 8, r: 129, g: 127, b: 129 },
    { x: 319, y: 14, r: 197, g: 198, b: 197 },
    // game info title
    { x: 284, y: 58, r: 41, g: 45, b: 58 },
    { x: 298, y: 62, r: 110, g: 111, b: 121 },
    { x: 307, y: 63, r: 163, g: 166, b: 171 },
    { x: 320, y: 62, r: 41, g: 45, b: 58 },
    { x: 332, y: 63, r: 221, g: 221, b: 225 },
    { x: 348, y: 60, r: 41, g: 45, b: 58 },
    { x: 205, y: 62, r: 41, g: 45, b: 58 },
    { x: 473, y: 66, r: 41, g: 45, b: 58 },
    { x: 148, y: 61, r: 41, g: 45, b: 58 },
    // playball/ playing btn
    { x: 487, y: 328, r: 212, g: 188, b: 32 },
    { x: 610, y: 325, r: 214, g: 179, b: 0 },
    { x: 552, y: 339, r: 181, g: 142, b: 0 },
    // back
    { x: 26, y: 316, r: 214, g: 218, b: 214 },
    { x: 40, y: 316, r: 214, g: 219, b: 214 },
    { x: 33, y: 329, r: 211, g: 215, b: 210 },
    // bg between back and play
    { x: 138, y: 325, r: 58, g: 69, b: 49 },
    { x: 200, y: 329, r: 49, g: 61, b: 41 },
    { x: 265, y: 330, r: 52, g: 62, b: 44 },
    { x: 345, y: 333, r: 66, g: 75, b: 58 },
    { x: 402, y: 334, r: 49, g: 53, b: 33 },
], { x: 518, y: 329 }, { x: 26, y: 316 });
// a page to start auto game
var autoGameConfirm = new Rerouter_1.Page('autoGameConfirm', [
    // title
    { x: 277, y: 60, r: 180, g: 186, b: 189 },
    { x: 295, y: 58, r: 16, g: 24, b: 33 },
    { x: 308, y: 61, r: 16, g: 24, b: 33 },
    { x: 328, y: 58, r: 177, g: 183, b: 185 },
    { x: 353, y: 61, r: 177, g: 182, b: 185 },
    // bg
    { x: 108, y: 49, r: 181, g: 186, b: 189 },
    { x: 107, y: 314, r: 214, g: 219, b: 222 },
    { x: 516, y: 302, r: 214, g: 219, b: 222 },
    { x: 491, y: 171, r: 181, g: 186, b: 189 },
    // x
    { x: 510, y: 48, r: 168, g: 173, b: 176 },
    { x: 516, y: 55, r: 103, g: 105, b: 109 },
    { x: 524, y: 48, r: 71, g: 70, b: 71 },
    // no and yes
    { x: 223, y: 298, r: 41, g: 77, b: 123 },
    { x: 248, y: 298, r: 158, g: 183, b: 214 },
    { x: 388, y: 299, r: 196, g: 223, b: 255 },
    { x: 430, y: 302, r: 8, g: 113, b: 247 },
    // content to diff with confirm end (you selected)
    { x: 286, y: 180, r: 82, g: 86, b: 94 },
    { x: 304, y: 178, r: 120, g: 128, b: 136 },
    { x: 324, y: 178, r: 95, g: 103, b: 112 },
], { x: 390, y: 304 }, // yes, start auto play
{ x: 237, y: 304 } // no, not start auto play
);
// a page to end auto game
var autoGameConfirmEnd = new Rerouter_1.Page('autoGameConfirmEnd', [
    // title
    { x: 277, y: 60, r: 180, g: 186, b: 189 },
    { x: 295, y: 58, r: 16, g: 24, b: 33 },
    { x: 308, y: 61, r: 16, g: 24, b: 33 },
    { x: 328, y: 58, r: 177, g: 183, b: 185 },
    { x: 353, y: 61, r: 177, g: 182, b: 185 },
    // bg
    { x: 108, y: 49, r: 181, g: 186, b: 189 },
    { x: 107, y: 314, r: 214, g: 219, b: 222 },
    { x: 516, y: 302, r: 214, g: 219, b: 222 },
    { x: 491, y: 171, r: 181, g: 186, b: 189 },
    // x
    { x: 510, y: 48, r: 168, g: 173, b: 176 },
    { x: 516, y: 55, r: 103, g: 105, b: 109 },
    { x: 524, y: 48, r: 71, g: 70, b: 71 },
    // no and yes
    { x: 223, y: 298, r: 41, g: 77, b: 123 },
    { x: 248, y: 298, r: 158, g: 183, b: 214 },
    { x: 388, y: 299, r: 196, g: 223, b: 255 },
    { x: 430, y: 302, r: 8, g: 113, b: 247 },
    // TODO: use end game content
], { x: 237, y: 304 }, // no, continue auto play
{ x: 390, y: 304 } // yes, end auto play
);


/***/ }),

/***/ "./src/tasks/playLeagueGame.ts":
/*!*************************************!*\
  !*** ./src/tasks/playLeagueGame.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var customPage_1 = __webpack_require__(/*! ./customPage */ "./src/tasks/customPage.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
function addTask() {
    console.log('addTask playLeagueGame');
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.playLeagueGame,
        // maxTaskRunTimes: 2,
        maxTaskDuring: 3 * CONSTANTS.hourInMs,
        beforeRoute: function (task) {
            console.log("needResetProgress before play: ".concat(modules_1.state.leagueGame.needResetProgress));
            if (modules_1.state.leagueGame.needResetProgress) {
                return 'skipRouteLoop';
            }
        },
        forceStop: true,
    });
    // FIXME: this should only run when needed
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.settingResetLeagueProgress,
        minRoundInterval: 1 * CONSTANTS.minuteInMs,
        maxTaskDuring: 10 * CONSTANTS.minuteInMs,
        beforeRoute: function (task) {
            console.log("needResetProgress: ".concat(modules_1.state.leagueGame.needResetProgress));
            if (!modules_1.state.leagueGame.needResetProgress) {
                return 'skipRouteLoop';
            }
        },
        forceStop: true,
    });
}
exports.addTask = addTask;
function addRoutes() {
    // enter game info
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueModePanel.name),
        match: leagueModePanel,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            var task = context.task.name;
            switch (task) {
                case taskNames_1.TASKS.playLeagueGame:
                    // don't play new seasons unless reset progress
                    if (modules_1.state.leagueGame.needResetProgress) {
                        console.log('need to reset league progress before play game');
                        modules_1.state.onRunning();
                        finishRound(true);
                    }
                    // drink setting
                    else if (modules_1.Config.scriptConfig.useDrink && modules_1.state.leagueGame.needSetDrink) {
                        console.log('need to set drink before play game');
                        modules_1.rerouter.screen.tap(leagueModePanelBtn.lineUp);
                        modules_1.state.onRunning();
                    }
                    // check if can play league mode
                    else {
                        // can play league mode
                        modules_1.state.leagueGame.tryEnterGameCnts++;
                        // avoid to click btn too many time for trigger next page immediately
                        if (context.matchTimes < 2) {
                            modules_1.rerouter.goNext(leagueModePanel);
                        }
                        Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                    }
                    break;
                case taskNames_1.TASKS.settingResetLeagueProgress:
                    if (modules_1.state.leagueGame.needResetProgress) {
                        modules_1.rerouter.screen.tap(leagueModePanelBtn.leagueReset);
                        console.log('go to leagueResetDialog');
                    }
                    else {
                        console.log('no need to reset league progress');
                        modules_1.state.onRunning();
                        finishRound(true);
                    }
                    break;
                default:
                    modules_1.rerouter.goBack(leagueModePanel);
                    return;
            }
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueModeGameInfo.name),
        match: leagueModeGameInfo,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playLeagueGame) {
                modules_1.rerouter.goBack(leagueModeGameInfo);
                return;
            }
            console.log('check energy');
            var emptyEnergy = { x: 551, y: 281, r: 3, g: 124, b: 213 };
            var hasEnergy0 = (0, utils_1.isSameColor)(image, emptyEnergy, 0.9);
            if (hasEnergy0) {
                console.log('no energy');
                finishRound(true);
                modules_1.state.onRunning();
                return;
            }
            var digit1 = { x: 561, y: 278, r: 169, g: 172, b: 179 };
            var hasEnergy10 = (0, utils_1.isSameColor)(image, digit1);
            console.log('has10Energy:', hasEnergy10);
            // use quick play when has 10+ energy,
            // and slow play when has 10- energy
            var quickPlayOnBtn = { x: 37, y: 284, r: 33, g: 255, b: 140 };
            var isQuickPlayOn = (0, utils_1.isSameColor)(image, quickPlayOnBtn);
            if (hasEnergy10 && !isQuickPlayOn) {
                modules_1.rerouter.screen.tap(quickPlayOnBtn); // select quick play
                console.log('turn on quick play');
                Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
            }
            if (!hasEnergy10 && isQuickPlayOn) {
                modules_1.rerouter.screen.tap(quickPlayOnBtn); // cancel quick play
                console.log('turn off quick play');
                Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
            }
            modules_1.rerouter.goNext(leagueModeGameInfo); // play ball
            console.log("play league mode game ".concat(hasEnergy10 ? '(quick mode)' : ''));
            Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
        },
    });
    // select things
    modules_1.rerouter.addRoute({
        path: "/".concat(selectPlayRoleGroups.name),
        match: selectPlayRoleGroups,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle select play role');
            modules_1.rerouter.goNext(selectPlayRoleGroups);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(selectYear.name),
        match: selectYear,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle select year page');
            handleSelectYear();
            // will go to leagueResetConfirm if it's not triggered by normal season end
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(selectSeasonMode.name),
        match: selectSeasonMode,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle select season page');
            modules_1.rerouter.goNext(selectSeasonMode);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            modules_1.rerouter.screen.tap({ x: 568, y: 333 }); // normal mode
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            // TODO split page
            modules_1.rerouter.screen.tap({ x: 332, y: 301 }); // next season
            Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(selectLeagueGameAmount.name),
        match: selectLeagueGameAmount,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle select league game amount page');
            // use config user setted to select which they want to play
            // TODO: handle the half, quarter, full has 2 next page
            switch (modules_1.Config.scriptConfig.leagueSeasonMode) {
                case 'full':
                    console.log('select full league');
                    modules_1.rerouter.screen.tap(selectLeagueGameAmountBtns.full);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                    modules_1.rerouter.screen.tap({ x: 564, y: 328 }); // go next
                    break;
                case 'half':
                    console.log('select 1/2 league');
                    modules_1.rerouter.screen.tap(selectLeagueGameAmountBtns.half);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                    modules_1.rerouter.screen.tap({ x: 564, y: 328 }); // go next
                    // ? will go to ok / next pages
                    break;
                case 'quarter':
                    console.log('select 1/4 league');
                    modules_1.rerouter.screen.tap(selectLeagueGameAmountBtns.quarter);
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
                    modules_1.rerouter.screen.tap({ x: 564, y: 328 }); // go next
                    // ? will go to ok / next pages
                    break;
                case 'postSeason':
                    console.log('select postSeason');
                    modules_1.rerouter.screen.tap(selectLeagueGameAmountBtns.post);
                    // ? will go to ok / next pages
                    break;
            }
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            modules_1.rerouter.screen.tap({ x: 564, y: 328 }); // go next
            Rerouter_1.Utils.sleep(CONSTANTS.sleepLong);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(selectNormalMasterLeagueMode.name),
        match: selectNormalMasterLeagueMode,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle select normal / master mode');
            // if cannot select master mode, at least select normal mode
            modules_1.rerouter.screen.tap(selectNormalMasterLeagueModeBtns.normal);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            modules_1.rerouter.screen.tap(selectNormalMasterLeagueModeBtns.master);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            // whether choose any mode, will jump to proceed page
            modules_1.rerouter.goNext(selectNormalMasterLeagueMode);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueResetConfirm.name),
        match: leagueResetConfirm,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.settingResetLeagueProgress) {
                // not reset
                console.log('not reset league progress');
                modules_1.rerouter.goBack(leagueResetConfirm);
                return;
            }
            console.log('reset league progress');
            modules_1.rerouter.goNext(leagueResetConfirm);
            modules_1.state.onFinishResetLeagueProgress();
            finishRound(true);
            return;
        },
    });
    // on play (quick play is in general)
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueOnPlayAutoOff.name),
        customMatch: leagueOnPlayAutoOff.customMatch,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.playLeagueGame) {
                // open pause panel
                keycode('KEYCODE_BACK', 100);
                // rerouter.goBack(leagueOnPlayAutoOff);
                return;
            }
            // success enter game
            modules_1.state.leagueGame.tryEnterGameCnts = 0;
            modules_1.state.leagueGame.needSetDrink = true; // reset for next drink
            console.log('start turn on auto play');
            var isAutoOn = false;
            for (var remainClick = 6; remainClick > 0 && !isAutoOn; remainClick--) {
                modules_1.rerouter.goNext(leagueOnPlayAutoOff);
                Rerouter_1.Utils.sleep(CONSTANTS.sleepShort / 2);
                var screenshot = getScreenshot();
                isAutoOn = modules_1.rerouter.isPageMatchImage(leagueOnPlayAutoOn, screenshot);
                releaseImage(screenshot);
            }
            if (isAutoOn) {
                console.log('turn on auto play done');
                if (modules_1.Config.scriptConfig.hasCoolFeature) {
                    console.log('turn on power save play');
                    modules_1.rerouter.goNext(leagueOnPlayAutoOn);
                    return;
                }
                return;
            }
            else {
                console.log('turn on auto play failed; retry in next match');
            }
        },
        debug: true,
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueOnPlayAutoOn.name),
        customMatch: leagueOnPlayAutoOn.customMatch,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            // page will be stopped here in any tasks
            // need to handle immediately if match
            if (modules_1.rerouter.isPageMatchImage(leagueOnPlayPowerSaveOffStopped, image)) {
                console.log('handle auto on but stopped page');
                modules_1.rerouter.goNext(leagueOnPlayPowerSaveOffStopped);
            }
            if (context.task.name !== taskNames_1.TASKS.playLeagueGame) {
                // turn off autoplay to return
                keycode('KEYCODE_BACK', 100);
                return;
            }
            // success enter game
            modules_1.state.leagueGame.tryEnterGameCnts = 0;
            // TODO: handle quick switch to auto play off if was stopped
            if (modules_1.Config.scriptConfig.hasCoolFeature) {
                console.log('turn on power save play');
                modules_1.rerouter.goNext(leagueOnPlayAutoOn);
                return;
            }
            modules_1.rerouter.screen.tap({ x: 0, y: 0 });
            console.log('tap');
            modules_1.state.onRunning();
        },
        debug: true,
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(leagueOnPlayPause.name),
        match: leagueOnPlayPause,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle on play pause panel');
            if (context.task.name !== taskNames_1.TASKS.playLeagueGame) {
                // open pause panel
                modules_1.rerouter.goBack(leagueOnPlayPause);
                return;
            }
            // continue play
            keycode('KEYCODE_BACK', 100);
            console.log('tap back to stay in game');
        },
    });
    // game reward pages
    modules_1.rerouter.addRoute({
        path: "/".concat(selectRewardPlayer.name),
        match: selectRewardPlayer,
        action: function (context, image, matched, finishRound) {
            var _a;
            modules_1.state.checkUploadSession();
            console.log('handleSelectRewardPlayer');
            if (modules_1.Config.scriptConfig.isCloud) {
                // temporary save image for debug
                var saveTmpImagePath = "".concat(CONSTANTS.saveImageRoot, "/selectRewardPlayer_").concat(modules_1.Config.scriptConfig.licenseId, ".png");
                saveImage(image, saveTmpImagePath);
                console.log('save selectRewardPlayer', saveTmpImagePath);
            }
            // prev select mech
            var bestCardRank = -1;
            var bestCardPos = selectRewardPlayerBtns[0];
            for (var _i = 0, selectRewardPlayerBtns_1 = selectRewardPlayerBtns; _i < selectRewardPlayerBtns_1.length; _i++) {
                var pos = selectRewardPlayerBtns_1[_i];
                var rgb = getImageColor(image, pos.x, pos.y);
                var k = rgb.r + '-' + rgb.g + '-' + rgb.b;
                console.log(pos.x, pos.y, k);
                // select if not in basic type
                var rank = (_a = playerCardColorToRank[k]) !== null && _a !== void 0 ? _a : 5;
                if (rank > bestCardRank) {
                    bestCardRank = rank;
                    bestCardPos = pos;
                }
            }
            // new select mech
            for (var p = 0; p < 3; p++) {
                var pos = selectRewardPlayerBtns[p];
                var rgb = getImageColor(image, pos.x, pos.y);
                var k = rgb.r + '-' + rgb.g + '-' + rgb.b;
                for (var rank = 1; rank <= 5; rank++) {
                    var candidates = playerCardColorToRankV2[rank];
                    for (var _b = 0, candidates_1 = candidates; _b < candidates_1.length; _b++) {
                        var c = candidates_1[_b];
                        if ((0, utils_1.isSameColor)(image, __assign(__assign({}, pos), c), 0.9)) {
                            console.log('new select mech', p, k, rank);
                        }
                    }
                }
            }
            modules_1.rerouter.screen.tap(bestCardPos);
            console.log('select', bestCardPos.x, bestCardPos.y);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
            modules_1.rerouter.goNext(selectRewardPlayer);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
        },
    });
    // other
    modules_1.rerouter.addRoute({
        path: "/".concat(endSeasonProceed.name),
        match: endSeasonProceed,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handle end season proceed');
            if (modules_1.Config.scriptConfig.isDev) {
                console.log('dev not do thing for debug');
                return;
            }
            modules_1.rerouter.screen.tap({ x: 182, y: 178 }); // tap new season of left
            // will go to endSeasonProceedSelected
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(mvp.name),
        match: mvp,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            console.log('handleMvpPage');
            var okBtn = { x: 568, y: 320, r: 52, g: 120, b: 210 };
            var isOkBtnOnScreen = modules_1.rerouter.screen.isSameColor(okBtn);
            // ok button still on the screen
            for (var maxOkButtonRemain = 10; isOkBtnOnScreen && maxOkButtonRemain > 0; maxOkButtonRemain--) {
                modules_1.rerouter.goNext(mvp); // ok
                Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
                isOkBtnOnScreen = modules_1.rerouter.screen.isSameColor(okBtn);
            }
            // reward bonus player popup
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            modules_1.rerouter.screen.tap({ x: 322, y: 309 }); // click next
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
        },
    });
    [
        playerRecommendation,
        newSeason,
        endSeasonProceedSelected,
        selectNormalMasterLeagueModeProceed,
        playerGrowthComplete,
        pitcherOfTheMonth,
        gameResultWorldChampion,
        gameReward,
        leagueRewardAchievementGrade,
        bestPositionAwardBonusGroup,
        bonusGrantedByTeamRecordOld,
        postSeasonAwardBonus,
        leagueOnPlayNextBatter,
        mvpDisplay,
        bonusGrantedByTeamRecord,
    ].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'goNext',
        });
    });
}
exports.addRoutes = addRoutes;
function handleSelectYear() {
    var _a = modules_1.Config.scriptConfig, targetYear = _a.leagueYear, leagueMode = _a.leagueMode;
    console.log("handleSelectYear start (year: ".concat(targetYear, " leagueMode: ").concat(leagueMode, ")"));
    if (!modules_1.Config.scriptConfig.isProduction) {
        console.log('dev mode test select option');
        // move & select first option
        var totalYearCnt = Object.keys(selectYearMoveStepMapToTarget).length;
        var optionPerPage = 5;
        for (var i = 0; i <= Math.ceil(totalYearCnt / optionPerPage); i++) {
            modules_1.rerouter.screen.swipe(selectYearBtns.goUpStart, selectYearBtns.goUpEnd, 6);
            sleep(CONSTANTS.sleepShort);
        }
        modules_1.rerouter.screen.tap(selectYearOptions[1]);
        sleep(CONSTANTS.sleepShort);
        var moveDownSteps = selectYearTargetToMoveStepMap[leagueMode][targetYear];
        console.log('moveDownSteps', selectYearTargetToMoveStepMap, moveDownSteps);
        var canSelectOption = function (optionIdx) {
            modules_1.rerouter.screen.tap(selectYearOptions[optionIdx]);
            sleep(CONSTANTS.sleepShort);
            var screenshot = getScreenshot();
            var isEnabled = (0, utils_1.isSameColor)(screenshot, selectYearBtns.enabledSubmit);
            releaseImage(screenshot);
            return isEnabled;
        };
        // go to target option by swipe up (page go down)
        var curMoveSteps = 0;
        for (var i = 0; i < moveDownSteps; i++) {
            // check if still can go down
            if (!canSelectOption(2)) {
                console.log('cannot go down anymore');
                break;
            }
            modules_1.rerouter.screen.swipe(selectYearBtns.goDownStart, selectYearBtns.goDownEnd, 6);
            curMoveSteps++;
        }
        modules_1.rerouter.screen.tap(selectYearOptions[1]);
        sleep(CONSTANTS.sleepShort);
        var _b = selectYearMoveStepMapToTarget[curMoveSteps], selectedMode = _b.mode, selectedYear = _b.year;
        console.log("target: ".concat(leagueMode, " ").concat(targetYear, ", select: ").concat(selectedMode, " ").concat(selectedYear));
    }
    // submit changes
    modules_1.rerouter.screen.tap(selectYearBtns.enabledSubmit);
    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
    console.log("handleSelectYear done");
}
// * LeagueModes
var leagueModePanel = new Rerouter_1.Page('leagueModePanel', [
    // navi bar
    { x: 300, y: 12, r: 214, g: 214, b: 214 },
    { x: 316, y: 9, r: 238, g: 234, b: 238 },
    { x: 320, y: 15, r: 144, g: 148, b: 149 },
    { x: 388, y: 10, r: 238, g: 234, b: 238 },
    { x: 493, y: 11, r: 244, g: 204, b: 39 },
    { x: 606, y: 14, r: 74, g: 93, b: 123 },
    { x: 631, y: 15, r: 214, g: 219, b: 214 },
    // some people is + some is 🔍, the "p" icon has slightly  different color
    // { x: 571, y: 14, r: 147, g: 161, b: 171 },
    // { x: 385, y: 9, r: 64, g: 67, b: 71 },
    // line up btn
    { x: 77, y: 320, r: 252, g: 253, b: 253 },
    { x: 109, y: 321, r: 106, g: 137, b: 166 },
    { x: 127, y: 321, r: 176, g: 199, b: 216 },
    // stats btn
    { x: 169, y: 324, r: 116, g: 137, b: 163 },
    { x: 201, y: 324, r: 106, g: 136, b: 166 },
    { x: 218, y: 325, r: 207, g: 224, b: 237 },
    // league reset btn
    { x: 254, y: 320, r: 248, g: 248, b: 248 },
    { x: 284, y: 317, r: 197, g: 167, b: 156 },
    { x: 295, y: 329, r: 179, g: 153, b: 145 },
    { x: 309, y: 325, r: 99, g: 57, b: 41 },
], { x: 616, y: 336 }, { x: 41, y: 320 });
var leagueModePanelBtn = {
    leagueReset: { x: 254, y: 320 },
    lineUp: { x: 111, y: 321 },
};
var leagueModeGameInfo = new Rerouter_1.Page('leagueModeGameInfo', [
    // game info title
    { x: 280, y: 56, r: 41, g: 49, b: 58 },
    { x: 293, y: 62, r: 255, g: 255, b: 255 },
    { x: 305, y: 62, r: 75, g: 79, b: 90 },
    { x: 309, y: 62, r: 211, g: 212, b: 215 },
    { x: 317, y: 62, r: 203, g: 204, b: 205 },
    { x: 325, y: 63, r: 205, g: 206, b: 209 },
    { x: 334, y: 63, r: 140, g: 142, b: 148 },
    { x: 341, y: 65, r: 222, g: 224, b: 225 },
    { x: 354, y: 63, r: 41, g: 45, b: 58 },
    // gray color besides "TEAM RANKING"
    { x: 244, y: 185, r: 214, g: 223, b: 230 },
    // green reward item btn not shining part
    // { x: 442, y: 271, r: 49, g: 166, b: 90 },
    // { x: 433, y: 285, r: 49, g: 146, b: 82 },
    // { x: 326, y: 270, r: 49, g: 170, b: 90 },
    // { x: 327, y: 283, r: 49, g: 161, b: 90 },
    // energy ball
    { x: 527, y: 277, r: 250, g: 233, b: 232 },
    { x: 530, y: 279, r: 241, g: 242, b: 240 },
], { x: 546, y: 325 }, // playBall
{ x: 41, y: 320 });
var playerRecommendation = new Rerouter_1.Page('playerRecommendation', [
    { x: 80, y: 21, r: 8, g: 89, b: 164 },
    { x: 311, y: 53, r: 94, g: 135, b: 173 },
    { x: 382, y: 52, r: 152, g: 177, b: 200 },
    { x: 555, y: 12, r: 135, g: 179, b: 220 },
    { x: 609, y: 13, r: 0, g: 28, b: 66 },
    { x: 616, y: 15, r: 247, g: 248, b: 249 },
    { x: 629, y: 9, r: 189, g: 12, b: 58 },
    { x: 395, y: 52, r: 180, g: 200, b: 219 },
    { x: 350, y: 51, r: 155, g: 182, b: 201 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
// normal game play start
var selectPlayRoleBtns = {
    playOffenseOnly: { x: 128, y: 279 },
    playAll: { x: 317, y: 282 },
    playDeffenseOnly: { x: 506, y: 281 },
};
var selectPlayRoleCommon = [
    // play offense only icon
    { x: 70, y: 298, r: 255, g: 255, b: 255 },
    // play offense only text
    { x: 117, y: 304, r: 255, g: 255, b: 255 },
    { x: 137, y: 300, r: 255, g: 255, b: 255 },
    { x: 137, y: 301, r: 255, g: 255, b: 255 },
    { x: 137, y: 302, r: 255, g: 255, b: 255 },
    { x: 137, y: 303, r: 255, g: 255, b: 255 },
    { x: 137, y: 304, r: 255, g: 255, b: 255 },
    { x: 161, y: 301, r: 255, g: 255, b: 255 },
    { x: 187, y: 300, r: 255, g: 255, b: 255 },
    { x: 187, y: 301, r: 255, g: 255, b: 255 },
    { x: 187, y: 302, r: 255, g: 255, b: 255 },
    { x: 187, y: 303, r: 255, g: 255, b: 255 },
    { x: 187, y: 304, r: 255, g: 255, b: 255 },
    { x: 187, y: 305, r: 255, g: 255, b: 255 },
    { x: 196, y: 300, r: 255, g: 255, b: 255 },
    { x: 196, y: 301, r: 255, g: 255, b: 255 },
    { x: 199, y: 302, r: 255, g: 255, b: 255 },
    { x: 199, y: 303, r: 255, g: 255, b: 255 },
    { x: 199, y: 304, r: 255, g: 255, b: 255 },
    // play defense only icon
    { x: 512, y: 302, r: 255, g: 255, b: 255 },
    { x: 519, y: 301, r: 255, g: 255, b: 255 },
    { x: 522, y: 303, r: 255, g: 255, b: 255 },
    { x: 522, y: 304, r: 255, g: 255, b: 255 },
    { x: 554, y: 301, r: 255, g: 255, b: 255 },
    { x: 557, y: 303, r: 255, g: 255, b: 255 },
    { x: 557, y: 304, r: 255, g: 255, b: 255 },
];
var selectPlayRoleSands = new Rerouter_1.Page('selectPlayRoleSands', __spreadArray(__spreadArray([], selectPlayRoleCommon, true), [
    // sands in left
    { x: 28, y: 334, r: 165, g: 118, b: 91 },
    // sands in right
    { x: 618, y: 299, r: 165, g: 118, b: 91 },
], false));
var selectPlayRoleGrass = new Rerouter_1.Page('selectPlayRoleGrass', __spreadArray(__spreadArray([], selectPlayRoleCommon, true), [
    // grass in left
    { x: 25, y: 321, r: 109, g: 132, b: 83 },
    // grass in right
    { x: 611, y: 311, r: 109, g: 132, b: 83 },
], false));
var selectPlayRoleGroups = new Rerouter_1.GroupPage('selectPlayRoleGroups', [selectPlayRoleSands, selectPlayRoleGrass], selectPlayRoleBtns.playAll, selectPlayRoleBtns.playAll);
// sometimes happened when restarting a continued game
// or cancel auto play during playing
var leagueOnPlayNextBatter = new Rerouter_1.Page('leagueOnPlayNextBatter', [
    // next batter bg
    { x: 1, y: 304, r: 247, g: 246, b: 247 },
    { x: 1, y: 349, r: 247, g: 247, b: 247 },
    { x: 100, y: 346, r: 247, g: 247, b: 247 },
    { x: 98, y: 304, r: 247, g: 247, b: 247 },
    // fast processing btn
    { x: 515, y: 308, r: 15, g: 121, b: 248 },
    { x: 539, y: 310, r: 254, g: 254, b: 255 },
    { x: 562, y: 310, r: 185, g: 208, b: 242 },
    { x: 580, y: 313, r: 26, g: 111, b: 229 },
    { x: 597, y: 313, r: 11, g: 110, b: 244 },
    { x: 611, y: 314, r: 255, g: 255, b: 255 },
    { x: 621, y: 314, r: 8, g: 109, b: 247 },
    // continue playing btn
    { x: 513, y: 341, r: 8, g: 109, b: 247 },
    { x: 527, y: 343, r: 111, g: 164, b: 247 },
    { x: 565, y: 335, r: 8, g: 125, b: 255 },
    { x: 584, y: 339, r: 8, g: 117, b: 255 },
    { x: 603, y: 337, r: 20, g: 127, b: 255 },
    { x: 620, y: 340, r: 8, g: 114, b: 247 },
], { x: 620, y: 338 }, // continue playing
{ x: 620, y: 338 });
// auto play on, power save off
var leagueOnPlayPowerSaveOff = new Rerouter_1.Page('leagueOnPlayPowerSaveOff', [
    // battery
    { x: 486, y: 13, r: 255, g: 255, b: 255 },
    { x: 492, y: 16, r: 101, g: 103, b: 101 },
    { x: 488, y: 22, r: 210, g: 208, b: 210 },
    { x: 481, y: 27, r: 102, g: 101, b: 101 },
    { x: 489, y: 29, r: 197, g: 197, b: 197 },
], { x: 485, y: 21 }, // turn on power save
{ x: 552, y: 21 } // turn off auto play
);
// same as gLeagueOnPlayPowerSaveOff, but is stopped
// need to turn on autoplay
var leagueOnPlayPowerSaveOffStopped = new Rerouter_1.Page('leagueOnPlayPowerSaveOff', [
    // battery
    { x: 486, y: 13, r: 255, g: 255, b: 255 },
    { x: 492, y: 16, r: 101, g: 103, b: 101 },
    { x: 488, y: 22, r: 210, g: 208, b: 210 },
    { x: 481, y: 27, r: 102, g: 101, b: 101 },
    { x: 489, y: 29, r: 197, g: 197, b: 197 },
    // disabled autoplay text
    { x: 524, y: 23, r: 91, g: 110, b: 158 },
    { x: 530, y: 20, r: 140, g: 146, b: 152 },
    { x: 533, y: 24, r: 93, g: 106, b: 143 },
    { x: 550, y: 25, r: 85, g: 105, b: 153 },
    { x: 552, y: 21, r: 147, g: 153, b: 156 },
    { x: 557, y: 20, r: 148, g: 154, b: 156 },
    { x: 566, y: 24, r: 99, g: 121, b: 173 },
    { x: 575, y: 18, r: 107, g: 121, b: 173 },
    { x: 584, y: 19, r: 97, g: 122, b: 169 },
    { x: 589, y: 22, r: 118, g: 127, b: 149 },
    { x: 595, y: 18, r: 141, g: 150, b: 156 },
    { x: 606, y: 23, r: 74, g: 93, b: 132 },
], { x: 0, y: 0 }, // turn on auto play
{ x: 0, y: 0 } // turn on auto play
);
// don't do any thing, just avoid to enter unknown
var leagueOnPlayPowerSaveOffMid = new Rerouter_1.Page('leagueOnPlayPowerSaveOff', [
    // battery
    { x: 486, y: 13, r: 255, g: 255, b: 255 },
    // dialog on
    { x: 604, y: 47, r: 170, g: 171, b: 170 },
    { x: 607, y: 49, r: 246, g: 246, b: 246 },
    { x: 611, y: 54, r: 213, g: 210, b: 213 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var leagueOnPlayPowerSaveOffMid1 = new Rerouter_1.Page('leagueOnPlayPowerSaveOff', [
    // battery
    { x: 486, y: 13, r: 255, g: 255, b: 255 },
    // dialog off
    { x: 605, y: 50, r: 95, g: 99, b: 97 },
    { x: 602, y: 51, r: 109, g: 114, b: 116 },
    { x: 603, y: 49, r: 131, g: 133, b: 131 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var leagueOnPlayPowerSaveOffGroups = new Rerouter_1.GroupPage('leagueOnPlayPowerSaveOffGroup', [
    leagueOnPlayPowerSaveOff,
    leagueOnPlayPowerSaveOffStopped,
    leagueOnPlayPowerSaveOffMid,
    leagueOnPlayPowerSaveOffMid1,
]);
// when playing, press back
// TODO: update photo in chart
var leagueOnPlayPause = new Rerouter_1.Page('leagueOnPlayPause', [
    // continue button
    { x: 85, y: 146, r: 255, g: 255, b: 255 },
    { x: 100, y: 164, r: 255, g: 255, b: 255 },
    { x: 96, y: 138, r: 82, g: 93, b: 107 },
    // mlb logo
    { x: 569, y: 287, r: 215, g: 142, b: 160 },
    { x: 563, y: 292, r: 255, g: 255, b: 255 },
    { x: 553, y: 291, r: 2, g: 28, b: 66 },
    // p bg
    { x: 563, y: 336, r: 25, g: 45, b: 58 },
], { x: 92, y: 155 }, // continue game
{ x: 531, y: 155 } // leave
);
var gameResultWorldChampion = new Rerouter_1.Page('gameResultWorldChampion', [
    { x: 252, y: 22, r: 57, g: 67, b: 74 },
    { x: 323, y: 42, r: 116, g: 109, b: 83 },
    { x: 350, y: 73, r: 66, g: 91, b: 96 },
    { x: 49, y: 331, r: 16, g: 32, b: 41 },
    { x: 209, y: 322, r: 8, g: 20, b: 24 },
    { x: 294, y: 326, r: 208, g: 208, b: 212 },
    { x: 400, y: 323, r: 192, g: 190, b: 192 },
    { x: 439, y: 323, r: 85, g: 98, b: 100 },
    { x: 578, y: 195, r: 16, g: 36, b: 41 },
    { x: 316, y: 167, r: 212, g: 210, b: 212 },
    { x: 338, y: 173, r: 65, g: 71, b: 71 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
// TODO update photo
var gameReward = new Rerouter_1.Page('gameReward', [
    { x: 24, y: 336, r: 16, g: 32, b: 41 },
    { x: 577, y: 26, r: 0, g: 4, b: 0 },
    { x: 601, y: 335, r: 16, g: 32, b: 41 },
    { x: 411, y: 268, r: 8, g: 114, b: 255 },
    { x: 434, y: 270, r: 66, g: 144, b: 252 },
    { x: 487, y: 274, r: 0, g: 102, b: 247 },
    { x: 497, y: 122, r: 255, g: 255, b: 255 },
    { x: 461, y: 193, r: 42, g: 58, b: 58 },
], { x: 412, y: 271 }, { x: 412, y: 271 });
var bestPositionAwardBonus = new Rerouter_1.Page('bestPositionAwardBonus', [
    // bg
    { x: 141, y: 21, r: 0, g: 81, b: 148 },
    { x: 609, y: 26, r: 0, g: 81, b: 148 },
    { x: 26, y: 335, r: 16, g: 24, b: 24 },
    { x: 626, y: 339, r: 16, g: 24, b: 24 },
    { x: 4, y: 148, r: 8, g: 24, b: 33 },
    { x: 628, y: 140, r: 16, g: 32, b: 49 },
    // team 1 being selected
    { x: 173, y: 18, r: 0, g: 117, b: 255 },
    { x: 176, y: 30, r: 158, g: 173, b: 199 },
    { x: 184, y: 36, r: 8, g: 105, b: 255 },
    // team 2 not being selected
    { x: 328, y: 27, r: 49, g: 85, b: 123 },
    { x: 337, y: 31, r: 16, g: 48, b: 82 },
    { x: 343, y: 37, r: 41, g: 77, b: 115 },
    // ok
    { x: 547, y: 320, r: 0, g: 113, b: 248 },
    { x: 566, y: 321, r: 255, g: 255, b: 255 },
    { x: 577, y: 324, r: 228, g: 239, b: 248 },
    { x: 605, y: 325, r: 8, g: 109, b: 247 },
    { x: 611, y: 316, r: 0, g: 117, b: 255 },
], { x: 570, y: 325 }, { x: 570, y: 325 });
var bestPositionAwardBonus2 = new Rerouter_1.Page('bestPositionAwardBonus', [
    // bg
    { x: 141, y: 21, r: 0, g: 81, b: 148 },
    { x: 609, y: 26, r: 0, g: 81, b: 148 },
    { x: 26, y: 335, r: 16, g: 24, b: 24 },
    { x: 626, y: 339, r: 16, g: 24, b: 24 },
    { x: 4, y: 148, r: 8, g: 24, b: 33 },
    { x: 628, y: 140, r: 16, g: 32, b: 49 },
    // team 1 not being selected
    { x: 189, y: 22, r: 49, g: 85, b: 123 },
    { x: 178, y: 34, r: 8, g: 48, b: 82 },
    { x: 169, y: 39, r: 41, g: 77, b: 115 },
    // team 2 being selected
    { x: 343, y: 21, r: 2, g: 117, b: 255 },
    { x: 337, y: 31, r: 163, g: 170, b: 197 },
    { x: 331, y: 40, r: 8, g: 97, b: 255 },
    // ok
    { x: 547, y: 320, r: 0, g: 113, b: 248 },
    { x: 566, y: 321, r: 255, g: 255, b: 255 },
    { x: 577, y: 324, r: 228, g: 239, b: 248 },
    { x: 605, y: 325, r: 8, g: 109, b: 247 },
    { x: 611, y: 316, r: 0, g: 117, b: 255 },
], { x: 570, y: 325 }, { x: 570, y: 325 });
// seems not used anymore
var bestPositionAwardBonusGroup = new Rerouter_1.GroupPage('bestPositionAwardBonus', [bestPositionAwardBonus, bestPositionAwardBonus2], bestPositionAwardBonus.next /* next */);
// seems not used anymore
// next page of gBestPositionAwardBonus
var bonusGrantedByTeamRecordOld = new Rerouter_1.Page('bonusGrantedByTeamRecordOld', [
    // table bg
    { x: 38, y: 75, r: 49, g: 69, b: 107 },
    { x: 600, y: 73, r: 49, g: 69, b: 107 },
    { x: 601, y: 289, r: 0, g: 8, b: 16 },
    { x: 28, y: 285, r: 8, g: 12, b: 16 },
    // title
    { x: 176, y: 76, r: 49, g: 68, b: 107 },
    { x: 217, y: 77, r: 128, g: 136, b: 159 },
    { x: 255, y: 76, r: 131, g: 137, b: 157 },
    { x: 278, y: 76, r: 78, g: 95, b: 128 },
    { x: 324, y: 77, r: 113, g: 122, b: 150 },
    { x: 362, y: 75, r: 46, g: 66, b: 104 },
    { x: 405, y: 77, r: 178, g: 185, b: 206 },
    { x: 425, y: 72, r: 184, g: 187, b: 206 },
    { x: 439, y: 77, r: 53, g: 70, b: 110 },
    // ok
    { x: 547, y: 320, r: 0, g: 113, b: 248 },
    { x: 566, y: 321, r: 255, g: 255, b: 255 },
    { x: 577, y: 324, r: 228, g: 239, b: 248 },
    { x: 605, y: 325, r: 8, g: 109, b: 247 },
    { x: 611, y: 316, r: 0, g: 117, b: 255 },
], { x: 570, y: 325 }, { x: 570, y: 325 });
var postSeasonAwardBonus = new Rerouter_1.Page('postSeasonAwardBonus', [
    // bg
    { x: 39, y: 24, r: 0, g: 81, b: 148 },
    { x: 320, y: 15, r: 0, g: 85, b: 165 },
    { x: 615, y: 23, r: 0, g: 81, b: 148 },
    { x: 11, y: 268, r: 16, g: 28, b: 33 },
    { x: 621, y: 258, r: 16, g: 28, b: 33 },
    { x: 624, y: 351, r: 16, g: 24, b: 24 },
    { x: 17, y: 338, r: 16, g: 24, b: 24 },
    { x: 316, y: 342, r: 16, g: 24, b: 24 },
    // ok
    { x: 531, y: 318, r: 0, g: 117, b: 255 },
    { x: 564, y: 323, r: 218, g: 234, b: 254 },
    { x: 577, y: 323, r: 255, g: 255, b: 255 },
    { x: 608, y: 318, r: 0, g: 117, b: 255 },
    { x: 606, y: 331, r: 8, g: 105, b: 255 },
], { x: 570, y: 325 }, { x: 570, y: 325 });
var playerGrowthComplete = new Rerouter_1.Page('playerGrowthComplete', [
    // bg
    { x: 115, y: 47, r: 181, g: 186, b: 189 },
    { x: 114, y: 300, r: 214, g: 219, b: 222 },
    { x: 514, y: 301, r: 214, g: 219, b: 222 },
    { x: 522, y: 74, r: 181, g: 186, b: 189 },
    { x: 110, y: 169, r: 206, g: 210, b: 214 },
    { x: 110, y: 230, r: 181, g: 186, b: 189 },
    { x: 522, y: 156, r: 206, g: 210, b: 214 },
    { x: 513, y: 230, r: 181, g: 186, b: 189 },
    // continue
    { x: 240, y: 300, r: 8, g: 114, b: 248 },
    { x: 312, y: 301, r: 223, g: 233, b: 247 },
    { x: 337, y: 306, r: 255, g: 255, b: 255 },
    { x: 399, y: 302, r: 8, g: 110, b: 247 },
], { x: 325, y: 304 }, { x: 325, y: 304 });
var leagueRewardAchievementGrade = new Rerouter_1.Page('leagueRewardAchievementGrade', [
    // title bg & x
    { x: 20, y: 34, r: 222, g: 219, b: 222 },
    { x: 20, y: 63, r: 222, g: 219, b: 222 },
    { x: 600, y: 36, r: 212, g: 209, b: 212 },
    { x: 611, y: 56, r: 222, g: 218, b: 222 },
    { x: 442, y: 67, r: 222, g: 219, b: 222 },
    // progress bar bg
    { x: 16, y: 79, r: 0, g: 49, b: 90 },
    { x: 18, y: 193, r: 0, g: 49, b: 90 },
    { x: 616, y: 199, r: 16, g: 65, b: 115 },
    // bg in bottom
    { x: 613, y: 326, r: 41, g: 45, b: 49 },
], { x: 600, y: 45 }, { x: 600, y: 45 });
// r
var pitcherOfTheMonth = new Rerouter_1.Page('pitcherOfTheMonth', [
    { x: 27, y: 38, r: 222, g: 219, b: 222 },
    { x: 602, y: 46, r: 100, g: 102, b: 100 },
    { x: 535, y: 309, r: 128, g: 182, b: 252 },
    { x: 605, y: 316, r: 8, g: 97, b: 247 },
    { x: 391, y: 309, r: 238, g: 243, b: 238 },
], { x: 545, y: 310 }, { x: 545, y: 310 });
// like mvp, but no need to do anything
var mvpDisplay1 = new Rerouter_1.Page('mvpDisplay1', [
    // bg
    { x: 541, y: 24, r: 2, g: 89, b: 164 },
    { x: 610, y: 22, r: 8, g: 89, b: 164 },
    { x: 43, y: 311, r: 16, g: 20, b: 16 },
    { x: 262, y: 331, r: 16, g: 16, b: 8 },
    // ok
    { x: 544, y: 319, r: 0, g: 117, b: 247 },
    { x: 572, y: 326, r: 10, g: 109, b: 243 },
    { x: 580, y: 324, r: 25, g: 119, b: 239 },
    { x: 600, y: 329, r: 8, g: 105, b: 247 },
    // blue btn left,
    { x: 171, y: 23, r: 0, g: 117, b: 247 },
    { x: 178, y: 29, r: 172, g: 182, b: 205 },
    // grey btn right
    { x: 329, y: 23, r: 49, g: 85, b: 123 },
    { x: 339, y: 31, r: 16, g: 49, b: 90 },
], { x: 571, y: 323 }, // ok
{ x: 571, y: 323 });
var mvpDisplay2 = new Rerouter_1.Page('mvpDisplay2', [
    // bg
    { x: 541, y: 24, r: 2, g: 89, b: 164 },
    { x: 610, y: 22, r: 8, g: 89, b: 164 },
    { x: 43, y: 311, r: 16, g: 20, b: 16 },
    { x: 262, y: 331, r: 16, g: 16, b: 8 },
    // ok
    { x: 544, y: 319, r: 0, g: 117, b: 247 },
    { x: 572, y: 326, r: 10, g: 109, b: 243 },
    { x: 580, y: 324, r: 25, g: 119, b: 239 },
    { x: 600, y: 329, r: 8, g: 105, b: 247 },
    // blue btn right
    { x: 338, y: 18, r: 0, g: 117, b: 247 },
    { x: 338, y: 33, r: 78, g: 97, b: 144 },
    // grey btn left,
    { x: 174, y: 20, r: 49, g: 89, b: 123 },
    { x: 182, y: 29, r: 16, g: 53, b: 90 },
], { x: 571, y: 323 }, // ok
{ x: 571, y: 323 });
var mvpDisplay = new Rerouter_1.GroupPage('mvpDisplay', [mvpDisplay1, mvpDisplay2], mvpDisplay1.next);
var bonusGrantedByTeamRecord = new Rerouter_1.Page('bonusGrantedByTeamRecord', [
    // table bg
    { x: 43, y: 72, r: 49, g: 69, b: 107 },
    { x: 30, y: 288, r: 8, g: 12, b: 16 },
    { x: 597, y: 289, r: 8, g: 12, b: 16 },
    { x: 593, y: 73, r: 49, g: 69, b: 107 },
    // title
    { x: 183, y: 73, r: 49, g: 69, b: 107 },
    { x: 215, y: 73, r: 137, g: 146, b: 167 },
    { x: 261, y: 73, r: 160, g: 165, b: 185 },
    { x: 416, y: 73, r: 141, g: 149, b: 168 },
    { x: 463, y: 70, r: 49, g: 69, b: 107 },
    { x: 546, y: 324, r: 8, g: 113, b: 247 },
    { x: 571, y: 320, r: 47, g: 131, b: 227 },
    { x: 598, y: 329, r: 8, g: 106, b: 247 },
], { x: 570, y: 320 }, // ok
{ x: 570, y: 320 });
var mvp = new Rerouter_1.Page('mvp', [
    { x: 273, y: 23, r: 0, g: 89, b: 165 },
    { x: 297, y: 25, r: 90, g: 145, b: 200 },
    { x: 320, y: 25, r: 255, g: 255, b: 255 },
    { x: 332, y: 29, r: 126, g: 169, b: 204 },
    { x: 380, y: 53, r: 0, g: 65, b: 122 },
    { x: 493, y: 322, r: 16, g: 20, b: 8 },
    { x: 568, y: 320, r: 38, g: 120, b: 218 },
    { x: 635, y: 341, r: 8, g: 16, b: 8 },
    { x: 620, y: 164, r: 0, g: 8, b: 8 },
    { x: 9, y: 176, r: 12, g: 24, b: 24 },
], { x: 568, y: 320 }, { x: 568, y: 320 });
var selectRewardPlayer = new Rerouter_1.Page('selectRewardPlayer', [
    // bg
    { x: 4, y: 6, r: 0, g: 97, b: 189 },
    { x: 11, y: 346, r: 16, g: 16, b: 8 },
    { x: 7, y: 350, r: 16, g: 20, b: 16 },
    // form bg in bottom
    { x: 65, y: 301, r: 66, g: 77, b: 66 },
    { x: 65, y: 326, r: 40, g: 45, b: 33 },
    { x: 175, y: 303, r: 66, g: 77, b: 58 },
    { x: 174, y: 328, r: 41, g: 45, b: 33 },
    { x: 275, y: 304, r: 66, g: 73, b: 58 },
    { x: 275, y: 324, r: 41, g: 48, b: 33 },
    { x: 384, y: 301, r: 66, g: 73, b: 58 },
    { x: 384, y: 321, r: 41, g: 45, b: 33 },
], { x: 568, y: 320 }, { x: 568, y: 320 });
var selectSeasonMode = new Rerouter_1.Page('selectSeasonMode', [
    { x: 104, y: 16, r: 0, g: 93, b: 173 },
    { x: 235, y: 37, r: 143, g: 181, b: 207 },
    { x: 309, y: 36, r: 145, g: 182, b: 209 },
    { x: 337, y: 38, r: 103, g: 149, b: 191 },
    { x: 376, y: 32, r: 245, g: 247, b: 253 },
    { x: 422, y: 36, r: 145, g: 177, b: 209 },
    { x: 40, y: 75, r: 181, g: 186, b: 189 },
    { x: 314, y: 183, r: 33, g: 36, b: 33 },
    { x: 341, y: 93, r: 41, g: 48, b: 49 },
    { x: 539, y: 323, r: 0, g: 69, b: 149 },
    { x: 553, y: 328, r: 0, g: 65, b: 148 },
], { x: 178, y: 183 }, { x: 178, y: 183 });
var selectLeagueGameAmount = new Rerouter_1.Page('selectLeagueGameAmount', [
    // title: select the league you would like to play
    { x: 186, y: 53, r: 226, g: 233, b: 240 },
    { x: 279, y: 55, r: 224, g: 231, b: 240 },
    { x: 320, y: 59, r: 78, g: 121, b: 160 },
    { x: 362, y: 59, r: 142, g: 168, b: 191 },
    { x: 441, y: 57, r: 232, g: 236, b: 244 },
    // title bg
    { x: 142, y: 55, r: 8, g: 68, b: 123 },
    { x: 473, y: 60, r: 0, g: 61, b: 115 },
    // amount btn title & bg
    // full league
    { x: 54, y: 94, r: 230, g: 231, b: 230 },
    { x: 101, y: 97, r: 206, g: 207, b: 206 },
    { x: 138, y: 101, r: 230, g: 231, b: 230 },
    // 1 /2 league
    { x: 191, y: 102, r: 230, g: 231, b: 230 },
    { x: 235, y: 100, r: 126, g: 128, b: 137 },
    { x: 219, y: 104, r: 230, g: 227, b: 230 },
    // 1 /4 league
    { x: 350, y: 101, r: 230, g: 231, b: 230 },
    { x: 376, y: 101, r: 84, g: 89, b: 98 },
    { x: 407, y: 100, r: 220, g: 219, b: 221 },
    // post season
    { x: 498, y: 99, r: 230, g: 231, b: 230 },
    { x: 541, y: 99, r: 206, g: 204, b: 206 },
    { x: 569, y: 105, r: 135, g: 139, b: 148 },
    { x: 601, y: 99, r: 230, g: 231, b: 230 },
], { x: 39, y: 314 }, { x: 39, y: 314 });
var selectLeagueGameAmountBtns = {
    full: { x: 25, y: 285 },
    half: { x: 245, y: 285 },
    quarter: { x: 400, y: 112 },
    post: { x: 600, y: 112 },
};
// BACKLOG: the page has slightly different layout when season ends naturally or open reset league
var selectYear = new Rerouter_1.Page('selectYear', [
    // bg
    { x: 16, y: 18, r: 0, g: 93, b: 173 },
    { x: 12, y: 341, r: 16, g: 16, b: 8 },
    { x: 625, y: 22, r: 0, g: 89, b: 164 },
    { x: 606, y: 317, r: 0, g: 117, b: 247 },
    // enabled ok btn
    { x: 515, y: 324, r: 8, g: 110, b: 247 },
    { x: 546, y: 324, r: 8, g: 110, b: 247 },
    // right side empty title bg
    { x: 298, y: 54, r: 16, g: 45, b: 82 },
    { x: 601, y: 65, r: 16, g: 45, b: 82 },
    { x: 299, y: 210, r: 16, g: 45, b: 82 },
    { x: 620, y: 223, r: 17, g: 44, b: 82 },
    // right side title season main rewards
    { x: 302, y: 220, r: 16, g: 45, b: 82 },
    { x: 317, y: 215, r: 154, g: 167, b: 182 },
    { x: 341, y: 216, r: 219, g: 224, b: 230 },
    { x: 375, y: 218, r: 127, g: 140, b: 162 },
    { x: 393, y: 217, r: 159, g: 171, b: 186 },
], { x: 496, y: 323 }, //ok
{ x: 496, y: 323 });
var selectYearBtns = {
    goDownStart: { x: 50, y: 138 },
    goDownEnd: { x: 50, y: 85 },
    goUpStart: { x: 50, y: 75 },
    goUpEnd: { x: 50, y: 275 },
    enabledSubmit: { x: 509, y: 316, r: 0, g: 117, b: 247 },
};
var selectYearOptions = {
    1: { x: 23, y: 75, r: 230, g: 235, b: 238 },
    2: { x: 23, y: 125, r: 230, g: 235, b: 238 },
    3: { x: 23, y: 175, r: 230, g: 235, b: 238 },
    4: { x: 23, y: 225, r: 230, g: 235, b: 238 },
    5: { x: 23, y: 275, r: 230, g: 235, b: 238 },
};
var selectYearTargetToMoveStepMap = __spreadArray([], new Array(CONSTANTS.leagueYearMax - CONSTANTS.leagueYearMin + 1), true).map(function (_, i) { return i; })
    .reduce(function (acc, i) {
    var year = i + CONSTANTS.leagueYearMin;
    acc['normal'][year] = i;
    acc['master'][year] = i + CONSTANTS.leagueYearMax - CONSTANTS.leagueYearMin + 1;
    return acc;
}, { normal: {}, master: {} });
var selectYearMoveStepMapToTarget = __spreadArray([], new Array(CONSTANTS.leagueYearMax - CONSTANTS.leagueYearMin + 1), true).map(function (_, i) { return i; })
    .reduce(function (acc, i) {
    var year = i + CONSTANTS.leagueYearMin;
    acc[i] = {
        mode: 'normal',
        year: year,
    };
    acc[i + CONSTANTS.leagueYearMax - CONSTANTS.leagueYearMin + 1] = {
        mode: 'master',
        year: year,
    };
    return acc;
}, {});
// tell user the season start
var newSeason = new Rerouter_1.Page('newSeason', [
    // bg bottom
    { x: 53, y: 334, r: 16, g: 16, b: 8 },
    { x: 613, y: 334, r: 16, g: 20, b: 16 },
    // next or ok btn bg
    { x: 254, y: 292, r: 0, g: 117, b: 247 },
    { x: 255, y: 311, r: 8, g: 102, b: 247 },
    { x: 376, y: 292, r: 0, g: 117, b: 247 },
    { x: 376, y: 313, r: 16, g: 101, b: 254 },
    // logo in center right
    { x: 354, y: 147, r: 0, g: 28, b: 66 },
    { x: 374, y: 158, r: 255, g: 255, b: 255 },
    { x: 386, y: 149, r: 192, g: 20, b: 65 },
], { x: 324, y: 305 }, { x: 324, y: 305 });
// after endSeason, xx season is over
// endSeason is in nexts.ts
var endSeasonProceed = new Rerouter_1.Page('endSeasonProceed', [
    // how would you like to proceed with next season ?
    { x: 452, y: 38, r: 195, g: 213, b: 229 },
    { x: 508, y: 36, r: 8, g: 85, b: 148 },
    { x: 545, y: 34, r: 253, g: 253, b: 254 },
    { x: 566, y: 34, r: 43, g: 107, b: 167 },
    { x: 277, y: 34, r: 255, g: 255, b: 255 },
    { x: 568, y: 31, r: 219, g: 232, b: 237 },
    { x: 568, y: 38, r: 45, g: 107, b: 165 },
    { x: 553, y: 38, r: 30, g: 98, b: 160 },
    // bg corner
    { x: 8, y: 13, r: 0, g: 97, b: 181 },
    { x: 8, y: 343, r: 16, g: 16, b: 8 },
    { x: 625, y: 22, r: 0, g: 89, b: 164 },
    { x: 628, y: 350, r: 16, g: 20, b: 16 },
    // ok
    { x: 539, y: 325, r: 8, g: 113, b: 247 },
    { x: 558, y: 325, r: 255, g: 255, b: 255 },
    { x: 571, y: 325, r: 255, g: 255, b: 255 },
    { x: 606, y: 325, r: 8, g: 113, b: 247 },
], { x: 570, y: 325 }, { x: 570, y: 325 });
var endSeasonProceedSelected = new Rerouter_1.Page('endSeasonProceedSelected', [
    // bg corner
    { x: 8, y: 13, r: 0, g: 97, b: 181 },
    { x: 8, y: 343, r: 16, g: 16, b: 8 },
    { x: 625, y: 22, r: 0, g: 89, b: 164 },
    { x: 628, y: 350, r: 16, g: 20, b: 16 },
    // ok
    { x: 539, y: 325, r: 8, g: 113, b: 247 },
    { x: 558, y: 325, r: 255, g: 255, b: 255 },
    { x: 571, y: 325, r: 255, g: 255, b: 255 },
    { x: 606, y: 325, r: 8, g: 113, b: 247 },
], { x: 570, y: 325 }, { x: 570, y: 325 });
/** @deprecated by V2 */
var selectNormalMasterLeagueMode = new Rerouter_1.Page('selectNormalMasterLeagueMode', [
    // bg
    { x: 14, y: 20, r: 8, g: 93, b: 173 },
    { x: 17, y: 328, r: 16, g: 20, b: 16 },
    { x: 622, y: 20, r: 8, g: 93, b: 172 },
    { x: 625, y: 272, r: 16, g: 20, b: 16 },
    // NORMAL LEAGUE in middle
    { x: 125, y: 168, r: 158, g: 183, b: 159 },
    { x: 248, y: 166, r: 41, g: 105, b: 25 },
    // left bg
    { x: 57, y: 90, r: 230, g: 231, b: 238 },
    { x: 55, y: 283, r: 230, g: 231, b: 230 },
    { x: 298, y: 283, r: 230, g: 231, b: 238 },
    { x: 294, y: 81, r: 230, g: 231, b: 238 },
    // left reward info bg
    { x: 128, y: 265, r: 8, g: 125, b: 255 },
    { x: 227, y: 281, r: 0, g: 89, b: 247 },
], { x: 565, y: 328 }, { x: 565, y: 328 });
/** @deprecated by V2 */
var selectNormalMasterLeagueModeBtns = {
    normal: {
        x: 170,
        y: 160,
    },
    master: {
        x: 470,
        y: 160,
    },
};
/** @deprecated by V2 */
var selectNormalMasterLeagueModeProceed = new Rerouter_1.Page('selectNormalMasterLeagueModeProceed', [
    // bg
    { x: 16, y: 19, r: 0, g: 93, b: 173 },
    { x: 19, y: 337, r: 16, g: 20, b: 16 },
    { x: 623, y: 22, r: 0, g: 89, b: 164 },
    { x: 619, y: 232, r: 16, g: 24, b: 16 },
    // ok
    { x: 535, y: 326, r: 8, g: 113, b: 247 },
    { x: 570, y: 330, r: 255, g: 255, b: 255 },
    { x: 605, y: 328, r: 8, g: 113, b: 247 },
], { x: 565, y: 328 }, { x: 565, y: 328 });
// a dialog to confirm league reset
var leagueResetConfirm = new Rerouter_1.Page('leagueResetConfirm', [
    // bg
    { x: 106, y: 43, r: 197, g: 198, b: 206 },
    { x: 105, y: 268, r: 197, g: 198, b: 206 },
    { x: 529, y: 264, r: 197, g: 198, b: 206 },
    { x: 122, y: 307, r: 238, g: 243, b: 238 },
    { x: 518, y: 307, r: 238, g: 243, b: 238 },
    { x: 316, y: 304, r: 238, g: 243, b: 238 },
    // title LEAGUE RESET
    { x: 251, y: 59, r: 197, g: 198, b: 206 },
    { x: 279, y: 58, r: 67, g: 72, b: 80 },
    { x: 290, y: 58, r: 67, g: 73, b: 80 },
    { x: 305, y: 58, r: 16, g: 24, b: 33 },
    { x: 314, y: 58, r: 157, g: 158, b: 165 },
    { x: 331, y: 58, r: 129, g: 132, b: 139 },
    { x: 346, y: 59, r: 190, g: 189, b: 198 },
    { x: 354, y: 59, r: 197, g: 198, b: 206 },
    { x: 365, y: 59, r: 101, g: 106, b: 114 },
    { x: 396, y: 59, r: 197, g: 198, b: 206 },
    // yes and no button
    { x: 355, y: 308, r: 8, g: 98, b: 247 },
    { x: 396, y: 296, r: 103, g: 175, b: 255 },
    { x: 445, y: 306, r: 8, g: 101, b: 247 },
    { x: 206, y: 299, r: 41, g: 77, b: 123 },
    { x: 244, y: 295, r: 41, g: 77, b: 123 },
    { x: 274, y: 309, r: 34, g: 69, b: 115 },
], { x: 395, y: 300 }, // yes, reset
{ x: 235, y: 300 } // no, no reset
);
// TODO: check the position, must be bg of 'diamond', 'old' ...
// bg of the word
// ref: https://www.facebook.com/mlb9innings/photos/1366596103748570
// left, mid and right respectively
var selectRewardPlayerBtns = [
    { x: 66, y: 217 },
    { x: 221, y: 217 },
    { x: 376, y: 217 },
];
// only include basic types
// {r}-{g}-{b}: priority
// try x 23, y 260 in player info
var playerCardColorToRank = {
    '66-74-74': 1,
    '99-65-41': 2,
    '99-65-49': 2,
    '132-129-148': 3,
    '123-129-140': 3,
    '189-166-49': 4,
    '189-166-58': 4,
    '198-170-57': 4,
    '148-101-25': 4,
    '165-166-90': 4,
    '41-69-107': 5, // diamond TODO: unknown color
};
var playerCardColorToRankV2 = {
    1: [
        // normal TODO: unknown color
        { r: 66, g: 74, b: 74 },
    ],
    2: [
        // brown
        { r: 99, g: 65, b: 41 },
        { r: 99, g: 65, b: 49 },
        { r: 75, g: 51, b: 34 },
    ],
    3: [
        // silver
        { r: 132, g: 129, b: 148 },
        { r: 123, g: 129, b: 140 },
        { r: 127, g: 131, b: 140 },
    ],
    4: [
        // gold
        { r: 189, g: 166, b: 49 },
        { r: 189, g: 166, b: 58 },
        { r: 198, g: 170, b: 57 },
        { r: 148, g: 101, b: 25 },
        { r: 165, g: 166, b: 90 },
    ],
    5: [
        // diamond TODO: unknown color
        { r: 41, g: 69, b: 107 },
    ],
};
var leagueOnPlayAutoOff = new customPage_1.CustomPage('leagueOnPlayAutoOff', function (taskName, image) {
    // match scorePanelBg && (any arrow) && (autoCameraPause or swingBtn)
    var isMatchScorePanelBg = modules_1.rerouter.isPageMatchImage(scorePanelBg, image);
    if (!isMatchScorePanelBg) {
        return false;
    }
    var isMatchScoreArrow = modules_1.rerouter.isPageMatchImage(scoreArrowGroup, image);
    if (!isMatchScoreArrow) {
        return false;
    }
    var isMatchAutoCameraPause = modules_1.rerouter.isPageMatchImage(autoCameraPause, image);
    if (isMatchAutoCameraPause) {
        return true;
    }
    var isMatchPitcherBtn = modules_1.rerouter.isPageMatchImage(pitcherBtn, image);
    if (isMatchPitcherBtn) {
        console.log('eee');
        return true;
    }
    var isMatchSwingBtn = modules_1.rerouter.isPageMatchImage(swingBtn, image);
    return isMatchSwingBtn;
}, { x: 511, y: 20 }, // switch to auto mode
{ x: 611, y: 20 } // pause button
);
var leagueOnPlayAutoOn = new customPage_1.CustomPage('leagueOnPlayAutoOn', function (taskName, image) {
    // match (any arrow) && battery & scroePanelBg
    var isMatchScorePanelBg = modules_1.rerouter.isPageMatchImage(scorePanelBg, image);
    if (!isMatchScorePanelBg) {
        return false;
    }
    var isMatchBattery = modules_1.rerouter.isPageMatchImage(battery, image);
    if (!isMatchBattery) {
        return false;
    }
    var isMatchScoreArrow = modules_1.rerouter.isPageMatchImage(scoreArrowGroup, image);
    return isMatchScoreArrow;
}, { x: 485, y: 21 }, // turn on power save
{ x: 552, y: 21 } // turn off auto play
);
var scorePanelBg = new Rerouter_1.Page('scorePanelBg', [
    { x: 261, y: 338, r: 247, g: 247, b: 247 },
    { x: 259, y: 349, r: 247, g: 247, b: 247 },
    { x: 373, y: 338, r: 247, g: 247, b: 247 },
    { x: 373, y: 348, r: 247, g: 247, b: 247 },
]);
// red arrow on top
var redAndGreyArrow1 = new Rerouter_1.Page('redAndGreyArrow1', [
    { x: 329, y: 342, r: 238, g: 21, b: 19 },
    { x: 329, y: 340, r: 239, g: 226, b: 223 },
    { x: 329, y: 349, r: 181, g: 186, b: 181 },
    { x: 329, y: 357, r: 247, g: 247, b: 247 },
]);
// grey arrow on top
var redAndGreyArrow2 = new Rerouter_1.Page('redAndGreyArrow2', [
    { x: 329, y: 342, r: 186, g: 187, b: 186 },
    { x: 328, y: 339, r: 247, g: 247, b: 247 },
    { x: 327, y: 341, r: 247, g: 247, b: 247 },
    { x: 329, y: 349, r: 238, g: 16, b: 16 },
]);
// FIXME: not find this now
// top and bottom are all red arrows
var redArrows = new Rerouter_1.Page('redArrow', [
    { x: 330, y: 343, r: 238, g: 16, b: 17 },
    { x: 326, y: 348, r: 247, g: 247, b: 247 },
    { x: 325, y: 346, r: 247, g: 247, b: 247 },
    { x: 329, y: 349, r: 238, g: 16, b: 16 },
]);
var scoreArrowGroup = new Rerouter_1.GroupPage('scoreArrowGroup', [redAndGreyArrow1, redAndGreyArrow2, redArrows]);
var autoCameraPause = new Rerouter_1.Page('autoCameraPause', [
    { x: 501, y: 21, r: 255, g: 255, b: 255 },
    { x: 502, y: 15, r: 255, g: 255, b: 255 },
    { x: 503, y: 14, r: 255, g: 255, b: 255 },
    { x: 503, y: 15, r: 255, g: 255, b: 255 },
    { x: 505, y: 23, r: 255, g: 255, b: 255 },
    { x: 509, y: 14, r: 255, g: 255, b: 255 },
    { x: 509, y: 15, r: 255, g: 255, b: 255 },
    { x: 509, y: 16, r: 255, g: 255, b: 255 },
    { x: 509, y: 17, r: 255, g: 255, b: 255 },
    { x: 509, y: 18, r: 255, g: 255, b: 255 },
    { x: 509, y: 19, r: 255, g: 255, b: 255 },
    { x: 509, y: 20, r: 255, g: 255, b: 255 },
    { x: 509, y: 21, r: 255, g: 255, b: 255 },
    { x: 509, y: 22, r: 255, g: 255, b: 255 },
    { x: 510, y: 24, r: 255, g: 255, b: 255 },
    { x: 514, y: 15, r: 255, g: 255, b: 255 },
    { x: 514, y: 16, r: 255, g: 255, b: 255 },
    { x: 514, y: 17, r: 255, g: 255, b: 255 },
    { x: 514, y: 18, r: 255, g: 255, b: 255 },
    { x: 514, y: 19, r: 255, g: 255, b: 255 },
    { x: 514, y: 20, r: 255, g: 255, b: 255 },
    { x: 514, y: 21, r: 255, g: 255, b: 255 },
    { x: 514, y: 22, r: 255, g: 255, b: 255 },
    { x: 520, y: 14, r: 255, g: 255, b: 255 },
    { x: 520, y: 15, r: 255, g: 255, b: 255 },
    { x: 520, y: 16, r: 255, g: 255, b: 255 },
    { x: 520, y: 17, r: 255, g: 255, b: 255 },
    { x: 520, y: 18, r: 255, g: 255, b: 255 },
    { x: 520, y: 19, r: 255, g: 255, b: 255 },
    { x: 520, y: 20, r: 255, g: 255, b: 255 },
    { x: 520, y: 21, r: 255, g: 255, b: 255 },
    { x: 520, y: 22, r: 255, g: 255, b: 255 },
    { x: 520, y: 23, r: 255, g: 255, b: 255 },
    { x: 525, y: 17, r: 255, g: 255, b: 255 },
    { x: 525, y: 18, r: 255, g: 255, b: 255 },
    { x: 525, y: 19, r: 255, g: 255, b: 255 },
    { x: 525, y: 20, r: 255, g: 255, b: 255 },
    { x: 525, y: 21, r: 255, g: 255, b: 255 },
    { x: 525, y: 22, r: 255, g: 255, b: 255 },
    { x: 530, y: 15, r: 255, g: 255, b: 255 },
    { x: 530, y: 16, r: 255, g: 255, b: 255 },
    { x: 530, y: 17, r: 255, g: 255, b: 255 },
    { x: 530, y: 18, r: 255, g: 255, b: 255 },
    { x: 530, y: 19, r: 255, g: 255, b: 255 },
    { x: 530, y: 20, r: 255, g: 255, b: 255 },
    { x: 530, y: 21, r: 255, g: 255, b: 255 },
    { x: 530, y: 22, r: 255, g: 255, b: 255 },
    { x: 530, y: 23, r: 255, g: 255, b: 255 },
    { x: 568, y: 12, r: 255, g: 255, b: 255 },
    { x: 612, y: 12, r: 255, g: 255, b: 255 },
    { x: 612, y: 13, r: 255, g: 255, b: 255 },
]);
// when play away game
var swingBtn = new Rerouter_1.Page('swingBtn', [
    { x: 519, y: 248, r: 41, g: 45, b: 41 },
    { x: 536, y: 268, r: 16, g: 20, b: 16 },
    { x: 531, y: 253, r: 143, g: 141, b: 143 },
]);
// when play away game
var pitcherBtn = new Rerouter_1.Page('pitcherBtn', [
    { x: 29, y: 146, r: 170, g: 168, b: 161 },
    { x: 28, y: 185, r: 162, g: 159, b: 158 },
    { x: 29, y: 225, r: 124, g: 133, b: 129 },
    { x: 29, y: 267, r: 216, g: 217, b: 230 },
    { x: 25, y: 275, r: 33, g: 45, b: 33 },
    { x: 24, y: 235, r: 41, g: 50, b: 33 },
    { x: 26, y: 196, r: 41, g: 49, b: 37 },
    { x: 34, y: 156, r: 41, g: 36, b: 33 },
]);
var battery = new Rerouter_1.Page('battery', [
    { x: 484, y: 10, r: 255, g: 255, b: 255 },
    { x: 484, y: 11, r: 255, g: 255, b: 255 },
    { x: 484, y: 12, r: 255, g: 255, b: 255 },
    { x: 484, y: 13, r: 255, g: 255, b: 255 },
    { x: 484, y: 14, r: 255, g: 255, b: 255 },
    { x: 484, y: 15, r: 255, g: 255, b: 255 },
    { x: 484, y: 16, r: 255, g: 255, b: 255 },
    { x: 484, y: 17, r: 255, g: 255, b: 255 },
    { x: 485, y: 10, r: 255, g: 255, b: 255 },
    { x: 485, y: 11, r: 255, g: 255, b: 255 },
    { x: 485, y: 12, r: 255, g: 255, b: 255 },
    { x: 485, y: 13, r: 255, g: 255, b: 255 },
    { x: 485, y: 14, r: 255, g: 255, b: 255 },
    { x: 485, y: 15, r: 255, g: 255, b: 255 },
    { x: 485, y: 16, r: 255, g: 255, b: 255 },
    { x: 486, y: 10, r: 255, g: 255, b: 255 },
    { x: 486, y: 11, r: 255, g: 255, b: 255 },
    { x: 486, y: 12, r: 255, g: 255, b: 255 },
    { x: 486, y: 13, r: 255, g: 255, b: 255 },
    { x: 486, y: 14, r: 255, g: 255, b: 255 },
    { x: 486, y: 15, r: 255, g: 255, b: 255 },
    { x: 486, y: 16, r: 255, g: 255, b: 255 },
    { x: 487, y: 10, r: 255, g: 255, b: 255 },
    { x: 487, y: 11, r: 255, g: 255, b: 255 },
    { x: 487, y: 12, r: 255, g: 255, b: 255 },
    { x: 487, y: 13, r: 255, g: 255, b: 255 },
    { x: 487, y: 14, r: 255, g: 255, b: 255 },
    { x: 488, y: 10, r: 255, g: 255, b: 255 },
    { x: 488, y: 11, r: 255, g: 255, b: 255 },
    { x: 488, y: 12, r: 255, g: 255, b: 255 },
    { x: 489, y: 9, r: 255, g: 255, b: 255 },
    { x: 489, y: 10, r: 255, g: 255, b: 255 },
    { x: 489, y: 11, r: 255, g: 255, b: 255 },
    { x: 489, y: 12, r: 255, g: 255, b: 255 },
    { x: 490, y: 9, r: 255, g: 255, b: 255 },
    { x: 490, y: 10, r: 255, g: 255, b: 255 },
    { x: 490, y: 11, r: 255, g: 255, b: 255 },
    { x: 490, y: 12, r: 255, g: 255, b: 255 },
    { x: 491, y: 9, r: 255, g: 255, b: 255 },
    { x: 491, y: 10, r: 255, g: 255, b: 255 },
    { x: 491, y: 11, r: 255, g: 255, b: 255 },
    { x: 491, y: 12, r: 255, g: 255, b: 255 },
    { x: 492, y: 9, r: 255, g: 255, b: 255 },
    { x: 492, y: 10, r: 255, g: 255, b: 255 },
    { x: 492, y: 11, r: 255, g: 255, b: 255 },
    { x: 492, y: 12, r: 255, g: 255, b: 255 },
    { x: 493, y: 9, r: 255, g: 255, b: 255 },
    { x: 493, y: 10, r: 255, g: 255, b: 255 },
    { x: 493, y: 11, r: 255, g: 255, b: 255 },
    { x: 493, y: 12, r: 255, g: 255, b: 255 },
    { x: 494, y: 10, r: 255, g: 255, b: 255 },
    { x: 494, y: 11, r: 255, g: 255, b: 255 },
    { x: 494, y: 12, r: 255, g: 255, b: 255 },
    { x: 494, y: 13, r: 255, g: 255, b: 255 },
    { x: 495, y: 10, r: 255, g: 255, b: 255 },
    { x: 495, y: 11, r: 255, g: 255, b: 255 },
    { x: 495, y: 12, r: 255, g: 255, b: 255 },
    { x: 495, y: 13, r: 255, g: 255, b: 255 },
    { x: 496, y: 10, r: 255, g: 255, b: 255 },
    { x: 496, y: 11, r: 255, g: 255, b: 255 },
    { x: 496, y: 12, r: 255, g: 255, b: 255 },
    { x: 496, y: 13, r: 255, g: 255, b: 255 },
    { x: 496, y: 14, r: 255, g: 255, b: 255 },
    { x: 496, y: 15, r: 255, g: 255, b: 255 },
    { x: 496, y: 16, r: 255, g: 255, b: 255 },
    { x: 496, y: 17, r: 255, g: 255, b: 255 },
    { x: 497, y: 10, r: 255, g: 255, b: 255 },
    { x: 497, y: 11, r: 255, g: 255, b: 255 },
    { x: 497, y: 12, r: 255, g: 255, b: 255 },
    { x: 497, y: 13, r: 255, g: 255, b: 255 },
    { x: 497, y: 14, r: 255, g: 255, b: 255 },
    { x: 497, y: 15, r: 255, g: 255, b: 255 },
    { x: 497, y: 16, r: 255, g: 255, b: 255 },
    { x: 497, y: 17, r: 255, g: 255, b: 255 },
]);


/***/ }),

/***/ "./src/tasks/receiveInbox.ts":
/*!***********************************!*\
  !*** ./src/tasks/receiveInbox.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
function addTask() {
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.receiveInbox,
        minRoundInterval: CONSTANTS.dayInMs,
        maxTaskDuring: 5 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addTask = addTask;
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(inbox.name),
        match: inbox,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.receiveInbox) {
                modules_1.rerouter.goBack(inbox);
                return;
            }
            // collect all
            var canCollectAll = (0, utils_1.isSameColor)(image, inboxBtns.collectAll) && !(context.matchTimes > 1);
            if (canCollectAll) {
                modules_1.rerouter.screen.tap(inboxBtns.collectAll);
                Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
                return;
            }
            console.log('no mail to collect');
            finishRound(true);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(inboxProceed.name),
        match: inboxProceed,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name === taskNames_1.TASKS.receiveInbox) {
                finishRound(true);
            }
            modules_1.rerouter.goNext(inboxProceed);
        },
    });
}
exports.addRoutes = addRoutes;
// TODO: this changed since 2024-09-02
var inbox = new Rerouter_1.Page('inbox', [
    // Expired mails will be deleted automatically
    { x: 24, y: 279, r: 91, g: 90, b: 91 },
    { x: 46, y: 276, r: 238, g: 235, b: 230 },
    { x: 64, y: 276, r: 238, g: 235, b: 230 },
    { x: 90, y: 274, r: 238, g: 235, b: 230 },
    { x: 108, y: 276, r: 238, g: 235, b: 230 },
    { x: 131, y: 276, r: 238, g: 235, b: 230 },
    { x: 144, y: 276, r: 238, g: 235, b: 230 },
    { x: 172, y: 277, r: 238, g: 235, b: 230 },
    { x: 201, y: 277, r: 220, g: 218, b: 211 },
    { x: 214, y: 277, r: 226, g: 224, b: 222 },
    // message & item info
    { x: 373, y: 65, r: 187, g: 196, b: 211 },
    { x: 387, y: 65, r: 204, g: 211, b: 228 },
    { x: 410, y: 64, r: 120, g: 126, b: 142 },
    { x: 436, y: 64, r: 62, g: 70, b: 81 },
    { x: 464, y: 64, r: 85, g: 91, b: 101 },
    // shop btn
    { x: 215, y: 320, r: 244, g: 247, b: 255 },
    { x: 171, y: 324, r: 43, g: 90, b: 166 },
], { x: 35, y: 314 }, // back btn
{ x: 35, y: 314 });
// page after collect all
var inboxProceed = new Rerouter_1.Page('inboxProceed', [
    // dialog bg
    { x: 21, y: 74, r: 58, g: 98, b: 148 },
    { x: 16, y: 166, r: 173, g: 206, b: 255 },
    { x: 17, y: 238, r: 140, g: 162, b: 189 },
    { x: 617, y: 70, r: 58, g: 97, b: 140 },
    { x: 620, y: 175, r: 132, g: 196, b: 255 },
    { x: 620, y: 235, r: 140, g: 162, b: 189 },
    // close btn
    { x: 266, y: 289, r: 8, g: 122, b: 255 },
    { x: 299, y: 301, r: 83, g: 147, b: 247 },
    { x: 315, y: 293, r: 63, g: 148, b: 255 },
    { x: 333, y: 296, r: 140, g: 191, b: 251 },
    { x: 352, y: 304, r: 8, g: 97, b: 247 },
    { x: 375, y: 292, r: 8, g: 118, b: 255 },
    // inbox
    { x: 293, y: 65, r: 58, g: 97, b: 140 },
    { x: 300, y: 74, r: 255, g: 255, b: 255 },
    { x: 306, y: 71, r: 255, g: 255, b: 255 },
    { x: 312, y: 82, r: 66, g: 105, b: 148 },
    { x: 319, y: 73, r: 254, g: 255, b: 255 },
    { x: 327, y: 79, r: 236, g: 239, b: 242 },
    { x: 338, y: 70, r: 255, g: 253, b: 255 },
    // bottom dark bg
    { x: 445, y: 303, r: 8, g: 20, b: 25 },
    { x: 157, y: 310, r: 8, g: 17, b: 27 },
], { x: 317, y: 296 }, // close btn
{ x: 317, y: 296 });
var inboxBtns = {
    collectAll: { x: 303, y: 279, r: 45, g: 125, b: 234 },
};


/***/ }),

/***/ "./src/tasks/setting.ts":
/*!******************************!*\
  !*** ./src/tasks/setting.ts ***!
  \******************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
function addTask() {
    console.log('addTask setting');
    // only run once
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.settingDefault,
        // maxTaskRunTimes: 1,
        minRoundInterval: Number.POSITIVE_INFINITY,
        maxTaskDuring: 10 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addTask = addTask;
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(settings.name),
        match: settings,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            var inactiveTabColor = { r: 58, g: 65, b: 74 };
            var tab = (0, utils_1.arrayFind)(Object.keys(settingsTabs), function (t) {
                var _a = settingsTabs[t], x = _a.x, y = _a.y;
                return !(0, utils_1.isSameColor)(image, __assign({ x: x, y: y }, inactiveTabColor));
            });
            switch (context.task.name) {
                case taskNames_1.TASKS.settingDefault:
                    switch (tab) {
                        case undefined:
                            // not do anything
                            modules_1.state.onRunning();
                            finishRound(true);
                            break;
                        case 'graphicTab':
                            modules_1.state.onRunning();
                            handleGraphicTab();
                            // go to gameSettingsTab
                            modules_1.rerouter.screen.tap(settingsTabs.gameSettingsTab);
                            break;
                        case 'gameSettingsTab':
                            modules_1.state.onRunning();
                            handleGameSettingsTab();
                            finishRound(true);
                            break;
                        case 'notificationTab':
                            // don't need to handle notificationTab
                            modules_1.state.onRunning();
                            // handleNotificationTab();
                            finishRound(true);
                            break;
                        default:
                            // go to graphicTab
                            modules_1.rerouter.screen.tap(settingsTabs.graphicTab);
                            break;
                    }
                    break;
                case taskNames_1.TASKS.settingResetLeagueProgress:
                    if (modules_1.state.leagueGame.needResetProgress) {
                        modules_1.rerouter.screen.tap(settingsBtns.leagueReset);
                        console.log('go to leagueReset');
                    }
                    else {
                        console.log('no need to reset league progress');
                        modules_1.state.onRunning();
                        finishRound(true);
                    }
                    break;
                default:
                    modules_1.rerouter.goBack(settings);
                    break;
            }
        },
    });
}
exports.addRoutes = addRoutes;
function handleGraphicTab() {
    modules_1.rerouter.screen.tap(settingsGraphTabBtns.powerSaveOn);
    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
}
function handleGameSettingsTab() {
    var btns = [
        settingsGameSettingsTabBtns.pitchingAuto,
        settingsGameSettingsTabBtns.fieldingAuto,
        settingsGameSettingsTabBtns.baseRunningAuto,
        settingsGameSettingsTabBtns.batterPlayTypeA,
        settingsGameSettingsTabBtns.dynamicCameraOff,
    ];
    for (var _i = 0, btns_1 = btns; _i < btns_1.length; _i++) {
        var btn = btns_1[_i];
        modules_1.rerouter.screen.tap(btn);
        Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
    }
}
function handleNotificationTab() {
    modules_1.rerouter.screen.tap(settingsNotificationTabBtns.allNotificationOff);
    Rerouter_1.Utils.sleep(CONSTANTS.sleepShort);
}
var settings = new Rerouter_1.Page('settings', [
    // navi in right
    // { x: 625, y: 7, r: 214, g: 210, b: 214 },
    // { x: 593, y: 14, r: 74, g: 93, b: 123 },
    // { x: 590, y: 14, r: 74, g: 93, b: 123 },
    // { x: 487, y: 15, r: 214, g: 210, b: 214 },
    // { x: 481, y: 15, r: 77, g: 86, b: 93 },
    // { x: 391, y: 11, r: 79, g: 80, b: 79 },
    // { x: 378, y: 16, r: 133, g: 150, b: 169 },
    // { x: 313, y: 11, r: 178, g: 178, b: 179 },
    // bg of right section
    { x: 478, y: 119, r: 41, g: 45, b: 58 },
    { x: 476, y: 175, r: 36, g: 40, b: 44 },
    { x: 476, y: 228, r: 107, g: 97, b: 90 },
    { x: 474, y: 283, r: 66, g: 77, b: 58 },
    { x: 609, y: 293, r: 41, g: 45, b: 58 },
    { x: 608, y: 234, r: 41, g: 45, b: 58 },
    { x: 605, y: 178, r: 41, g: 45, b: 58 },
    { x: 608, y: 122, r: 41, g: 45, b: 58 },
    // google play game icon in right section
    { x: 490, y: 115, r: 35, g: 38, b: 51 },
    // back
    { x: 25, y: 312, r: 193, g: 198, b: 191 },
    { x: 39, y: 322, r: 58, g: 69, b: 49 },
], { x: 41, y: 320 }, { x: 41, y: 320 });
var settingsTabs = {
    soundAndLanTab: { x: 22, y: 55 },
    graphicTab: { x: 111, y: 55 },
    gameSettingsTab: { x: 279, y: 70 },
    notificationTab: { x: 380, y: 71 },
};
var settingsBtns = {
    leagueReset: { x: 562, y: 217 },
};
// FIXME: add lan change pages
var settingsSoundTab = new Rerouter_1.Page('settings/sound', [
    // nav bar right
    { x: 621, y: 8, r: 214, g: 210, b: 214 },
    { x: 595, y: 10, r: 74, g: 97, b: 131 },
    { x: 503, y: 15, r: 74, g: 85, b: 90 },
    { x: 392, y: 12, r: 176, g: 173, b: 176 },
    { x: 315, y: 8, r: 238, g: 243, b: 238 },
    { x: 302, y: 17, r: 214, g: 214, b: 214 },
    // highlighted sound tab
    { x: 19, y: 60, r: 0, g: 101, b: 247 },
    { x: 20, y: 71, r: 0, g: 89, b: 222 },
    { x: 95, y: 69, r: 0, g: 92, b: 230 },
    // other tabs
    { x: 117, y: 56, r: 58, g: 65, b: 74 },
    { x: 205, y: 54, r: 58, g: 65, b: 74 },
    { x: 300, y: 52, r: 58, g: 65, b: 74 },
    { x: 394, y: 55, r: 58, g: 65, b: 74 },
    // bg table
    { x: 20, y: 85, r: 230, g: 231, b: 238 },
    { x: 20, y: 292, r: 206, g: 210, b: 214 },
    { x: 459, y: 85, r: 230, g: 231, b: 238 },
    { x: 460, y: 289, r: 206, g: 210, b: 214 },
    // right sidebar bg
    { x: 480, y: 120, r: 41, g: 45, b: 58 },
    { x: 483, y: 179, r: 41, g: 45, b: 58 },
    { x: 485, y: 232, r: 41, g: 45, b: 58 },
    { x: 486, y: 286, r: 41, g: 45, b: 58 },
    { x: 612, y: 119, r: 41, g: 45, b: 58 },
    { x: 610, y: 180, r: 41, g: 45, b: 58 },
    { x: 608, y: 234, r: 41, g: 45, b: 58 },
    { x: 610, y: 287, r: 41, g: 45, b: 58 },
], { x: 41, y: 320 }, { x: 41, y: 320 });
var settingsSoundTabBtns = {
    lang: { x: 401, y: 190 },
    // add more if need more setting
};
var settingsSoundTabLanSelect = new Rerouter_1.Page('settings/sound/lanSelect', [
    // bg
    { x: 293, y: 18, r: 25, g: 20, b: 25 },
    { x: 43, y: 343, r: 8, g: 4, b: 0 },
    { x: 622, y: 345, r: 8, g: 8, b: 8 },
    // lang english btn
    { x: 160, y: 127, r: 49, g: 89, b: 123 },
    { x: 190, y: 132, r: 58, g: 92, b: 129 },
    { x: 213, y: 133, r: 80, g: 113, b: 151 },
    { x: 229, y: 133, r: 166, g: 189, b: 218 },
    { x: 241, y: 133, r: 49, g: 85, b: 123 },
    { x: 266, y: 142, r: 49, g: 81, b: 115 },
    { x: 282, y: 129, r: 49, g: 89, b: 123 },
    { x: 166, y: 145, r: 41, g: 77, b: 115 },
    // back
    { x: 26, y: 316, r: 206, g: 210, b: 206 },
    { x: 43, y: 321, r: 206, g: 210, b: 206 },
    { x: 34, y: 329, r: 201, g: 206, b: 201 },
], { x: 200, y: 131 }, // english btn
{ x: 200, y: 131 } // english btn
);
var settingsSoundTabLanSelectProceedBtns = {
    yes: { x: 407, y: 307 },
};
var settingsGraphTab = new Rerouter_1.Page('settings/graph', [
    // nav bar right
    { x: 621, y: 8, r: 214, g: 210, b: 214 },
    { x: 595, y: 10, r: 74, g: 97, b: 131 },
    { x: 503, y: 15, r: 74, g: 85, b: 90 },
    { x: 392, y: 12, r: 176, g: 173, b: 176 },
    { x: 315, y: 8, r: 238, g: 243, b: 238 },
    { x: 302, y: 17, r: 214, g: 214, b: 214 },
    // highlighted graph tab
    { x: 123, y: 59, r: 0, g: 101, b: 254 },
    { x: 149, y: 59, r: 28, g: 119, b: 254 },
    { x: 177, y: 64, r: 0, g: 97, b: 238 },
    // other tabs
    { x: 37, y: 63, r: 58, g: 65, b: 74 },
    { x: 62, y: 62, r: 134, g: 143, b: 158 },
    { x: 232, y: 57, r: 58, g: 65, b: 74 },
    { x: 267, y: 63, r: 156, g: 167, b: 180 },
    { x: 322, y: 63, r: 160, g: 165, b: 180 },
    { x: 353, y: 63, r: 58, g: 65, b: 74 },
    { x: 401, y: 64, r: 171, g: 179, b: 192 },
    { x: 440, y: 61, r: 155, g: 159, b: 177 },
    // bg table
    { x: 19, y: 90, r: 230, g: 231, b: 238 },
    { x: 23, y: 291, r: 230, g: 231, b: 238 },
    { x: 459, y: 84, r: 230, g: 231, b: 238 },
    { x: 458, y: 287, r: 230, g: 231, b: 238 },
], { x: 41, y: 320 }, { x: 41, y: 320 });
var settingsGraphTabBtns = {
    qualityNormal: { x: 212, y: 120 },
    maxFPS30: { x: 83, y: 175 },
    powerSaveOn: { x: 222, y: 222 },
    bigHeadModeOff: { x: 86, y: 283 },
    // add more if need more setting
};
var settingsGameSettingsTabBtns = {
    pitchingAuto: { x: 100, y: 107 },
    fieldingAuto: { x: 100, y: 150 },
    baseRunningAuto: { x: 100, y: 192 },
    batterPlayTypeA: { x: 100, y: 243 },
    dynamicCameraOff: { x: 100, y: 285 },
};
var settingsNotificationTabBtns = {
    allNotificationOff: { x: 296, y: 96 },
};


/***/ }),

/***/ "./src/tasks/stayInLogin.ts":
/*!**********************************!*\
  !*** ./src/tasks/stayInLogin.ts ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var isGoHiveLogin = true;
function addTask() {
    console.log('addTask stayInLogin');
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.stayInLogin,
        forceStop: false,
    });
}
exports.addTask = addTask;
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(landing.name),
        match: landing,
        action: function (context) {
            isGoHiveLogin = true;
            modules_1.state.onLoginPage();
            console.log('landing');
            modules_1.rerouter.goNext(landing);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(landingLoadingText.name),
        match: landingLoadingText,
        action: function () {
            console.log('landing loading (text )...');
            modules_1.state.onLoading();
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(loginSelectWay.name),
        match: loginSelectWay,
        action: function (context) {
            if (!modules_1.Config.scriptConfig.isCloud) {
                return;
            }
            if (context.task.name === taskNames_1.TASKS.stayInLogin) {
                // check the direction to go by previous page
                if (!isGoHiveLogin) {
                    keycode('BACK', 100);
                    console.log('keycode back');
                    return;
                }
                isGoHiveLogin = false;
                modules_1.rerouter.goNext(loginSelectWay);
                return;
            }
            modules_1.rerouter.goNext(loginSelectWay);
        },
    });
    [logInHive, logInHive90].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: function (context) {
                if (!modules_1.Config.scriptConfig.isCloud) {
                    return;
                }
                // Zack codes in this way (non-main logic return early ASAP)
                if (context.matchDuring >= CONSTANTS.switchWaitingLoginPagesInterval) {
                    console.log('click back for avoid session expired');
                    keycode('BACK', 100);
                    console.log('keycode back');
                    return;
                }
                if (context.task.name === taskNames_1.TASKS.stayInLogin) {
                    console.log('stay in login and sleep 10 secs');
                    modules_1.state.onLoginPage();
                    Rerouter_1.Utils.sleep(10000);
                    return;
                }
                // main logic
                console.log('need user input');
                modules_1.state.onLoginPage(true);
            },
        });
    });
    [fbLogIn90, googleLogIn90].forEach(function (p) {
        modules_1.rerouter.addRoute({
            path: "/".concat(p.name),
            match: p,
            action: 'keycodeBack',
        });
    });
}
exports.addRoutes = addRoutes;
var landing = new Rerouter_1.Page('landing', [
    // logo in center
    { x: 289, y: 249, r: 0, g: 28, b: 66 },
    { x: 306, y: 247, r: 189, g: 0, b: 33 },
    { x: 299, y: 254, r: 255, g: 255, b: 255 },
    // 9innings
    { x: 237, y: 271, r: 143, g: 148, b: 160 },
    { x: 255, y: 276, r: 86, g: 97, b: 121 },
    { x: 279, y: 276, r: 25, g: 37, b: 70 },
    { x: 311, y: 273, r: 25, g: 45, b: 75 },
    { x: 324, y: 273, r: 28, g: 44, b: 72 },
    { x: 341, y: 273, r: 25, g: 45, b: 76 },
], { x: 254, y: 200 }, // to hive login
{ x: 254, y: 200 });
// like landing but has loading text, and it's darker
var landingLoadingText = new Rerouter_1.Page('landingLoadingText', [
    // logo in center
    { x: 289, y: 249, r: 0, g: 8, b: 16 },
    { x: 306, y: 247, r: 41, g: 0, b: 8 },
    { x: 299, y: 254, r: 58, g: 57, b: 58 },
    // 9innings
    { x: 237, y: 271, r: 33, g: 30, b: 36 },
    { x: 255, y: 276, r: 19, g: 22, b: 25 },
    { x: 279, y: 276, r: 8, g: 8, b: 16 },
    { x: 311, y: 273, r: 8, g: 9, b: 16 },
    { x: 324, y: 273, r: 7, g: 9, b: 16 },
    { x: 341, y: 273, r: 8, g: 9, b: 16 },
    // background on top to avoid conflict with newSeason
    { x: 12, y: 11, r: 8, g: 4, b: 0 },
    { x: 628, y: 12, r: 0, g: 4, b: 0 },
], { x: 0, y: 0 }, { x: 0, y: 0 });
var loginSelectWay = new Rerouter_1.Page('loginSelectWay', [
    // bg
    { x: 39, y: 40, r: 2, g: 1, b: 0 },
    { x: 59, y: 331, r: 2, g: 1, b: 0 },
    { x: 583, y: 309, r: 1, g: 2, b: 3 },
    { x: 584, y: 67, r: 0, g: 1, b: 0 },
    { x: 359, y: 228, r: 3, g: 3, b: 3 },
    // google btn
    { x: 182, y: 191, r: 240, g: 130, b: 121 },
    { x: 185, y: 193, r: 94, g: 151, b: 246 },
    { x: 180, y: 197, r: 197, g: 230, b: 206 },
    { x: 303, y: 192, r: 255, g: 255, b: 255 },
    // fb btn
    { x: 336, y: 196, r: 255, g: 255, b: 255 },
    { x: 338, y: 191, r: 141, g: 188, b: 249 },
    { x: 331, y: 192, r: 131, g: 182, b: 248 },
    { x: 455, y: 192, r: 255, g: 255, b: 255 },
    // hive btn bg
    { x: 177, y: 219, r: 18, g: 119, b: 255 },
    { x: 175, y: 231, r: 18, g: 119, b: 255 },
    { x: 306, y: 220, r: 18, g: 119, b: 255 },
    { x: 307, y: 231, r: 18, g: 119, b: 255 },
], { x: 243, y: 232 }, // login hive
{ x: 243, y: 232 } // login hive
);
var logInHive = new Rerouter_1.Page('logInHive', [
    { x: 226, y: 76, r: 48, g: 48, b: 48 },
    { x: 322, y: 78, r: 48, g: 48, b: 48 },
    { x: 535, y: 42, r: 48, g: 48, b: 48 },
    { x: 624, y: 40, r: 255, g: 255, b: 255 },
    { x: 66, y: 333, r: 238, g: 238, b: 238 },
    { x: 44, y: 235, r: 238, g: 238, b: 238 },
    { x: 136, y: 236, r: 238, g: 238, b: 238 },
    { x: 258, y: 232, r: 143, g: 186, b: 227 },
    { x: 548, y: 169, r: 43, g: 132, b: 216 },
    { x: 583, y: 195, r: 43, g: 132, b: 216 },
    { x: 43, y: 142, r: 255, g: 255, b: 255 },
    { x: 43, y: 195, r: 255, g: 255, b: 255 },
], { x: 554, y: 177 }, // login
{ x: 574, y: 40 } // back to game
);
// suit for dpi 90
var logInHive90 = new Rerouter_1.Page('logInHive90', [
    // bg
    { x: 11, y: 171, r: 238, g: 238, b: 238 },
    { x: 10, y: 326, r: 238, g: 238, b: 238 },
    { x: 628, y: 107, r: 238, g: 238, b: 238 },
    { x: 627, y: 326, r: 238, g: 238, b: 238 },
    // title
    { x: 295, y: 58, r: 48, g: 48, b: 48 },
    { x: 315, y: 58, r: 238, g: 238, b: 238 },
    { x: 330, y: 61, r: 203, g: 203, b: 203 },
    { x: 344, y: 56, r: 201, g: 201, b: 201 },
    // input
    { x: 480, y: 155, r: 255, g: 255, b: 255 },
    { x: 480, y: 199, r: 255, g: 255, b: 255 },
    // login btn
    { x: 558, y: 160, r: 43, g: 132, b: 216 },
    { x: 589, y: 175, r: 43, g: 132, b: 216 },
    { x: 532, y: 162, r: 43, g: 132, b: 216 },
], { x: 554, y: 177 }, // login
{ x: 574, y: 40 } // back to game
);
// BACKLOG: fb login and google login has been block on redroid now
var fbLogIn90 = new Rerouter_1.Page('fbLogIn90', [
    // fb logo
    { x: 304, y: 14, r: 24, g: 119, b: 242 },
    { x: 316, y: 17, r: 255, g: 255, b: 255 },
    { x: 309, y: 31, r: 24, g: 119, b: 242 },
    { x: 325, y: 32, r: 24, g: 119, b: 242 },
    { x: 331, y: 15, r: 24, g: 119, b: 242 },
    { x: 324, y: 12, r: 255, g: 255, b: 255 },
    { x: 345, y: 11, r: 255, g: 255, b: 255 },
    { x: 323, y: 19, r: 24, g: 119, b: 242 },
    { x: 330, y: 23, r: 24, g: 119, b: 242 },
    // bg
    { x: 73, y: 102, r: 255, g: 255, b: 255 },
    { x: 52, y: 261, r: 255, g: 255, b: 255 },
    { x: 312, y: 315, r: 255, g: 255, b: 255 },
    { x: 591, y: 197, r: 255, g: 255, b: 255 },
    { x: 492, y: 62, r: 255, g: 255, b: 255 },
    { x: 318, y: 86, r: 255, g: 255, b: 255 },
    // login btn bg
    { x: 203, y: 194, r: 24, g: 119, b: 242 },
    { x: 433, y: 197, r: 24, g: 119, b: 242 },
]);
var googleLogIn90 = new Rerouter_1.Page('googleLogIn90', [
    // google logo
    { x: 295, y: 64, r: 255, g: 255, b: 255 },
    { x: 306, y: 67, r: 255, g: 255, b: 255 },
    { x: 318, y: 68, r: 251, g: 188, b: 5 },
    { x: 321, y: 68, r: 253, g: 221, b: 130 },
    { x: 329, y: 68, r: 66, g: 133, b: 244 },
    { x: 335, y: 68, r: 234, g: 67, b: 53 },
    // bg
    { x: 94, y: 33, r: 75, g: 129, b: 218 },
    { x: 67, y: 227, r: 79, g: 132, b: 221 },
    { x: 142, y: 329, r: 255, g: 255, b: 255 },
    { x: 559, y: 338, r: 61, g: 114, b: 203 },
    { x: 539, y: 80, r: 63, g: 117, b: 205 },
    { x: 350, y: 334, r: 255, g: 255, b: 255 },
    // login btn bg
    { x: 478, y: 224, r: 26, g: 115, b: 232 },
]);
// TODO
// captcha
var logInCaptchaImNotRobot = new Rerouter_1.Page('logInCaptchaImNotRobot', [
    // captcha logo
    { x: 384, y: 193, r: 249, g: 249, b: 249 },
    { x: 374, y: 202, r: 216, g: 226, b: 242 },
    { x: 382, y: 204, r: 249, g: 249, b: 249 },
    // not checked
    { x: 246, y: 205, r: 255, g: 255, b: 255 },
    // bg next
    { x: 59, y: 274, r: 43, g: 132, b: 216 },
    { x: 574, y: 279, r: 43, g: 132, b: 216 },
    // bg
    { x: 44, y: 331, r: 238, g: 238, b: 238 },
    { x: 615, y: 337, r: 238, g: 238, b: 238 },
], { x: 247, y: 205 }, // check
{ x: 247, y: 205 } // check
);
var logInCaptchaImNotRobotChecked = new Rerouter_1.Page('logInCaptchaImNotRobotChecked', [
    // captcha logo
    { x: 374, y: 198, r: 249, g: 249, b: 249 },
    { x: 384, y: 203, r: 239, g: 239, b: 239 },
    { x: 384, y: 197, r: 35, g: 65, b: 161 },
    // bg captcha block
    { x: 270, y: 191, r: 249, g: 249, b: 249 },
    { x: 335, y: 218, r: 249, g: 249, b: 249 },
    { x: 209, y: 207, r: 238, g: 238, b: 238 },
    { x: 291, y: 170, r: 238, g: 238, b: 238 },
    { x: 328, y: 233, r: 238, g: 238, b: 238 },
    { x: 447, y: 196, r: 238, g: 238, b: 238 },
    // bg next
    { x: 59, y: 274, r: 43, g: 132, b: 216 },
    { x: 574, y: 279, r: 43, g: 132, b: 216 },
    // bg
    { x: 44, y: 331, r: 238, g: 238, b: 238 },
    { x: 615, y: 337, r: 238, g: 238, b: 238 },
], { x: 330, y: 270 }, // next
{ x: 330, y: 270 } // next
);


/***/ }),

/***/ "./src/tasks/taskNames.ts":
/*!********************************!*\
  !*** ./src/tasks/taskNames.ts ***!
  \********************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TASKS = void 0;
var TASKS;
(function (TASKS) {
    TASKS["restartAppPerDay"] = "restartAppPerDay";
    TASKS["settingDefault"] = "settingDefault";
    TASKS["settingResetLeagueProgress"] = "settingResetLeagueProgress";
    TASKS["playLeagueGame"] = "playLeagueGame";
    TASKS["playBattleGame"] = "playBattleGame";
    TASKS["adReward"] = "adReward";
    TASKS["weeklyMission"] = "weeklyMission";
    TASKS["receiveInbox"] = "receiveInbox";
    TASKS["stayInLogin"] = "stayInLogin";
    TASKS["uploadCache"] = "uploadCache";
    TASKS["sendAliveEvent"] = "sendAliveEvent";
    TASKS["sendWaitEvent"] = "sendWaitEvent";
})(TASKS = exports.TASKS || (exports.TASKS = {}));


/***/ }),

/***/ "./src/tasks/weeklyMission.ts":
/*!************************************!*\
  !*** ./src/tasks/weeklyMission.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRoutes = exports.addTask = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
var modules_1 = __webpack_require__(/*! ../modules */ "./src/modules/index.ts");
var taskNames_1 = __webpack_require__(/*! ./taskNames */ "./src/tasks/taskNames.ts");
var CONSTANTS = __importStar(__webpack_require__(/*! ../constants */ "./src/constants.ts"));
var utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
function addTask() {
    modules_1.rerouter.addTask({
        name: taskNames_1.TASKS.weeklyMission,
        // maxTaskRunTimes: 1,
        minRoundInterval: CONSTANTS.dayInMs,
        maxTaskDuring: 30 * CONSTANTS.minuteInMs,
        forceStop: true,
    });
}
exports.addTask = addTask;
function addRoutes() {
    modules_1.rerouter.addRoute({
        path: "/".concat(achievementMission.name),
        match: achievementMission,
        action: function (context, image) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.weeklyMission) {
                modules_1.rerouter.goBack(achievementMission);
                return;
            }
            // collect daily one if available
            var x = 613;
            var canCollectColor = { r: 8, g: 125, b: 255 };
            for (var y = 128; y < 260; y += 44) {
                var canCollect = (0, utils_1.isSameColor)(image, __assign({ x: x, y: y }, canCollectColor));
                if (canCollect) {
                    modules_1.rerouter.screen.tap({ x: x, y: y });
                    console.log('collect');
                    Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
                }
            }
            modules_1.rerouter.goNext(achievementMission);
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(maxCurrencyAlert.name),
        match: maxCurrencyAlert,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name === taskNames_1.TASKS.weeklyMission) {
                console.log('cannot collect more currency, skip weekly mission');
                finishRound(true);
            }
            modules_1.rerouter.goBack(maxCurrencyAlert);
            modules_1.state.onRunning();
        },
    });
    modules_1.rerouter.addRoute({
        path: "/".concat(weeklyMissionBox.name),
        match: weeklyMissionBox,
        action: function (context, image, matched, finishRound) {
            modules_1.state.checkUploadSession();
            if (context.task.name !== taskNames_1.TASKS.weeklyMission) {
                modules_1.rerouter.goBack(weeklyMissionBox);
                return;
            }
            var canCollectColor = { r: 189, g: 194, b: 197 };
            var _a = [27, 115], x = _a[0], y = _a[1];
            var _b = [198, 75], w = _b[0], h = _b[1];
            // click openBox only when all mission is complete
            // bc it is abled once a week
            for (var dx = 0; dx < 3 * w; dx += w) {
                for (var dy = 0; dy < 3 * h; dy += h) {
                    var canCollect = (0, utils_1.isSameColor)(image, __assign({ x: x + dx, y: y + dy }, canCollectColor));
                    if (!canCollect) {
                        console.log('wait all weekly mission complete');
                        finishRound(true);
                        modules_1.state.onRunning();
                        return;
                    }
                }
            }
            console.log('click open');
            modules_1.rerouter.screen.tap(weeklyMissionBoxBtns.openBox);
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            // TODO: let user select the item they want in the future
            // select the left bottom one
            console.log('select right bottom item');
            modules_1.rerouter.screen.tap({ x: x + 2 * w, y: y + 2 * h });
            Rerouter_1.Utils.sleep(CONSTANTS.sleepMedium);
            console.log('receive right bottom item');
            modules_1.rerouter.screen.tap(weeklyMissionBoxBtns.receiveReward);
            // enter receive confirm page
            finishRound(true);
            modules_1.state.onRunning();
        },
        debug: true,
    });
}
exports.addRoutes = addRoutes;
var achievementMission = new Rerouter_1.Page('achievementMission', [
    // today mission bg
    { x: 235, y: 55, r: 247, g: 247, b: 247 },
    { x: 231, y: 71, r: 247, g: 247, b: 247 },
    { x: 588, y: 72, r: 247, g: 247, b: 247 },
    // left section world record bg left bottom
    { x: 16, y: 293, r: 25, g: 40, b: 74 },
    // player head
    { x: 75, y: 88, r: 66, g: 59, b: 90 },
    // back
    { x: 31, y: 316, r: 214, g: 219, b: 214 },
], { x: 580, y: 278 }, // complete weekly mission box
{ x: 41, y: 320 });
var weeklyMissionBox = new Rerouter_1.Page('weeklyMissionBox', [
    // nav bar right part (p, star ...)
    { x: 299, y: 13, r: 214, g: 214, b: 214 },
    { x: 318, y: 9, r: 238, g: 234, b: 238 },
    { x: 313, y: 9, r: 238, g: 234, b: 238 },
    { x: 392, y: 9, r: 232, g: 229, b: 232 },
    { x: 385, y: 2, r: 214, g: 214, b: 214 },
    { x: 496, y: 13, r: 238, g: 166, b: 16 },
    { x: 483, y: 4, r: 214, g: 219, b: 216 },
    { x: 597, y: 10, r: 213, g: 226, b: 238 },
    { x: 628, y: 14, r: 214, g: 211, b: 214 },
    // bg of table
    { x: 14, y: 82, r: 65, g: 65, b: 67 },
    { x: 16, y: 288, r: 33, g: 44, b: 58 },
    { x: 615, y: 100, r: 33, g: 36, b: 41 },
    { x: 613, y: 283, r: 33, g: 44, b: 58 },
    // description footer
    { x: 80, y: 307, r: 202, g: 201, b: 196 },
    { x: 89, y: 315, r: 49, g: 61, b: 34 },
    { x: 103, y: 319, r: 73, g: 83, b: 66 },
    // back btn
    { x: 24, y: 314, r: 214, g: 214, b: 214 },
    { x: 42, y: 317, r: 214, g: 219, b: 214 },
    { x: 31, y: 331, r: 214, g: 219, b: 214 },
], { x: 41, y: 320 }, // back btn
{ x: 41, y: 320 });
var weeklyMissionBoxBtns = {
    openBox: { x: 418, y: 325 },
    receiveReward: { x: 561, y: 326 },
};
var maxCurrencyAlert = new Rerouter_1.Page('maxCurrencyAlert', [
    // max currency alert title
    { x: 232, y: 46, r: 197, g: 198, b: 206 },
    { x: 274, y: 52, r: 137, g: 139, b: 146 },
    { x: 314, y: 53, r: 197, g: 198, b: 206 },
    { x: 376, y: 53, r: 16, g: 24, b: 33 },
    { x: 395, y: 53, r: 16, g: 24, b: 33 },
    { x: 455, y: 55, r: 197, g: 198, b: 206 },
    // x
    { x: 605, y: 44, r: 74, g: 72, b: 74 },
    // ok
    { x: 292, y: 312, r: 8, g: 105, b: 247 },
    { x: 323, y: 309, r: 254, g: 254, b: 255 },
    { x: 361, y: 312, r: 8, g: 105, b: 247 },
], { x: 605, y: 46 }, // x
{ x: 605, y: 46 });


/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSameColorCount = exports.getColorCountInRange = exports.getPointsInRange = exports.isSameColor = exports.arrayFind = exports.endsWith = exports.executeCommands = exports.SavePageReference = exports.isImageMatchColorCnt = exports.decodeHex = void 0;
var Rerouter_1 = __webpack_require__(/*! Rerouter */ "./node_modules/Rerouter/dist/index.js");
function decodeHex(hex) {
    try {
        if (typeof xDecodeHex !== 'undefined') {
            return xDecodeHex(hex) || '';
        }
    }
    catch (e) { }
    return '';
}
exports.decodeHex = decodeHex;
function isImageMatchColorCnt(img, colorCnts) {
    for (var _i = 0, colorCnts_1 = colorCnts; _i < colorCnts_1.length; _i++) {
        var _a = colorCnts_1[_i], leftTop = _a[0], rightBottom = _a[1], colorCntExpected = _a[2];
        var colorCnt = getColorCountInRange(img, leftTop, rightBottom);
        for (var _b = 0, _c = Object.keys(colorCntExpected); _b < _c.length; _b++) {
            var k = _c[_b];
            var expected = colorCntExpected[k];
            var actual = colorCnt[k] || 0;
            if (Math.abs(expected - actual) > 2) {
                console.log("".concat(k, " expected ").concat(expected, " actual ").concat(actual));
                return false;
            }
        }
    }
    return true;
}
exports.isImageMatchColorCnt = isImageMatchColorCnt;
function SavePageReference(img, page) {
    var name = page.name, points = page.points;
    var radius = 3;
    var rgba = [255, 20, 147, 0];
    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {
        var _a = points_1[_i], x = _a.x, y = _a.y;
        drawCircle.apply(void 0, __spreadArray([img, x, y, radius], rgba, false));
    }
    saveImage(img, "/sdcard/Pictures/Screenshots/robotmon/mlb/".concat(name, ".png"));
    console.log("[SavePageReference]: ".concat(name));
}
exports.SavePageReference = SavePageReference;
function executeCommands() {
    var commands = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        commands[_i] = arguments[_i];
    }
    var results = [];
    for (var _a = 0, commands_1 = commands; _a < commands_1.length; _a++) {
        var command = commands_1[_a];
        var res = execute(command);
        if (endsWith(res, 'exit status 1')) {
            console.log("[Error]: ".concat(command, " :\n ").concat(res, "\n"));
        }
        else {
            // console.log(`[Ok]: ${command} :\n ${res}\n`);
            console.log("[Ok]: ".concat(command));
        }
        results.push(res);
    }
    return results;
}
exports.executeCommands = executeCommands;
function endsWith(str, suffix) {
    return str.indexOf(suffix, str.length - suffix.length) !== -1;
}
exports.endsWith = endsWith;
function arrayFind(arr, condition) {
    for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {
        var el = arr_1[_i];
        if (condition(el)) {
            return el;
        }
    }
    return undefined;
}
exports.arrayFind = arrayFind;
function isSameColor(image, target, thres) {
    if (thres === void 0) { thres = 0.8; }
    var imageRGB;
    if ('r' in image) {
        // image is RGB
        imageRGB = image;
    }
    else if ('x' in target) {
        // image is Image, target is XYRGB
        imageRGB = getImageColor(image, target.x, target.y);
    }
    if (imageRGB === undefined) {
        throw new Error('target is not XYRGB');
    }
    var score = Rerouter_1.Utils.identityColor(imageRGB, target);
    return score > thres;
}
exports.isSameColor = isSameColor;
function getPointsInRange(image, leftTop, rightBottom) {
    var points = [];
    var x1 = leftTop.x, y1 = leftTop.y;
    var x2 = rightBottom.x, y2 = rightBottom.y;
    for (var x = x1; x <= x2; x++) {
        for (var y = y1; y <= y2; y++) {
            var _a = getImageColor(image, x, y), r = _a.r, g = _a.g, b = _a.b;
            points.push({ x: x, y: y, r: r, g: g, b: b });
        }
    }
    return points;
}
exports.getPointsInRange = getPointsInRange;
function getColorCountInRange(image, leftTop, rightBottom) {
    var cnt = {};
    var x1 = leftTop.x, y1 = leftTop.y;
    var x2 = rightBottom.x, y2 = rightBottom.y;
    for (var x = x1; x <= x2; x++) {
        for (var y = y1; y <= y2; y++) {
            var _a = getImageColor(image, x, y), r = _a.r, g = _a.g, b = _a.b;
            var color = "".concat(r, "-").concat(g, "-").concat(b);
            if (cnt[color] === undefined) {
                cnt[color] = 0;
            }
            cnt[color]++;
        }
    }
    return cnt;
}
exports.getColorCountInRange = getColorCountInRange;
function isSameColorCount(cnt1, cnt2) {
    var keys1 = Object.keys(cnt1);
    var keys2 = Object.keys(cnt2);
    if (keys1.length !== keys2.length) {
        return false;
    }
    for (var _i = 0, keys1_1 = keys1; _i < keys1_1.length; _i++) {
        var key = keys1_1[_i];
        if (cnt1[key] !== cnt2[key]) {
            return false;
        }
    }
    return true;
}
exports.isSameColorCount = isSameColorCount;


/***/ }),

/***/ "./src/version.ts":
/*!************************!*\
  !*** ./src/version.ts ***!
  \************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PRODUCTION_VERSION_CODE = exports.GIT_VERSION = void 0;
exports.GIT_VERSION = '250301_1';
exports.PRODUCTION_VERSION_CODE = '15.69';


/***/ }),

/***/ "./node_modules/core-js/es/array/find-index.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/es/array/find-index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es.array.find-index */ "./node_modules/core-js/modules/es.array.find-index.js");
var entryUnbind = __webpack_require__(/*! ../../internals/entry-unbind */ "./node_modules/core-js/internals/entry-unbind.js");

module.exports = entryUnbind('Array', 'findIndex');


/***/ }),

/***/ "./node_modules/core-js/es/object/assign.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/es/object/assign.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

__webpack_require__(/*! ../../modules/es.object.assign */ "./node_modules/core-js/modules/es.object.assign.js");
var path = __webpack_require__(/*! ../../internals/path */ "./node_modules/core-js/internals/path.js");

module.exports = path.Object.assign;


/***/ }),

/***/ "./node_modules/core-js/internals/a-callable.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/a-callable.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "./node_modules/core-js/internals/try-to-string.js");

var $TypeError = TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw new $TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "./node_modules/core-js/internals/add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ./node_modules/core-js/internals/add-to-unscopables.js ***!
  \**************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "./node_modules/core-js/internals/object-create.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js").f);

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] === undefined) {
  defineProperty(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "./node_modules/core-js/internals/an-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/an-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $String = String;
var $TypeError = TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw new $TypeError($String(argument) + ' is not an object');
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-includes.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/array-includes.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "./node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el !== el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value !== value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-iteration.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/array-iteration.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "./node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "./node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "./node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE === 1;
  var IS_FILTER = TYPE === 2;
  var IS_SOME = TYPE === 3;
  var IS_EVERY = TYPE === 4;
  var IS_FIND_INDEX = TYPE === 6;
  var IS_FILTER_REJECT = TYPE === 7;
  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-constructor.js ***!
  \*********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "./node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "./node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var $Array = Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? $Array : C;
};


/***/ }),

/***/ "./node_modules/core-js/internals/array-species-create.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/array-species-create.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "./node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof-raw.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/classof-raw.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "./node_modules/core-js/internals/classof.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/classof.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "./node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var $Object = Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) === 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) === 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/copy-constructor-properties.js":
/*!***********************************************************************!*\
  !*** ./node_modules/core-js/internals/copy-constructor-properties.js ***!
  \***********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "./node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-non-enumerable-property.js":
/*!**************************************************************************!*\
  !*** ./node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \**************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "./node_modules/core-js/internals/create-property-descriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/core-js/internals/create-property-descriptor.js ***!
  \**********************************************************************/
/***/ (function(module) {

"use strict";

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-built-in.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/define-built-in.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var makeBuiltIn = __webpack_require__(/*! ../internals/make-built-in */ "./node_modules/core-js/internals/make-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

module.exports = function (O, key, value, options) {
  if (!options) options = {};
  var simple = options.enumerable;
  var name = options.name !== undefined ? options.name : key;
  if (isCallable(value)) makeBuiltIn(value, name, options);
  if (options.global) {
    if (simple) O[key] = value;
    else defineGlobalProperty(key, value);
  } else {
    try {
      if (!options.unsafe) delete O[key];
      else if (O[key]) simple = true;
    } catch (error) { /* empty */ }
    if (simple) O[key] = value;
    else definePropertyModule.f(O, key, {
      value: value,
      enumerable: false,
      configurable: !options.nonConfigurable,
      writable: !options.nonWritable
    });
  } return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/define-global-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/define-global-property.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "./node_modules/core-js/internals/descriptors.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/descriptors.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/document-all.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/document-all.js ***!
  \********************************************************/
/***/ (function(module) {

"use strict";

var documentAll = typeof document == 'object' && document.all;

// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot
// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing
var IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;

module.exports = {
  all: documentAll,
  IS_HTMLDDA: IS_HTMLDDA
};


/***/ }),

/***/ "./node_modules/core-js/internals/document-create-element.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/document-create-element.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "./node_modules/core-js/internals/engine-user-agent.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-user-agent.js ***!
  \*************************************************************/
/***/ (function(module) {

"use strict";

module.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';


/***/ }),

/***/ "./node_modules/core-js/internals/engine-v8-version.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/engine-v8-version.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "./node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "./node_modules/core-js/internals/entry-unbind.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/entry-unbind.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (CONSTRUCTOR, METHOD) {
  return uncurryThis(global[CONSTRUCTOR].prototype[METHOD]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/enum-bug-keys.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "./node_modules/core-js/internals/export.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/export.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "./node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var defineBuiltIn = __webpack_require__(/*! ../internals/define-built-in */ "./node_modules/core-js/internals/define-built-in.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "./node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "./node_modules/core-js/internals/is-forced.js");

/*
  options.target         - name of the target object
  options.global         - target is the global object
  options.stat           - export as static methods of target
  options.proto          - export as prototype methods of target
  options.real           - real prototype method for the `pure` version
  options.forced         - export even if the native feature is available
  options.bind           - bind methods to the target, required for the `pure` version
  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe         - use the simple assignment of property instead of delete + defineProperty
  options.sham           - add a flag to not completely full polyfills
  options.enumerable     - export as enumerable property
  options.dontCallGetSet - prevent calling a getter on target
  options.name           - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || defineGlobalProperty(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.dontCallGetSet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    defineBuiltIn(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/fails.js":
/*!*************************************************!*\
  !*** ./node_modules/core-js/internals/fails.js ***!
  \*************************************************/
/***/ (function(module) {

"use strict";

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-context.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this-clause */ "./node_modules/core-js/internals/function-uncurry-this-clause.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-bind-native.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-bind-native.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-function-prototype-bind -- safe
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "./node_modules/core-js/internals/function-call.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-call.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-name.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/function-name.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this-clause.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this-clause.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = function (fn) {
  // Nashorn bug:
  //   https://github.com/zloirock/core-js/issues/1128
  //   https://github.com/zloirock/core-js/issues/1130
  if (classofRaw(fn) === 'Function') return uncurryThis(fn);
};


/***/ }),

/***/ "./node_modules/core-js/internals/function-uncurry-this.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/function-uncurry-this.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "./node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var call = FunctionPrototype.call;
var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);

module.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {
  return function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-built-in.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/get-built-in.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "./node_modules/core-js/internals/get-method.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/get-method.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "./node_modules/core-js/internals/a-callable.js");
var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return isNullOrUndefined(func) ? undefined : aCallable(func);
};


/***/ }),

/***/ "./node_modules/core-js/internals/global.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/global.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var check = function (it) {
  return it && it.Math === Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || this || Function('return this')();


/***/ }),

/***/ "./node_modules/core-js/internals/has-own-property.js":
/*!************************************************************!*\
  !*** ./node_modules/core-js/internals/has-own-property.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
// eslint-disable-next-line es/no-object-hasown -- safe
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "./node_modules/core-js/internals/hidden-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/hidden-keys.js ***!
  \*******************************************************/
/***/ (function(module) {

"use strict";

module.exports = {};


/***/ }),

/***/ "./node_modules/core-js/internals/html.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/html.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "./node_modules/core-js/internals/ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/ie8-dom-define.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a !== 7;
});


/***/ }),

/***/ "./node_modules/core-js/internals/indexed-object.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/indexed-object.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

var $Object = Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !$Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) === 'String' ? split(it, '') : $Object(it);
} : $Object;


/***/ }),

/***/ "./node_modules/core-js/internals/inspect-source.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/inspect-source.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "./node_modules/core-js/internals/internal-state.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/internal-state.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/weak-map-basic-detection */ "./node_modules/core-js/internals/weak-map-basic-detection.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "./node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw new TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  /* eslint-disable no-self-assign -- prototype methods protection */
  store.get = store.get;
  store.has = store.has;
  store.set = store.set;
  /* eslint-enable no-self-assign -- prototype methods protection */
  set = function (it, metadata) {
    if (store.has(it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    store.set(it, metadata);
    return metadata;
  };
  get = function (it) {
    return store.get(it) || {};
  };
  has = function (it) {
    return store.has(it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-array.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/is-array.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(/*! ../internals/classof-raw */ "./node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) === 'Array';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-callable.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/is-callable.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = $documentAll.IS_HTMLDDA ? function (argument) {
  return typeof argument == 'function' || argument === documentAll;
} : function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-constructor.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/internals/is-constructor.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "./node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.test(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "./node_modules/core-js/internals/is-forced.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-forced.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value === POLYFILL ? true
    : value === NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "./node_modules/core-js/internals/is-null-or-undefined.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/is-null-or-undefined.js ***!
  \****************************************************************/
/***/ (function(module) {

"use strict";

// we can't use just `it == null` since of `document.all` special case
// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec
module.exports = function (it) {
  return it === null || it === undefined;
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var $documentAll = __webpack_require__(/*! ../internals/document-all */ "./node_modules/core-js/internals/document-all.js");

var documentAll = $documentAll.all;

module.exports = $documentAll.IS_HTMLDDA ? function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;
} : function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "./node_modules/core-js/internals/is-pure.js":
/*!***************************************************!*\
  !*** ./node_modules/core-js/internals/is-pure.js ***!
  \***************************************************/
/***/ (function(module) {

"use strict";

module.exports = false;


/***/ }),

/***/ "./node_modules/core-js/internals/is-symbol.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/is-symbol.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "./node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var $Object = Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/length-of-array-like.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/length-of-array-like.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toLength = __webpack_require__(/*! ../internals/to-length */ "./node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/make-built-in.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/make-built-in.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "./node_modules/core-js/internals/function-name.js").CONFIGURABLE);
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "./node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "./node_modules/core-js/internals/internal-state.js");

var enforceInternalState = InternalStateModule.enforce;
var getInternalState = InternalStateModule.get;
var $String = String;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;
var stringSlice = uncurryThis(''.slice);
var replace = uncurryThis(''.replace);
var join = uncurryThis([].join);

var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {
  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;
});

var TEMPLATE = String(String).split('String');

var makeBuiltIn = module.exports = function (value, name, options) {
  if (stringSlice($String(name), 0, 7) === 'Symbol(') {
    name = '[' + replace($String(name), /^Symbol\(([^)]*)\)/, '$1') + ']';
  }
  if (options && options.getter) name = 'get ' + name;
  if (options && options.setter) name = 'set ' + name;
  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });
    else value.name = name;
  }
  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {
    defineProperty(value, 'length', { value: options.arity });
  }
  try {
    if (options && hasOwn(options, 'constructor') && options.constructor) {
      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });
    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable
    } else if (value.prototype) value.prototype = undefined;
  } catch (error) { /* empty */ }
  var state = enforceInternalState(value);
  if (!hasOwn(state, 'source')) {
    state.source = join(TEMPLATE, typeof name == 'string' ? name : '');
  } return value;
};

// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
// eslint-disable-next-line no-extend-native -- required
Function.prototype.toString = makeBuiltIn(function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
}, 'toString');


/***/ }),

/***/ "./node_modules/core-js/internals/math-trunc.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/math-trunc.js ***!
  \******************************************************/
/***/ (function(module) {

"use strict";

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
// eslint-disable-next-line es/no-math-trunc -- safe
module.exports = Math.trunc || function trunc(x) {
  var n = +x;
  return (n > 0 ? floor : ceil)(n);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-assign.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-assign.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "./node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol('assign detection');
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "./node_modules/core-js/internals/object-create.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/object-create.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "./node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "./node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "./node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "./node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
// eslint-disable-next-line es/no-object-create -- safe
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-properties.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-properties.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "./node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "./node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-define-property.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-define-property.js ***!
  \******************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "./node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");

var $TypeError = TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!******************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "./node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "./node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "./node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "./node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-names.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-names.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!***************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "./node_modules/core-js/internals/object-is-prototype-of.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/object-is-prototype-of.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys-internal.js":
/*!****************************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys-internal.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "./node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "./node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "./node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-keys.js":
/*!*******************************************************!*\
  !*** ./node_modules/core-js/internals/object-keys.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "./node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "./node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "./node_modules/core-js/internals/object-property-is-enumerable.js":
/*!*************************************************************************!*\
  !*** ./node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "./node_modules/core-js/internals/ordinary-to-primitive.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");

var $TypeError = TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw new $TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "./node_modules/core-js/internals/own-keys.js":
/*!****************************************************!*\
  !*** ./node_modules/core-js/internals/own-keys.js ***!
  \****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "./node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "./node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "./node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "./node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "./node_modules/core-js/internals/path.js":
/*!************************************************!*\
  !*** ./node_modules/core-js/internals/path.js ***!
  \************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "./node_modules/core-js/internals/require-object-coercible.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/require-object-coercible.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isNullOrUndefined = __webpack_require__(/*! ../internals/is-null-or-undefined */ "./node_modules/core-js/internals/is-null-or-undefined.js");

var $TypeError = TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (isNullOrUndefined(it)) throw new $TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-key.js":
/*!******************************************************!*\
  !*** ./node_modules/core-js/internals/shared-key.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "./node_modules/core-js/internals/shared-store.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/shared-store.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var defineGlobalProperty = __webpack_require__(/*! ../internals/define-global-property */ "./node_modules/core-js/internals/define-global-property.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || defineGlobalProperty(SHARED, {});

module.exports = store;


/***/ }),

/***/ "./node_modules/core-js/internals/shared.js":
/*!**************************************************!*\
  !*** ./node_modules/core-js/internals/shared.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "./node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "./node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.33.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.33.1/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "./node_modules/core-js/internals/symbol-constructor-detection.js":
/*!************************************************************************!*\
  !*** ./node_modules/core-js/internals/symbol-constructor-detection.js ***!
  \************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "./node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");

var $String = global.String;

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol('symbol detection');
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,
  // of course, fail.
  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "./node_modules/core-js/internals/to-absolute-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-absolute-index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-indexed-object.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/to-indexed-object.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "./node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-integer-or-infinity.js":
/*!******************************************************************!*\
  !*** ./node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var trunc = __webpack_require__(/*! ../internals/math-trunc */ "./node_modules/core-js/internals/math-trunc.js");

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- NaN check
  return number !== number || number === 0 ? 0 : trunc(number);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-length.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-length.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "./node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-object.js":
/*!*****************************************************!*\
  !*** ./node_modules/core-js/internals/to-object.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "./node_modules/core-js/internals/require-object-coercible.js");

var $Object = Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return $Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-primitive.js":
/*!********************************************************!*\
  !*** ./node_modules/core-js/internals/to-primitive.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "./node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "./node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "./node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "./node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var $TypeError = TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw new $TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-property-key.js":
/*!***********************************************************!*\
  !*** ./node_modules/core-js/internals/to-property-key.js ***!
  \***********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "./node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "./node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "./node_modules/core-js/internals/to-string-tag-support.js":
/*!*****************************************************************!*\
  !*** ./node_modules/core-js/internals/to-string-tag-support.js ***!
  \*****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "./node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "./node_modules/core-js/internals/try-to-string.js":
/*!*********************************************************!*\
  !*** ./node_modules/core-js/internals/try-to-string.js ***!
  \*********************************************************/
/***/ (function(module) {

"use strict";

var $String = String;

module.exports = function (argument) {
  try {
    return $String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "./node_modules/core-js/internals/uid.js":
/*!***********************************************!*\
  !*** ./node_modules/core-js/internals/uid.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "./node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "./node_modules/core-js/internals/use-symbol-as-uid.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "./node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!*******************************************************************!*\
  !*** ./node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \*******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "./node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "./node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype !== 42;
});


/***/ }),

/***/ "./node_modules/core-js/internals/weak-map-basic-detection.js":
/*!********************************************************************!*\
  !*** ./node_modules/core-js/internals/weak-map-basic-detection.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "./node_modules/core-js/internals/is-callable.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));


/***/ }),

/***/ "./node_modules/core-js/internals/well-known-symbol.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/internals/well-known-symbol.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "./node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "./node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "./node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "./node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/symbol-constructor-detection */ "./node_modules/core-js/internals/symbol-constructor-detection.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "./node_modules/core-js/internals/use-symbol-as-uid.js");

var Symbol = global.Symbol;
var WellKnownSymbolsStore = shared('wks');
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name)) {
    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)
      ? Symbol[name]
      : createWellKnownSymbol('Symbol.' + name);
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "./node_modules/core-js/modules/es.array.find-index.js":
/*!*************************************************************!*\
  !*** ./node_modules/core-js/modules/es.array.find-index.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var $findIndex = (__webpack_require__(/*! ../internals/array-iteration */ "./node_modules/core-js/internals/array-iteration.js").findIndex);
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "./node_modules/core-js/internals/add-to-unscopables.js");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
// eslint-disable-next-line es/no-array-prototype-findindex -- testing
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "./node_modules/core-js/modules/es.object.assign.js":
/*!**********************************************************!*\
  !*** ./node_modules/core-js/modules/es.object.assign.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "./node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "./node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
var exports = __webpack_exports__;
/*!******************!*\
  !*** ./index.ts ***!
  \******************/

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stop = exports.start = void 0;
var src_1 = __webpack_require__(/*! ./src */ "./src/index.ts");
var mlb9i;
function start(jsonConfig) {
    mlb9i = new src_1.MLB9I(jsonConfig);
    mlb9i.start();
}
exports.start = start;
function stop() {
    if (mlb9i === undefined) {
        return;
    }
    mlb9i.stop();
    mlb9i = undefined;
}
exports.stop = stop;
window.start = start;
window.stop = stop;

}();
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw4REFBOEQ7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBLDhIQUE4SDtBQUM5SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLGdCQUFnQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsZ0JBQWdCO0FBQzVHLCtCQUErQixpREFBaUQ7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGdCQUFnQjtBQUM3RTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtDQUFrQztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNFBBQTRQLFlBQVksd0JBQXdCO0FBQ2hTO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNEJBQTRCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix1QkFBdUI7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsdUJBQXVCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0M7QUFDL0MsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBLHVDQUF1QztBQUN2QztBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0osZ0JBQWdCO0FBQ2hCOzs7Ozs7Ozs7OztBQ3B1QmE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkLGNBQWMsbUJBQU8sQ0FBQywwREFBUztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixXQUFXO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGNBQWM7QUFDZDs7Ozs7Ozs7Ozs7QUNoTmE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsMkJBQTJCLEdBQUcsNkJBQTZCLEdBQUcsMEJBQTBCLEdBQUcsaUJBQWlCLEdBQUcsWUFBWTtBQUNoSjtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CLCtCQUErQjtBQUMvQixnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsWUFBWTtBQUNaO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsK0JBQStCO0FBQy9CLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxpQkFBaUI7QUFDakIsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0NBQXNDLGtCQUFrQixLQUFLO0FBQzlEOzs7Ozs7Ozs7OztBQ3ZGYTtBQUNiO0FBQ0EsNkVBQTZFLE9BQU87QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYSxHQUFHLFdBQVc7QUFDM0I7QUFDQTtBQUNBLHFCQUFxQix1QkFBdUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxvQ0FBb0Msb0JBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLG9CQUFvQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhGQUE4RjtBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwyQkFBMkI7QUFDdEQ7QUFDQSx1Q0FBdUMsMkJBQTJCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVCQUF1QjtBQUNoRDtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyxvQ0FBb0M7QUFDcEMsOEJBQThCO0FBQzlCO0FBQ0Esd0pBQXdKLDZCQUE2QjtBQUNyTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCw4Q0FBOEMsNkNBQTZDO0FBQzNGLG9DQUFvQyxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDRCQUE0QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxhQUFhO0FBQ2I7Ozs7Ozs7Ozs7O0FDelJhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCOzs7Ozs7Ozs7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGdCQUFnQjtBQUNsRDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsZ0NBQWdDLGtCQUFrQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7Ozs7Ozs7OztBQ2hDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0Esc0JBQXNCLGNBQWM7QUFDcEM7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBLDJCQUEyQixPQUFPO0FBQ2xDO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSx5Q0FBeUMsa0JBQWtCO0FBQzNEO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxrQ0FBa0MsdUJBQXVCO0FBQ3pEO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQSxnQ0FBZ0Msa0JBQWtCO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0Esa0NBQWtDLGdCQUFnQjtBQUNsRDtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0EsbUNBQW1DLGtCQUFrQjtBQUNyRDtBQUNBLHdCQUF3QixPQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUM7Ozs7Ozs7Ozs7O0FDL0ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7QUNwQkE7QUFDQSxjQUFjLG1CQUFPLENBQUMsNENBQU87QUFDN0IsYUFBYSw4RUFBdUI7QUFDcEMsaUJBQWlCLG1CQUFPLENBQUMsb0RBQVc7QUFDcEMsWUFBWSw2RUFBc0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7Ozs7Ozs7Ozs7Ozs7OztBQy9KWSxvQkFBWSxHQUFHLElBQUksQ0FBQzs7Ozs7Ozs7Ozs7Ozs7O0FDQWpDLG1FQUFvQztBQUVwQyxvQkFBb0I7QUFDcEIsSUFBTSxVQUFVLEdBQVcsSUFBSyxDQUFDO0FBQ3BCLGtCQUFVLEdBQVcsRUFBRSxHQUFHLFVBQVUsQ0FBQztBQUNyQyxnQkFBUSxHQUFXLEVBQUUsR0FBRyxrQkFBVSxDQUFDO0FBQ25DLGVBQU8sR0FBVyxFQUFFLEdBQUcsZ0JBQVEsQ0FBQztBQUU3QywwQkFBMEI7QUFDYixvQ0FBNEIsR0FBRyxDQUFDLEdBQUcsZ0JBQVEsQ0FBQztBQUV6RCxvQkFBb0I7QUFDUCxtQkFBVyxHQUFXLGtFQUFrRSxDQUFDO0FBQ3pGLHFCQUFhLEdBQUcsRUFBRSxDQUFDO0FBRWhDLGtCQUFrQjtBQUNMLG9CQUFZLEdBQUc7SUFDMUIsTUFBTSxFQUFFLHFCQUFTLEVBQUMsa0dBQWtHLENBQUM7SUFDckgsT0FBTyxFQUFFLE9BQU87Q0FDakIsQ0FBQztBQUVXLHFCQUFhLEdBQVcsMEJBQTBCLENBQUM7QUFFbkQsZ0JBQVEsR0FBRyxZQUFZLENBQUM7QUFDeEIsaUJBQVMsR0FBRyxHQUFHLENBQUM7QUFDaEIsZ0JBQVEsR0FBRyxHQUFHLENBQUM7QUFFZixnQ0FBd0IsR0FBRyxDQUFDLEdBQUcsVUFBVSxDQUFDO0FBQzFDLGlCQUFTLEdBQUcsR0FBRyxHQUFHLFVBQVUsQ0FBQztBQUM3QixvQkFBWSxHQUFHLElBQUksR0FBRyxVQUFVLENBQUM7QUFDakMscUJBQWEsR0FBRyxFQUFFLEdBQUcsVUFBVSxDQUFDO0FBQ2hDLHlCQUFpQixHQUFHLEdBQUcsQ0FBQztBQUVyQyx3QkFBd0I7QUFDWCxrQkFBVSxHQUFXLEdBQUcsR0FBRyxVQUFVLENBQUM7QUFDdEMsbUJBQVcsR0FBVyxDQUFDLEdBQUcsVUFBVSxDQUFDO0FBQ3JDLGlCQUFTLEdBQVcsQ0FBQyxHQUFHLFVBQVUsQ0FBQztBQUNuQyx5QkFBaUIsR0FBVyxFQUFFLEdBQUcsVUFBVSxDQUFDO0FBQzVDLGtCQUFVLEdBQVcsRUFBRSxHQUFHLFVBQVUsQ0FBQztBQUNyQyx3QkFBZ0IsR0FBVyxDQUFDLEdBQUcsVUFBVSxDQUFDO0FBRXZELHVCQUF1QjtBQUNWLHVDQUErQixHQUFXLEVBQUUsR0FBRyxrQkFBVSxDQUFDO0FBQzFELGdDQUF3QixHQUFXLENBQUMsR0FBRyxrQkFBVSxDQUFDO0FBQ2xELGtDQUEwQixHQUFXLENBQUMsR0FBRyxrQkFBVSxDQUFDO0FBQ3BELDZCQUFxQixHQUFXLENBQUMsR0FBRyxnQkFBUSxDQUFDO0FBRTFELDBCQUEwQjtBQUNiLHFDQUE2QixHQUFHLEVBQUUsQ0FBQztBQUNuQyw2QkFBcUIsR0FBRyxDQUFDLEVBQUUsR0FBRyxxQ0FBNkIsQ0FBQyxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxlQUFlO0FBRW5HLHdCQUF3QjtBQUNYLHFCQUFhLEdBQVcsSUFBSSxDQUFDO0FBQzdCLHFCQUFhLEdBQVcsSUFBSSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDckQxQyw4RkFBaUM7QUFDakMsbUVBQTJDO0FBQzNDLDJGQUF5QztBQUV6Qyx1RkFBdUY7QUFDdkYsU0FBZ0IsbUJBQW1CLENBQUMsVUFBK0QsRUFBRSxLQUFhO0lBQ2hILElBQU0sV0FBVyxHQUFHLENBQUMsS0FBSyxDQUFDO0lBQzNCLElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixLQUFLLEdBQUcsYUFBYSxFQUFFLENBQUM7S0FDekI7SUFFRCxJQUFNLE9BQU8sR0FBK0IsRUFBRSxDQUFDO0lBQy9DLEtBQXdCLFVBQVUsRUFBVix5QkFBVSxFQUFWLHdCQUFVLEVBQVYsSUFBVSxFQUFFO1FBQS9CLElBQU0sU0FBUztRQUNWLFVBQUksR0FBb0IsU0FBUyxLQUE3QixFQUFFLE1BQU0sR0FBWSxTQUFTLE9BQXJCLEVBQUUsS0FBSyxHQUFLLFNBQVMsTUFBZCxDQUFlO1FBQzFDLElBQU0sVUFBVSxHQUFXLEtBQUssYUFBTCxLQUFLLGNBQUwsS0FBSyxHQUFJLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQztRQUNoRSxLQUFLLElBQU0sQ0FBQyxJQUFJLE1BQU0sRUFBRTtZQUN0QixJQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDZCxTQUFjLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQTFDLENBQUMsU0FBRSxDQUFDLFNBQUUsQ0FBQyxPQUFtQyxDQUFDO1lBQ25ELElBQU0sS0FBSyxHQUFHLGdCQUFLLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxLQUFFLENBQUMsS0FBRSxDQUFDLEtBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUVsRCxJQUFNLFNBQVMsR0FBRyxLQUFLLElBQUksVUFBVSxDQUFDO1lBQ3RDLElBQUksU0FBUyxFQUFFO2dCQUNiLFNBQVM7YUFDVjtZQUVELElBQUksQ0FBQyxPQUFPLENBQUMsTUFBSSxDQUFDLEVBQUU7Z0JBQ2xCLE9BQU8sQ0FBQyxNQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7YUFDcEI7WUFDRCxPQUFPLENBQUMsTUFBSSxDQUFDLElBQUksb0JBQWEsV0FBVyxDQUFDLENBQUMsQ0FBQyx5QkFBZSxXQUFXLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEtBQUUsQ0FBQyxLQUFFLENBQUMsS0FBRSxDQUFDLGtCQUFRLENBQUMsZUFBSyxLQUFLLGdCQUFNLFVBQVUsUUFBSyxDQUFDO1NBQzdJO0tBQ0Y7SUFFRCxJQUFJLFdBQVcsRUFBRTtRQUNmLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNyQjtJQUNELEtBQUssSUFBTSxNQUFJLElBQUksT0FBTyxFQUFFO1FBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQWdCLE1BQUksZUFBSyxPQUFPLENBQUMsTUFBSSxDQUFDLE9BQUksQ0FBQyxDQUFDO0tBQ3pEO0FBQ0gsQ0FBQztBQWpDRCxrREFpQ0M7QUFFRCxnRkFBZ0Y7QUFDaEYsU0FBZ0IsbUJBQW1CLENBQ2pDLE9BQWlDLEVBQ2pDLFdBQXFDLEVBQ3JDLEtBQWEsRUFDYixRQUFnQixFQUNoQixhQUFtRDtJQUVuRCxJQUFNLEdBQUcsR0FBUSxFQUFFLENBQUM7SUFDcEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUM5QixJQUFNLFVBQVUsR0FBRyxhQUFhLEVBQUUsQ0FBQztRQUNuQyxJQUFNLE1BQU0sR0FBRyw0QkFBZ0IsRUFBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2xFLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNYLEtBQWdCLFVBQU0sRUFBTixpQkFBTSxFQUFOLG9CQUFNLEVBQU4sSUFBTSxFQUFFO2dCQUFuQixJQUFNLENBQUM7Z0JBQ1YsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUN6QjtZQUNELFNBQVM7U0FDVjtRQUNELEtBQWdCLFVBQU0sRUFBTixpQkFBTSxFQUFOLG9CQUFNLEVBQU4sSUFBTSxFQUFFO1lBQW5CLElBQU0sQ0FBQztZQUNWLElBQUksR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUN2QixHQUFHLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQzthQUN2QjtTQUNGO1FBRUQsWUFBWSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3pCLGdCQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3ZCO0lBRUQsSUFBSSxhQUFhLEVBQUU7UUFDakIsSUFBTSxTQUFTLEdBQUcsV0FBVyx1QkFBTSxhQUFhLEtBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFHLENBQUM7UUFDaEUsSUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN2QyxJQUFNLFFBQVEsR0FBRyxTQUFTLENBQUMsTUFBTSxHQUFHLEVBQUUsQ0FBQztRQUN2QyxLQUFLLElBQU0sQ0FBQyxJQUFJLEdBQUcsRUFBRTtZQUNuQixJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7Z0JBQ3BCLElBQU0sR0FBRyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUM7Z0JBQ3JCLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLEtBQUssTUFBTSxFQUFFO29CQUMxQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO2lCQUNoQjthQUNGO1NBQ0Y7S0FDRjtTQUFNO1FBQ0wsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7S0FDbEM7SUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3RCLENBQUM7QUEzQ0Qsa0RBMkNDO0FBRUQsU0FBUyxXQUFXLENBQUMsQ0FBUTtJQUMzQixPQUFPLGNBQU8sQ0FBQyxDQUFDLENBQUMsa0JBQVEsQ0FBQyxDQUFDLENBQUMsa0JBQVEsQ0FBQyxDQUFDLENBQUMsa0JBQVEsQ0FBQyxDQUFDLENBQUMsa0JBQVEsQ0FBQyxDQUFDLENBQUMsTUFBRyxDQUFDO0FBQ25FLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN4RkQsNEVBQXdCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ0F4Qiw4RkFBb0Q7QUFDcEQsK0VBQW9EO0FBQ3BELHlFQUFzSTtBQUN0SSwyRkFBeUM7QUFDekMscUZBQXFDO0FBQ3JDLG1FQUE4RTtBQUM5RSxrRkFBd0U7QUFFeEUsSUFBTSxZQUFZLEdBQVcsT0FBTyxDQUFDLHVCQUF1QixDQUFDO0FBQzdELElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFFeEM7SUFHRSxlQUFZLFVBQWU7UUFDekIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQ0FBcUMsQ0FBQyxDQUFDO1FBQ25ELE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQWtCLFlBQVksQ0FBRSxDQUFDLENBQUM7UUFDOUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxzQkFBZSxXQUFXLENBQUUsQ0FBQyxDQUFDO1FBQzFDLGVBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDekIsQ0FBQztJQUVNLHFCQUFLLEdBQVo7UUFDRSxJQUFJLGdCQUFNLENBQUMsWUFBWSxDQUFDLFdBQVcsRUFBRTtZQUNuQyxJQUFJLElBQUksR0FBRyxXQUFXLEVBQUUsQ0FBQztZQUN6QixJQUFJLElBQUksSUFBSSxpQkFBaUIsRUFBRTtnQkFDN0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ3BELE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQztnQkFDN0MsT0FBTzthQUNSO1NBQ0Y7UUFDRCxlQUFLLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztRQUNuQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztRQUN6QixJQUFJLElBQUksRUFBRTtZQUNSLGVBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNkLE9BQU87U0FDUjtRQUVELHFCQUFxQjtRQUNyQixlQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxrQkFBUSxDQUFDLG9CQUFvQixFQUFFLENBQUMsQ0FBQztRQUM3QyxJQUFNLFNBQVMsR0FBRyxJQUFJLGVBQUksQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFbkMsSUFBTSxLQUFLLEdBQUcsYUFBYSxFQUFFLENBQUM7UUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBbUIsRUFBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7UUFDckQsSUFBTSxPQUFPLEdBQUcsa0JBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFDNUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNyQixJQUFJLE9BQU8sRUFBRTtZQUNYLFNBQVMsQ0FBQyxLQUFLLEVBQUUsZ0RBQXlDLFNBQVMsQ0FBQyxJQUFJLFNBQU0sQ0FBQyxDQUFDO1lBQ2hGLGdCQUFLLENBQUMscUJBQXFCLENBQUM7Z0JBQzFCLEtBQUssRUFBRSxLQUFLO2dCQUNaLElBQUksRUFBRSxpQkFBVSxTQUFTLENBQUMsSUFBSSxDQUFFO2dCQUNoQyxNQUFNLEVBQUUsU0FBUyxDQUFDLE1BQU07Z0JBQ3hCLFVBQVUsRUFBRSx1Q0FBdUM7YUFDcEQsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxvQ0FBbUIsRUFBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsQ0FBQyxFQUFFLFNBQVMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7UUFDbEgsNEJBQWdCLEVBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FDbkUsV0FBQyxJQUFJLFFBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFPLENBQUMsQ0FBQyxDQUFDLGtCQUFRLENBQUMsQ0FBQyxDQUFDLGtCQUFRLENBQUMsQ0FBQyxDQUFDLGtCQUFRLENBQUMsQ0FBQyxDQUFDLGtCQUFRLENBQUMsQ0FBQyxDQUFDLE1BQUcsQ0FBQyxFQUF0RyxDQUFzRyxDQUM1RyxDQUFDO1FBRUYsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUMxQixlQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7WUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFRLENBQUMsb0JBQW9CLEVBQUUsQ0FBQyxDQUFDO1lBQzdDLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUNuQztRQUVELFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNwQixPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFDTSxvQkFBSSxHQUFYO1FBQ0UsZUFBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ2QsQ0FBQztJQUVNLGlDQUFpQixHQUF4QjtRQUNFLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUNqQixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7UUFDckIsbUNBQW1DO1FBRW5DLElBQUksZ0JBQU0sQ0FBQyxZQUFZLENBQUMsV0FBVyxJQUFJLGdCQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRTtZQUNoRSxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7WUFDdkIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGdCQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtZQUNoQyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7WUFDckIsT0FBTztTQUNSO1FBQ0QsSUFBSSxDQUFDLGdCQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsRUFBRTtZQUNsQyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzdCLG1CQUFXLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDdEIsT0FBTztTQUNSO1FBRUQsSUFBSSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTSw2QkFBYSxHQUFwQjtRQUNFLHNCQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDM0IsQ0FBQztJQUNNLCtCQUFlLEdBQXRCO1FBQ0UsZUFBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2xCLHNCQUFjLENBQUMsT0FBTyxFQUFFLENBQUM7UUFFekIsZ0JBQU0sQ0FBQyxZQUFZLENBQUMsbUJBQW1CLElBQUksc0JBQWMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNwRSwrREFBK0Q7UUFDL0QsZ0JBQU0sQ0FBQyxZQUFZLENBQUMsYUFBYSxJQUFJLGdCQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDeEQsaURBQWlEO1FBRWpELGtCQUFRLENBQUMsT0FBTyxDQUFDO1lBQ2YsSUFBSSxFQUFFLGFBQUssQ0FBQyxnQkFBZ0I7WUFDNUIsc0JBQXNCO1lBQ3RCLGdCQUFnQixFQUFFLFNBQVMsQ0FBQyxPQUFPO1lBQ25DLFdBQVcsRUFBRSxjQUFJO2dCQUNmLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxDQUFDLEVBQUU7b0JBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztvQkFDaEMsa0JBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztpQkFDdkI7Z0JBQ0QsT0FBTyxlQUFlLENBQUM7WUFDekIsQ0FBQztZQUNELGFBQWEsRUFBRSxFQUFFLEdBQUcsU0FBUyxDQUFDLFVBQVU7WUFDeEMsU0FBUyxFQUFFLElBQUk7U0FDaEIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLHlCQUFTLEdBQWhCO1FBQ0UsaUJBQWlCO1FBQ2pCLG1CQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7UUFFeEIsa0JBQWtCO1FBQ2xCLGVBQU8sQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUVwQixlQUFlO1FBQ2YsZ0JBQVEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUVyQixvQkFBb0I7UUFDcEIscUJBQWEsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUUxQixtQkFBbUI7UUFDbkIsb0JBQVksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUV6QixvQkFBb0I7UUFDcEIsc0JBQWMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUUzQixvQkFBb0I7UUFDcEIsc0JBQWMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUUzQixrQkFBa0I7UUFDbEIsZUFBTyxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFTSw2QkFBYSxHQUFwQjtRQUNFLGtCQUFRLENBQUMsZ0JBQWdCLENBQUMsVUFBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFdBQVc7WUFDcEQsbUNBQW1DO1lBQ25DLElBQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdELGdCQUFLLENBQUMsR0FBRyxDQUFDLHdCQUFpQixPQUFPLENBQUMsVUFBVSxzQkFBWSxPQUFPLENBQUMsV0FBVyw2QkFBbUIsZUFBZSxDQUFFLENBQUMsQ0FBQztZQUNsSCxJQUFNLE9BQU8sR0FBRyxrQkFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ3RDLElBQUksQ0FBQyxPQUFPLEVBQUU7Z0JBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztnQkFDMUIsSUFBSSxnQkFBTSxDQUFDLFlBQVksQ0FBQyxjQUFjLEVBQUU7b0JBQ3RDLGtCQUFRLENBQUMsVUFBVSxFQUFFLENBQUM7aUJBQ3ZCO2dCQUNELE9BQU87YUFDUjtZQUVELElBQUksZ0JBQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxJQUFJLGVBQUssQ0FBQyxjQUFjLEVBQUU7Z0JBQ3ZELE9BQU8sQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDL0IsT0FBTzthQUNSO1lBRUQsUUFBUSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDekIsS0FBSyxhQUFLLENBQUMsY0FBYyxDQUFDO2dCQUMxQixLQUFLLGFBQUssQ0FBQyxjQUFjO29CQUN2QixJQUFJLE9BQU8sQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDLFVBQVUsR0FBRyxDQUFDLEVBQUU7d0JBQ2xELE9BQU8sQ0FBQyxHQUFHLENBQUMsK0JBQStCLENBQUMsQ0FBQzt3QkFDN0Msa0JBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQzt3QkFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQzt3QkFDbkIsT0FBTztxQkFDUjtvQkFDRCxNQUFNO2dCQUNSO29CQUNFLE1BQU07YUFDVDtZQUVELGtCQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7WUFDcEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUVuQixJQUFJLE9BQU8sQ0FBQyxVQUFVLEdBQUcsRUFBRSxLQUFLLENBQUMsRUFBRTtnQkFDakMsT0FBTyxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDN0IsZ0JBQUssQ0FBQyxHQUFHLENBQUMsMEJBQTBCLENBQUMsQ0FBQzthQUN2QztZQUNELElBQUksT0FBTyxDQUFDLFdBQVcsR0FBRyxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsRUFBRTtnQkFDbkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3Q0FBd0MsQ0FBQyxDQUFDO2dCQUN0RCxnQkFBTSxDQUFDLFlBQVksQ0FBQyxjQUFjLElBQUksa0JBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQzthQUM3RDtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLDZCQUFhLEdBQXBCO1FBQ0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1QixPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDN0IsZ0JBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1FBQ25DLElBQUksa0JBQVEsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7WUFDaEQsT0FBTztTQUNSO1FBRUQsb0JBQW9CO1FBQ3BCLEtBQXVCLFVBTXRCLEVBTnNCO1lBQ3JCLFFBQVE7WUFDUixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtZQUVqQixPQUFPO1lBQ1AsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7U0FDaEIsRUFOc0IsY0FNdEIsRUFOc0IsSUFNdEIsRUFBRTtZQU5FLElBQU0sUUFBUTtZQU9qQixrQkFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDOUIsZ0JBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQ25DO0lBQ0gsQ0FBQztJQUNNLHFDQUFxQixHQUE1QjtRQUNFLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQztRQUNyQyxrQkFBUSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzVDLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuQyxrQkFBUSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzNDLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNuQyxrQkFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQzFDLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNyQyxDQUFDO0lBRU0sK0JBQWUsR0FBdEIsVUFBdUIsTUFBNkI7UUFDbEQsSUFBSSxDQUFDLGdCQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRTtZQUNoQyxPQUFPLE1BQU0sQ0FBQztTQUNmO1FBRUQsT0FBTyxVQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFdBQVc7WUFDMUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDbkUsSUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7Z0JBQ2hDLE1BQU0sQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsQ0FBQzthQUM5QztZQUNELElBQUksTUFBTSxLQUFLLFFBQVEsRUFBRTtnQkFDdkIsa0JBQVEsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDN0I7WUFDRCxJQUFJLE1BQU0sS0FBSyxRQUFRLEVBQUU7Z0JBQ3ZCLGtCQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQzdCO1lBRUQsMkJBQTJCO1lBQzNCLGVBQUssQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQzdCLENBQUMsQ0FBQztJQUNKLENBQUM7SUE3T2EsaUJBQVcsR0FBVyxrRUFBa0UsQ0FBQztJQThPekcsWUFBQztDQUFBO0FBL09ZLHNCQUFLOzs7Ozs7Ozs7Ozs7Ozs7QUNWbEIsZ0ZBQTZDO0FBQzdDLHNFQUE0QztBQUUvQixvQkFBWSxHQUFpQjtJQUN4QyxnQkFBZ0IsRUFBRSxNQUFNO0lBQ3hCLFVBQVUsRUFBRSx5QkFBYTtJQUN6QixVQUFVLEVBQUUsUUFBUTtJQUNwQixRQUFRLEVBQUUscUJBQVksQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJO0lBRXJDLG1CQUFtQixFQUFFLElBQUk7SUFDekIsYUFBYSxFQUFFLEtBQUs7SUFDcEIsa0JBQWtCLEVBQUUsS0FBSztJQUV6QixZQUFZO0NBQ2IsQ0FBQztBQUVGLFNBQWdCLEdBQUcsQ0FBQyxVQUFlOztJQUNqQyxJQUFJLE9BQU8sVUFBVSxLQUFLLFFBQVEsRUFBRTtRQUNsQyxPQUFPO0tBQ1I7SUFFRCxJQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2pDLHFDQUE2QixHQUFHLE9BQUMsQ0FBQyxnQkFBZ0IsbUNBQUksb0JBQVksQ0FBQyxnQkFBZ0IsQ0FBQztJQUNwRiwrQkFBdUIsR0FBRyxPQUFDLENBQUMsVUFBVSxtQ0FBSSxvQkFBWSxDQUFDLFVBQVUsQ0FBQztJQUNsRSwrQkFBdUIsR0FBRyxPQUFDLENBQUMsVUFBVSxtQ0FBSSxvQkFBWSxDQUFDLFVBQVUsQ0FBQztJQUNsRSw2QkFBcUIsR0FBRyxPQUFDLENBQUMsUUFBUSxtQ0FBSSxvQkFBWSxDQUFDLFFBQVEsQ0FBQztJQUU1RCxtQ0FBMkIsR0FBRyxPQUFDLENBQUMsY0FBYyxtQ0FBSSxvQkFBWSxDQUFDLGNBQWMsQ0FBQztJQUM5RSxxQ0FBNkIsR0FBRyxPQUFDLENBQUMsZ0JBQWdCLG1DQUFJLG9CQUFZLENBQUMsZ0JBQWdCLENBQUM7SUFDcEYsbUNBQTJCLEdBQUcsT0FBQyxDQUFDLGNBQWMsbUNBQUksb0JBQVksQ0FBQyxjQUFjLENBQUM7SUFDOUUscUNBQTZCLEdBQUcsT0FBQyxDQUFDLGdCQUFnQixtQ0FBSSxvQkFBWSxDQUFDLGdCQUFnQixDQUFDO0lBQ3BGLDhCQUFzQixHQUFHLE9BQUMsQ0FBQyxTQUFTLG1DQUFJLG9CQUFZLENBQUMsU0FBUyxDQUFDO0lBQy9ELDZCQUFxQixHQUFHLE9BQUMsQ0FBQyxRQUFRLG1DQUFJLG9CQUFZLENBQUMsUUFBUSxDQUFDO0lBRTVELDBCQUEwQjtJQUMxQixvQkFBWSxDQUFDLFlBQVksQ0FBQyxDQUFDLGlDQUFpQztJQUNwRCxTQUF1RCxDQUFDLFFBQTFDLEVBQWQsT0FBTyxtQkFBRyxJQUFJLE9BQUUsS0FBdUMsQ0FBQyxZQUFyQixFQUFuQixXQUFXLG1CQUFHLEtBQUssT0FBRSxLQUFrQixDQUFDLE1BQU4sRUFBYixLQUFLLG1CQUFHLEtBQUssTUFBTztJQUNqRSw0QkFBb0IsR0FBRyxPQUFPLENBQUM7SUFDL0IsZ0NBQXdCLEdBQUcsV0FBVyxDQUFDO0lBQ3ZDLCtCQUF1QixHQUFHLENBQUMsT0FBTyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQzdELDBCQUFrQixHQUFHLEtBQUssQ0FBQztJQUMzQixtQ0FBMkIsR0FBRyxDQUFDLG9CQUFZLENBQUMsVUFBVSxDQUFDO0lBRXZELHVDQUErQixHQUFHLG9CQUFZLENBQUMsY0FBYyxJQUFJLENBQUMsT0FBQyxDQUFDLGtCQUFrQixtQ0FBSSxvQkFBWSxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDM0gsa0NBQTBCLEdBQUcsb0JBQVksQ0FBQyxjQUFjLElBQUksQ0FBQyxPQUFDLENBQUMsYUFBYSxtQ0FBSSxvQkFBWSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQzVHLHdDQUFnQyxHQUFHLG9CQUFZLENBQUMsY0FBYyxJQUFJLENBQUMsT0FBQyxDQUFDLG1CQUFtQixtQ0FBSSxvQkFBWSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFDaEksQ0FBQztBQTlCRCxrQkE4QkM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDL0NELDhGQUF1RDtBQUN2RCw0RkFBMEM7QUFFMUMsSUFBSSxnQkFBZ0IsR0FBVyxDQUFDLENBQUM7QUFDakMsSUFBSSx5QkFBeUIsR0FBVyxDQUFDLENBQUM7QUFDMUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO0FBQ1osSUFBSyxTQUdKO0FBSEQsV0FBSyxTQUFTO0lBQ1osZ0NBQW1CO0lBQ25CLHVDQUEwQjtBQUM1QixDQUFDLEVBSEksU0FBUyxLQUFULFNBQVMsUUFHYjtBQUNELElBQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQztBQUVkLDJCQUFtQixHQUFXLEVBQUUsQ0FBQztBQUU1QyxTQUFnQixhQUFhO0lBQzNCLEdBQUcsRUFBRSxDQUFDO0lBQ04sT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBa0IsR0FBRyxDQUFFLENBQUMsQ0FBQztJQUNyQyxJQUFNLE9BQU8sR0FBRyxxQkFBVSxDQUFDLG9CQUFvQixDQUFDO0lBQ2hELE9BQU8sbUJBQVEsQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM1QyxDQUFDO0FBTEQsc0NBS0M7QUFFRCxTQUFnQixZQUFZO0lBQzFCLElBQUksMkJBQW1CLEtBQUsscUJBQVUsQ0FBQyxvQkFBb0IsRUFBRTtRQUMzRCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBQ0QsSUFBTSxPQUFPLEdBQUcscUJBQVUsQ0FBQyxlQUFlLENBQUM7SUFDM0MsT0FBTyxtQkFBUSxDQUFDLGdCQUFnQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFORCxvQ0FNQztBQUVELFNBQWdCLFNBQVM7SUFDdkIsd0RBQXdEO0lBQ3hELGdCQUFnQixHQUFHLENBQUMsQ0FBQztJQUNyQixJQUFNLE9BQU8sR0FBRyxxQkFBVSxDQUFDLFNBQVMsQ0FBQztJQUNyQyxPQUFPLG1CQUFRLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDNUMsQ0FBQztBQUxELDhCQUtDO0FBRUQsU0FBZ0IsT0FBTztJQUNyQixJQUFNLE9BQU8sR0FBRyxxQkFBVSxDQUFDLE9BQU8sQ0FBQztJQUNuQyxPQUFPLG1CQUFRLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDNUMsQ0FBQztBQUhELDBCQUdDO0FBRUQsU0FBZ0IsT0FBTyxDQUFDLFdBQTRCO0lBQTVCLGlEQUE0QjtJQUNsRCxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDdkIsSUFBSSxXQUFXLElBQUksR0FBRyxHQUFHLGdCQUFnQixHQUFHLFNBQVMsQ0FBQyx3QkFBd0IsRUFBRTtRQUM5RSxPQUFPO0tBQ1I7SUFDRCxnQkFBZ0IsR0FBRyxHQUFHLENBQUM7SUFDdkIsU0FBUyxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDakMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFHLE1BQU0sYUFBVSxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQVJELDBCQVFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ2pERCxvRkFBc0M7QUFBN0IsNkdBQVE7QUFDakIsOEZBQW1DO0FBQ25DLDJGQUFpQztBQUNqQyw4RUFBa0M7QUFBekIsdUdBQU07Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDSGYsOEZBQWlDO0FBQ2pDLDRGQUEwQztBQUMxQywwRkFBbUM7QUFFbkMsSUFBSyxRQUlKO0FBSkQsV0FBSyxRQUFRO0lBQ1gseUJBQWE7SUFDYiwrQkFBbUI7SUFDbkIsMkJBQWU7QUFDakIsQ0FBQyxFQUpJLFFBQVEsS0FBUixRQUFRLFFBSVo7QUFFRCxTQUFTLE9BQU8sQ0FBQyxLQUFlLEVBQUUsS0FBYSxFQUFFLE9BQWU7SUFDOUQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO1FBQ2hDLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBSSxLQUFLLGVBQUssS0FBSyxlQUFLLE9BQU8sQ0FBRSxDQUFDLENBQUM7UUFDL0MsT0FBTztLQUNSO0lBQ0QsSUFBTSxRQUFRLEdBQUcsOEJBQ0MsTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFRLGtDQUM3QixNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsSUFBSSxPQUFPLGVBQ3BELENBQUM7SUFDTixnQkFBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsR0FBRyxPQUFPLENBQUMsQ0FBQztBQUNqSCxDQUFDO0FBRVksY0FBTSxHQUFHO0lBQ3BCLElBQUksRUFBRSxVQUFDLEtBQWEsRUFBRSxPQUFlO1FBQ25DLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBQ0QsT0FBTyxFQUFFLFVBQUMsS0FBYSxFQUFFLE9BQWU7UUFDdEMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFDRCxLQUFLLEVBQUUsVUFBQyxLQUFhLEVBQUUsT0FBZTtRQUNwQyxPQUFPLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDMUMsQ0FBQztDQUNGLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDaENGLDhGQUF5QztBQUN6Qyw0RkFBMEM7QUFFMUMsU0FBZ0IsYUFBYTtJQUMzQixtQkFBQyxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ1YsbUJBQUMsQ0FBQyxhQUFhLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDO0lBQzFDLG1CQUFDLENBQUMsYUFBYSxDQUFDLGdCQUFnQixHQUFHLEtBQUssQ0FBQztJQUN6QyxtQkFBQyxDQUFDLGFBQWEsQ0FBQyx3QkFBd0IsR0FBRyxTQUFTLENBQUMsd0JBQXdCLENBQUM7SUFDOUUsbUJBQUMsQ0FBQyxhQUFhLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQztJQUN4RCxtQkFBQyxDQUFDLGFBQWEsQ0FBQyxjQUFjLEdBQUcsU0FBUyxDQUFDLGlCQUFpQixDQUFDO0lBRTdELDhEQUE4RDtJQUM5RCxtQkFBQyxDQUFDLGNBQWMsQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFDLFdBQVcsQ0FBQztJQUNyRCxtQkFBQyxDQUFDLGNBQWMsQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQztJQUN6RCxtQkFBQyxDQUFDLGNBQWMsQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQztJQUN6RCxtQkFBQyxDQUFDLGNBQWMsQ0FBQyxhQUFhLEdBQUcsU0FBUyxDQUFDLGFBQWEsQ0FBQztJQUN6RCxtQkFBQyxDQUFDLGNBQWMsQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQztJQUVqRCxtQkFBQyxDQUFDLFlBQVksQ0FBQyxZQUFZLEdBQUcsU0FBUyxDQUFDLFlBQVksQ0FBQztJQUVyRCxtQkFBQyxDQUFDLFlBQVksQ0FBQyxxQkFBcUIsR0FBRyxTQUFTLENBQUMscUJBQXFCLENBQUM7SUFDdkUsbUJBQUMsQ0FBQyxZQUFZLENBQUMsNkJBQTZCLEdBQUcsU0FBUyxDQUFDLDZCQUE2QixDQUFDO0lBRXZGLG1CQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDO0lBQzdDLG1CQUFDLENBQUMsWUFBWSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDO0lBQy9DLG1CQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDO0FBQy9DLENBQUM7QUF2QkQsc0NBdUJDO0FBRUQsYUFBYSxFQUFFLENBQUM7QUFDTCxnQkFBUSxHQUFHLG1CQUFDLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDN0J4Qix5RkFBcUM7QUFDckMsb0VBQTJDO0FBQzNDLG9GQUFzQztBQUN0Qyw4RUFBd0M7QUFDeEMsNEZBQTBDO0FBRTFDLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQztBQUV0QixrQkFBa0I7QUFDbEIsSUFBTSxjQUFjLEdBQUcsb0JBQWEsU0FBUyxDQUFDLFdBQVcsQ0FBRSxDQUFDO0FBQzVELElBQU0sYUFBYSxHQUFHLCtCQUF3QixTQUFTLENBQUMsV0FBVyxXQUFRLENBQUM7QUFFNUUsYUFBYTtBQUNiLElBQU0sZUFBZSxHQUFXLDhCQUE4QixDQUFDO0FBQy9ELElBQU0sZUFBZSxHQUFHLDZCQUE2QixDQUFDO0FBQ3RELElBQU0saUJBQWlCLEdBQUcsVUFBRyxlQUFlLG9CQUFpQixDQUFDO0FBQzlELElBQU0sbUJBQW1CLEdBQUcsVUFBRyxlQUFlLGdCQUFhLENBQUM7QUFFNUQsYUFBYTtBQUNiLElBQU0sUUFBUSxHQUFHLHNCQUFzQixDQUFDO0FBQ3hDLElBQU0sTUFBTSxHQUFHLFlBQVksQ0FBQztBQUU1QixTQUFnQixXQUFXO0lBQ3pCLElBQUksQ0FBQyxxQkFBWSxDQUFDLE9BQU8sRUFBRTtRQUN6QixPQUFPO0tBQ1I7SUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDNUIsYUFBUyxHQUFLLHFCQUFZLFVBQWpCLENBQWtCO0lBQ2pDLFNBQVMsR0FBRyxTQUFTLElBQUksRUFBRSxDQUFDO0lBQzVCLElBQUksYUFBYSxHQUFHLFFBQVEsQ0FBQyxlQUFlLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBa0IsYUFBYSxpQ0FBdUIsU0FBUyxDQUFFLENBQUMsQ0FBQztJQUUvRSxJQUFJLGFBQWEsS0FBSyxFQUFFLElBQUksU0FBUyxLQUFLLEVBQUUsRUFBRTtRQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDbEMseURBQXlEO1FBQ3pELE1BQU0sRUFBRSxDQUFDO0tBQ1Y7U0FBTSxJQUFJLGFBQWEsS0FBSyxFQUFFLElBQUksU0FBUyxLQUFLLEVBQUUsRUFBRTtRQUNuRCxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDbEMseURBQXlEO1FBQ3pELE1BQU0sRUFBRSxDQUFDO0tBQ1Y7U0FBTSxJQUFJLGFBQWEsS0FBSyxFQUFFLElBQUksU0FBUyxLQUFLLEVBQUUsRUFBRTtRQUNuRCxPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDbEMsNEJBQTRCO1FBQzVCLElBQU0sZUFBZSxHQUFHLFlBQVksRUFBRSxDQUFDO1FBQ3ZDLElBQUksZUFBZSxFQUFFO1lBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQztZQUN2QyxLQUFLLEVBQUUsQ0FBQztZQUNSLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNiO0tBQ0Y7U0FBTSxJQUFJLGFBQWEsS0FBSyxFQUFFLElBQUksU0FBUyxLQUFLLEVBQUUsSUFBSSxhQUFhLEtBQUssU0FBUyxFQUFFO1FBQ2xGLE9BQU8sQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUNsQyx5REFBeUQ7UUFDekQsTUFBTSxFQUFFLENBQUM7UUFDVCxJQUFNLGVBQWUsR0FBRyxZQUFZLEVBQUUsQ0FBQztRQUN2QyxJQUFJLGVBQWUsRUFBRTtZQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDdkMsS0FBSyxFQUFFLENBQUM7WUFDUixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDYjtLQUNGO1NBQU0sSUFBSSxhQUFhLEtBQUssRUFBRSxJQUFJLFNBQVMsS0FBSyxFQUFFLElBQUksYUFBYSxLQUFLLFNBQVMsRUFBRTtRQUNsRixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFDbEMsNEJBQTRCO1FBQzVCLHlCQUF5QjtRQUN6QixJQUFNLGVBQWUsR0FBRyxZQUFZLEVBQUUsQ0FBQztRQUN2QyxJQUFJLGVBQWUsRUFBRTtZQUNuQixPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUM7WUFDdkMsS0FBSyxFQUFFLENBQUM7WUFDUixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDYjtLQUNGO1NBQU07UUFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUM7S0FDakM7SUFFRCx3QkFBd0I7SUFDeEIsUUFBUSxFQUFFLENBQUM7SUFDWCxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDWixvQ0FBb0M7QUFDdEMsQ0FBQztBQXhERCxrQ0F3REM7QUFFRCxTQUFTLFFBQVE7SUFDZixJQUFJLE9BQU8sR0FBRyxtQkFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3BDLE9BQU8sQ0FBQyxPQUFPLEVBQUU7UUFDZixtQkFBUSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ3BCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLE9BQU8sR0FBRyxtQkFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0tBQ2pDO0FBQ0gsQ0FBQztBQUVELFNBQVMsT0FBTztJQUNkLElBQUksT0FBTyxHQUFHLG1CQUFRLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDcEMsT0FBTyxPQUFPLEVBQUU7UUFDZCxtQkFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ25CLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNaLE9BQU8sR0FBRyxtQkFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0tBQ2pDO0FBQ0gsQ0FBQztBQUVELFNBQWdCLFVBQVU7SUFDeEIsSUFBSSxDQUFDLHFCQUFZLENBQUMsT0FBTyxFQUFFO1FBQ3pCLE9BQU87S0FDUjtJQUNLLGFBQVMsR0FBSyxxQkFBWSxVQUFqQixDQUFrQjtJQUNqQyxTQUFTLEdBQUcsU0FBUyxJQUFJLEVBQUUsQ0FBQztJQUM1QixJQUFJLFNBQVMsRUFBRTtRQUNiLE1BQU0sRUFBRSxDQUFDO1FBQ1QsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1osT0FBTyxDQUFDLEdBQUcsQ0FBQyw4REFBOEQsQ0FBQyxDQUFDO0tBQzdFO1NBQU07UUFDTCxPQUFPLENBQUMsR0FBRyxDQUFDLHlFQUF5RSxDQUFDLENBQUM7S0FDeEY7QUFDSCxDQUFDO0FBYkQsZ0NBYUM7QUFFRCxTQUFnQixhQUFhO0lBQzNCLElBQUksQ0FBQyxxQkFBWSxDQUFDLE9BQU8sRUFBRTtRQUN6QixPQUFPO0tBQ1I7SUFDSyxrQkFBYyxHQUFrQyxxQkFBWSxlQUE5QyxFQUFFLGdCQUFnQixHQUFnQixxQkFBWSxpQkFBNUIsRUFBRSxTQUFTLEdBQUsscUJBQVksVUFBakIsQ0FBa0I7SUFDbkUsU0FBUyxHQUFHLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFFNUIsSUFBSSxDQUFDLENBQUMsY0FBYyxJQUFJLGdCQUFnQixJQUFJLFNBQVMsQ0FBQyxFQUFFO1FBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUMsc0NBQXNDLENBQUMsQ0FBQztRQUNwRCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBa0IsU0FBUyxXQUFRLENBQUMsQ0FBQztJQUNqRCwyQkFBZTtJQUNiLHVCQUF1QjtJQUN2QixpQkFBVSxlQUFlLENBQUUsRUFDM0IsZ0JBQVMsZUFBZSxRQUFLO0lBRTdCLHNDQUFzQztJQUN0QyxtQkFBWSxlQUFlLE1BQUcsRUFDOUIsZ0JBQVMsY0FBYyxvQkFBVSxlQUFlLE1BQUcsRUFDbkQsZ0JBQVMsY0FBYywyQkFBaUIsZUFBZSxNQUFHO0lBRTFELGNBQWM7SUFDZCxpQkFBVSxlQUFlLGNBQVcsQ0FDckMsQ0FBQztJQUNGLHFCQUFxQixFQUFFLENBQUM7SUFFeEIsMkNBQTJDO0lBQzNDLElBQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxtREFBbUQsQ0FBQyxDQUFDO0lBQy9FLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQXFCLFNBQVMsQ0FBRSxDQUFDLENBQUM7SUFDOUMsU0FBUyxDQUFDLGlCQUFpQixFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBRXhDLEtBQUssQ0FBQyxVQUFHLGVBQWUsUUFBSyxFQUFFLFVBQUcsZUFBZSxDQUFFLENBQUMsQ0FBQztJQUVyRCxpQkFBaUI7SUFDakIsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLElBQU0sZUFBZSxHQUFHLHFCQUFjLFNBQVMsUUFBSyxDQUFDO0lBQ3JELElBQU0sV0FBVyxHQUFHLFlBQVksQ0FDOUIsVUFBRyxlQUFlLFFBQUssRUFDdkIsZUFBZSxFQUNmLDBCQUEwQixFQUMxQixRQUFRLEVBQ1IsTUFBTSxFQUNOLGNBQWMsRUFDZCxnQkFBZ0IsRUFDaEIsRUFBRSxFQUNGLEtBQUssQ0FDTixDQUFDO0lBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBcUIsUUFBUSxrQ0FBd0IsV0FBVyx3QkFBYyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFFLENBQUMsQ0FBQztJQUU5Ryx1QkFBdUI7SUFDdkIsMkJBQWUsRUFBQyxpQkFBVSxlQUFlLENBQUUsRUFBRSxnQkFBUyxlQUFlLFFBQUssQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUFyREQsc0NBcURDO0FBRUQsU0FBUyxNQUFNO0lBQ2IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBQ25DLFdBQVc7SUFDWCxPQUFPLEVBQUUsQ0FBQztJQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQztJQUNuRCxZQUFZLEVBQUUsQ0FBQztJQUNmLFNBQVMsQ0FBQyxlQUFlLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO0FBQ3BDLENBQUM7QUFFRCxTQUFTLEtBQUs7SUFDTixhQUFTLEdBQUsscUJBQVksVUFBakIsQ0FBa0I7SUFDakMsU0FBUyxHQUFHLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFDNUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1REFBdUQsQ0FBQyxDQUFDO0lBQ3JFLDhDQUE4QztJQUM5QyxRQUFRLEVBQUUsQ0FBQztJQUNYLEtBQUssQ0FBQyxLQUFNLENBQUMsQ0FBQztJQUNkLFdBQVc7SUFDWCxPQUFPLEVBQUUsQ0FBQztJQUNWLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUNBQW1DLENBQUMsQ0FBQztJQUNqRCxVQUFVLEVBQUUsQ0FBQztJQUNiLFNBQVMsQ0FBQyxlQUFlLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFDdEMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ25DLENBQUM7QUFFRCxTQUFTLFlBQVk7SUFDYixrQkFBYyxHQUFrQyxxQkFBWSxlQUE5QyxFQUFFLGdCQUFnQixHQUFnQixxQkFBWSxpQkFBNUIsRUFBRSxTQUFTLEdBQUsscUJBQVksVUFBakIsQ0FBa0I7SUFDbkUsU0FBUyxHQUFHLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFDNUIsSUFBSSxDQUFDLENBQUMsY0FBYyxJQUFJLGdCQUFnQixJQUFJLFNBQVMsQ0FBQyxFQUFFO1FBQ3RELE9BQU8sQ0FBQyxHQUFHLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUNuRCxPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyw2QkFBc0IsU0FBUyxDQUFFLENBQUMsQ0FBQztJQUMvQyxJQUFNLEdBQUcsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFFdkIsMkJBQWU7SUFDYixtQkFBbUI7SUFDbkIsaUJBQVUsZUFBZSxDQUFFLEVBQzNCLGdCQUFTLGVBQWUsUUFBSztJQUU3Qix1QkFBdUI7SUFDdkIsbUJBQVksZUFBZSxDQUFFLENBQzlCLENBQUM7SUFFRixJQUFNLGVBQWUsR0FBRyxxQkFBYyxTQUFTLFFBQUssQ0FBQztJQUNyRCxJQUFNLGFBQWEsR0FBRyxjQUFjLENBQUMsVUFBRyxlQUFlLFFBQUssRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzlJLElBQUksYUFBYSxLQUFLLElBQUksRUFBRTtRQUMxQixPQUFPLENBQUMsR0FBRyxDQUFDLDhCQUF1QixhQUFhLENBQUUsQ0FBQyxDQUFDO1FBQ3BELE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLGdDQUF5QixRQUFRLHNCQUFtQixFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxHQUFHLEVBQUUsU0FBUyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0lBQzlHLE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQztBQUVELFNBQVMsVUFBVTtJQUNqQiw4Q0FBOEM7SUFDOUMsSUFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsRUFBRSxJQUFJLGtCQUFrQixDQUFDO0lBRXpFLE9BQU8sQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztJQUNwQywyQkFBZTtJQUNiLEVBQUU7SUFDRixpQkFBVSxjQUFjLFdBQVEsRUFDaEMsaUJBQVUsY0FBYyxrQkFBZSxFQUN2QyxpQkFBVSxhQUFhLGNBQUksa0JBQWtCLENBQUUsQ0FDaEQsQ0FBQztJQUVGLGtEQUFrRDtJQUNsRCxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDakMsT0FBTyxDQUFDLFVBQUcsZUFBZSxRQUFLLENBQUMsQ0FBQztJQUNqQywyQkFBZSxFQUNiLGdCQUFTLGVBQWUsb0JBQVUsY0FBYyxNQUFHLEVBQ25ELGdCQUFTLGVBQWUsMkJBQWlCLGNBQWMsTUFBRyxFQUMxRCxnQkFBUyxlQUFlLDJCQUFpQixhQUFhLE1BQUcsRUFFekQsdUJBQWdCLGNBQWMsV0FBUSxFQUN0Qyx1QkFBZ0IsY0FBYyxrQkFBZSxFQUM3Qyx1QkFBZ0IsYUFBYSxDQUFFLENBQ2hDLENBQUM7SUFDRixPQUFPLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxDQUFDLENBQUM7SUFDdEQsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RCLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNaLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsQ0FBQztBQUNsQyxDQUFDO0FBRUQsU0FBUyxZQUFZO0lBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsQ0FBQztJQUNuQyxZQUFZLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkIsSUFBTSxrQkFBa0IsR0FBRyxxQkFBcUIsRUFBRSxJQUFJLGtCQUFrQixDQUFDO0lBQ3pFLE9BQU8sQ0FBQyxHQUFHLENBQUMsNENBQTRDLENBQUMsQ0FBQztJQUMxRCwyQkFBZSxFQUNiLGlCQUFVLGVBQWUsUUFBSyxFQUM5QixpQkFBVSxlQUFlLENBQUUsRUFFM0IsaUJBQVUsY0FBYyxXQUFRLEVBQ2hDLGlCQUFVLGNBQWMsa0JBQWUsRUFDdkMsaUJBQVUsYUFBYSxjQUFJLGtCQUFrQixDQUFFLENBQ2hELENBQUM7SUFFRixLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDWixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDcEMsQ0FBQztBQUVELFNBQVMsWUFBWSxDQUFDLE1BQTBCO0lBQ3pDLGdCQUFZLEdBQUksMkJBQWUsRUFBQyxtREFBbUQsQ0FBQyxHQUF4RSxDQUF5RTtJQUMxRixJQUFJLFNBQVMsR0FBRyxpQkFBRyxFQUFDLFVBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxTQUFHLFlBQVksQ0FBRSxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNyRSxJQUFJLE1BQU0sS0FBSyxPQUFPLEVBQUU7UUFDdEIsU0FBUyxHQUFHLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLFNBQVMsQ0FBQztLQUN0RDtJQUNELDJCQUFlLEVBQUMsb0RBQW9ELEdBQUcsU0FBUyxDQUFDLENBQUM7SUFDbEYsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBa0IsWUFBWSx1QkFBYSxTQUFTLENBQUUsQ0FBQyxDQUFDO0FBQ3RFLENBQUM7QUFFRCxTQUFTLHFCQUFxQjtJQUM1QixJQUFNLFFBQVEsR0FBRyxxQkFBcUIsRUFBRSxDQUFDO0lBQ3pDLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLDBDQUEwQyxDQUFDLENBQUM7UUFDeEQsT0FBTztLQUNSO0lBQ0QsMkJBQWUsRUFBQyxtQkFBWSxtQkFBbUIsQ0FBRSxFQUFFLGdCQUFTLGFBQWEsY0FBSSxRQUFRLGNBQUksbUJBQW1CLGNBQUksUUFBUSxNQUFHLENBQUMsQ0FBQztJQUM3SCxPQUFPLENBQUMsR0FBRyxDQUFDLHNDQUErQixtQkFBbUIsY0FBSSxRQUFRLENBQUUsQ0FBQyxDQUFDO0FBQ2hGLENBQUM7QUFFRCxTQUFTLHFCQUFxQjtJQUM1QixJQUFNLEtBQUssR0FBRywyQkFBZSxFQUFDLGFBQU0sYUFBYSxDQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDcEUsS0FBcUIsVUFBSyxFQUFMLGVBQUssRUFBTCxtQkFBSyxFQUFMLElBQUssRUFBRTtRQUF2QixJQUFJLFFBQVE7UUFDZixJQUFJLFFBQVEsQ0FBQyxNQUFNLEtBQUssRUFBRSxFQUFFO1lBQzFCLFFBQVEsR0FBRyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDM0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBNkIsUUFBUSxDQUFFLENBQUMsQ0FBQztZQUNyRCxPQUFPLFFBQVEsQ0FBQztTQUNqQjtLQUNGO0lBQ0QsT0FBTyxFQUFFLENBQUM7QUFDWixDQUFDO0FBRUQsU0FBUyxrQkFBa0IsQ0FBQyxVQUFvQixFQUFFLFdBQXFCO0lBQ3JFLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDYixPQUFPO0tBQ1I7SUFDRCxJQUFNLFFBQVEsR0FBMkIsRUFBRSxDQUFDO0lBQzVDLEtBQW1CLFVBQVUsRUFBVix5QkFBVSxFQUFWLHdCQUFVLEVBQVYsSUFBVSxFQUFFO1FBQTFCLElBQU0sSUFBSTtRQUNiLElBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDbEMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssR0FBRyxDQUFDLENBQUM7S0FDNUI7SUFDRCxLQUFtQixVQUFXLEVBQVgsMkJBQVcsRUFBWCx5QkFBVyxFQUFYLElBQVcsRUFBRTtRQUEzQixJQUFNLElBQUk7UUFDYixJQUFNLEtBQUssR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2xDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxLQUFLLEdBQUcsQ0FBQyxDQUFDO0tBQzVCO0lBRUQsSUFBTSxXQUFXLEdBQWEsRUFBRSxDQUFDO0lBQ2pDLElBQU0saUJBQWlCLEdBQWEsRUFBRSxDQUFDO0lBQ3ZDLElBQU0sZ0JBQWdCLEdBQWEsRUFBRSxDQUFDO0lBQ3RDLEtBQWdCLFVBQXFCLEVBQXJCLFdBQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQXJCLGNBQXFCLEVBQXJCLElBQXFCLEVBQUU7UUFBbEMsSUFBTSxDQUFDO1FBQ1YsSUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzFCLFFBQVEsS0FBSyxFQUFFO1lBQ2IsS0FBSyxDQUFDO2dCQUNKLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLE1BQU07WUFDUixLQUFLLENBQUM7Z0JBQ0osaUJBQWlCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUMxQixNQUFNO1lBQ1IsS0FBSyxDQUFDLENBQUM7Z0JBQ0wsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUN6QixNQUFNO1lBQ1I7Z0JBQ0UsT0FBTyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQ2xDLE1BQU07U0FDVDtLQUNGO0lBQ0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBaUIsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBRSxDQUFDLENBQUM7SUFDdkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyw4QkFBdUIsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFFLENBQUMsQ0FBQztJQUNuRSxPQUFPLENBQUMsR0FBRyxDQUFDLDZCQUFzQixnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUUsQ0FBQyxDQUFDO0FBQ25FLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDcFZELG9GQUFxRDtBQUNyRCx5R0FBNkM7QUFDN0MsOEVBQWtDO0FBQ2xDLDZGQUFxQztBQUNyQywwRkFBbUM7QUFDbkMsNEZBQTBDO0FBRTFDLG9FQUEyQztBQUU5QixrQkFBVSxHQUFHO0lBQ3hCLGdCQUFnQixFQUFFLENBQUM7SUFDbkIsaUJBQWlCLEVBQUUsS0FBSztJQUN4Qix1QkFBdUIsRUFBRSxFQUFFO0lBQzNCLG9CQUFvQixFQUFFLENBQUM7SUFDdkIsbUJBQW1CLEVBQUUsRUFBRTtJQUN2QixZQUFZLEVBQUUsSUFBSTtDQUNuQixDQUFDO0FBQ1csZ0JBQVEsR0FBRztJQUN0QixZQUFZLEVBQUUsSUFBSTtDQUNuQixDQUFDO0FBRVMsc0JBQWMsR0FBRyxLQUFLLENBQUM7QUFDdkIsa0JBQVUsR0FBRyxLQUFLLENBQUM7QUFDOUIsSUFBSSxtQkFBbUIsR0FBRyxDQUFDLENBQUM7QUFDNUIsSUFBSSxnQ0FBZ0MsR0FBYSxFQUFFLENBQUM7QUFFcEQsSUFBTSwyQkFBMkIsR0FBRyxDQUFDO0lBQ25DLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUN6QixJQUFNLEtBQUssR0FBRztRQUNaLE9BQU8sR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7UUFDckIsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO0lBQ3ZELENBQUMsQ0FBQztJQUNGLElBQU0sS0FBSyxHQUFHO1FBQ1osSUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDLDRCQUE0QixHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ2pGLElBQUksUUFBUSxJQUFJLENBQUMsRUFBRTtZQUNqQixPQUFPLENBQUMsR0FBRyxDQUFDLGlDQUFpQyxDQUFDLENBQUM7WUFDL0MsbUJBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztZQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLGlDQUFpQyxDQUFDLENBQUM7U0FDcEQ7UUFDRCxPQUFPLENBQUMsR0FBRyxDQUFDLDBDQUFtQyxRQUFRLEdBQUcsU0FBUyxDQUFDLFVBQVUsYUFBVSxDQUFDLENBQUM7SUFDNUYsQ0FBQyxDQUFDO0lBQ0YsT0FBTyxFQUFFLEtBQUssU0FBRSxLQUFLLFNBQUUsQ0FBQztBQUMxQixDQUFDLENBQUMsRUFBRSxDQUFDO0FBRUwsU0FBZ0IsSUFBSSxDQUFDLFVBQWU7SUFDbEMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUN2QixJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO1FBQy9CLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN0QiwyQkFBZSxFQUFDLCtDQUErQyxDQUFDLENBQUM7S0FDbEU7QUFDSCxDQUFDO0FBTkQsb0JBTUM7QUFFRCxTQUFnQiwwQkFBMEI7O0lBQ3hDLDRCQUFhLEdBQUUsQ0FBQztJQUNoQixtQkFBUSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsQ0FBQyx5REFBeUQ7SUFDakYsbUJBQVEsQ0FBQyxjQUFjLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxZQUFNLENBQUMsWUFBWSxDQUFDLFlBQVksbUNBQUksS0FBSyxDQUFDLENBQUM7SUFDbEYsbUJBQVEsQ0FBQyxjQUFjLENBQUMsYUFBYSxHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsY0FBYyxJQUFJLEtBQUssQ0FBQztJQUNwRixtQkFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFlBQVksQ0FBQyxRQUFRLElBQUksRUFBRSxDQUFDO0lBQ3RFLG1CQUFRLENBQUMsY0FBYyxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsWUFBWSxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUM7SUFDekUsbUJBQVEsQ0FBQyxjQUFjLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDLFlBQU0sQ0FBQyxZQUFZLENBQUMsWUFBWSxtQ0FBSSxLQUFLLENBQUMsQ0FBQztJQUV6RixtQ0FBMkIsR0FBRyxDQUFDLENBQUM7SUFDaEMsb0NBQTRCLEdBQUcsS0FBSyxDQUFDO0lBQ3JDLDBDQUFrQyxHQUFHLEVBQUUsQ0FBQztJQUN4Qyx1Q0FBK0IsR0FBRyxDQUFDLENBQUM7SUFDcEMsc0NBQThCLEdBQUcsRUFBRSxDQUFDO0lBQ3BDLCtCQUF1QixHQUFHLElBQUksQ0FBQztJQUMvQiw2QkFBcUIsR0FBRyxJQUFJLENBQUM7SUFDN0Isc0JBQWMsR0FBRyxLQUFLLENBQUM7SUFDdkIsbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLGtCQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ3JCLENBQUM7QUFuQkQsZ0VBbUJDO0FBRUQsU0FBZ0IsS0FBSztJQUNuQixJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxFQUFFO1FBQzdCLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQWdCLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFFLENBQUMsQ0FBQztLQUNwRTtJQUNELElBQUksTUFBTSxDQUFDLFlBQVksQ0FBQyxVQUFVLEVBQUU7UUFDbEMsMkJBQTJCLENBQUMsS0FBSyxFQUFFLENBQUM7S0FDckM7SUFDRCxtQkFBUSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQVJELHNCQVFDO0FBRUQsU0FBZ0IsR0FBRztJQUNqQixJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFO1FBQy9CLE9BQU8sQ0FBQyxVQUFVLEVBQUUsQ0FBQztLQUN0QjtJQUNELG1CQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDbEIsQ0FBQztBQUxELGtCQUtDO0FBRUQsU0FBZ0IsU0FBUyxDQUFDLFdBQTRCO0lBQTVCLGlEQUE0QjtJQUNwRCxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUMvRixJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsVUFBVSxFQUFFO1FBQ2xDLDJCQUEyQixDQUFDLEtBQUssRUFBRSxDQUFDO0tBQ3JDO0FBQ0gsQ0FBQztBQUxELDhCQUtDO0FBRUQsU0FBZ0IsV0FBVyxDQUFDLGFBQThCO0lBQTlCLHFEQUE4QjtJQUN4RCxrQkFBVSxHQUFHLEtBQUssQ0FBQztJQUNuQixJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQy9ELE9BQU87S0FDUjtJQUNELDBCQUEwQjtJQUMxQixXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRTFCLElBQUksYUFBYSxFQUFFO1FBQ2pCLHNCQUFjLEdBQUcsSUFBSSxDQUFDO1FBQ3RCLFdBQVcsQ0FBQyxhQUFhLEVBQUUsQ0FBQztLQUM3QjtBQUNILENBQUM7QUFaRCxrQ0FZQztBQUVELFNBQWdCLGNBQWM7SUFDNUIsa0JBQVUsR0FBRyxJQUFJLENBQUM7SUFDbEIsc0JBQWMsR0FBRyxLQUFLLENBQUM7SUFDdkIsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLElBQUksTUFBTSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUMvRCxPQUFPO0tBQ1I7SUFDRCxXQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDM0IsV0FBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBQ3hCLENBQUM7QUFSRCx3Q0FRQztBQUVELFNBQWdCLFdBQVc7SUFDekIsa0JBQVUsR0FBRyxLQUFLLENBQUM7SUFDbkIsc0JBQWMsR0FBRyxLQUFLLENBQUM7SUFDdkIsbUJBQW1CLEdBQUcsQ0FBQyxDQUFDO0lBQ3hCLGtCQUFVLENBQUMsZ0JBQWdCLENBQUM7SUFDNUIsa0JBQVUsQ0FBQyxpQkFBaUIsQ0FBQztJQUM3QixrQkFBVSxDQUFDLHVCQUF1QixDQUFDO0lBQ25DLHVDQUErQixHQUFHLENBQUMsQ0FBQztJQUNwQyxzQ0FBOEIsR0FBRyxFQUFFLENBQUM7SUFDcEMsK0JBQXVCLEdBQUcsSUFBSSxDQUFDO0lBQy9CLDZCQUFxQixHQUFHLElBQUksQ0FBQztJQUM3QixDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsT0FBTyxJQUFJLE1BQU0sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQ3hGLENBQUM7QUFaRCxrQ0FZQztBQUVELFNBQWdCLFNBQVM7SUFDdkIsc0JBQWMsR0FBRyxLQUFLLENBQUM7SUFDdkIsSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDLE9BQU8sSUFBSSxNQUFNLENBQUMsWUFBWSxDQUFDLEtBQUssRUFBRTtRQUM1RCxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7S0FDekI7QUFDSCxDQUFDO0FBTEQsOEJBS0M7QUFFRCxTQUFnQix3QkFBd0I7SUFDdEMsSUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBRXZCLDJEQUEyRDtJQUMzRCxJQUFNLFNBQVMsR0FBRyxHQUFHLEdBQUcsU0FBUyxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUM7SUFDL0MsSUFBSSxHQUFHLEdBQUcsZ0NBQWdDLENBQUMsTUFBTSxDQUFDO0lBQ2xELElBQUksR0FBRyxHQUFHLENBQUMsSUFBSSxnQ0FBZ0MsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLEdBQUcsU0FBUyxFQUFFO1FBQ3BFLGdDQUFnQyxHQUFHLEVBQUUsQ0FBQztRQUN0QyxHQUFHLEdBQUcsQ0FBQyxDQUFDO0tBQ1Q7SUFFRCxvQkFBb0I7SUFDcEIsZ0NBQWdDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzNDLEdBQUcsRUFBRSxDQUFDO0lBRU4sTUFBTTtJQUNOLElBQU0sR0FBRyxHQUFHLCtDQUF3QyxHQUFHLENBQUUsQ0FBQztJQUMxRCxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBRWpCLDBEQUEwRDtJQUMxRCxJQUFJLEdBQUcsR0FBRyxDQUFDLEVBQUU7UUFDWCxPQUFPO0tBQ1I7SUFFRCxJQUFJLEdBQUcsSUFBSSxFQUFFLEVBQUU7UUFDYixJQUFNLFFBQU0sR0FBRyw4REFBOEQsQ0FBQztRQUM5RSxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQU0sQ0FBQyxDQUFDO1FBQ3BCLHNCQUFzQixDQUFDLFFBQU0sQ0FBQyxDQUFDO1FBQy9CLGVBQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEdBQUcsR0FBRyxJQUFJLEdBQUcsUUFBTSxDQUFDLENBQUM7UUFDdEMsT0FBTztLQUNSO0lBRUQsSUFBTSxNQUFNLEdBQUcsK0NBQStDLENBQUM7SUFDL0QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNwQixJQUFJLEdBQUcsSUFBSSxDQUFDLEVBQUU7UUFDWixlQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsRUFBRSxHQUFHLEdBQUcsSUFBSSxHQUFHLE1BQU0sQ0FBQyxDQUFDO0tBQ3ZDO0lBQ0QsbUJBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUN4QixDQUFDO0FBdENELDREQXNDQztBQUVELFNBQWdCLGNBQWMsQ0FBQyxRQUE0QjtJQUE1QiwrQ0FBNEI7SUFDekQsSUFBTSxHQUFHLEdBQUcsbUNBQTRCLFFBQVEsQ0FBRSxDQUFDO0lBQ25ELE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakIsZUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDeEIsbUJBQVEsQ0FBQyxVQUFVLEVBQUUsQ0FBQztBQUN4QixDQUFDO0FBTEQsd0NBS0M7QUFFRCxTQUFnQixzQkFBc0IsQ0FBQyxNQUEwQjtJQUExQiwyQ0FBMEI7SUFDL0Qsb0NBQTRCLEdBQUcsSUFBSSxDQUFDO0lBQ3BDLDBDQUFrQyxHQUFHLE1BQU0sQ0FBQztBQUM5QyxDQUFDO0FBSEQsd0RBR0M7QUFFRCxTQUFnQiwyQkFBMkI7SUFDekMsSUFBTSxHQUFHLEdBQUcsOENBQXVDLGtCQUFVLENBQUMsdUJBQXVCLENBQUUsQ0FBQztJQUN4RixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pCLGVBQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLG9DQUE0QixHQUFHLEtBQUssQ0FBQztJQUNyQywwQ0FBa0MsR0FBRyxFQUFFLENBQUM7QUFDMUMsQ0FBQztBQU5ELGtFQU1DO0FBRUQsU0FBZ0Isa0JBQWtCO0lBQ2hDLHNDQUFzQztJQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxPQUFPLElBQUksQ0FBQyxrQkFBVSxFQUFFO1FBQy9DLE9BQU87S0FDUjtJQUNELElBQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUN2QixJQUFJLEdBQUcsR0FBRyxtQkFBbUIsR0FBRyxTQUFTLENBQUMscUJBQXFCLEVBQUU7UUFDL0QsT0FBTztLQUNSO0lBQ0QsbUJBQW1CLEdBQUcsR0FBRyxDQUFDO0lBQzFCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUM5QixPQUFPLENBQUMsYUFBYSxFQUFFLENBQUM7QUFDMUIsQ0FBQztBQVpELGdEQVlDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ3RORCw4RkFBdUM7QUFDdkMsZ0ZBQTZDO0FBRTdDLHFGQUFvQztBQUNwQyw0RkFBMEM7QUFFMUMsU0FBZ0IsT0FBTztJQUNyQixPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLENBQUM7SUFDaEMsZ0JBQWdCO0lBQ2hCLGtCQUFRLENBQUMsT0FBTyxDQUFDO1FBQ2YsSUFBSSxFQUFFLGlCQUFLLENBQUMsUUFBUTtRQUNwQixzQkFBc0I7UUFDdEIsZ0JBQWdCLEVBQUUsU0FBUyxDQUFDLFVBQVUsR0FBRyxFQUFFO1FBQzNDLGNBQWMsRUFBRSxTQUFTLENBQUMsV0FBVztRQUNyQyxhQUFhLEVBQUUsU0FBUyxDQUFDLFVBQVUsR0FBRyxTQUFTLENBQUMsZ0JBQWdCO1FBQ2hFLFNBQVMsRUFBRSxJQUFJO0tBQ2hCLENBQUMsQ0FBQztBQUNMLENBQUM7QUFYRCwwQkFXQztBQUVELFNBQWdCLFNBQVM7SUFDdkIsa0JBQVEsQ0FBQyxRQUFRLENBQUM7UUFDaEIsSUFBSSxFQUFFLFdBQUksUUFBUSxDQUFDLElBQUksQ0FBRTtRQUN6QixLQUFLLEVBQUUsUUFBUTtRQUNmLE1BQU0sRUFBRSxVQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLFdBQVc7WUFDM0MsZUFBSyxDQUFDLGtCQUFrQixFQUFFLENBQUM7WUFDM0IsSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksS0FBSyxpQkFBSyxDQUFDLFFBQVEsRUFBRTtnQkFDeEMsa0JBQVEsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQzFCLE9BQU87YUFDUjtZQUVELGtCQUFRLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzFCLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUNuQyxJQUFNLFVBQVUsR0FBRyxhQUFhLEVBQUUsQ0FBQztZQUNuQyxJQUFNLFNBQVMsR0FBRyxDQUFDLGtCQUFRLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO1lBQ25FLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUN6QixJQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0NBQWtDLENBQUMsQ0FBQztnQkFDaEQsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUNsQixPQUFPO2FBQ1I7WUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQ3hCLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQzFELGtCQUFrQjtZQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQzVCLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztZQUV2Qiw0QkFBNEI7WUFDNUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDLEVBQUUsRUFBRTtnQkFDekMsT0FBTyxDQUFDLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztnQkFDckIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQ0FBNkIsQ0FBQyxHQUFHLENBQUMsQ0FBRSxDQUFDLENBQUM7Z0JBQ2xELGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFFbkMsSUFBTSxZQUFVLEdBQUcsYUFBYSxFQUFFLENBQUM7Z0JBQ25DLFVBQVUsR0FBRyxrQkFBUSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsRUFBRSxZQUFVLENBQUMsQ0FBQztnQkFDbkUsWUFBWSxDQUFDLFlBQVUsQ0FBQyxDQUFDO2FBQzFCO1lBRUQsSUFBSSxVQUFVLEVBQUU7Z0JBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztnQkFDekIsZUFBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO2dCQUNsQixPQUFPO2FBQ1I7WUFFRCwrQkFBK0I7WUFDL0IsT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsQ0FBQyxDQUFDO1lBQzFDLGtCQUFRLENBQUMsT0FBTyxFQUFFLENBQUM7WUFDbkIsZ0JBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ25DLGtCQUFRLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDdEIsQ0FBQztLQUNGLENBQUMsQ0FBQztJQUNILGtCQUFRLENBQUMsUUFBUSxDQUFDO1FBQ2hCLElBQUksRUFBRSxXQUFJLGNBQWMsQ0FBQyxJQUFJLENBQUU7UUFDL0IsS0FBSyxFQUFFLGNBQWM7UUFDckIsTUFBTSxFQUFFLFVBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsV0FBVztZQUMzQyxlQUFLLENBQUMsa0JBQWtCLEVBQUUsQ0FBQztZQUMzQixPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1lBQzdCLGtCQUFRLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ2hDLGdCQUFLLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUNsQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLGlCQUFLLENBQUMsUUFBUSxFQUFFO2dCQUN4QyxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7Z0JBQ2xCLGVBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQzthQUNuQjtRQUNILENBQUM7S0FDRixDQUFDLENBQUM7QUFDTCxDQUFDO0FBbEVELDhCQWtFQztBQUVELGlCQUFpQjtBQUNqQixJQUFNLFFBQVEsR0FBRyxJQUFJLGVBQUksQ0FDdkIsVUFBVSxFQUNWO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLHlCQUF5QjtJQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxTQUFTO0lBQ1QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxjQUFjLEdBQUcsSUFBSSxlQUFJLENBQzdCLGdCQUFnQixFQUNoQjtJQUNFLGtCQUFrQjtJQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FB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QUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxHQUFHLEdBQUcsSUFBSSxlQUFJLENBQ2xCLEtBQUssRUFDTDtJQUNFLE1BQU07SUFDTixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsSUFBSTtJQUNKLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3ZDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sT0FBTyxHQUFHLElBQUksb0JBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFakUsZ0RBQWdEO0FBQ2hELElBQU0sYUFBYSxHQUFHLElBQUksZUFBSSxDQUM1QixlQUFlLEVBQ2Y7SUFDRSxpQkFBaUI7SUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsU0FBUztJQUNULEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxZQUFZO0lBQ1osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLFFBQVE7QUFDM0IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUVXLG9CQUFZLEdBQUcsSUFBSSxlQUFJLENBQ2xDLGNBQWMsRUFDZDtJQUNFLFFBQVE7SUFDUixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV0QyxVQUFVO0lBQ1YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLE1BQU07SUFDTixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFVyxxQkFBYSxHQUFHLElBQUksZUFBSSxDQUNuQyxlQUFlLEVBQ2Y7SUFDRSw0Q0FBNEM7SUFDNUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsb0RBQW9EO0lBQ3BELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLHlCQUF5QjtBQUN6QixJQUFNLE9BQU8sR0FBRyxJQUFJLGVBQUksQ0FDdEIsU0FBUyxFQUNUO0lBQ0Usa0JBQWtCO0lBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXRDLFNBQVM7SUFDVCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsZ0JBQWdCO0lBQ2hCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxRQUFRO0FBQzNCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFRixJQUFNLFFBQVEsR0FBRyxJQUFJLGVBQUksQ0FDdkIsVUFBVSxFQUNWO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLGNBQWM7QUFDbEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0saUNBQWlDLEdBQUcsSUFBSSxlQUFJLENBQ2hELG1DQUFtQyxFQUNuQztJQUNFLG9DQUFvQztJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV0Qyw4Q0FBOEM7SUFDOUMsSUFBSTtJQUNKLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsTUFBTTtBQUMxQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEtBQUs7Q0FDekIsQ0FBQztBQUVGLHlEQUF5RDtBQUN6RCxJQUFNLCtCQUErQixHQUFHLElBQUksZUFBSSxDQUM5QyxpQ0FBaUMsRUFDakM7SUFDRSxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxNQUFNO0lBQ04sRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLHVCQUF1QjtBQUMzQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLHVCQUF1QjtDQUMzQyxDQUFDO0FBRUYsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FDdEMseUJBQXlCLEVBQ3pCO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLFFBQVE7SUFDUixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxJQUFJO0lBQ0osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsZUFBZTtJQUNmLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFB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QUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQywrQkFBK0I7SUFDL0IsMENBQTBDO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFDZCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUNmLENBQUM7QUFFRixrQkFBa0I7QUFDbEIsSUFBTSxHQUFHLEdBQUcsSUFBSSxlQUFJLENBQ2xCLEtBQUssRUFDTDtJQUNFLE9BQU87SUFDUCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV0QyxZQUFZO0lBQ1osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsZUFBZTtJQUNmLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLG9CQUFvQjtJQUNwQixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxtQkFBbUI7SUFDbkIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsOEJBQThCO0FBQzlCLElBQU0sS0FBSyxHQUFHLElBQUksZUFBSSxDQUNwQixPQUFPLEVBQ1A7SUFDRSxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsT0FBTztJQUNQLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLG9DQUFvQztBQUNwQyxJQUFNLE9BQU8sR0FBRyxJQUFJLGVBQUksQ0FDdEIsU0FBUyxFQUNUO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLE9BQU87SUFDUCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRiwyREFBMkQ7QUFDM0QsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLGVBQUksQ0FDeEMsMkJBQTJCLEVBQzNCO0lBQ0UsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxxQkFBcUI7SUFDckIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUNkLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQ2YsQ0FBQztBQUVGLElBQU0sSUFBSSxHQUFHLElBQUksZUFBSSxDQUNuQixNQUFNLEVBQ047SUFDRSxpQkFBaUI7SUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsMEJBQTBCO0lBQzFCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXpDLFlBQVk7SUFDWixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQ2QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDZixDQUFDO0FBRUYsSUFBTSxRQUFRLEdBQUc7SUFDZixVQUFVLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDOUIsVUFBVSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzlCLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMvQixRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDNUIsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzVCLEtBQUssRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QixXQUFXLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDL0IsS0FBSyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pCLENBQUM7QUFFRixJQUFNLG1CQUFtQixHQUFHLElBQUksZUFBSSxDQUNsQyxxQkFBcUIsRUFDckI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsV0FBVztBQUMvQixFQUFFLENBQUMsRUFBRSxFQUFF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LEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLDJEQUEyRDtBQUMzRCwyREFBMkQ7QUFDM0QsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FDdEMseUJBQXlCLEVBQ3pCO0lBQ0UsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLFVBQVU7SUFDViwyQ0FBMkM7SUFDM0MsMkNBQTJDO0lBQzNDLDhDQUE4QztJQUM5Qyw4Q0FBOEM7SUFDOUMsOENBQThDO0lBQzlDLDJDQUEyQztJQUMzQyw4Q0FBOEM7SUFDOUMsMkNBQTJDO0lBQzNDLDhDQUE4QztJQUM5Qyw4Q0FBOEM7SUFDOUMsMkNBQTJDO0lBQzNDLDhDQUE4QztJQUM5QywyQ0FBMkM7SUFDM0MsOENBQThDO0NBQy9DLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLDJEQUEyRDtBQUMzRCxzR0FBc0c7QUFDdEcsSUFBTSxxQ0FBcUMsR0FBRyxJQUFJLGVBQUksQ0FDcEQsdUNBQXVDLEVBQ3ZDO0lBQ0Usd0NBQXdDO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxLQUFLO0FBQ3pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRiw2QkFBNkI7QUFDN0IsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGVBQUksQ0FDdkMsMEJBQTBCLEVBQzFCO0lBQ0UsVUFBVTtJQUNWLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLE1BQU07SUFDTixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLDJCQUEyQjtBQUMvQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsZ0NBQWdDO0FBQ2hDLElBQU0sZUFBZSxHQUFHLElBQUksZUFBSSxDQUM5QixpQkFBaUIsRUFDakI7SUFDRSw0QkFBNEI7SUFDNUIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsZ0JBQWdCO0lBQ2hCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0scUJBQXFCLEdBQUcsSUFBSSxlQUFJLENBQ3BDLHVCQUF1QixFQUN2QjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxXQUFXO0lBQ1gsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsc0NBQXNDO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLFNBQVM7SUFDVCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixtREFBbUQ7QUFDbkQsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLGVBQUksQ0FDeEMsMkJBQTJCLEVBQzNCO0lBQ0UsZUFBZTtJQUNmLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXZDLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV2QyxVQUFVO0lBQ1YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGVBQUksQ0FDakMsb0JBQW9CLEVBQ3BCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLFlBQVk7QUFDaEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLHlCQUF5QjtBQUN6QixJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUN0Qyx5QkFBeUIsRUFDekI7SUFDRSxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsOEJBQThCO0lBQzlCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxpQkFBaUI7SUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0M7QUFDRCx1Q0FBdUM7QUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sWUFBWSxHQUFHLElBQUksZUFBSSxDQUMzQixjQUFjLEVBQ2Q7SUFDRSxvQkFBb0I7SUFDcEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFBRSxRQUFRO0FBQzNCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFRixJQUFNLGtCQUFrQixHQUFHLElBQUksZUFBSSxDQUNqQyxvQkFBb0IsRUFDcEI7SUFDRSxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLElBQUk7SUFDSixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsS0FBSztBQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsZ0RBQWdEO0FBQ2hELElBQU0sd0JBQXdCLEdBQUcsSUFBSSxlQUFJLENBQ3ZDLDBCQUEwQixFQUMxQjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsSUFBSTtJQUNKLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXRDLFNBQVM7SUFDVCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFF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RSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXRDLG9DQUFvQztJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxvQ0FBb0M7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFB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QUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNuQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUVuQyxxQkFBcUI7SUFDckIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMscUJBQXFCO0lBQ3JCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLG1CQUFtQjtJQUNuQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxH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QUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxLQUFLLEdBQUcsSUFBSSxlQUFJLENBQ3BCLE1BQU0sRUFDTjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLGlDQUFpQztBQUNqQyxJQUFNLGdCQUFnQixHQUFHLElBQUksZUFBSSxDQUFDLGtCQUFrQixFQUFFO0lBQ3BELFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV4QyxrQkFBa0I7SUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsK0RBQStEO0NBQ2hFLENBQUMsQ0FBQztBQUVILElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxlQUFJLENBQUMsa0JBQWtCLEVBQUU7SUFDcEQsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLENBQUMsQ0FBQztBQUVILElBQU0sYUFBYSxHQUFHLElBQUksZUFBSSxDQUM1QixlQUFlO0FBQ2YsUUFBUTtBQUNSO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsQ0FDRixDQUFDO0FBRUYsSUFBTSxzQkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FDckMsd0JBQXdCLEVBQ3hCO0lBQ0UsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsU0FBUztBQUM1QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBRUYsSUFBTSxvQkFBb0IsR0FBRyxJQUFJLGVBQUksQ0FDbkMsc0JBQXNCLEVBQ3RCO0lBQ0UsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGdCQUFnQjtJQUNoQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxH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QUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV0QyxlQUFlO0lBQ2YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsZ0JBQWdCO0lBQ2hCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxrQkFBa0I7SUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxpQkFBaUIsR0FBRyxJQUFJLGVBQUksQ0FDaEMsbUJBQW1CLEVBQ25CO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxTQUFTO0NBQ3BELEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sZUFBZSxHQUFHLElBQUksZUFBSSxDQUM5QixpQkFBaUIsRUFDakI7SUFDRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQ2QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDZixDQUFDO0FBRUYsSUFBTSxXQUFXLEdBQUcsSUFBSSxlQUFJLENBQzFCLGFBQWEsRUFDYjtJQUNFLE9BQU87SUFDUCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxPQUFPO0lBQ1AsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFdkMsZUFBZTtJQUNmLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxD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LEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGtCQUFrQjtJQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxlQUFlO0lBQ2YsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLGNBQWM7QUFDakMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxjQUFjO0NBQ2pDLENBQUM7QUFFRixrQkFBa0I7QUFDbEIsSUFBTSx3Q0FBd0MsR0FBRyxJQUFJLGVBQUksQ0FDdkQsMENBQTBDLEVBQzFDO0lBQ0UsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGdCQUFnQjtJQUNoQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxlQUFlO0lBQ2YsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFF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QUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFQRCxzREFPQztBQUVZLG1CQUFXLEdBQUcsSUFBSSxlQUFJLENBQ2pDLGFBQWEsRUFDYjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ25DLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ25DLDJDQUEyQztJQUMzQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUVwQyxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDckMsRUFDRCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUNkLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQ2YsQ0FBQztBQUVGLElBQU0sdUJBQXVCLEdBQUcsSUFBSSxlQUFJLENBQ3RDLHlCQUF5QixFQUN6QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ2xDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ25DLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ25DLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ25DLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQ2QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDZixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUN6SUYsOEZBQWdDO0FBQ2hDLG1GQUF5QztBQUV6QyxTQUFnQixTQUFTO0lBQ3ZCO1FBQ0UsU0FBUztRQUNULGNBQWM7UUFDZCxVQUFVO1FBQ1YsVUFBVTtRQUNWLGNBQWM7UUFDZCwyQkFBMkI7UUFDM0Isa0JBQWtCO1FBQ2xCLEtBQUs7S0FDTixDQUFDLE9BQU8sQ0FBQyxXQUFDO1FBQ1Qsa0JBQVEsQ0FBQyxRQUFRLENBQUM7WUFDaEIsSUFBSSxFQUFFLFdBQUksQ0FBQyxDQUFDLElBQUksQ0FBRTtZQUNsQixLQUFLLEVBQUUsQ0FBQztZQUNSLE1BQU0sRUFBRSxRQUFRO1NBQ2pCLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQWpCRCw4QkFpQkM7QUFFRCxJQUFNLGNBQWMsR0FBRyxJQUFJLGVBQUksQ0FDN0IsZ0JBQWdCLEVBQ2hCO0lBQ0UsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBRXBDLDBDQUEwQztJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUVwQyxJQUFJO0lBQ0osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLElBQUk7QUFDeEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sVUFBVSxHQUFHLElBQUksZUFBSSxDQUN6QixZQUFZLEVBQ1o7SUFDRSxJQUFJO0lBQ0osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsaUJBQWlCO0lBQ2pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGdCQUFnQjtJQUNoQixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQ2pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFRixJQUFNLFVBQVUsR0FBRyxJQUFJLGVBQUksQ0FDekIsWUFBWSxFQUNaO0lBQ0UsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUNqQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBRUYsSUFBTSxVQUFVLEdBQUcsSUFBSSxlQUFJLENBQ3pCLFlBQVksRUFDWjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsRUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUVGLElBQU0sMkJBQTJCLEdBQUcsSUFBSSxlQUFJLENBQzFDLDZCQUE2QixFQUM3QjtJQUNFLGtCQUFrQjtJQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxrQkFBa0I7SUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUNqQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDO0FBRUYsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGVBQUksQ0FDakMsb0JBQW9CLEVBQ3BCO0lBQ0UsSUFBSTtJQUNKLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLDZCQUE2QjtJQUM3QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDbkMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDbkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7Q0FDckMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYseURBQXlEO0FBQ3pELElBQU0sS0FBSyxHQUFHLElBQUksZUFBSSxDQUNwQixPQUFPLEVBQ1A7SUFDRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQ2pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ2xCLENBQUM7QUFFRixJQUFNLFNBQVMsR0FBRyxJQUFJLGVBQUksQ0FDeEIsV0FBVyxFQUNYO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFD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QUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxtQkFBbUI7SUFDbkIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxD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QUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdkMsNkJBQTZCO0lBQzdCLDJDQUEyQztJQUMzQyw4Q0FBOEM7SUFFOUMsd0NBQXdDO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLE9BQU87SUFDUCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsWUFBWTtBQUNoQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNsQixDQUFDO0FBRUYsSUFBTSxxQkFBcUIsR0FBRztJQUM1QixRQUFRLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDM0IsUUFBUSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQzNCLE1BQU0sRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QixtRkFBbUY7SUFDbkYsbUJBQW1CLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFNUQsZUFBZSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3pELENBQUM7QUFFRix5Q0FBeUM7QUFDekMsSUFBTSx5QkFBeUIsR0FBRyxJQUFJLGVBQUksQ0FDeEMsMkJBQTJCLEVBQzNCO0lBQ0UsY0FBYztJQUNkLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGdCQUFnQjtJQUNoQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV2QyxXQUFXO0lBQ1gsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLElBQUk7QUFDdkIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDbEIsQ0FBQztBQUVGLHNCQUFzQjtBQUN0QixJQUFNLDBCQUEwQixHQUFHLElBQUksZUFBSSxDQUN6Qyw0QkFBNEIsRUFDNUI7SUFDRSxrQkFBa0I7SUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLElBQUk7SUFDSixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV0QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLEtBQUs7QUFDekIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sa0JBQWtCLEdBQUcsSUFBSSxlQUFJLENBQ2pDLG9CQUFvQixFQUNwQjtJQUNFLFlBQVk7SUFDWixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxxQkFBcUI7SUFDckIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxLQUFLO0FBQ3pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLG9CQUFvQixHQUFHLElBQUksZUFBSSxDQUNuQyxzQkFBc0IsRUFDdEI7SUFDRSx3QkFBd0I7SUFDeEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsa0JBQWtCO0lBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXRDLHdCQUF3QjtJQUN4QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUV4QyxPQUFPO0lBQ1AsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsMkJBQTJCO0lBQzNCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbEIsQ0FBQztBQUVGLDRCQUE0QjtBQUM1QixJQUFNLGVBQWUsR0FBRyxJQUFJLGVBQUksQ0FDOUIsaUJBQWlCLEVBQ2pCO0lBQ0UsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxJQUFJO0lBQ0osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsYUFBYTtJQUNiLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLGtEQUFrRDtJQUNsRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsdUJBQXVCO0FBQzNDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsMEJBQTBCO0NBQzlDLENBQUM7QUFFRiwwQkFBMEI7QUFDMUIsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGVBQUksQ0FDakMsb0JBQW9CLEVBQ3BCO0lBQ0UsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxJQUFJO0lBQ0osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsYUFBYTtJQUNiLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXhDLDZCQUE2QjtDQUM5QixFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUseUJBQXlCO0FBQzdDLEVBQUUsQ0FB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RSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QywwRUFBMEU7SUFDMUUsNkNBQTZDO0lBQzdDLHlDQUF5QztJQUV6QyxjQUFjO0lBQ2QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsWUFBWTtJQUNaLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLG1CQUFtQjtJQUNuQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ2xCLENBQUM7QUFFRixJQUFNLGtCQUFrQixHQUFHO0lBQ3pCLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMvQixNQUFNLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0IsQ0FBQztBQUVGLElBQU0sa0JBQWtCLEdBQUcsSUFBSSxlQUFJLENBQ2pDLG9CQUFvQixFQUNwQjtJQUNFLGtCQUFrQjtJQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV0QyxvQ0FBb0M7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMseUNBQXlDO0lBQ3pDLDRDQUE0QztJQUM1Qyw0Q0FBNEM7SUFDNUMsNENBQTRDO0lBQzVDLDRDQUE0QztJQUU1QyxjQUFjO0lBQ2QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLFdBQVc7QUFDL0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbEIsQ0FBQztBQUVGLElBQU0sb0JBQW9CLEdBQUcsSUFBSSxlQUFJLENBQ25DLHNCQUFzQixFQUN0QjtJQUNFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFDZCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUNmLENBQUM7QUFFRix5QkFBeUI7QUFDekIsSUFBTSxrQkFBa0IsR0FBRztJQUN6QixlQUFlLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDbkMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNCLGdCQUFnQixFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3JDLENBQUM7QUFFRixJQUFNLG9CQUFvQixHQUFtQjtJQUMzQyx5QkFBeUI7SUFDekIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMseUJBQXlCO0lBQ3pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLHlCQUF5QjtJQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUs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QUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4Qyx1QkFBdUI7SUFDdkIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLG1CQUFtQjtBQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsK0JBQStCO0FBQy9CLElBQU0sd0JBQXdCLEdBQUcsSUFBSSxlQUFJLENBQ3ZDLDBCQUEwQixFQUMxQjtJQUNFLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUscUJBQXFCO0FBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMscUJBQXFCO0NBQ3hDLENBQUM7QUFFRixvREFBb0Q7QUFDcEQsMkJBQTJCO0FBQzNCLElBQU0sK0JBQStCLEdBQUcsSUFBSSxlQUFJLENBQzlDLDBCQUEwQixFQUMxQjtJQUNFLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6Qyx5QkFBeUI7SUFDekIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLG9CQUFvQjtBQUNwQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLG9CQUFvQjtDQUNwQyxDQUFDO0FBRUYsa0RBQWtEO0FBQ2xELElBQU0sMkJBQTJCLEdBQUcsSUFBSSxlQUFJLENBQzFDLDBCQUEwQixFQUMxQjtJQUNFLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxZQUFZO0lBQ1osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUNkLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQ2YsQ0FBQztBQUNGLElBQU0sNEJBQTRCLEdBQUcsSUFBSSxlQUFJLENBQzNDLDBCQUEwQixFQUMxQjtJQUNFLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxhQUFhO0lBQ2IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsRUFDRCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUNkLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQ2YsQ0FBQztBQUVGLElBQU0sOEJBQThCLEdBQUcsSUFBSSxvQkFBUyxDQUFDLCtCQUErQixFQUFFO0lBQ3BGLHdCQUF3QjtJQUN4QiwrQkFBK0I7SUFDL0IsMkJBQTJCO0lBQzNCLDRCQUE0QjtDQUM3QixDQUFDLENBQUM7QUFFSCwyQkFBMkI7QUFDM0IsOEJBQThCO0FBQzlCLElBQU0saUJBQWlCLEdBQUcsSUFBSSxlQUFJLENBQ2hDLG1CQUFtQixFQUNuQjtJQUNFLGtCQUFrQjtJQUNsQixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxXQUFXO0lBQ1gsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsT0FBTztJQUNQLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxnQkFBZ0I7QUFDbkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRO0NBQzVCLENBQUM7QUFFRixJQUFNLHVCQUF1QixHQUFHLElBQUksZUFBSSxDQUN0Qyx5QkFBeUIsRUFDekI7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQ2QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDZixDQUFDO0FBRUYsb0JBQW9CO0FBQ3BCLElBQU0sVUFBVSxHQUFHLElBQUksZUFBSSxDQUN6QixZQUFZLEVBQ1o7SUFDRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNuQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLHNCQUFzQixHQUFHLElBQUksZUFBSSxDQUNyQyx3QkFBd0IsRUFDeEI7SUFDRSxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdkMsd0JBQXdCO0lBQ3hCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXZDLDRCQUE0QjtJQUM1QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSx1QkFBdUIsR0FBRyxJQUFJLGVBQUksQ0FDdEMsd0JBQXdCLEVBQ3hCO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLDRCQUE0QjtJQUM1QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2Qyx3QkFBd0I7SUFDeEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFdEMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLHlCQUF5QjtBQUN6QixJQUFNLDJCQUEyQixHQUFHLElBQUksb0JBQVMsQ0FDL0Msd0JBQXdCLEVBQ3hCLENBQUMsc0JBQXNCLEVBQUUsdUJBQXVCLENBQUMsRUFDakQsc0JBQXNCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FDdkMsQ0FBQztBQUVGLHlCQUF5QjtBQUN6Qix1Q0FBdUM7QUFDdkMsSUFBTSwyQkFBMkIsR0FBRyxJQUFJLGVBQUksQ0FDMUMsNkJBQTZCLEVBQzdCO0lBQ0UsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXJDLFFBQVE7SUFDUixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxvQkFBb0IsR0FBRyxJQUFJLGVBQUksQ0FDbkMsc0JBQXNCLEVBQ3RCO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixJQUFNLG9CQUFvQixHQUFHLElBQUksZUFBSSxDQUNuQyxzQkFBc0IsRUFDdEI7SUFDRSxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUs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RSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRix1Q0FBdUM7QUFDdkMsSUFBTSxXQUFXLEdBQUcsSUFBSSxlQUFJLENBQzFCLGFBQWEsRUFDYjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUV0QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsaUJBQWlCO0lBQ2pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGlCQUFpQjtJQUNqQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsS0FBSztBQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxXQUFXLEdBQUcsSUFBSSxlQUFJLENBQzFCLGFBQWEsRUFDYjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUV0QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsaUJBQWlCO0lBQ2pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXZDLGlCQUFpQjtJQUNqQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN2QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsS0FBSztBQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxVQUFVLEdBQUcsSUFBSSxvQkFBUyxDQUFDLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxXQUFXLENBQUMsRUFBRSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFN0YsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGVBQUksQ0FDdkMsMEJBQTBCLEVBQzFCO0lBQ0UsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXZDLFFBQVE7SUFDUixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsS0FBSztBQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxHQUFHLEdBQUcsSUFBSSxlQUFJLENBQ2xCLEtBQUssRUFDTDtJQUNFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3RDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLElBQU0sa0JBQWtCLEdBQUcsSUFBSSxlQUFJLENBQ2pDLG9CQUFvQixFQUNwQjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNuQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUVyQyxvQkFBb0I7SUFDcEIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxnQkFBZ0IsR0FBRyxJQUFJLGVBQUksQ0FDL0Isa0JBQWtCLEVBQ2xCO0lBQ0UsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxzQkFBc0IsR0FBRyxJQUFJLGVBQUksQ0FDckMsd0JBQXdCLEVBQ3hCO0lBQ0Usa0RBQWtEO0lBQ2xELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV0Qyx3QkFBd0I7SUFDeEIsY0FBYztJQUNkLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLGNBQWM7SUFDZCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxjQUFjO0lBQ2QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsY0FBYztJQUNkLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDakIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbEIsQ0FBQztBQUNGLElBQU0sMEJBQTBCLEdBQUc7SUFDakMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZCLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QixPQUFPLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDM0IsSUFBSSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pCLENBQUM7QUFFRixrR0FBa0c7QUFDbEcsSUFBTSxVQUFVLEdBQUcsSUFBSSxlQUFJLENBQ3pCLFlBQVksRUFDWjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV4QyxpQkFBaUI7SUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsNEJBQTRCO0lBQzVCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLHVDQUF1QztJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMzQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsSUFBSTtBQUN4QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSxjQUFjLEdBQUc7SUFDckIsV0FBVyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzlCLFNBQVMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUMzQixTQUFTLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDM0IsT0FBTyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFCLGFBQWEsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN4RCxDQUFDO0FBRUYsSUFBTSxpQkFBaUIsR0FBMEI7SUFDL0MsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzNDLENBQUMsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxF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QUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXZDLFlBQVk7SUFDWixFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV2QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNuQixDQUFDO0FBRUYsSUFBTSx3QkFBd0IsR0FBRyxJQUFJLGVBQUksQ0FDdkMsMEJBQTBCLEVBQzFCO0lBQ0UsWUFBWTtJQUNaLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRix3QkFBd0I7QUFDeEIsSUFBTSw0QkFBNEIsR0FBRyxJQUFJLGVBQUksQ0FDM0MsOEJBQThCLEVBQzlCO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLDBCQUEwQjtJQUMxQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUV4QyxVQUFVO0lBQ1YsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsc0JBQXNCO0lBQ3RCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFDbEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLHdCQUF3QjtBQUN4QixJQUFNLGdDQUFnQyxHQUFHO0lBQ3ZDLE1BQU0sRUFBRTtRQUNOLENBQUMsRUFBRSxHQUFHO1FBQ04sQ0FBQyxFQUFFLEdBQUc7S0FDUDtJQUNELE1BQU0sRUFBRTtRQUNOLENBQUMsRUFBRSxHQUFHO1FBQ04sQ0FBQyxFQUFFLEdBQUc7S0FDUDtDQUNGLENBQUM7QUFFRix3QkFBd0I7QUFDeEIsSUFBTSxtQ0FBbUMsR0FBRyxJQUFJLGVBQUksQ0FDbEQscUNBQXFDLEVBQ3JDO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2xCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ25CLENBQUM7QUFFRixtQ0FBbUM7QUFDbkMsSUFBTSxrQkFBa0IsR0FBRyxJQUFJLGVBQUksQ0FDakMsb0JBQW9CLEVBQ3BCO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLHFCQUFxQjtJQUNyQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxvQkFBb0I7SUFDcEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDekMsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLGFBQWE7QUFDakMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxlQUFlO0NBQ25DLENBQUM7QUFFRiwrREFBK0Q7QUFDL0QsaUJBQWlCO0FBQ2pCLG9FQUFvRTtBQUNwRSxtQ0FBbUM7QUFDbkMsSUFBTSxzQkFBc0IsR0FBRztJQUM3QixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNqQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNsQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUNuQixDQUFDO0FBQ0YsMkJBQTJCO0FBQzNCLHdCQUF3QjtBQUN4QixpQ0FBaUM7QUFDakMsSUFBTSxxQkFBcUIsR0FBNEI7SUFDckQsVUFBVSxFQUFFLENBQUM7SUFDYixVQUFVLEVBQUUsQ0FBQztJQUNiLFVBQVUsRUFBRSxDQUFDO0lBQ2IsYUFBYSxFQUFFLENBQUM7SUFDaEIsYUFBYSxFQUFFLENBQUM7SUFDaEIsWUFBWSxFQUFFLENBQUM7SUFDZixZQUFZLEVBQUUsQ0FBQztJQUNmLFlBQVksRUFBRSxDQUFDO0lBQ2YsWUFBWSxFQUFFLENBQUM7SUFDZixZQUFZLEVBQUUsQ0FBQztJQUNmLFdBQVcsRUFBRSxDQUFDLEVBQUUsOEJBQThCO0NBQy9DLENBQUM7QUFFRixJQUFNLHVCQUF1QixHQUE4RDtJQUN6RixDQUFDLEVBQUU7UUFDRCw2QkFBNkI7UUFDN0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtLQUN4QjtJQUNELENBQUMsRUFBRTtRQUNELFFBQVE7UUFDUixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ3ZCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDdkIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtLQUN4QjtJQUNELENBQUMsRUFBRTtRQUNELFNBQVM7UUFDVCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO1FBQzFCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7UUFDMUIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtLQUMzQjtJQUNELENBQUMsRUFBRTtRQUNELE9BQU87UUFDUCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ3pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7UUFDekIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtRQUN6QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO1FBQ3pCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7S0FDMUI7SUFDRCxDQUFDLEVBQUU7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LEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsQ0FBQyxDQUFDO0FBRUgsbUJBQW1CO0FBQ25CLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxlQUFJLENBQUMsa0JBQWtCLEVBQUU7SUFDcEQsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsQ0FBQyxDQUFDO0FBRUgsb0JBQW9CO0FBQ3BCLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxlQUFJLENBQUMsa0JBQWtCLEVBQUU7SUFDcEQsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDekMsQ0FBQyxDQUFDO0FBRUgsMkJBQTJCO0FBQzNCLG9DQUFvQztBQUNwQyxJQUFNLFNBQVMsR0FBRyxJQUFJLGVBQUksQ0FBQyxVQUFVLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDekMsQ0FBQyxDQUFDO0FBRUgsSUFBTSxlQUFlLEdBQUcsSUFBSSxvQkFBUyxDQUFDLGlCQUFpQixFQUFFLENBQUMsZ0JBQWdCLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FBQztBQUUxRyxJQUFNLGVBQWUsR0FBRyxJQUFJLGVBQUksQ0FBQyxpQkFBaUIsRUFBRTtJQUNsRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxDQUFDLENBQUM7QUFFSCxzQkFBc0I7QUFDdEIsSUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFJLENBQUMsVUFBVSxFQUFFO0lBQ3BDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzNDLENBQUMsQ0FBQztBQUVILHNCQUFzQjtBQUN0QixJQUFNLFVBQVUsR0FBRyxJQUFJLGVBQUksQ0FBQyxZQUFZLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7Q0FDdkMsQ0FBQyxDQUFDO0FBRUgsSUFBTSxPQUFPLEdBQUcsSUFBSSxlQUFJLENBQUMsU0FBUyxFQUFFO0lBQ2xDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FB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QUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxzQkFBc0I7SUFDdEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFdkMsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ3pDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxXQUFXO0FBQzlCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ2xCLENBQUM7QUFFRix5QkFBeUI7QUFDekIsSUFBTSxZQUFZLEdBQUcsSUFBSSxlQUFJLENBQzNCLGNBQWMsRUFDZDtJQUNFLFlBQVk7SUFDWixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxZQUFZO0lBQ1osRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsUUFBUTtJQUNSLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVB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QUFDLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUNwQyxDQUFDO0FBRUQsSUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFJLENBQ3ZCLFVBQVUsRUFDVjtJQUNFLGdCQUFnQjtJQUNoQiw0Q0FBNEM7SUFDNUMsMkNBQTJDO0lBQzNDLDJDQUEyQztJQUMzQyw2Q0FBNkM7SUFDN0MsMENBQTBDO0lBQzFDLDBDQUEwQztJQUMxQyw2Q0FBNkM7SUFDN0MsNkNBQTZDO0lBRTdDLHNCQUFzQjtJQUN0QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFB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QUN4QixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUNyQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUVyQyxhQUFhO0lBQ2IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdEMsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLG1CQUFtQjtJQUNuQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtDQUN4QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQ2pCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQ2xCLENBQUM7QUFDRixJQUFNLG9CQUFvQixHQUFHO0lBQzNCLElBQUksRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QixnQ0FBZ0M7Q0FDakMsQ0FBQztBQUNGLElBQU0seUJBQXlCLEdBQUcsSUFBSSxlQUFJLENBQ3hDLDBCQUEwQixFQUMxQjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNuQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUVwQyxtQkFBbUI7SUFDbkIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsT0FBTztJQUNQLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxjQUFjO0FBQ2xDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsY0FBYztDQUNsQyxDQUFDO0FBQ0YsSUFBTSxvQ0FBb0MsR0FBRztJQUMzQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDeEIsQ0FBQztBQUVGLElBQU0sZ0JBQWdCLEdBQUcsSUFBSSxlQUFJLENBQy9CLGdCQUFnQixFQUNoQjtJQUNFLGdCQUFnQjtJQUNoQixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6Qyx3QkFBd0I7SUFDeEIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFdEMsYUFBYTtJQUNiLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxH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LEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0NBQ3hDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxnQkFBZ0I7QUFDcEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FDbkIsQ0FBQztBQUVGLHFEQUFxRDtBQUNyRCxJQUFNLGtCQUFrQixHQUFHLElBQUksZUFBSSxDQUNqQyxvQkFBb0IsRUFDcEI7SUFDRSxpQkFBaUI7SUFDakIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdkMsV0FBVztJQUNYLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3JDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXJDLHFEQUFxRDtJQUNyRCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNsQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtDQUNwQyxFQUNELEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQ2QsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FDZixDQUFDO0FBRUYsSUFBTSxjQUFjLEdBQUcsSUFBSSxlQUFJLENBQzdCLGdCQUFnQixFQUNoQjtJQUNFLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNsQyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNuQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNwQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUNuQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRTtJQUVwQyxhQUFhO0lBQ2IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsU0FBUztJQUNULEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLGNBQWM7SUFDZCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsYUFBYTtBQUNqQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLGFBQWE7Q0FDakMsQ0FBQztBQUVGLElBQU0sU0FBUyxHQUFHLElBQUksZUFBSSxDQUN4QixXQUFXLEVBQ1g7SUFDRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsUUFBUTtBQUM1QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLGVBQWU7Q0FDbEMsQ0FBQztBQUVGLGtCQUFrQjtBQUNsQixJQUFNLFdBQVcsR0FBRyxJQUFJLGVBQUksQ0FDMUIsYUFBYSxFQUNiO0lBQ0UsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLFFBQVE7SUFDUixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN0QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxRQUFRO0lBQ1IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsWUFBWTtJQUNaLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQzFDLEVBQ0QsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsRUFBRSxRQUFRO0FBQzVCLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsZUFBZTtDQUNsQyxDQUFDO0FBRUYsbUVBQW1FO0FBQ25FLElBQU0sU0FBUyxHQUFHLElBQUksZUFBSSxDQUFDLFdBQVcsRUFBRTtJQUN0QyxVQUFVO0lBQ1YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDeEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsS0FBSztJQUNMLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRXpDLGVBQWU7SUFDZixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxDQUFDLENBQUM7QUFFSCxJQUFNLGFBQWEsR0FBRyxJQUFJLGVBQUksQ0FBQyxlQUFlLEVBQUU7SUFDOUMsY0FBYztJQUNkLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3hDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN2QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUUxQyxlQUFlO0lBQ2YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDMUMsQ0FBQyxDQUFDO0FBRUgsT0FBTztBQUNQLFVBQVU7QUFDVixJQUFNLHNCQUFzQixHQUFHLElBQUksZUFBSSxDQUNyQyx3QkFBd0IsRUFDeEI7SUFDRSxlQUFlO0lBQ2YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFMUMsY0FBYztJQUNkLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBRTFDLFVBQVU7SUFDVixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxLQUFLO0lBQ0wsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7Q0FDM0MsRUFDRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxFQUFFLFFBQVE7QUFDNUIsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRO0NBQzVCLENBQUM7QUFDRixJQUFNLDZCQUE2QixHQUFHLElBQUksZUFBSSxDQUM1QywrQkFBK0IsRUFDL0I7SUFDRSxlQUFlO0lBQ2YsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDMUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFeEMsbUJBQW1CO0lBQ25CLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQzFDLEVBQUUs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LEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUV6QyxjQUFjO0lBQ2QsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDckMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdkMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFFdkMscUJBQXFCO0lBQ3JCLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0lBQ3pDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBQ3RDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXZDLFdBQVc7SUFDWCxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN6QyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUMxQyxFQUNELEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsV0FBVztBQUM5QixFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUNsQixDQUFDO0FBRUYsSUFBTSxvQkFBb0IsR0FBRztJQUMzQixPQUFPLEVBQUUsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDM0IsYUFBYSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFO0NBQ2xDLENBQUM7QUFFRixJQUFNLGdCQUFnQixHQUFHLElBQUksZUFBSSxDQUMvQixrQkFBa0IsRUFDbEI7SUFDRSwyQkFBMkI7SUFDM0IsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFDekMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUU7SUFDdEMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUU7SUFFekMsSUFBSTtJQUNKLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFO0lBRXRDLEtBQUs7SUFDTCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUN4QyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtJQUMxQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRTtDQUN6QyxFQUNELEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEVBQUUsSUFBSTtBQUN2QixFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsRUFBRSxDQUNsQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUMzTEYsOEZBQXVDO0FBRXZDLFNBQWdCLFNBQVMsQ0FBQyxHQUFXO0lB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IndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3QvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9SZXJvdXRlci9kaXN0L3NyYy9yZXJvdXRlci5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3Qvc3JjL3NjcmVlbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3Qvc3JjL3N0cnVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL1Jlcm91dGVyL2Rpc3Qvc3JjL3V0aWxzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvUmVyb3V0ZXIvZGlzdC9zcmMveHIuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jaGFyZW5jL2NoYXJlbmMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jcnlwdC9jcnlwdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2lzLWJ1ZmZlci9pbmRleC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL21kNS9tZDUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL2NvbmZpZy50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL2NvbnN0YW50cy50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL2RlYnVnVXRpbHMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9pbmRleC50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL21sYjlpLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvbW9kdWxlcy9jb25maWcudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy9tb2R1bGVzL2V2ZW50U2VuZGVyLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvbW9kdWxlcy9pbmRleC50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL21vZHVsZXMvbG9nZ2VyLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvbW9kdWxlcy9yZXJvdXRlci50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL21vZHVsZXMvc2Vzc2lvbi50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL21vZHVsZXMvc3RhdGUudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9hZFJld2FyZC50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2NvbW1vbnMvY29uZmlybXMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9jb21tb25zL2VudGVyQXBwLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MvY29tbW9ucy9lcnJvcnMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9jb21tb25zL2dhbWVMaW5lVXAudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9jb21tb25zL2luZGV4LnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MvY29tbW9ucy9uZXh0cy50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2NvbW1vbnMvcGxheVJlbGF0ZWQudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9jb21tb25zL3Bvd2VyU2F2aW5ncy50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2NvbW1vbnMvcHJvbW90aW9ucy50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL2N1c3RvbVBhZ2UudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9pbmRleC50cyIsIndlYnBhY2s6Ly90ZXN0Ly4vc3JjL3Rhc2tzL3BsYXlCYXR0bGVHYW1lLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3MvcGxheUxlYWd1ZUdhbWUudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9yZWNlaXZlSW5ib3gudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy9zZXR0aW5nLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdGFza3Mvc3RheUluTG9naW4udHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy90YXNrTmFtZXMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy90YXNrcy93ZWVrbHlNaXNzaW9uLnRzIiwid2VicGFjazovL3Rlc3QvLi9zcmMvdXRpbHMudHMiLCJ3ZWJwYWNrOi8vdGVzdC8uL3NyYy92ZXJzaW9uLnRzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lcy9hcnJheS9maW5kLWluZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lcy9vYmplY3QvYXNzaWduLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYS1jYWxsYWJsZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FkZC10by11bnNjb3BhYmxlcy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FuLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LWluY2x1ZGVzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktaXRlcmF0aW9uLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvYXJyYXktc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY3JlYXRlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY2xhc3NvZi1yYXcuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9jbGFzc29mLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLW5vbi1lbnVtZXJhYmxlLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2N1bWVudC1hbGwuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2VuZ2luZS11c2VyLWFnZW50LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbnRyeS11bmJpbmQuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZXhwb3J0LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZmFpbHMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLWNvbnRleHQuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1iaW5kLW5hdGl2ZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLWNhbGwuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9mdW5jdGlvbi1uYW1lLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzLWNsYXVzZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1idWlsdC1pbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2dldC1tZXRob2QuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaGlkZGVuLWtleXMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9odG1sLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pbmRleGVkLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2luc3BlY3Qtc291cmNlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1hcnJheS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLWNhbGxhYmxlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvaXMtY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1mb3JjZWQuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL2lzLXB1cmUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9pcy1zeW1ib2wuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZS5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL21ha2UtYnVpbHQtaW4uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9tYXRoLXRydW5jLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWFzc2lnbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnRpZXMuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LW5hbWVzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktc3ltYm9scy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9vd24ta2V5cy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3BhdGguanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy9zaGFyZWQta2V5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLXN0b3JlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc2hhcmVkLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvc3ltYm9sLWNvbnN0cnVjdG9yLWRldGVjdGlvbi5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tbGVuZ3RoLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tb2JqZWN0LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tcHJvcGVydHkta2V5LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdHJ5LXRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3VpZC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvaW50ZXJuYWxzL3VzZS1zeW1ib2wtYXMtdWlkLmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9pbnRlcm5hbHMvdjgtcHJvdG90eXBlLWRlZmluZS1idWcuanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWFrLW1hcC1iYXNpYy1kZXRlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vdGVzdC8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbC5qcyIsIndlYnBhY2s6Ly90ZXN0Ly4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIiwid2VicGFjazovL3Rlc3QvLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vdGVzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90ZXN0L3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vdGVzdC8uL2luZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX2V4cG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9fZXhwb3J0U3RhcikgfHwgZnVuY3Rpb24obSwgZXhwb3J0cykge1xuICAgIGZvciAodmFyIHAgaW4gbSkgaWYgKHAgIT09IFwiZGVmYXVsdFwiICYmICFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhwb3J0cywgcCkpIF9fY3JlYXRlQmluZGluZyhleHBvcnRzLCBtLCBwKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZlcnNpb24gPSB2b2lkIDA7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3JjL3NjcmVlblwiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vc3JjL3Jlcm91dGVyXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zcmMvc3RydWN0XCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zcmMvdXRpbHNcIiksIGV4cG9ydHMpO1xuZXhwb3J0cy52ZXJzaW9uID0gMTtcbmlmICh0eXBlb2Ygd3JpdGVGaWxlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHdyaXRlRmlsZVRtcF8xID0gd3JpdGVGaWxlO1xuICAgIHdyaXRlRmlsZSA9IGZ1bmN0aW9uIChwYXRoLCBjb250ZW50KSB7XG4gICAgICAgIHZhciBydG4gPSB3cml0ZUZpbGVUbXBfMShwYXRoLCBjb250ZW50KTtcbiAgICAgICAgZXhlY3V0ZShcImNobW9kIDc3NyBcIi5jb25jYXQocGF0aCkpO1xuICAgICAgICByZXR1cm4gcnRuO1xuICAgIH07XG59XG5lbHNlIHtcbiAgICBjb25zb2xlLmxvZygnd3JpdGVGaWxlIGlzIG5vdCBkZWZpbmVkJyk7XG59XG5pZiAodHlwZW9mIHMzVXBsb2FkRmlsZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzM1VwbG9hZEZpbGVUbXBfMSA9IHMzVXBsb2FkRmlsZTtcbiAgICBzM1VwbG9hZEZpbGUgPSBmdW5jdGlvbiAoZmlsZXBhdGgsIG9iamVjdE5hbWUsIGNvbnRlbnRUeXBlLCBlbmRwb2ludCwgYnVja2V0LCBrZXlJZCwgYWNjZXNzS2V5LCB0b2tlbiwgc3NsLCByZXRyeSwgcmV0cnlJbnRlcnZhbCkge1xuICAgICAgICBpZiAocmV0cnkgPT09IHZvaWQgMCkgeyByZXRyeSA9IDM7IH1cbiAgICAgICAgaWYgKHJldHJ5SW50ZXJ2YWwgPT09IHZvaWQgMCkgeyByZXRyeUludGVydmFsID0gMTAwMDA7IH1cbiAgICAgICAgdmFyIHNpemVPckVycm9yTXNnID0gJyc7XG4gICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcmV0cnk7IHIrKykge1xuICAgICAgICAgICAgaWYgKHIgPiAwKSB7XG4gICAgICAgICAgICAgICAgc2xlZXAocmV0cnlJbnRlcnZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzaXplT3JFcnJvck1zZyA9IHMzVXBsb2FkRmlsZVRtcF8xKGZpbGVwYXRoLCBvYmplY3ROYW1lLCBjb250ZW50VHlwZSwgZW5kcG9pbnQsIGJ1Y2tldCwga2V5SWQsIGFjY2Vzc0tleSwgdG9rZW4sIHNzbCk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHNpemVPckVycm9yTXNnID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBzaXplT3JFcnJvck1zZztcbiAgICB9O1xufVxuaWYgKHR5cGVvZiBzM0Rvd25sb2FkRmlsZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciBzM0Rvd25sb2FkRmlsZVRtcF8xID0gczNEb3dubG9hZEZpbGU7XG4gICAgczNEb3dubG9hZEZpbGUgPSBmdW5jdGlvbiAoZmlsZXBhdGgsIG9iamVjdE5hbWUsIGVuZHBvaW50LCBidWNrZXQsIGtleUlkLCBhY2Nlc3NLZXksIHRva2VuLCBzc2wsIHJldHJ5LCByZXRyeUludGVydmFsKSB7XG4gICAgICAgIGlmIChyZXRyeSA9PT0gdm9pZCAwKSB7IHJldHJ5ID0gMzsgfVxuICAgICAgICBpZiAocmV0cnlJbnRlcnZhbCA9PT0gdm9pZCAwKSB7IHJldHJ5SW50ZXJ2YWwgPSAxMDAwMDsgfVxuICAgICAgICB2YXIgZmlsZU5vdEV4aXN0ZWRNc2cgPSAnVGhlIHNwZWNpZmllZCBrZXkgZG9lcyBub3QgZXhpc3QuJztcbiAgICAgICAgdmFyIHN1Y2Nlc3NPckVycm9yTXNnID0gJyc7XG4gICAgICAgIGZvciAodmFyIHIgPSAwOyByIDwgcmV0cnk7IHIrKykge1xuICAgICAgICAgICAgaWYgKHIgPiAwKSB7XG4gICAgICAgICAgICAgICAgc2xlZXAocmV0cnlJbnRlcnZhbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBzdWNjZXNzT3JFcnJvck1zZyA9IHMzRG93bmxvYWRGaWxlVG1wXzEoZmlsZXBhdGgsIG9iamVjdE5hbWUsIGVuZHBvaW50LCBidWNrZXQsIGtleUlkLCBhY2Nlc3NLZXksIHRva2VuLCBzc2wpO1xuICAgICAgICAgICAgaWYgKHN1Y2Nlc3NPckVycm9yTXNnID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3VjY2Vzc09yRXJyb3JNc2cgPT09IGZpbGVOb3RFeGlzdGVkTXNnKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHN1Y2Nlc3NPckVycm9yTXNnO1xuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiLCJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IGZ1bmN0aW9uICgpIHtcbiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHQ7XG4gICAgfTtcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn07XG52YXIgX19zcHJlYWRBcnJheSA9ICh0aGlzICYmIHRoaXMuX19zcHJlYWRBcnJheSkgfHwgZnVuY3Rpb24gKHRvLCBmcm9tLCBwYWNrKSB7XG4gICAgaWYgKHBhY2sgfHwgYXJndW1lbnRzLmxlbmd0aCA9PT0gMikgZm9yICh2YXIgaSA9IDAsIGwgPSBmcm9tLmxlbmd0aCwgYXI7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgaWYgKGFyIHx8ICEoaSBpbiBmcm9tKSkge1xuICAgICAgICAgICAgaWYgKCFhcikgYXIgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tLCAwLCBpKTtcbiAgICAgICAgICAgIGFyW2ldID0gZnJvbVtpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdG8uY29uY2F0KGFyIHx8IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGZyb20pKTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnJlcm91dGVyID0gZXhwb3J0cy5SZXJvdXRlciA9IHZvaWQgMDtcbnZhciBzdHJ1Y3RfMSA9IHJlcXVpcmUoXCIuL3N0cnVjdFwiKTtcbnZhciBzY3JlZW5fMSA9IHJlcXVpcmUoXCIuL3NjcmVlblwiKTtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgeHJfMSA9IHJlcXVpcmUoXCIuL3hyXCIpO1xucmVxdWlyZShcImNvcmUtanMvZXMvb2JqZWN0L2Fzc2lnblwiKTtcbnJlcXVpcmUoXCJjb3JlLWpzL2VzL2FycmF5L2ZpbmQtaW5kZXhcIik7XG4vLyBzaW5nbGV0b24gY2xhc3NcbnZhciBSZXJvdXRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBSZXJvdXRlcigpIHtcbiAgICAgICAgdGhpcy5kZWJ1ZyA9IHRydWU7XG4gICAgICAgIHRoaXMuZGVmYXVsdENvbmZpZyA9IHN0cnVjdF8xLkRlZmF1bHRDb25maWdWYWx1ZTtcbiAgICAgICAgdGhpcy5yZXJvdXRlckNvbmZpZyA9IHN0cnVjdF8xLkRlZmF1bHRSZXJvdXRlckNvbmZpZztcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcgPSBzdHJ1Y3RfMS5EZWZhdWx0U2NyZWVuQ29uZmlnO1xuICAgICAgICB0aGlzLnNjcmVlbiA9IG5ldyBzY3JlZW5fMS5TY3JlZW4odGhpcy5zY3JlZW5Db25maWcpO1xuICAgICAgICB0aGlzLnJ1bm5pbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yb3V0ZUNvbmZsaWN0UmVjb3JkID0gW107XG4gICAgICAgIHRoaXMucm91dGVzID0gW107XG4gICAgICAgIHRoaXMudGFza3MgPSBbXTtcbiAgICAgICAgdGhpcy5yb3V0ZUNvbnRleHQgPSBudWxsO1xuICAgICAgICB0aGlzLnVua25vd25Sb3V0ZUFjdGlvbiA9IG51bGw7XG4gICAgICAgIHRoaXMuc3RhcnRBcHBSb3V0ZUFjdGlvbiA9IG51bGw7XG4gICAgICAgIHRoaXMubG9jYWxHYW1lU3RhdHVzID0gbnVsbDtcbiAgICAgICAgdGhpcy5jbG91ZEdhbWVTdGF0dXMgPSBudWxsO1xuICAgIH1cbiAgICBSZXJvdXRlci5nZXRJbnN0YW5jZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKFJlcm91dGVyLmluc3RhbmNlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIFJlcm91dGVyLmluc3RhbmNlID0gbmV3IFJlcm91dGVyKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFJlcm91dGVyLmluc3RhbmNlO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAvLyBOT1RFOiB0aGlzIGlzIGFuIGFub3RoZXIgd2F5IHRoYXQgcmVzZXRzIFJlcm91dGVyLCBqdXN0IGxlYXZpbmcgaGVyZSBmb3IgbWVtb3J5XG4gICAgICAgIC8vIHJlcm91dGVyQ29udGFpbmVyLmluc3RhbmNlID0gbmV3IFJlcm91dGVyKCk7XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgaW5jbHVkZWQgJ2NvcmUtanMvZXMvb2JqZWN0L2Fzc2lnbidcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBuZXcgUmVyb3V0ZXIoKSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBSZWNhbGN1bGF0ZSBzb21lIHZhbHVlIGxpa2UgZGV2aWNlIHdpZHRoIG9yIGhlaWdodCBpbiBzY3JlZW5Db25maWdcbiAgICAgKi9cbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICAvLyBzb3J0IHJvdXRlcyBieSBwcmlvcml0eVxuICAgICAgICB0aGlzLnJvdXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLnByaW9yaXR5IC0gYS5wcmlvcml0eTsgfSk7XG4gICAgICAgIC8vIGNoZWNrIGFuZCBjYWxjdWxhdGUgc2NyZWVuIGNvbmZpZ1xuICAgICAgICB2YXIgZGV2aWNlV0ggPSBnZXRTY3JlZW5TaXplKCk7XG4gICAgICAgIHZhciBtYXggPSBNYXRoLm1heChkZXZpY2VXSC53aWR0aCwgZGV2aWNlV0guaGVpZ2h0KTtcbiAgICAgICAgdmFyIG1pbiA9IE1hdGgubWluKGRldmljZVdILndpZHRoLCBkZXZpY2VXSC5oZWlnaHQpO1xuICAgICAgICB2YXIgZFdpZHRoID0gdGhpcy5zY3JlZW5Db25maWcucm90YXRpb24gPT09ICdob3Jpem9udGFsJyA/IG1heCA6IG1pbjtcbiAgICAgICAgdmFyIGRIZWlnaHQgPSB0aGlzLnNjcmVlbkNvbmZpZy5yb3RhdGlvbiA9PT0gJ3ZlcnRpY2FsJyA/IG1heCA6IG1pbjtcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcuZGV2aWNlV2lkdGggPSB0aGlzLnNjcmVlbkNvbmZpZy5kZXZpY2VXaWR0aCB8fCBkV2lkdGg7XG4gICAgICAgIHRoaXMuc2NyZWVuQ29uZmlnLmRldmljZUhlaWdodCA9IHRoaXMuc2NyZWVuQ29uZmlnLmRldmljZUhlaWdodCB8fCBkSGVpZ2h0O1xuICAgICAgICB0aGlzLnNjcmVlbkNvbmZpZy5zY3JlZW5XaWR0aCA9IHRoaXMuc2NyZWVuQ29uZmlnLnNjcmVlbldpZHRoIHx8IGRXaWR0aDtcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcuc2NyZWVuSGVpZ2h0ID0gdGhpcy5zY3JlZW5Db25maWcuc2NyZWVuSGVpZ2h0IHx8IGRIZWlnaHQ7XG4gICAgICAgIHRoaXMubG9nKFwic2NyZWVuV2lkdGg6IFwiLmNvbmNhdCh0aGlzLnNjcmVlbkNvbmZpZy5zY3JlZW5XaWR0aCwgXCIsIHNjcmVlbkhlaWdodDogXCIpLmNvbmNhdCh0aGlzLnNjcmVlbkNvbmZpZy5zY3JlZW5IZWlnaHQpKTtcbiAgICAgICAgdGhpcy5zY3JlZW5Db25maWcubG9nU2NyZWVuc2hvdEZvbGRlciA9IHV0aWxzXzEuVXRpbHMuam9pblBhdGhzKHRoaXMucmVyb3V0ZXJDb25maWcuc2F2ZUltYWdlUm9vdCwgdGhpcy5yZXJvdXRlckNvbmZpZy5kZXZpY2VJZCk7XG4gICAgICAgIGlmICgoX2EgPSB0aGlzLnJlcm91dGVyQ29uZmlnLnNhdmVQYWdlUmVmZXJlbmNlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZW5hYmxlKSB7XG4gICAgICAgICAgICB2YXIgZm9sZGVyUGF0aCA9IHRoaXMucmVyb3V0ZXJDb25maWcuc2F2ZVBhZ2VSZWZlcmVuY2UuZm9sZGVyUGF0aCB8fCB1dGlsc18xLlV0aWxzLmpvaW5QYXRocyh0aGlzLnJlcm91dGVyQ29uZmlnLnNhdmVJbWFnZVJvb3QsICdwYWdlUmVmZXJlbmNlJyk7XG4gICAgICAgICAgICB0aGlzLnJlcm91dGVyQ29uZmlnLnNhdmVQYWdlUmVmZXJlbmNlLmZvbGRlclBhdGggPSBmb2xkZXJQYXRoO1xuICAgICAgICAgICAgZXhlY3V0ZShcIm1rZGlyIC1wIFwiLmNvbmNhdChmb2xkZXJQYXRoKSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gbmV3IHNjcmVlbiBpZiBzY3JlZW4gY29uZmlnIGNoYW5nZWRcbiAgICAgICAgdGhpcy5zY3JlZW4gPSBuZXcgc2NyZWVuXzEuU2NyZWVuKHRoaXMuc2NyZWVuQ29uZmlnKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEFkZCBSb3V0ZUNvbmZpZyB0byBSZXJvdXRlciByb3V0ZXMsIGFmdGVyIHN0YXJ0aW5nIFJlcm91dGVyIHdpbGwgcnVuIG92ZXIgYWxsIFJvdXRlQ29uZmlncyB0byBtYXRjaCBzY3JlZW4gYW5kIGRvIGFjdGlvblxuICAgICAqIEBwYXJhbSBjb25maWcgaW5mb3JtYXRpb24gYWJvdXQgaG93IHJvdXRlIG1hdGNoIGFuZCByb3V0ZSBhY3Rpb25cbiAgICAgKi9cbiAgICBSZXJvdXRlci5wcm90b3R5cGUuYWRkUm91dGUgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgaW5jbHVkZWQgJ2NvcmUtanMvZXMvYXJyYXkvZmluZC1pbmRleCdcbiAgICAgICAgdmFyIGV4aXN0aW5nUm91dGVJbmRleCA9IHRoaXMucm91dGVzLmZpbmRJbmRleChmdW5jdGlvbiAocm91dGUpIHsgcmV0dXJuIHJvdXRlLnBhdGggPT09IGNvbmZpZy5wYXRoOyB9KTtcbiAgICAgICAgLy8gSWYgaXQgZXhpc3RzLCBsb2cgYSB3YXJuaW5nIGFuZCBkZWNpZGUgd2hhdCB0byBkbyBuZXh0XG4gICAgICAgIGlmIChleGlzdGluZ1JvdXRlSW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICB0aGlzLndhcm5pbmcoXCJBIHJvdXRlIHdpdGggdGhlIHBhdGggJ1wiLmNvbmNhdChjb25maWcucGF0aCwgXCInIGFscmVhZHkgZXhpc3RzLiBEdXBsaWNhdGUgcm91dGUgd2lsbCBub3QgYmUgYWRkZWQuXCIpKTtcbiAgICAgICAgICAgIC8vIE9wdGlvbiAxOiBVcGRhdGUgdGhlIGV4aXN0aW5nIHJvdXRlIHdpdGggdGhlIG5ldyBjb25maWd1cmF0aW9uXG4gICAgICAgICAgICAvLyB0aGlzLnJvdXRlc1tleGlzdGluZ1JvdXRlSW5kZXhdID0gdGhpcy53cmFwUm91dGVDb25maWdXaXRoRGVmYXVsdChjb25maWcpO1xuICAgICAgICAgICAgLy8gT3B0aW9uIDI6IFNpbXBseSByZXR1cm4gYW5kIGRvbid0IGFkZCB0aGUgbmV3IHJvdXRlXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgaXQgZG9lc24ndCBleGlzdCwgcHVzaCB0aGUgbmV3IHJvdXRlXG4gICAgICAgIHRoaXMucm91dGVzLnB1c2godGhpcy53cmFwUm91dGVDb25maWdXaXRoRGVmYXVsdChjb25maWcpKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIEdldHMgYSBjb3B5IG9mIGFsbCByb3V0ZSBjb25maWd1cmF0aW9ucyB0byBwcmV2ZW50IGV4dGVybmFsIG1vZGlmaWNhdGlvbnMuXG4gICAgICogQHJldHVybnMgYW4gYXJyYXkgb2YgUm91dGVDb25maWdcbiAgICAgKi9cbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZ2V0Um91dGVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yb3V0ZXMuc2xpY2UoKTsgLy8gUmV0dXJuIGEgY29weSBvZiB0aGUgcm91dGVzIGFycmF5IHRvIHByZXZlbnQgbW9kaWZpY2F0aW9uc1xuICAgIH07XG4gICAgLyoqXG4gICAgICogVGVsbCBSZXJvdXRlciB3aGF0IHRvIGRvIGlmIG5vdCBtYXRjaGluZyBhbnkgcm91dGVcbiAgICAgKiBAcGFyYW0gYWN0aW9uIGZ1bmN0aW9uIHRvIGRvIGlmIG5vdCBtYXRjaGluZ1xuICAgICAqL1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5hZGRVbmtub3duQWN0aW9uID0gZnVuY3Rpb24gKGFjdGlvbikge1xuICAgICAgICB0aGlzLnVua25vd25Sb3V0ZUFjdGlvbiA9IGFjdGlvbjtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5hZGRTdGFydEFwcEFjdGlvbiA9IGZ1bmN0aW9uIChhY3Rpb24pIHtcbiAgICAgICAgdGhpcy5zdGFydEFwcFJvdXRlQWN0aW9uID0gYWN0aW9uO1xuICAgIH07XG4gICAgLyoqXG4gICAgICogQWRkIFRhc2tDb25maWcgdG8gUmVyb3V0ZXIgdGFza3MsIGFmdGVyIHN0YXJ0aW5nIFJlcm91dGVyIHdpbGwgcnVuIG92ZXIgYWxsIFRhc2tzIGJ5IHRhc2sgY29uZGl0aW9uXG4gICAgICogQHBhcmFtIGNvbmZpZyBpbmZvcm1hdGlvbiBhYm91dCBob3cgdGFzayB3b3Jrc1xuICAgICAqL1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5hZGRUYXNrID0gZnVuY3Rpb24gKGNvbmZpZykge1xuICAgICAgICB0aGlzLnRhc2tzLnB1c2goe1xuICAgICAgICAgICAgbmFtZTogY29uZmlnLm5hbWUsXG4gICAgICAgICAgICBjb25maWc6IHRoaXMud3JhcFRhc2tDb25maWdXaXRoRGVmYXVsdChjb25maWcpLFxuICAgICAgICAgICAgc3RhcnRUaW1lOiAwLFxuICAgICAgICAgICAgbGFzdFJ1blRpbWU6IDAsXG4gICAgICAgICAgICBydW5UaW1lczogMCxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBzdGFydCBSZXJvdXRlciB0byBydW4gb3ZlciB0YXNrcyBhbmQgcm91dGVzXG4gICAgICogQHBhcmFtIHBhY2thZ2VOYW1lXG4gICAgICovXG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24gKHBhY2thZ2VOYW1lKSB7XG4gICAgICAgIHRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUgPSBwYWNrYWdlTmFtZTtcbiAgICAgICAgLy8gY2hlY2sgdGFza3NcbiAgICAgICAgaWYgKHRoaXMudGFza3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmxvZyhcIlJlcm91dGVyIHN0YXJ0IGZhaWxlZCwgbm8gdGFza3MgLi4uXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaW5pdCgpO1xuICAgICAgICB0aGlzLmxvZyhcIlJlcm91dGVyIHN0YXJ0ZWQgLi4uXCIpO1xuICAgICAgICAvLyB0YXNrIGNvbnRyb2xsZXJcbiAgICAgICAgdGhpcy5ydW5uaW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zdGFydFRhc2tMb29wKCk7XG4gICAgICAgIHRoaXMubG9nKFwiUmVyb3V0ZXIgc3RvcHBlZCAuLi5cIik7XG4gICAgfTtcbiAgICAvKipcbiAgICAgKiBzdG9wIFJlcm91dGVyXG4gICAgICovXG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHRoaXMubG9nKFwiUmVyb3V0ZXIgc3RvcCBjYWxsZWQsIHRyeWluZyB0byBzdG9wIHRhc2sgbG9vcFwiKTtcbiAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgICAgIGlmICh0aGlzLnJvdXRlQ29udGV4dCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhpcy5yb3V0ZUNvbnRleHQuc2NyaXB0UnVubmluZyA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuY2hlY2tJbkFwcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIHBhY2thZ2VOYW1lID0gdXRpbHNfMS5VdGlscy5nZXRDdXJyZW50QXBwKClbMF07XG4gICAgICAgIGlmIChwYWNrYWdlTmFtZSA9PT0gdGhpcy5yZXJvdXRlckNvbmZpZy5wYWNrYWdlTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHV0aWxzXzEuVXRpbHMuaXNBcHBPblRvcCh0aGlzLnJlcm91dGVyQ29uZmlnLnBhY2thZ2VOYW1lKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5jaGVja0FuZFN0YXJ0QXBwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAoIXRoaXMuY2hlY2tJbkFwcCgpKSB7XG4gICAgICAgICAgICB0aGlzLmxvZyhcIkFwcElzTm90U3RhcnRlZCwgc3RhcnRBcHAgXCIuY29uY2F0KHRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUpKTtcbiAgICAgICAgICAgIHRoaXMuc3RhcnRBcHAoKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5zdGFydEFwcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnJlcm91dGVyQ29uZmlnLnBhY2thZ2VOYW1lKSB7XG4gICAgICAgICAgICB0aGlzLmxvZyhcIlJlcm91dGVyIHN0YXJ0IGFwcCBmYWlsZWQsIG5vIHBhY2thZ2VOYW1lIC4uLlwiKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1dGlsc18xLlV0aWxzLnN0YXJ0QXBwKHRoaXMucmVyb3V0ZXJDb25maWcucGFja2FnZU5hbWUpO1xuICAgICAgICB1dGlsc18xLlV0aWxzLnNsZWVwKHRoaXMucmVyb3V0ZXJDb25maWcuc3RhcnRBcHBEZWxheSk7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuc3RvcEFwcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnJlcm91dGVyQ29uZmlnLnBhY2thZ2VOYW1lKSB7XG4gICAgICAgICAgICB0aGlzLmxvZyhcIlJlcm91dGVyIHN0b3AgYXBwIGZhaWxlZCwgbm8gcGFja2FnZU5hbWUgLi4uXCIpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHV0aWxzXzEuVXRpbHMuc3RvcEFwcCh0aGlzLnJlcm91dGVyQ29uZmlnLnBhY2thZ2VOYW1lKTtcbiAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcCgxMDAwKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5yZXN0YXJ0QXBwID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnN0b3BBcHAoKTtcbiAgICAgICAgdGhpcy5zdGFydEFwcCgpO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmdvTmV4dCA9IGZ1bmN0aW9uIChwYWdlKSB7XG4gICAgICAgIGlmIChwYWdlLm5leHQgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zY3JlZW4udGFwKHBhZ2UubmV4dCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLndhcm5pbmcoXCJcIi5jb25jYXQocGFnZS5uYW1lLCBcIiBhY3Rpb24gPT0gZ29OZXh0LCBidXQgbm8gbmV4dCB4eVwiKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nb0JhY2sgPSBmdW5jdGlvbiAocGFnZSkge1xuICAgICAgICBpZiAocGFnZS5iYWNrICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2NyZWVuLnRhcChwYWdlLmJhY2spO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy53YXJuaW5nKFwiXCIuY29uY2F0KHBhZ2UubmFtZSwgXCIgYWN0aW9uID09IGdvQmFjaywgYnV0IG5vIGJhY2sgeHlcIikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaXNQYWdlTWF0Y2ggPSBmdW5jdGlvbiAocGFnZSkge1xuICAgICAgICB2YXIgaW1hZ2UgPSB0aGlzLnNjcmVlbi5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgIHZhciBpc01hdGNoID0gdGhpcy5pc1BhZ2VNYXRjaEltYWdlKHBhZ2UsIGltYWdlKTtcbiAgICAgICAgcmVsZWFzZUltYWdlKGltYWdlKTtcbiAgICAgICAgcmV0dXJuIGlzTWF0Y2g7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaXNQYWdlTWF0Y2hJbWFnZSA9IGZ1bmN0aW9uIChwYWdlLCBpbWFnZSkge1xuICAgICAgICBpZiAodHlwZW9mIHBhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB2YXIgcCA9IHRoaXMuZ2V0UGFnZUJ5TmFtZShwYWdlKTtcbiAgICAgICAgICAgIGlmIChwID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy53YXJuaW5nKFwiaXNQYWdlTWF0Y2hJbWFnZSBcIi5jb25jYXQocGFnZSwgXCIgbm90IGV4aXN0XCIpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwYWdlID0gcDtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFnZSBpbnN0YW5jZW9mIHN0cnVjdF8xLlBhZ2UpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLmlzTWF0Y2hQYWdlSW1wbChpbWFnZSwgcGFnZSwgdGhpcy5kZWZhdWx0Q29uZmlnLlBhZ2VUaHJlcywgdGhpcy5kZWJ1Zyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB2YXIgcGFnZXMgPSB0aGlzLmlzTWF0Y2hHcm91cFBhZ2VJbXBsKGltYWdlLCBwYWdlLCB0aGlzLmRlZmF1bHRDb25maWcuR3JvdXBQYWdlVGhyZXMsIHRoaXMuZGVidWcpO1xuICAgICAgICAgICAgcmV0dXJuIHBhZ2VzLmxlbmd0aCA+IDA7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nZXRQYWdlc01hdGNoID0gZnVuY3Rpb24gKGdyb3VwUGFnZSkge1xuICAgICAgICB2YXIgaW1hZ2UgPSB0aGlzLnNjcmVlbi5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgIHZhciBtYXRjaCA9IHRoaXMuZ2V0UGFnZXNNYXRjaEltYWdlKGdyb3VwUGFnZSwgaW1hZ2UsIHRoaXMuZGVmYXVsdENvbmZpZy5Hcm91cFBhZ2VUaHJlcyk7XG4gICAgICAgIHJlbGVhc2VJbWFnZShpbWFnZSk7XG4gICAgICAgIHJldHVybiBtYXRjaDtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nZXRQYWdlc01hdGNoSW1hZ2UgPSBmdW5jdGlvbiAoZ3JvdXBQYWdlLCBpbWFnZSwgcGFyZW50VGhyZXMsIGRlYnVnKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHZhciBwYWdlcyA9IFtdO1xuICAgICAgICB2YXIgdGhyZXMgPSAoX2IgPSAoX2EgPSBncm91cFBhZ2UudGhyZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHBhcmVudFRocmVzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB0aGlzLmRlZmF1bHRDb25maWcuUGFnZVRocmVzO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGdyb3VwUGFnZS5wYWdlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHBhZ2UgPSBncm91cFBhZ2UucGFnZXNbaV07XG4gICAgICAgICAgICB2YXIgaXNQYWdlTWF0Y2ggPSB0aGlzLmlzTWF0Y2hQYWdlSW1wbChpbWFnZSwgcGFnZSwgdGhyZXMsIHRoaXMuZGVidWcpO1xuICAgICAgICAgICAgaWYgKGlzUGFnZU1hdGNoKSB7XG4gICAgICAgICAgICAgICAgcGFnZXMucHVzaChwYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFnZXM7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUud2FpdFNjcmVlbkZvck1hdGNoaW5nUGFnZSA9IGZ1bmN0aW9uIChwYWdlLCB0aW1lb3V0LCBtYXRjaFRpbWVzLCBpbnRlcnZhbCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAobWF0Y2hUaW1lcyA9PT0gdm9pZCAwKSB7IG1hdGNoVGltZXMgPSAxOyB9XG4gICAgICAgIGlmIChpbnRlcnZhbCA9PT0gdm9pZCAwKSB7IGludGVydmFsID0gNjAwOyB9XG4gICAgICAgIHJldHVybiB1dGlsc18xLlV0aWxzLndhaXRGb3JBY3Rpb24oZnVuY3Rpb24gKCkgeyByZXR1cm4gX3RoaXMuaXNQYWdlTWF0Y2gocGFnZSk7IH0sIHRpbWVvdXQsIG1hdGNoVGltZXMsIGludGVydmFsKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pc1JvdXRlTWF0Y2ggPSBmdW5jdGlvbiAocm91dGUpIHtcbiAgICAgICAgdmFyIGltYWdlID0gdGhpcy5zY3JlZW4uZ2V0Q3Z0RGV2U2NyZWVuc2hvdCgpO1xuICAgICAgICB2YXIgaXNNYXRjaCA9IHRoaXMuaXNSb3V0ZU1hdGNoSW1hZ2Uocm91dGUsIGltYWdlKTtcbiAgICAgICAgcmVsZWFzZUltYWdlKGltYWdlKTtcbiAgICAgICAgcmV0dXJuIGlzTWF0Y2g7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaXNSb3V0ZU1hdGNoSW1hZ2UgPSBmdW5jdGlvbiAocm91dGUsIGltYWdlKSB7XG4gICAgICAgIHZhciByb3V0ZUNvbmZpZyA9IHRoaXMuZ2V0Um91dGVDb25maWcocm91dGUpO1xuICAgICAgICBpZiAocm91dGVDb25maWcgPT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMud2FybmluZyhcImlzUm91dGVNYXRjaEltYWdlIFwiLmNvbmNhdChyb3V0ZSwgXCIgbm90IGV4aXN0XCIpKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZmlsbGVkUm91dGVDb25maWcgPSB0aGlzLndyYXBSb3V0ZUNvbmZpZ1dpdGhEZWZhdWx0KHJvdXRlQ29uZmlnKTtcbiAgICAgICAgdmFyIHJvdGF0aW9uID0gdGhpcy5zY3JlZW4uZ2V0SW1hZ2VSb3RhdGlvbihpbWFnZSk7XG4gICAgICAgIHZhciBpc01hdGNoZWQgPSB0aGlzLmlzTWF0Y2hSb3V0ZUltcGwoaW1hZ2UsIHJvdGF0aW9uLCBmaWxsZWRSb3V0ZUNvbmZpZywgJ3dhaXRTY3JlZW5Gb3JNYXRjaGluZ1JvdXRlJykuaXNNYXRjaGVkO1xuICAgICAgICBpZiAoaXNNYXRjaGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUud2FpdFNjcmVlbkZvck1hdGNoaW5nUm91dGUgPSBmdW5jdGlvbiAocm91dGUsIHRpbWVvdXQsIG1hdGNoVGltZXMsIGludGVydmFsKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIGlmIChtYXRjaFRpbWVzID09PSB2b2lkIDApIHsgbWF0Y2hUaW1lcyA9IDE7IH1cbiAgICAgICAgaWYgKGludGVydmFsID09PSB2b2lkIDApIHsgaW50ZXJ2YWwgPSA2MDA7IH1cbiAgICAgICAgcmV0dXJuIHV0aWxzXzEuVXRpbHMud2FpdEZvckFjdGlvbihmdW5jdGlvbiAoKSB7IHJldHVybiBfdGhpcy5pc1JvdXRlTWF0Y2gocm91dGUpOyB9LCB0aW1lb3V0LCBtYXRjaFRpbWVzLCBpbnRlcnZhbCk7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZ2V0UGFnZUJ5TmFtZSA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYiA9IHRoaXMucm91dGVzOyBfaSA8IF9iLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIHJvdXRlID0gX2JbX2ldO1xuICAgICAgICAgICAgaWYgKG5hbWUgPT09ICgoX2EgPSByb3V0ZS5tYXRjaCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlLm1hdGNoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmdldFJvdXRlQ29uZmlnQnlQYXRoID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IHRoaXMucm91dGVzOyBfaSA8IF9hLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIHJvdXRlID0gX2FbX2ldO1xuICAgICAgICAgICAgaWYgKHBhdGggPT09IHJvdXRlLnBhdGgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcm91dGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZ2V0Q3VycmVudE1hdGNoTmFtZXMgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHZhciBpbWFnZSA9IHRoaXMuc2NyZWVuLmdldEN2dERldlNjcmVlbnNob3QoKTtcbiAgICAgICAgdmFyIG1hdGNoZWROYW1lcyA9IFtdO1xuICAgICAgICB0aGlzLnJvdXRlcy5mb3JFYWNoKGZ1bmN0aW9uIChyb3V0ZSkge1xuICAgICAgICAgICAgdmFyIG1hdGNoID0gcm91dGUubWF0Y2g7XG4gICAgICAgICAgICBpZiAoKG1hdGNoIGluc3RhbmNlb2Ygc3RydWN0XzEuUGFnZSAmJiBfdGhpcy5pc01hdGNoUGFnZUltcGwoaW1hZ2UsIG1hdGNoLCBfdGhpcy5kZWZhdWx0Q29uZmlnLlBhZ2VUaHJlcywgX3RoaXMuZGVidWcpKSB8fFxuICAgICAgICAgICAgICAgIChtYXRjaCBpbnN0YW5jZW9mIHN0cnVjdF8xLkdyb3VwUGFnZSAmJiBfdGhpcy5pc01hdGNoR3JvdXBQYWdlSW1wbChpbWFnZSwgbWF0Y2gsIF90aGlzLmRlZmF1bHRDb25maWcuUGFnZVRocmVzLCBfdGhpcy5kZWJ1ZykubGVuZ3RoID4gMCkpIHtcbiAgICAgICAgICAgICAgICBtYXRjaGVkTmFtZXMucHVzaChtYXRjaC5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubG9nKFwiY3VycmVudCBtYXRjaDogXCIsIG1hdGNoZWROYW1lcyk7XG4gICAgICAgIHJlbGVhc2VJbWFnZShpbWFnZSk7XG4gICAgICAgIHJldHVybiBtYXRjaGVkTmFtZXM7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuZ2V0Um91dGVDb25maWcgPSBmdW5jdGlvbiAocikge1xuICAgICAgICB2YXIgcm91dGU7XG4gICAgICAgIGlmICh0eXBlb2YgciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJvdXRlID0gdGhpcy5nZXRSb3V0ZUNvbmZpZ0J5UGF0aChyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJvdXRlID0gcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcm91dGU7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUud3JhcFJvdXRlQ29uZmlnV2l0aERlZmF1bHQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZywgX2gsIF9qO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGF0aDogY29uZmlnLnBhdGgsXG4gICAgICAgICAgICBhY3Rpb246IGNvbmZpZy5hY3Rpb24sXG4gICAgICAgICAgICBtYXRjaDogKF9hID0gY29uZmlnLm1hdGNoKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsLFxuICAgICAgICAgICAgY3VzdG9tTWF0Y2g6IChfYiA9IGNvbmZpZy5jdXN0b21NYXRjaCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogbnVsbCxcbiAgICAgICAgICAgIHJvdGF0aW9uOiAoX2MgPSBjb25maWcucm90YXRpb24pICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IHRoaXMuc2NyZWVuQ29uZmlnLnJvdGF0aW9uLFxuICAgICAgICAgICAgc2hvdWxkTWF0Y2hUaW1lczogKF9kID0gY29uZmlnLnNob3VsZE1hdGNoVGltZXMpICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IHRoaXMuZGVmYXVsdENvbmZpZy5Sb3V0ZUNvbmZpZ1Nob3VsZE1hdGNoVGltZXMsXG4gICAgICAgICAgICBzaG91bGRNYXRjaER1cmluZzogKF9lID0gY29uZmlnLnNob3VsZE1hdGNoRHVyaW5nKSAhPT0gbnVsbCAmJiBfZSAhPT0gdm9pZCAwID8gX2UgOiB0aGlzLmRlZmF1bHRDb25maWcuUm91dGVDb25maWdTaG91bGRNYXRjaER1cmluZyxcbiAgICAgICAgICAgIGJlZm9yZUFjdGlvbkRlbGF5OiAoX2YgPSBjb25maWcuYmVmb3JlQWN0aW9uRGVsYXkpICE9PSBudWxsICYmIF9mICE9PSB2b2lkIDAgPyBfZiA6IHRoaXMuZGVmYXVsdENvbmZpZy5Sb3V0ZUNvbmZpZ0JlZm9yZUFjdGlvbkRlbGF5LFxuICAgICAgICAgICAgYWZ0ZXJBY3Rpb25EZWxheTogKF9nID0gY29uZmlnLmFmdGVyQWN0aW9uRGVsYXkpICE9PSBudWxsICYmIF9nICE9PSB2b2lkIDAgPyBfZyA6IHRoaXMuZGVmYXVsdENvbmZpZy5Sb3V0ZUNvbmZpZ0FmdGVyQWN0aW9uRGVsYXksXG4gICAgICAgICAgICBwcmlvcml0eTogKF9oID0gY29uZmlnLnByaW9yaXR5KSAhPT0gbnVsbCAmJiBfaCAhPT0gdm9pZCAwID8gX2ggOiB0aGlzLmRlZmF1bHRDb25maWcuUm91dGVDb25maWdQcmlvcml0eSxcbiAgICAgICAgICAgIGRlYnVnOiAoX2ogPSBjb25maWcuZGVidWcpICE9PSBudWxsICYmIF9qICE9PSB2b2lkIDAgPyBfaiA6IHRoaXMuZGVmYXVsdENvbmZpZy5Sb3V0ZUNvbmZpZ0RlYnVnLFxuICAgICAgICB9O1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLndyYXBUYXNrQ29uZmlnV2l0aERlZmF1bHQgPSBmdW5jdGlvbiAoY29uZmlnKSB7XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IGNvbmZpZy5uYW1lLFxuICAgICAgICAgICAgbWF4VGFza1J1blRpbWVzOiAoX2EgPSBjb25maWcubWF4VGFza1J1blRpbWVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB0aGlzLmRlZmF1bHRDb25maWcuVGFza0NvbmZpZ01heFRhc2tSdW5UaW1lcyxcbiAgICAgICAgICAgIG1heFRhc2tEdXJpbmc6IChfYiA9IGNvbmZpZy5tYXhUYXNrRHVyaW5nKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB0aGlzLmRlZmF1bHRDb25maWcuVGFza0NvbmZpZ01heFRhc2tEdXJpbmcsXG4gICAgICAgICAgICBtaW5Sb3VuZEludGVydmFsOiAoX2MgPSBjb25maWcubWluUm91bmRJbnRlcnZhbCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogdGhpcy5kZWZhdWx0Q29uZmlnLlRhc2tDb25maWdNaW5Sb3VuZEludGVydmFsLFxuICAgICAgICAgICAgZm9yY2VTdG9wOiAoX2QgPSBjb25maWcuZm9yY2VTdG9wKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiB0aGlzLmRlZmF1bHRDb25maWcuVGFza0NvbmZpZ0F1dG9TdG9wLFxuICAgICAgICAgICAgZmluZFJvdXRlRGVsYXk6IChfZSA9IGNvbmZpZy5maW5kUm91dGVEZWxheSkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogdGhpcy5kZWZhdWx0Q29uZmlnLlRhc2tDb25maWdGaW5kUm91dGVEZWxheSxcbiAgICAgICAgICAgIGJlZm9yZVJvdXRlOiAoX2YgPSBjb25maWcuYmVmb3JlUm91dGUpICE9PSBudWxsICYmIF9mICE9PSB2b2lkIDAgPyBfZiA6IG51bGwsXG4gICAgICAgICAgICBhZnRlclJvdXRlOiAoX2cgPSBjb25maWcuYWZ0ZXJSb3V0ZSkgIT09IG51bGwgJiYgX2cgIT09IHZvaWQgMCA/IF9nIDogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5zdGFydFRhc2tMb29wID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgdGFza0lkeCA9IDA7XG4gICAgICAgIHdoaWxlICh0aGlzLnJ1bm5pbmcpIHtcbiAgICAgICAgICAgIHZhciB0YXNrID0gdGhpcy50YXNrc1t0YXNrSWR4ICUgdGhpcy50YXNrcy5sZW5ndGhdO1xuICAgICAgICAgICAgdGFza0lkeCsrO1xuICAgICAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgICAgICB2YXIgaXNUYXNrUnVuRmlyc3RUaW1lID0gdGFzay5sYXN0UnVuVGltZSA9PT0gMDtcbiAgICAgICAgICAgIGlmIChub3cgLSB0YXNrLmxhc3RSdW5UaW1lIDw9IHRhc2suY29uZmlnLm1pblJvdW5kSW50ZXJ2YWwgJiYgIWlzVGFza1J1bkZpcnN0VGltZSkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nKFwiVGFzazogXCIuY29uY2F0KHRhc2submFtZSwgXCIgZHVyaW5nOiBcIikuY29uY2F0KG5vdyAtIHRhc2subGFzdFJ1blRpbWUsIFwiIDw9IG1pblJvdW5kSW50ZXJ2YWwsIHNraXBcIikpO1xuICAgICAgICAgICAgICAgIHV0aWxzXzEuVXRpbHMuc2xlZXAodGhpcy5yZXJvdXRlckNvbmZpZy50YXNrRGVsYXkpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGFzay5zdGFydFRpbWUgPSBub3c7XG4gICAgICAgICAgICB0YXNrLnJ1blRpbWVzID0gMDtcbiAgICAgICAgICAgIHZhciBleGl0VGFzayA9IGZhbHNlO1xuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0YXNrLmNvbmZpZy5tYXhUYXNrUnVuVGltZXMgJiYgdGhpcy5ydW5uaW5nICYmICFleGl0VGFzazsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5sb2coXCJUYXNrOiBcIi5jb25jYXQodGFzay5uYW1lLCBcIiBydW4gXCIpLmNvbmNhdCh0YXNrLnJ1blRpbWVzKSk7XG4gICAgICAgICAgICAgICAgdmFyIHNraXBSb3V0ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGlmICh0YXNrLmNvbmZpZy5iZWZvcmVSb3V0ZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZyhcIlRhc2s6IFwiLmNvbmNhdCh0YXNrLm5hbWUsIFwiIHJ1biBcIikuY29uY2F0KHRhc2sucnVuVGltZXMsIFwiIGRvIGJlZm9yZVJvdXRlKClcIikpO1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFzay5jb25maWcuYmVmb3JlUm91dGUodGFzaykgPT09ICdza2lwUm91dGVMb29wJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2tpcFJvdXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoc2tpcFJvdXRlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nKFwiVGFzazogXCIuY29uY2F0KHRhc2submFtZSwgXCIgcnVuIFwiKS5jb25jYXQodGFzay5ydW5UaW1lcywgXCIgc2tpcFJvdXRlTG9vcFwiKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBleGl0VGFzayA9IHRoaXMuc3RhcnRSb3V0ZUxvb3AodGFzayk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0YXNrLmNvbmZpZy5hZnRlclJvdXRlICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubG9nKFwiVGFzazogXCIuY29uY2F0KHRhc2submFtZSwgXCIgcnVuIFwiKS5jb25jYXQodGFzay5ydW5UaW1lcywgXCIgZG8gYWZ0ZXJSb3V0ZSgpXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgdGFzay5jb25maWcuYWZ0ZXJSb3V0ZSh0YXNrKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGFzay5ydW5UaW1lcysrO1xuICAgICAgICAgICAgICAgIHRhc2subGFzdFJ1blRpbWUgPSBub3c7XG4gICAgICAgICAgICAgICAgdmFyIGR1cmluZyA9IG5vdyAtIHRhc2suc3RhcnRUaW1lO1xuICAgICAgICAgICAgICAgIGlmICh0YXNrLmNvbmZpZy5tYXhUYXNrRHVyaW5nID4gMCAmJiBkdXJpbmcgPj0gdGFzay5jb25maWcubWF4VGFza0R1cmluZykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmxvZyhcIlRhc2s6IFwiLmNvbmNhdCh0YXNrLm5hbWUsIFwiIHRhc2tEdXJpbmc6IFwiKS5jb25jYXQoZHVyaW5nLCBcIi9cIikuY29uY2F0KHRhc2suY29uZmlnLm1heFRhc2tEdXJpbmcsIFwiIHJlYWNoZWQsIHN0b3BcIikpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB1dGlsc18xLlV0aWxzLnNsZWVwKHRoaXMucmVyb3V0ZXJDb25maWcudGFza0RlbGF5KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLnN0YXJ0Um91dGVMb29wID0gZnVuY3Rpb24gKHRhc2spIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZTtcbiAgICAgICAgdGhpcy5yb3V0ZUNvbnRleHQgPSB7XG4gICAgICAgICAgICB0YXNrOiB0YXNrLFxuICAgICAgICAgICAgc2NyZWVuOiB0aGlzLnNjcmVlbixcbiAgICAgICAgICAgIHNjcmlwdFJ1bm5pbmc6IHRoaXMucnVubmluZyxcbiAgICAgICAgICAgIHBhdGg6ICcnLFxuICAgICAgICAgICAgbGFzdE1hdGNoZWRQYXRoOiAoX2IgPSAoX2EgPSB0aGlzLnJvdXRlQ29udGV4dCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxhc3RNYXRjaGVkUGF0aCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogJycsXG4gICAgICAgICAgICBtYXRjaFRpbWVzOiAwLFxuICAgICAgICAgICAgbWF0Y2hTdGFydFRTOiAwLFxuICAgICAgICAgICAgbWF0Y2hEdXJpbmc6IDAsXG4gICAgICAgIH07XG4gICAgICAgIHZhciByb3V0ZUxvb3AgPSB0cnVlO1xuICAgICAgICB2YXIgZXhpdFRhc2tSZXN1bHQgPSBmYWxzZTtcbiAgICAgICAgdmFyIGZpbmlzaFJvdW5kRnVuYyA9IGZ1bmN0aW9uIChleGl0VGFzaykge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKGV4aXRUYXNrID09PSB2b2lkIDApIHsgZXhpdFRhc2sgPSBmYWxzZTsgfVxuICAgICAgICAgICAgcm91dGVMb29wID0gZmFsc2U7XG4gICAgICAgICAgICBleGl0VGFza1Jlc3VsdCA9IGV4aXRUYXNrO1xuICAgICAgICAgICAgX3RoaXMubG9nKFwiZmluaXNoIHJvdW5kOiBcIi5jb25jYXQoKF9hID0gX3RoaXMucm91dGVDb250ZXh0KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EudGFzay5uYW1lLCBcIjsgZXhpdFRhc2s6IFwiKS5jb25jYXQoZXhpdFRhc2spKTtcbiAgICAgICAgfTtcbiAgICAgICAgLy8gcG9pbnRlciBmb3Igc2hvcnQgY29kZVxuICAgICAgICB2YXIgY29udGV4dCA9IHRoaXMucm91dGVDb250ZXh0O1xuICAgICAgICB3aGlsZSAocm91dGVMb29wICYmIHRoaXMucnVubmluZykge1xuICAgICAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgICAgICAvLyBjaGVjayB0YXNrLmF1dG9TdG9wXG4gICAgICAgICAgICB2YXIgdGFza1J1bkR1cmluZyA9IG5vdyAtIHRhc2suc3RhcnRUaW1lO1xuICAgICAgICAgICAgaWYgKHRhc2suY29uZmlnLmZvcmNlU3RvcCAmJiB0YXNrUnVuRHVyaW5nID4gdGFzay5jb25maWcubWF4VGFza0R1cmluZykge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nKFwiVGFzayBcIi5jb25jYXQodGFzay5uYW1lLCBcIiBBdXRvU3RvcCwgZXhjZWVkIHRhc2tSdW5EdXJpbmdcIikpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gY2hlY2sgaXNBcHBPbiBvciBhdXRvIGxhdW5jaCBpdFxuICAgICAgICAgICAgaWYgKHRoaXMucmVyb3V0ZXJDb25maWcuYXV0b0xhdW5jaEFwcCkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmNoZWNrQW5kU3RhcnRBcHAoKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5zdGFydEFwcFJvdXRlQWN0aW9uICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0QXBwUm91dGVBY3Rpb24oY29udGV4dCwgZmluaXNoUm91bmRGdW5jKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2YXIgcm90YXRpb24gPSB0aGlzLnNjcmVlbi5nZXRSb3RhdGlvbigpO1xuICAgICAgICAgICAgdmFyIGltYWdlID0gdGhpcy5zY3JlZW4uZ2V0Q3Z0RGV2U2NyZWVuc2hvdCgpO1xuICAgICAgICAgICAgdmFyIG1hdGNoZXMgPSB0aGlzLmZpbmRNYXRjaGVkUm91dGVJbXBsKHRhc2submFtZSwgaW1hZ2UsIHJvdGF0aW9uKTtcbiAgICAgICAgICAgIHZhciBtYXRjaGVkUm91dGUgPSAoX2MgPSBtYXRjaGVzWzBdKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MubWF0Y2hlZFJvdXRlO1xuICAgICAgICAgICAgdmFyIG1hdGNoZWRQYWdlcyA9IChfZCA9IG1hdGNoZXNbMF0pID09PSBudWxsIHx8IF9kID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZC5tYXRjaGVkUGFnZXM7XG4gICAgICAgICAgICAvLyBjb250ZXh0Lm1hdGNoU3RhcnRUUyA9IDAgaWYgaW5pdCBydW5cbiAgICAgICAgICAgIGNvbnRleHQubWF0Y2hTdGFydFRTID0gY29udGV4dC5tYXRjaFN0YXJ0VFMgfHwgbm93O1xuICAgICAgICAgICAgY29udGV4dC5wYXRoID0gKF9lID0gbWF0Y2hlZFJvdXRlID09PSBudWxsIHx8IG1hdGNoZWRSb3V0ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWF0Y2hlZFJvdXRlLnBhdGgpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6ICcnO1xuICAgICAgICAgICAgLy8gZmlyc3QgbWF0Y2hcbiAgICAgICAgICAgIGlmIChjb250ZXh0LnBhdGggIT09IGNvbnRleHQubGFzdE1hdGNoZWRQYXRoKSB7XG4gICAgICAgICAgICAgICAgY29udGV4dC5tYXRjaFRpbWVzID0gMDtcbiAgICAgICAgICAgICAgICBjb250ZXh0Lm1hdGNoU3RhcnRUUyA9IG5vdztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRleHQubWF0Y2hEdXJpbmcgPSBub3cgLSBjb250ZXh0Lm1hdGNoU3RhcnRUUztcbiAgICAgICAgICAgIGNvbnRleHQubWF0Y2hUaW1lcysrO1xuICAgICAgICAgICAgc3dpdGNoIChtYXRjaGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgLy8gbm8gbWF0Y2hcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMudW5rbm93blJvdXRlQWN0aW9uICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnVua25vd25Sb3V0ZUFjdGlvbihjb250ZXh0LCBpbWFnZSwgZmluaXNoUm91bmRGdW5jKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgIC8vIHBlcmZlY3QgbWF0Y2ggMVxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5yZXJvdXRlckNvbmZpZy5zYXZlTWF0Y2hlZFNjcmVlbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zYXZlU2NyZWVuc2hvdFRvRGlzayhcIlwiLmNvbmNhdCh0aGlzLnJlcm91dGVyQ29uZmlnLnNhdmVJbWFnZVJvb3QsIFwiL21hdGNoZWRcIiksIFwiXCIuY29uY2F0KG1hdGNoZXNbMF0ubWF0Y2hlZFJvdXRlLnBhdGgpLCBmYWxzZSwgaW1hZ2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZG9BY3Rpb25Gb3JSb3V0ZShjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZFJvdXRlLCBtYXRjaGVkUGFnZXMsIGZpbmlzaFJvdW5kRnVuYyk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbmZsaWN0XG4gICAgICAgICAgICAgICAgICAgIHZhciBlcnJvciA9IHRoaXMuaGFuZGxlQ29uZmxpY3RSb3V0ZXModGFzay5uYW1lLCBpbWFnZSwgbWF0Y2hlcywgZmluaXNoUm91bmRGdW5jKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyB1cGRhdGUgbGFzdE1hdGNoZWRQYXRoIGFmdGVyIGFjdGlvbiBkb25lXG4gICAgICAgICAgICAvLyBvdGhlcndpc2UgdGhlIGxhc3RNYXRjaGVkUGF0aCB3aWxsIGJlIGN1cnJlbnQgcGF0aCB3aGVuIGRvaW5nIGFjdGlvblxuICAgICAgICAgICAgY29udGV4dC5sYXN0TWF0Y2hlZFBhdGggPSBjb250ZXh0LnBhdGg7XG4gICAgICAgICAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcCh0YXNrLmNvbmZpZy5maW5kUm91dGVEZWxheSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGV4aXRUYXNrUmVzdWx0O1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLmRvQWN0aW9uRm9yUm91dGUgPSBmdW5jdGlvbiAoY29udGV4dCwgaW1hZ2UsIHJvdXRlLCBtYXRjaGVkUGFnZXMsIGZpbmlzaFJvdW5kKSB7XG4gICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgIHRoaXMubG9nSW1wbChyb3V0ZS5kZWJ1ZywgXCJoYW5kbGVNYXRjaGVkUm91dGU6IFwiLmNvbmNhdChyb3V0ZS5wYXRoLCBcIiwgdGltZXM6IFwiKS5jb25jYXQoY29udGV4dC5tYXRjaFRpbWVzLCBcIiwgZHVyaW5nOiBcIikuY29uY2F0KGNvbnRleHQubWF0Y2hEdXJpbmcpKTtcbiAgICAgICAgaWYgKGNvbnRleHQubWF0Y2hUaW1lcyA8IHJvdXRlLnNob3VsZE1hdGNoVGltZXMgfHwgY29udGV4dC5tYXRjaER1cmluZyA8IHJvdXRlLnNob3VsZE1hdGNoRHVyaW5nKSB7XG4gICAgICAgICAgICAvLyBzaG91bGQgc3RpbGwgd2FpdCBmb3IgbWF0Y2hpbmcgY29uZGl0aW9uXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG5leHRYWSA9IChfYSA9IG1hdGNoZWRQYWdlc1swXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5leHQ7XG4gICAgICAgIHZhciBiYWNrWFkgPSAoX2IgPSBtYXRjaGVkUGFnZXNbMF0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5iYWNrO1xuICAgICAgICAvLyBtYXRjaGVkIGFuZCBmaXQgY29uZGl0aW9uLCBkbyBhY3Rpb25cbiAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcChyb3V0ZS5iZWZvcmVBY3Rpb25EZWxheSk7XG4gICAgICAgIGlmIChyb3V0ZS5hY3Rpb24gPT09ICdnb05leHQnKSB7XG4gICAgICAgICAgICBpZiAobmV4dFhZICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNjcmVlbi50YXAobmV4dFhZKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMud2FybmluZyhcIlwiLmNvbmNhdChyb3V0ZS5wYXRoLCBcIiBhY3Rpb24gPT0gZ29OZXh0LCBidXQgbm8gbmV4dCB4eVwiKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocm91dGUuYWN0aW9uID09PSAnZ29CYWNrJykge1xuICAgICAgICAgICAgaWYgKGJhY2tYWSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY3JlZW4udGFwKGJhY2tYWSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLndhcm5pbmcoXCJcIi5jb25jYXQocm91dGUucGF0aCwgXCIgYWN0aW9uID09IGdvQmFjaywgYnV0IG5vIGJhY2sgeHlcIikpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJvdXRlLmFjdGlvbiA9PT0gJ2tleWNvZGVCYWNrJykge1xuICAgICAgICAgICAga2V5Y29kZSgnQkFDSycsIHRoaXMuc2NyZWVuQ29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByb3V0ZS5hY3Rpb24oY29udGV4dCwgaW1hZ2UsIG1hdGNoZWRQYWdlcywgZmluaXNoUm91bmQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc2F2ZVBhZ2VSZWZlcmVuY2VJbWFnZShpbWFnZSwgbWF0Y2hlZFBhZ2VzKTtcbiAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcChyb3V0ZS5hZnRlckFjdGlvbkRlbGF5KTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5maW5kTWF0Y2hlZFJvdXRlSW1wbCA9IGZ1bmN0aW9uICh0YXNrTmFtZSwgaW1hZ2UsIHJvdGF0aW9uKSB7XG4gICAgICAgIHZhciBtYXRjaGVzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSB0aGlzLnJvdXRlczsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIHZhciByb3V0ZSA9IF9hW19pXTtcbiAgICAgICAgICAgIHZhciBfYiA9IHRoaXMuaXNNYXRjaFJvdXRlSW1wbChpbWFnZSwgcm90YXRpb24sIHJvdXRlLCB0YXNrTmFtZSksIGlzTWF0Y2hlZCA9IF9iLmlzTWF0Y2hlZCwgbWF0Y2hlZFBhZ2VzID0gX2IubWF0Y2hlZFBhZ2VzO1xuICAgICAgICAgICAgaWYgKGlzTWF0Y2hlZCkge1xuICAgICAgICAgICAgICAgIHRoaXMubG9nSW1wbChyb3V0ZS5kZWJ1ZywgJ2N1cnJlbnQgbWF0Y2g6JywgbWF0Y2hlZFBhZ2VzLm1hcChmdW5jdGlvbiAocCkgeyByZXR1cm4gcC5uYW1lOyB9KSk7XG4gICAgICAgICAgICAgICAgbWF0Y2hlcy5wdXNoKHsgbWF0Y2hlZFJvdXRlOiByb3V0ZSwgbWF0Y2hlZFBhZ2VzOiBtYXRjaGVkUGFnZXMgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1hdGNoZXM7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaGFuZGxlQ29uZmxpY3RSb3V0ZXMgPSBmdW5jdGlvbiAodGFza05hbWUsIGltYWdlLCBtYXRjaGVzLCBmaW5pc2hSb3VuZCkge1xuICAgICAgICB2YXIgbWF0Y2hEZXRhaWxzID0gbWF0Y2hlc1xuICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgdmFyIHBhdGggPSAoKF9hID0gaXRlbS5tYXRjaGVkUm91dGUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wYXRoKSB8fCAnZW1wdHlSb3V0ZVBhdGgnO1xuICAgICAgICAgICAgdmFyIHBhZ2VzID0gaXRlbS5tYXRjaGVkUGFnZXMubWFwKGZ1bmN0aW9uIChwKSB7IHJldHVybiBwLm5hbWU7IH0pO1xuICAgICAgICAgICAgcmV0dXJuIFwiXCIuY29uY2F0KHBhdGgsIFwiOiAoXCIpLmNvbmNhdChwYWdlcy5qb2luKCcsICcpLCBcIilcIik7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbignXFxuJyk7XG4gICAgICAgIHZhciB3YXJuaW5nTXNnID0gXCJhIHJvdXRlIGNvbmZsaWN0IHdoZW4gaW4gVGFzazogXFxcIlwiLmNvbmNhdCh0YXNrTmFtZSwgXCJcXFwiLCBkZXRhaWxzOiBcXG5cIikuY29uY2F0KG1hdGNoRGV0YWlscyk7XG4gICAgICAgIHRoaXMud2FybmluZyh3YXJuaW5nTXNnKTtcbiAgICAgICAgaWYgKHRoaXMucmVyb3V0ZXJDb25maWcuZGVidWdTbGFja1VybCAhPT0gJycpIHtcbiAgICAgICAgICAgIHV0aWxzXzEuVXRpbHMuc2VuZFNsYWNrTWVzc2FnZSh0aGlzLnJlcm91dGVyQ29uZmlnLmRlYnVnU2xhY2tVcmwsICdDb25mbGljdCBSb3V0ZXMgUmVwb3J0JywgXCJcIi5jb25jYXQoc3RydWN0XzEuRGVmYXVsdFJlcm91dGVyQ29uZmlnLmRldmljZUlkLCBcIiBqdXN0IGxvZ2dlZCBcIikuY29uY2F0KHdhcm5pbmdNc2cpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5yZXJvdXRlckNvbmZpZy5zdHJpY3RNb2RlKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiBzYXZlIGltYWdlIHJhdGhlciB0aGFuIHRha2UgYW5vdGhlciBzY3JlZW5zaG90XG4gICAgICAgICAgICB1dGlsc18xLlV0aWxzLnNhdmVTY3JlZW5zaG90VG9EaXNrKHRoaXMucmVyb3V0ZXJDb25maWcuc2F2ZUltYWdlUm9vdCwgXCJcIi5jb25jYXQoc3RydWN0XzEuRGVmYXVsdFJlcm91dGVyQ29uZmlnLmRldmljZUlkLCBcIl9jb25mbGljdGVkUm91dGVzXCIpKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnRlbnRpb25hbCBjcmFzaCBkdWUgdG8gbXVsdGlwbGUgcm91dGUgYXBwbGllZCB0byBjdXJyZW50IHNjcmVlbjogXCIuY29uY2F0KG1hdGNoRGV0YWlscykpO1xuICAgICAgICB9XG4gICAgICAgIC8vIGRlZmF1bHQgaGFuZGxlIGNvbmZsaWN0IHJvdXRlcyBpbiBub24tc3RyaWN0IG1vZGVcbiAgICAgICAgdGhpcy5sb2coXCJ0cnkgaGFuZGxlIGNvbmZsaWN0XCIpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIHRoaXMucm91dGVDb25mbGljdFJlY29yZC5wdXNoKG5vdyk7XG4gICAgICAgIHZhciBkdXJpbmdMaW1pdCA9IDYwICogMTAwMDtcbiAgICAgICAgdmFyIGNvdW50c0xpbWl0ID0gNTtcbiAgICAgICAgd2hpbGUgKHRoaXMucm91dGVDb25mbGljdFJlY29yZC5sZW5ndGggPiAwICYmIG5vdyAtIHRoaXMucm91dGVDb25mbGljdFJlY29yZFswXSA+IGR1cmluZ0xpbWl0KSB7XG4gICAgICAgICAgICB0aGlzLnJvdXRlQ29uZmxpY3RSZWNvcmQuc2hpZnQoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5yb3V0ZUNvbmZsaWN0UmVjb3JkLmxlbmd0aCA+PSBjb3VudHNMaW1pdCkge1xuICAgICAgICAgICAgdGhpcy5yb3V0ZUNvbmZsaWN0UmVjb3JkID0gW25vd107XG4gICAgICAgICAgICB0aGlzLnJlc3RhcnRBcHAoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBrZXljb2RlKCdCQUNLJywgdGhpcy5zY3JlZW5Db25maWcuYWN0aW9uRHVyaW5nKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5pc01hdGNoUm91dGVJbXBsID0gZnVuY3Rpb24gKGltYWdlLCByb3RhdGlvbiwgcm91dGUsIHRhc2tOYW1lKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgLy8gY2hlY2sgcm90YXRpb25cbiAgICAgICAgaWYgKHJvdXRlLnJvdGF0aW9uICE9PSByb3RhdGlvbikge1xuICAgICAgICAgICAgdGhpcy5sb2dJbXBsKHJvdXRlLmRlYnVnLCBcImZpbmRNYXRjaGVkUm91dGUgXCIuY29uY2F0KHJvdXRlLnBhdGgsIFwiIG5vdCBtYXRjaCByb3RhdGlvbiwgc2tpcFwiKSk7XG4gICAgICAgICAgICByZXR1cm4geyBpc01hdGNoZWQ6IGZhbHNlLCBtYXRjaGVkUGFnZXM6IFtdIH07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzTWF0Y2hlZCA9IGZhbHNlO1xuICAgICAgICB2YXIgbWF0Y2hlZFBhZ2VzID0gW107XG4gICAgICAgIC8vIGNoZWNrIHJvdXRlLm1hdGNoXG4gICAgICAgIGlmIChyb3V0ZS5tYXRjaCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaWYgKHJvdXRlLm1hdGNoIGluc3RhbmNlb2Ygc3RydWN0XzEuUGFnZSkge1xuICAgICAgICAgICAgICAgIHZhciBtYXRjaCA9IHRoaXMuaXNNYXRjaFBhZ2VJbXBsKGltYWdlLCByb3V0ZS5tYXRjaCwgdGhpcy5kZWZhdWx0Q29uZmlnLlBhZ2VUaHJlcywgcm91dGUuZGVidWcpO1xuICAgICAgICAgICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgICAgICAgICAgICBpc01hdGNoZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBtYXRjaGVkUGFnZXMucHVzaChyb3V0ZS5tYXRjaCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocm91dGUubWF0Y2ggaW5zdGFuY2VvZiBzdHJ1Y3RfMS5Hcm91cFBhZ2UpIHtcbiAgICAgICAgICAgICAgICB2YXIgbWF0Y2ggPSB0aGlzLmlzTWF0Y2hHcm91cFBhZ2VJbXBsKGltYWdlLCByb3V0ZS5tYXRjaCwgdGhpcy5kZWZhdWx0Q29uZmlnLkdyb3VwUGFnZVRocmVzLCByb3V0ZS5kZWJ1Zyk7XG4gICAgICAgICAgICAgICAgaWYgKG1hdGNoLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBpc01hdGNoZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICBtYXRjaGVkUGFnZXMucHVzaC5hcHBseShtYXRjaGVkUGFnZXMsIG1hdGNoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gY2hlY2sgcm91dGUuaXNNYXRjaCBmdW5jdGlvblxuICAgICAgICBpZiAoIWlzTWF0Y2hlZCAmJiByb3V0ZS5jdXN0b21NYXRjaCAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaXNNYXRjaGVkID0gcm91dGUuY3VzdG9tTWF0Y2godGFza05hbWUsIGltYWdlKTtcbiAgICAgICAgICAgIHRoaXMubG9nSW1wbChyb3V0ZS5kZWJ1ZywgXCJmaW5kTWF0Y2hlZFJvdXRlIFwiLmNvbmNhdChyb3V0ZS5wYXRoLCBcIiBpc01hdGNoKCkgPT4gXCIpLmNvbmNhdChpc01hdGNoZWQpKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxvZ0ltcGwocm91dGUuZGVidWcsIFwiZmluZE1hdGNoZWRSb3V0ZSBcIi5jb25jYXQocm91dGUucGF0aCwgXCIgbWF0Y2g6IFwiKS5jb25jYXQoaXNNYXRjaGVkLCBcIiwgZmlyc3RQYWdlOiBcIikuY29uY2F0KChfYSA9IG1hdGNoZWRQYWdlc1swXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm5hbWUpKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlzTWF0Y2hlZDogaXNNYXRjaGVkLFxuICAgICAgICAgICAgbWF0Y2hlZFBhZ2VzOiBtYXRjaGVkUGFnZXMsXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaXNNYXRjaFBhZ2VJbXBsID0gZnVuY3Rpb24gKGltYWdlLCBwYWdlLCBwYXJlbnRUaHJlcywgZGVidWcpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICAgIHZhciBwYWdlVGhyZXMgPSBwYWdlLnRocmVzO1xuICAgICAgICB2YXIgaXNTYW1lID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5sb2dJbXBsKGRlYnVnLCBcImNoZWNrTWF0Y2hQYWdlW1wiLmNvbmNhdChwYWdlLm5hbWUsIFwiXVwiKSk7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpc1NhbWUgJiYgaSA8IHBhZ2UucG9pbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgcG9pbnQgPSBwYWdlLnBvaW50c1tpXTtcbiAgICAgICAgICAgIHZhciB0aHJlcyA9IChfYiA9IChfYSA9IHBvaW50LnRocmVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBwYWdlVGhyZXMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHBhcmVudFRocmVzO1xuICAgICAgICAgICAgdmFyIHNob3VsZE1hdGNoID0gKF9jID0gcG9pbnQubWF0Y2gpICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IHRydWU7XG4gICAgICAgICAgICB2YXIgY29sb3IgPSBnZXRJbWFnZUNvbG9yKGltYWdlLCBwb2ludC54LCBwb2ludC55KTtcbiAgICAgICAgICAgIHZhciBzY29yZSA9IHV0aWxzXzEuVXRpbHMuaWRlbnRpdHlDb2xvcihwb2ludCwgY29sb3IpO1xuICAgICAgICAgICAgdmFyIGlzUG9pbnRDb2xvck1hdGNoID0gc2NvcmUgPj0gdGhyZXMgPT09IHNob3VsZE1hdGNoO1xuICAgICAgICAgICAgaWYgKCFpc1BvaW50Q29sb3JNYXRjaCkge1xuICAgICAgICAgICAgICAgIGlzU2FtZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHRoaXMubG9nSW1wbChkZWJ1ZywgXCJwb2ludFtcIi5jb25jYXQoaSwgXCJdIG1hdGNoIGZhbHNlOiBzY29yZTogXCIpLmNvbmNhdChzY29yZSwgXCIsIHRocmVzOiBcIikuY29uY2F0KHRocmVzLCBcIlxcblwiKSwgXCJleHBlY3Q6IFwiLmNvbmNhdCh1dGlsc18xLlV0aWxzLmZvcm1hdFhZUkdCKHBvaW50KSwgXCJcXG5cIiksIFwiICAgZ2V0OiBcIi5jb25jYXQodXRpbHNfMS5VdGlscy5mb3JtYXRYWVJHQihfX2Fzc2lnbihfX2Fzc2lnbih7fSwgY29sb3IpLCB7IHg6IHBvaW50LngsIHk6IHBvaW50LnkgfSkpKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sb2dJbXBsKGRlYnVnLCBcImNoZWNrTWF0Y2hQYWdlW1wiLmNvbmNhdChwYWdlLm5hbWUsIFwiXVttYXRjaDogXCIpLmNvbmNhdChpc1NhbWUsIFwiXVwiKSk7XG4gICAgICAgIHJldHVybiBpc1NhbWU7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUuaXNNYXRjaEdyb3VwUGFnZUltcGwgPSBmdW5jdGlvbiAoaW1hZ2UsIGdyb3VwUGFnZSwgcGFyZW50VGhyZXMsIGRlYnVnKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdmFyIHRocmVzID0gKF9hID0gZ3JvdXBQYWdlLnRocmVzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBwYXJlbnRUaHJlcztcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBncm91cFBhZ2UucGFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBwYWdlID0gZ3JvdXBQYWdlLnBhZ2VzW2ldO1xuICAgICAgICAgICAgdmFyIGlzUGFnZU1hdGNoID0gdGhpcy5pc01hdGNoUGFnZUltcGwoaW1hZ2UsIHBhZ2UsIHRocmVzLCBkZWJ1Zyk7XG4gICAgICAgICAgICB0aGlzLmxvZ0ltcGwoZGVidWcsIFwiY2hlY2tNYXRjaEdyb3VwUGFnZTogXCIuY29uY2F0KGdyb3VwUGFnZS5uYW1lLCBcIiwgcGFnZVtcIikuY29uY2F0KGksIFwiXTogXCIpLmNvbmNhdChwYWdlLm5hbWUsIFwiIG1hdGNoOiBcIikuY29uY2F0KGlzUGFnZU1hdGNoKSk7XG4gICAgICAgICAgICBpZiAoZ3JvdXBQYWdlLm1hdGNoT1AgPT09ICd8fCcgJiYgaXNQYWdlTWF0Y2gpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gW3BhZ2VdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGdyb3VwUGFnZS5tYXRjaE9QID09PSAnJiYnICYmICFpc1BhZ2VNYXRjaCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ3JvdXBQYWdlLm1hdGNoT1AgPT09ICcmJicgPyBncm91cFBhZ2UucGFnZXMgOiBbXTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5zYXZlUGFnZVJlZmVyZW5jZUltYWdlID0gZnVuY3Rpb24gKGltYWdlLCBtYXRjaGVkUGFnZXMpIHtcbiAgICAgICAgdmFyIF9hID0gdGhpcy5yZXJvdXRlckNvbmZpZy5zYXZlUGFnZVJlZmVyZW5jZSB8fCB7fSwgZW5hYmxlID0gX2EuZW5hYmxlLCBmb2xkZXJQYXRoID0gX2EuZm9sZGVyUGF0aCwgcmdiYSA9IF9hLnJnYmE7XG4gICAgICAgIGlmICghZW5hYmxlIHx8ICFmb2xkZXJQYXRoIHx8IG1hdGNoZWRQYWdlcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBtYXRjaGVkUGFnZXMuZm9yRWFjaChmdW5jdGlvbiAocGFnZSkge1xuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zYXZlUG9pbnRzTWFya2VkSW1hZ2Uoe1xuICAgICAgICAgICAgICAgIGltYWdlOiBpbWFnZSxcbiAgICAgICAgICAgICAgICBuYW1lOiBwYWdlLm5hbWUsXG4gICAgICAgICAgICAgICAgcG9pbnRzOiBwYWdlLnBvaW50cyxcbiAgICAgICAgICAgICAgICBmb2xkZXJQYXRoOiBmb2xkZXJQYXRoLFxuICAgICAgICAgICAgICAgIHJnYmE6IHJnYmEsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBSZXJvdXRlci5wcm90b3R5cGUubG9nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgYXJncyA9IFtdO1xuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubG9nSW1wbC5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5KFt0aGlzLmRlYnVnXSwgYXJncywgZmFsc2UpKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5sb2dJbXBsID0gZnVuY3Rpb24gKGRlYnVnKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pIC0gMV0gPSBhcmd1bWVudHNbX2ldO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZGVidWcgfHwgIXRoaXMuZGVidWcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBvbmx5IGxvZyB3aGVuIGRlYnVnICsgdGhpcy5kZWJ1ZyBpcyB0cnVlXG4gICAgICAgIHV0aWxzXzEuVXRpbHMubG9nLmFwcGx5KHV0aWxzXzEuVXRpbHMsIF9fc3ByZWFkQXJyYXkoWydbUmVyb3V0ZXJdW2RlYnVnXSddLCBhcmdzLCBmYWxzZSkpO1xuICAgIH07XG4gICAgUmVyb3V0ZXIucHJvdG90eXBlLndhcm5pbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBhcmdzID0gW107XG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XG4gICAgICAgIH1cbiAgICAgICAgdXRpbHNfMS5VdGlscy5sb2cuYXBwbHkodXRpbHNfMS5VdGlscywgX19zcHJlYWRBcnJheShbJ1tSZXJvdXRlcl1bd2FybmluZ10nXSwgYXJncywgZmFsc2UpKTtcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS51cGRhdGVHYW1lU3RhdHVzID0gZnVuY3Rpb24gKHN0YXR1cykge1xuICAgICAgICB0aGlzLmxvY2FsR2FtZVN0YXR1cyA9IHN0YXR1czsgLy8gVXBkYXRlIGxvY2FsIHN0YXR1cyBmaXJzdFxuICAgICAgICAvLyBJZiBpbnN0YW5jZUlkIG9yIGRldmljZUlkIGlzIGVtcHR5LCBza2lwIHVwZGF0aW5nIGNsb3VkIHN0YXR1c1xuICAgICAgICBpZiAoIXRoaXMucmVyb3V0ZXJDb25maWcuaW5zdGFuY2VJZCB8fCAhdGhpcy5yZXJvdXRlckNvbmZpZy5kZXZpY2VJZCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKCdJbnN0YW5jZSBJRCBvciBEZXZpY2UgSUQgaXMgZW1wdHkuIFNraXBwaW5nIGNsb3VkIHN0YXR1cyB1cGRhdGUuJyk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gTG9jYWwgdXBkYXRlIGlzIGNvbnNpZGVyZWQgc3VjY2Vzc2Z1bFxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmNsb3VkR2FtZVN0YXR1cyA9PT0gc3RhdHVzKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7IC8vIE5vIHVwZGF0ZSBpcyBuZWVkZWQgaWYgdGhlIGNsb3VkIHN0YXR1cyBoYXNuJ3QgY2hhbmdlZFxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnJlcm91dGVyQ29uZmlnLmRldmljZUlkID09PSAnJyB8fCB0aGlzLnJlcm91dGVyQ29uZmlnLmluc3RhbmNlSWQgPT09ICcnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImRldmljZUlkIG9yIGluc3RhbmNlSWQgaXMgZW1wdHksIGNhbm5vdCB1cGRhdGUgZ2FtZSBzdGF0dXNcIik7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG1heFJldHJpZXMgPSAzO1xuICAgICAgICB2YXIgYXR0ZW1wdHMgPSAwO1xuICAgICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdCA9ICgwLCB4cl8xLnVwZGF0ZUdhbWVTdGF0dXMpKHRoaXMucmVyb3V0ZXJDb25maWcuZGV2aWNlSWQsIHRoaXMucmVyb3V0ZXJDb25maWcuaW5zdGFuY2VJZCwgc3RhdHVzKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3VkR2FtZVN0YXR1cyA9IHN0YXR1czsgLy8gVXBkYXRlIGNsb3VkIHN0YXR1cyBvbiBzdWNjZXNzXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIE9wZXJhdGlvbiBzdWNjZXNzZnVsLCByZXR1cm4gdHJ1ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYXR0ZW1wdHMrKztcbiAgICAgICAgICAgIGlmIChhdHRlbXB0cyA+PSBtYXhSZXRyaWVzKSB7XG4gICAgICAgICAgICAgICAgYnJlYWs7IC8vIEV4aXQgdGhlIGxvb3AgYWZ0ZXIgbWF4UmV0cmllcyBhdHRlbXB0c1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5zbGVlcCgzMDAwKTsgLy8gU2xlZXAgYmV0d2VlbiBhdHRlbXB0c1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTsgLy8gUmV0dXJuIGZhbHNlIGFmdGVyIGFsbCBhdHRlbXB0cyBmYWlsZWRcbiAgICB9O1xuICAgIFJlcm91dGVyLnByb3RvdHlwZS5nZXRHYW1lU3RhdHVzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2NhbEdhbWVTdGF0dXM7XG4gICAgfTtcbiAgICByZXR1cm4gUmVyb3V0ZXI7XG59KCkpO1xuZXhwb3J0cy5SZXJvdXRlciA9IFJlcm91dGVyO1xuLy8gTk9URTogdGhpcyBpcyBhbiBhbm90aGVyIHdheSB0aGF0IHJlc2V0cyBSZXJvdXRlciwganVzdCBsZWF2aW5nIGhlcmUgZm9yIG1lbW9yeVxuLy8gY29uc3QgcmVyb3V0ZXJDb250YWluZXIgPSB7XG4vLyAgIGluc3RhbmNlOiBuZXcgUmVyb3V0ZXIoKSxcbi8vIH07XG4vLyBpbXBvcnQgJ3Byb3h5LXBvbHlmaWxsJztcbi8vIGV4cG9ydCBjb25zdCByZXJvdXRlcjogUmVyb3V0ZXIgPSBuZXcgUHJveHkocmVyb3V0ZXJDb250YWluZXIsIHtcbi8vICAgZ2V0OiAodGFyZ2V0LCBwcm9wOiBrZXlvZiBSZXJvdXRlcikgPT4ge1xuLy8gICAgIHJldHVybiB0YXJnZXQuaW5zdGFuY2VbcHJvcF07XG4vLyAgIH0sXG4vLyAgIHNldDogKHRhcmdldCwgcHJvcDoga2V5b2YgUmVyb3V0ZXIsIHZhbHVlOiBhbnkpID0+IHtcbi8vICAgICB0YXJnZXQuaW5zdGFuY2VbcHJvcF0gPSB2YWx1ZTtcbi8vICAgICByZXR1cm4gdHJ1ZTtcbi8vICAgfSxcbi8vIH0pIGFzIGFueSBhcyBSZXJvdXRlcjtcbmV4cG9ydHMucmVyb3V0ZXIgPSBSZXJvdXRlci5nZXRJbnN0YW5jZSgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVyb3V0ZXIuanMubWFwIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNjcmVlbiA9IHZvaWQgMDtcbnZhciB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG52YXIgU2NyZWVuID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFNjcmVlbihjb25maWcpIHtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgfVxuICAgIFNjcmVlbi5wcm90b3R5cGUuY2FsY3VsYXRlRGV2aWNlT2Zmc2V0ID0gZnVuY3Rpb24gKGZ1bmMpIHtcbiAgICAgICAgdmFyIHJlc3VsdHMgPSBmdW5jKHRoaXMpO1xuICAgICAgICB0aGlzLmNvbmZpZy5zY3JlZW5XaWR0aCA9IHJlc3VsdHMuc2NyZWVuV2lkdGg7XG4gICAgICAgIHRoaXMuY29uZmlnLnNjcmVlbkhlaWdodCA9IHJlc3VsdHMuc2NyZWVuSGVpZ2h0O1xuICAgICAgICB0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRYID0gcmVzdWx0cy5zY3JlZW5PZmZzZXRYO1xuICAgICAgICB0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRZID0gcmVzdWx0cy5zY3JlZW5PZmZzZXRZO1xuICAgIH07XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXRTY3JlZW5YID0gZnVuY3Rpb24gKGRldlgpIHtcbiAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IodGhpcy5jb25maWcuc2NyZWVuT2Zmc2V0WCArIChkZXZYICogdGhpcy5jb25maWcuc2NyZWVuV2lkdGgpIC8gdGhpcy5jb25maWcuZGV2V2lkdGgpIHx8IDA7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmdldFNjcmVlblkgPSBmdW5jdGlvbiAoZGV2WSkge1xuICAgICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRZICsgKGRldlkgKiB0aGlzLmNvbmZpZy5zY3JlZW5IZWlnaHQpIC8gdGhpcy5jb25maWcuZGV2SGVpZ2h0KSB8fCAwO1xuICAgIH07XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXRTY3JlZW5YWSA9IGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgICAgICAgaWYgKHAyID09PSB2b2lkIDApIHsgcDIgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHR5cGVvZiBwMSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxLngpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDEueSk7XG4gICAgICAgICAgICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHAxID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgcDIgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB2YXIgeCA9IHRoaXMuZ2V0U2NyZWVuWChwMSk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMik7XG4gICAgICAgICAgICByZXR1cm4geyB4OiB4LCB5OiB5IH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZXRTY3JlZW5YWSB3cm9uZyBwYXJhbXMgXCIuY29uY2F0KHAxLCBcIiwgXCIpLmNvbmNhdChwMikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLnRhcCA9IGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgICAgICAgaWYgKHAyID09PSB2b2lkIDApIHsgcDIgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHR5cGVvZiBwMSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxLngpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDEueSk7XG4gICAgICAgICAgICB0YXAoeCwgeSwgdGhpcy5jb25maWcuYWN0aW9uRHVyaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgcDEgPT09ICdudW1iZXInICYmIHR5cGVvZiBwMiA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxKTtcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKHAyKTtcbiAgICAgICAgICAgIHRhcCh4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFwRG93biB3cm9uZyBwYXJhbXMgXCIuY29uY2F0KHAxLCBcIiwgXCIpLmNvbmNhdChwMikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLnRhcERvd24gPSBmdW5jdGlvbiAocDEsIHAyKSB7XG4gICAgICAgIGlmIChwMiA9PT0gdm9pZCAwKSB7IHAyID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmICh0eXBlb2YgcDEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICB2YXIgeCA9IHRoaXMuZ2V0U2NyZWVuWChwMS54KTtcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKHAxLnkpO1xuICAgICAgICAgICAgdGFwRG93bih4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHR5cGVvZiBwMSA9PT0gJ251bWJlcicgJiYgdHlwZW9mIHAyID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDIpO1xuICAgICAgICAgICAgdGFwRG93bih4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFwRG93biB3cm9uZyBwYXJhbXMgXCIuY29uY2F0KHAxLCBcIiwgXCIpLmNvbmNhdChwMikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLm1vdmVUbyA9IGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgICAgICAgaWYgKHAyID09PSB2b2lkIDApIHsgcDIgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHR5cGVvZiBwMSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxLngpO1xuICAgICAgICAgICAgdmFyIHkgPSB0aGlzLmdldFNjcmVlblkocDEueSk7XG4gICAgICAgICAgICBtb3ZlVG8oeCwgeSwgdGhpcy5jb25maWcuYWN0aW9uRHVyaW5nKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgcDEgPT09ICdudW1iZXInICYmIHR5cGVvZiBwMiA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKHAxKTtcbiAgICAgICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKHAyKTtcbiAgICAgICAgICAgIG1vdmVUbyh4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFwRG93biB3cm9uZyBwYXJhbXMgXCIuY29uY2F0KHAxLCBcIiwgXCIpLmNvbmNhdChwMikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLnRhcFVwID0gZnVuY3Rpb24gKHAxLCBwMikge1xuICAgICAgICBpZiAocDIgPT09IHZvaWQgMCkgeyBwMiA9IHVuZGVmaW5lZDsgfVxuICAgICAgICBpZiAodHlwZW9mIHAxID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgdmFyIHggPSB0aGlzLmdldFNjcmVlblgocDEueCk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMS55KTtcbiAgICAgICAgICAgIHRhcFVwKHgsIHksIHRoaXMuY29uZmlnLmFjdGlvbkR1cmluZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHAxID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgcDIgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB2YXIgeCA9IHRoaXMuZ2V0U2NyZWVuWChwMSk7XG4gICAgICAgICAgICB2YXIgeSA9IHRoaXMuZ2V0U2NyZWVuWShwMik7XG4gICAgICAgICAgICB0YXBVcCh4LCB5LCB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwidGFwRG93biB3cm9uZyBwYXJhbXMgXCIuY29uY2F0KHAxLCBcIiwgXCIpLmNvbmNhdChwMikpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLnN3aXBlID0gZnVuY3Rpb24gKGZyb21QbnQsIHRvUG50LCBzdGVwcykge1xuICAgICAgICBpZiAoc3RlcHMgPT09IHZvaWQgMCkgeyBzdGVwcyA9IDQ7IH1cbiAgICAgICAgdmFyIHN0ZXBfeCA9ICh0b1BudC54IC0gZnJvbVBudC54KSAvIHN0ZXBzO1xuICAgICAgICB2YXIgc3RlcF95ID0gKHRvUG50LnkgLSBmcm9tUG50LnkpIC8gc3RlcHM7XG4gICAgICAgIHZhciB4ID0gdGhpcy5nZXRTY3JlZW5YKGZyb21QbnQueCk7XG4gICAgICAgIHZhciB5ID0gdGhpcy5nZXRTY3JlZW5ZKGZyb21QbnQueSk7XG4gICAgICAgIHRhcERvd24oeCwgeSwgNDAsIDApO1xuICAgICAgICBzbGVlcCgxMCk7XG4gICAgICAgIG1vdmVUbyh4LCB5LCA0MCwgMCk7XG4gICAgICAgIHNsZWVwKDEwKTtcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdGVwczsgaSsrKSB7XG4gICAgICAgICAgICB4ID0gdGhpcy5nZXRTY3JlZW5YKGZyb21QbnQueCArIHN0ZXBfeCAqIGkpO1xuICAgICAgICAgICAgeSA9IHRoaXMuZ2V0U2NyZWVuWShmcm9tUG50LnkgKyBzdGVwX3kgKiBpKTtcbiAgICAgICAgICAgIG1vdmVUbyh4LCB5LCA0MCwgMCk7XG4gICAgICAgICAgICBzbGVlcCgxMDApO1xuICAgICAgICB9XG4gICAgICAgIG1vdmVUbyh0aGlzLmdldFNjcmVlblgodG9QbnQueCksIHRoaXMuZ2V0U2NyZWVuWSh0b1BudC55KSwgNDAsIDApO1xuICAgICAgICBzbGVlcCg1MDApO1xuICAgICAgICB0YXBVcCh0aGlzLmdldFNjcmVlblgodG9QbnQueCksIHRoaXMuZ2V0U2NyZWVuWSh0b1BudC55KSwgNDAsIDApO1xuICAgICAgICBzbGVlcCg1MDApO1xuICAgIH07XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXRTY3JlZW5Db2xvciA9IGZ1bmN0aW9uIChwMSwgcDIpIHtcbiAgICAgICAgaWYgKHAyID09PSB2b2lkIDApIHsgcDIgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHR5cGVvZiBwMSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHZhciBpbWcgPSB0aGlzLmdldEN2dERldlNjcmVlbnNob3QoKTtcbiAgICAgICAgICAgIHZhciByZ2IgPSBnZXRJbWFnZUNvbG9yKGltZywgcDEueCwgcDEueSk7XG4gICAgICAgICAgICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgICAgICAgICAgIHJldHVybiByZ2I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIHAxID09PSAnbnVtYmVyJyAmJiB0eXBlb2YgcDIgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB2YXIgaW1nID0gdGhpcy5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgICAgICB2YXIgcmdiID0gZ2V0SW1hZ2VDb2xvcihpbWcsIHAxLCBwMik7XG4gICAgICAgICAgICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgICAgICAgICAgIHJldHVybiByZ2I7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJ0YXBEb3duIHdyb25nIHBhcmFtcyBcIi5jb25jYXQocDEsIFwiLCBcIikuY29uY2F0KHAyKSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZmluZEltYWdlID0gZnVuY3Rpb24gKGRldkltZykge1xuICAgICAgICB2YXIgaW1nID0gdGhpcy5nZXRDdnREZXZTY3JlZW5zaG90KCk7XG4gICAgICAgIHZhciByZXN1bHQgPSBmaW5kSW1hZ2UoaW1nLCBkZXZJbWcpO1xuICAgICAgICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUudGFwSW1hZ2UgPSBmdW5jdGlvbiAoZGV2SW1nKSB7XG4gICAgICAgIHZhciB4eSA9IHRoaXMuZmluZEltYWdlKGRldkltZyk7XG4gICAgICAgIHRoaXMudGFwKHh5KTtcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuaXNTYW1lQ29sb3IgPSBmdW5jdGlvbiAoZGV2Q29sb3JQb2ludCwgdGhyZXMpIHtcbiAgICAgICAgaWYgKHRocmVzID09PSB2b2lkIDApIHsgdGhyZXMgPSAwLjk7IH1cbiAgICAgICAgdmFyIHJnYiA9IHRoaXMuZ2V0U2NyZWVuQ29sb3IoZGV2Q29sb3JQb2ludCk7XG4gICAgICAgIHZhciBzY29yZSA9IHV0aWxzXzEuVXRpbHMuaWRlbnRpdHlDb2xvcihyZ2IsIGRldkNvbG9yUG9pbnQpO1xuICAgICAgICBpZiAoc2NvcmUgPiB0aHJlcykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgU2NyZWVuLnByb3RvdHlwZS5pc1NhbWVDb2xvckltYWdlID0gZnVuY3Rpb24gKGRldkNvbG9yUG9pbnQsIGltYWdlLCB0aHJlcykge1xuICAgICAgICBpZiAodGhyZXMgPT09IHZvaWQgMCkgeyB0aHJlcyA9IDAuOTsgfVxuICAgICAgICB2YXIgcmdiID0gZ2V0SW1hZ2VDb2xvcihpbWFnZSwgZGV2Q29sb3JQb2ludC54LCBkZXZDb2xvclBvaW50LnkpO1xuICAgICAgICB2YXIgc2NvcmUgPSB1dGlsc18xLlV0aWxzLmlkZW50aXR5Q29sb3IocmdiLCBkZXZDb2xvclBvaW50KTtcbiAgICAgICAgaWYgKHNjb3JlID4gdGhyZXMpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIC8vIGN1cnJlbnRseSByZWFsIGRldmljZSBzY3JlZW5zaG90XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXREZXZpY2VTY3JlZW5zaG90ID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gZ2V0U2NyZWVuc2hvdCgpO1xuICAgIH07XG4gICAgLy8gY3VycmVudGx5IGRldmljZSBzY3JlZW5zaG90IGN1dCBieSBvZmZzZXRcbiAgICBTY3JlZW4ucHJvdG90eXBlLmdldFNjcmVlblNjcmVlbnNob3QgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBnZXRTY3JlZW5zaG90TW9kaWZ5KHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFgsIHRoaXMuY29uZmlnLnNjcmVlbk9mZnNldFksIHRoaXMuY29uZmlnLnNjcmVlbldpZHRoLCB0aGlzLmNvbmZpZy5zY3JlZW5IZWlnaHQsIHRoaXMuY29uZmlnLnNjcmVlbldpZHRoLCB0aGlzLmNvbmZpZy5zY3JlZW5IZWlnaHQsIDEwMCk7XG4gICAgfTtcbiAgICBTY3JlZW4ucHJvdG90eXBlLmNoZWNrQW5kU2F2ZVNjcmVlbnNob3RzID0gZnVuY3Rpb24gKCkge1xuICAgICAgICBpZiAodGhpcy5jb25maWcubG9nU2NyZWVuc2hvdEZvbGRlciAhPT0gJycgJiYgRGF0ZS5ub3coKSAtIHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RMYXN0VGltZSA+IHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RNaW5JbnRlcnZhbEluU2VjICogMTAwMCkge1xuICAgICAgICAgICAgdGhpcy5jb25maWcubG9nU2NyZWVuc2hvdExhc3RUaW1lID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgIHV0aWxzXzEuVXRpbHMuc2F2ZVNjcmVlbnNob3RUb0Rpc2sodGhpcy5jb25maWcubG9nU2NyZWVuc2hvdEZvbGRlciwgJ2xvZycpO1xuICAgICAgICAgICAgdXRpbHNfMS5VdGlscy5yZW1vdmVPbGRlc3RGaWxlc0lmRXhjZWVkc0xpbWl0KHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RGb2xkZXIsIHRoaXMuY29uZmlnLmxvZ1NjcmVlbnNob3RNYXhGaWxlcyk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZ2V0Q3Z0RGV2U2NyZWVuc2hvdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5jaGVja0FuZFNhdmVTY3JlZW5zaG90cygpO1xuICAgICAgICByZXR1cm4gZ2V0U2NyZWVuc2hvdE1vZGlmeSh0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRYLCB0aGlzLmNvbmZpZy5zY3JlZW5PZmZzZXRZLCB0aGlzLmNvbmZpZy5zY3JlZW5XaWR0aCwgdGhpcy5jb25maWcuc2NyZWVuSGVpZ2h0LCB0aGlzLmNvbmZpZy5kZXZXaWR0aCwgdGhpcy5jb25maWcuZGV2SGVpZ2h0LCAxMDApO1xuICAgIH07XG4gICAgU2NyZWVuLnByb3RvdHlwZS5nZXRSb3RhdGlvbiA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF9hID0gZ2V0U2NyZWVuU2l6ZSgpLCB3aWR0aCA9IF9hLndpZHRoLCBoZWlnaHQgPSBfYS5oZWlnaHQ7XG4gICAgICAgIGlmICh3aWR0aCA+IGhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuICdob3Jpem9udGFsJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ3ZlcnRpY2FsJztcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuZ2V0SW1hZ2VSb3RhdGlvbiA9IGZ1bmN0aW9uIChpbWFnZSkge1xuICAgICAgICB2YXIgX2EgPSBnZXRJbWFnZVNpemUoaW1hZ2UpLCB3aWR0aCA9IF9hLndpZHRoLCBoZWlnaHQgPSBfYS5oZWlnaHQ7XG4gICAgICAgIGlmICh3aWR0aCA+IGhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuICdob3Jpem9udGFsJztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ3ZlcnRpY2FsJztcbiAgICB9O1xuICAgIFNjcmVlbi5wcm90b3R5cGUuc2V0QWN0aW9uRHVyaW5nID0gZnVuY3Rpb24gKGR1cmluZykge1xuICAgICAgICB0aGlzLmNvbmZpZy5hY3Rpb25EdXJpbmcgPSBkdXJpbmc7XG4gICAgfTtcbiAgICBTY3JlZW4uZGVidWcgPSBmYWxzZTtcbiAgICByZXR1cm4gU2NyZWVuO1xufSgpKTtcbmV4cG9ydHMuU2NyZWVuID0gU2NyZWVuO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NyZWVuLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5HYW1lU3RhdHVzID0gZXhwb3J0cy5EZWZhdWx0U2NyZWVuQ29uZmlnID0gZXhwb3J0cy5EZWZhdWx0UmVyb3V0ZXJDb25maWcgPSBleHBvcnRzLkRlZmF1bHRDb25maWdWYWx1ZSA9IGV4cG9ydHMuR3JvdXBQYWdlID0gZXhwb3J0cy5QYWdlID0gdm9pZCAwO1xudmFyIFBhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gUGFnZShuYW1lLCBkZXZQb2ludHMsIG5leHQsIGJhY2ssIHRocmVzKSB7XG4gICAgICAgIGlmIChuZXh0ID09PSB2b2lkIDApIHsgbmV4dCA9IHVuZGVmaW5lZDsgfVxuICAgICAgICBpZiAoYmFjayA9PT0gdm9pZCAwKSB7IGJhY2sgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKHRocmVzID09PSB2b2lkIDApIHsgdGhyZXMgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy5wb2ludHMgPSBkZXZQb2ludHM7XG4gICAgICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgICAgIHRoaXMuYmFjayA9IGJhY2s7XG4gICAgICAgIHRoaXMudGhyZXMgPSB0aHJlcztcbiAgICB9XG4gICAgcmV0dXJuIFBhZ2U7XG59KCkpO1xuZXhwb3J0cy5QYWdlID0gUGFnZTtcbnZhciBHcm91cFBhZ2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gR3JvdXBQYWdlKG5hbWUsIHBhZ2VzLCBuZXh0LCBiYWNrLCB0aHJlcywgbWF0Y2hPUCkge1xuICAgICAgICBpZiAobmV4dCA9PT0gdm9pZCAwKSB7IG5leHQgPSB1bmRlZmluZWQ7IH1cbiAgICAgICAgaWYgKGJhY2sgPT09IHZvaWQgMCkgeyBiYWNrID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmICh0aHJlcyA9PT0gdm9pZCAwKSB7IHRocmVzID0gdW5kZWZpbmVkOyB9XG4gICAgICAgIGlmIChtYXRjaE9QID09PSB2b2lkIDApIHsgbWF0Y2hPUCA9IHVuZGVmaW5lZDsgfVxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLnBhZ2VzID0gcGFnZXM7XG4gICAgICAgIHRoaXMubmV4dCA9IG5leHQ7XG4gICAgICAgIHRoaXMuYmFjayA9IGJhY2s7XG4gICAgICAgIHRoaXMudGhyZXMgPSB0aHJlcztcbiAgICAgICAgdGhpcy5tYXRjaE9QID0gbWF0Y2hPUCB8fCAnfHwnO1xuICAgIH1cbiAgICByZXR1cm4gR3JvdXBQYWdlO1xufSgpKTtcbmV4cG9ydHMuR3JvdXBQYWdlID0gR3JvdXBQYWdlO1xuZXhwb3J0cy5EZWZhdWx0Q29uZmlnVmFsdWUgPSB7XG4gICAgWFlSR0JUaHJlczogMC45LFxuICAgIFBhZ2VUaHJlczogMC45LFxuICAgIEdyb3VwUGFnZVRocmVzOiAwLjksXG4gICAgR3JvdXBQYWdlTWF0Y2hPUDogJ3x8JyxcbiAgICBSb3V0ZUNvbmZpZ1Nob3VsZE1hdGNoVGltZXM6IDEsXG4gICAgUm91dGVDb25maWdTaG91bGRNYXRjaER1cmluZzogMCxcbiAgICBSb3V0ZUNvbmZpZ0JlZm9yZUFjdGlvbkRlbGF5OiAyNTAsXG4gICAgUm91dGVDb25maWdBZnRlckFjdGlvbkRlbGF5OiAyNTAsXG4gICAgUm91dGVDb25maWdQcmlvcml0eTogMSxcbiAgICBSb3V0ZUNvbmZpZ0RlYnVnOiBmYWxzZSxcbiAgICBUYXNrQ29uZmlnTWF4VGFza1J1blRpbWVzOiAxLFxuICAgIFRhc2tDb25maWdNYXhUYXNrRHVyaW5nOiAwLFxuICAgIFRhc2tDb25maWdNaW5Sb3VuZEludGVydmFsOiAwLFxuICAgIFRhc2tDb25maWdBdXRvU3RvcDogZmFsc2UsXG4gICAgVGFza0NvbmZpZ0ZpbmRSb3V0ZURlbGF5OiAyMDAwLFxufTtcbmV4cG9ydHMuRGVmYXVsdFJlcm91dGVyQ29uZmlnID0ge1xuICAgIHBhY2thZ2VOYW1lOiAnJyxcbiAgICB0YXNrRGVsYXk6IDIwMDAsXG4gICAgc3RhcnRBcHBEZWxheTogNjAwMCxcbiAgICBhdXRvTGF1bmNoQXBwOiB0cnVlLFxuICAgIHRlc3RpbmdTY3JlZW5zaG90UGF0aDogJy4vc2NyZWVuc2hvdCcsXG4gICAgaW5zdGFuY2VJZDogJycsXG4gICAgZGV2aWNlSWQ6ICcnLFxuICAgIHN0cmljdE1vZGU6IGZhbHNlLFxuICAgIGRlYnVnU2xhY2tVcmw6ICcnLFxuICAgIHNhdmVJbWFnZVJvb3Q6ICcvc2RjYXJkL1BpY3R1cmVzL1NjcmVlbnNob3RzL3JvYm90bW9uJyxcbiAgICBzYXZlTWF0Y2hlZFNjcmVlbjogZmFsc2UsXG59O1xuZXhwb3J0cy5EZWZhdWx0U2NyZWVuQ29uZmlnID0ge1xuICAgIGRldldpZHRoOiA2NDAsXG4gICAgZGV2SGVpZ2h0OiAzNjAsXG4gICAgZGV2aWNlV2lkdGg6IDAsXG4gICAgZGV2aWNlSGVpZ2h0OiAwLFxuICAgIHNjcmVlbldpZHRoOiAwLFxuICAgIHNjcmVlbkhlaWdodDogMCxcbiAgICBzY3JlZW5PZmZzZXRYOiAwLFxuICAgIHNjcmVlbk9mZnNldFk6IDAsXG4gICAgYWN0aW9uRHVyaW5nOiAxODAsXG4gICAgcm90YXRpb246ICdob3Jpem9udGFsJyxcbiAgICBsb2dTY3JlZW5zaG90TGFzdFRpbWU6IDAsXG4gICAgbG9nU2NyZWVuc2hvdE1pbkludGVydmFsSW5TZWM6IDEwLFxuICAgIGxvZ1NjcmVlbnNob3RNYXhGaWxlczogMTAwLFxuICAgIGxvZ1NjcmVlbnNob3RGb2xkZXI6ICcnLFxufTtcbnZhciBHYW1lU3RhdHVzO1xuKGZ1bmN0aW9uIChHYW1lU3RhdHVzKSB7XG4gICAgR2FtZVN0YXR1c1tcIldBSVRfRk9SX0xPR0lOX0lOUFVUXCJdID0gXCJ3YWl0LWZvci1pbnB1dFwiO1xuICAgIEdhbWVTdGF0dXNbXCJMT0dJTl9TVUNDRUVERURcIl0gPSBcImxvZ2luLXN1Y2NlZWRlZFwiO1xuICAgIEdhbWVTdGF0dXNbXCJMT0dJTl9GQUlMRURcIl0gPSBcImxvZ2luLWZhaWxlZFwiO1xuICAgIEdhbWVTdGF0dXNbXCJMQVVOQ0hJTkdcIl0gPSBcImxhdW5jaGluZ1wiO1xuICAgIEdhbWVTdGF0dXNbXCJQTEFZSU5HXCJdID0gXCJwbGF5aW5nXCI7XG59KShHYW1lU3RhdHVzID0gZXhwb3J0cy5HYW1lU3RhdHVzIHx8IChleHBvcnRzLkdhbWVTdGF0dXMgPSB7fSkpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RydWN0LmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xudmFyIF9fc3ByZWFkQXJyYXkgPSAodGhpcyAmJiB0aGlzLl9fc3ByZWFkQXJyYXkpIHx8IGZ1bmN0aW9uICh0bywgZnJvbSwgcGFjaykge1xuICAgIGlmIChwYWNrIHx8IGFyZ3VtZW50cy5sZW5ndGggPT09IDIpIGZvciAodmFyIGkgPSAwLCBsID0gZnJvbS5sZW5ndGgsIGFyOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGlmIChhciB8fCAhKGkgaW4gZnJvbSkpIHtcbiAgICAgICAgICAgIGlmICghYXIpIGFyID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZnJvbSwgMCwgaSk7XG4gICAgICAgICAgICBhcltpXSA9IGZyb21baV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRvLmNvbmNhdChhciB8fCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChmcm9tKSk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VdGlscyA9IGV4cG9ydHMubG9nID0gdm9pZCAwO1xuZnVuY3Rpb24gbG9nKCkge1xuICAgIHZhciBtc2dzID0gW107XG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgbXNnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xuICAgIH1cbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoJ2VuLVVTJywge1xuICAgICAgICB0aW1lWm9uZTogJ0FzaWEvVGFpcGVpJyxcbiAgICB9KTtcbiAgICB2YXIgbWVzc2FnZSA9IFwiW1wiLmNvbmNhdChkYXRlLCBcIl0gXCIpO1xuICAgIGZvciAodmFyIF9hID0gMCwgbXNnc18xID0gbXNnczsgX2EgPCBtc2dzXzEubGVuZ3RoOyBfYSsrKSB7XG4gICAgICAgIHZhciBtc2cgPSBtc2dzXzFbX2FdO1xuICAgICAgICBpZiAodHlwZW9mIG1zZyA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIG1lc3NhZ2UgKz0gXCJcIi5jb25jYXQoSlNPTi5zdHJpbmdpZnkobXNnKSwgXCIgXCIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbWVzc2FnZSArPSBcIlwiLmNvbmNhdChtc2csIFwiIFwiKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zb2xlLmxvZyhtZXNzYWdlLnN1YnN0cigwLCBtZXNzYWdlLmxlbmd0aCAtIDEpKTtcbn1cbmV4cG9ydHMubG9nID0gbG9nO1xudmFyIFV0aWxzID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFV0aWxzKCkge1xuICAgIH1cbiAgICBVdGlscy5pZGVudGl0eUNvbG9yID0gZnVuY3Rpb24gKGUxLCBlMikge1xuICAgICAgICB2YXIgbWVhbiA9IChlMS5yICsgZTIucikgLyAyO1xuICAgICAgICB2YXIgciA9IGUxLnIgLSBlMi5yO1xuICAgICAgICB2YXIgZyA9IGUxLmcgLSBlMi5nO1xuICAgICAgICB2YXIgYiA9IGUxLmIgLSBlMi5iO1xuICAgICAgICByZXR1cm4gMSAtIE1hdGguc3FydCgoKCg1MTIgKyBtZWFuKSAqIHIgKiByKSA+PiA4KSArIDQgKiBnICogZyArICgoKDc2NyAtIG1lYW4pICogYiAqIGIpID4+IDgpKSAvIDc2ODtcbiAgICB9O1xuICAgIFV0aWxzLmZvcm1hdFhZUkdCID0gZnVuY3Rpb24gKHh5cmdiKSB7XG4gICAgICAgIHZhciBrZXlzID0gT2JqZWN0LmtleXMoeHlyZ2IpO1xuICAgICAgICB2YXIgZm9ybWF0T2JqID0ge307XG4gICAgICAgIGZvciAodmFyIF9pID0gMCwga2V5c18xID0ga2V5czsgX2kgPCBrZXlzXzEubGVuZ3RoOyBfaSsrKSB7XG4gICAgICAgICAgICB2YXIgayA9IGtleXNfMVtfaV07XG4gICAgICAgICAgICB2YXIgc3RyID0gXCJcIi5jb25jYXQoeHlyZ2Jba10pO1xuICAgICAgICAgICAgd2hpbGUgKHN0ci5sZW5ndGggPCAzKSB7XG4gICAgICAgICAgICAgICAgc3RyID0gJyAnICsgc3RyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9ybWF0T2JqW2tdID0gc3RyO1xuICAgICAgICB9XG4gICAgICAgIHZhciB4ID0gZm9ybWF0T2JqLngsIHkgPSBmb3JtYXRPYmoueSwgciA9IGZvcm1hdE9iai5yLCBnID0gZm9ybWF0T2JqLmcsIGIgPSBmb3JtYXRPYmouYjtcbiAgICAgICAgcmV0dXJuIFwieyB4OiBcIi5jb25jYXQoeCwgXCIsIHk6IFwiKS5jb25jYXQoeSwgXCIsIHI6IFwiKS5jb25jYXQociwgXCIsIGc6IFwiKS5jb25jYXQoZywgXCIsIGI6IFwiKS5jb25jYXQoYiwgXCIgfVwiKTtcbiAgICB9O1xuICAgIFV0aWxzLnNvcnRTdHJpbmdOdW1iZXJNYXAgPSBmdW5jdGlvbiAobWFwKSB7XG4gICAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICAgIGZvciAodmFyIGtleSBpbiBtYXApIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaCh7IGtleToga2V5LCBjb3VudDogbWFwW2tleV0gfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBiLmNvdW50IC0gYS5jb3VudDsgfSk7XG4gICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH07XG4gICAgVXRpbHMuc2xlZXAgPSBmdW5jdGlvbiAoZHVyaW5nKSB7XG4gICAgICAgIHdoaWxlIChkdXJpbmcgPiAyMDApIHtcbiAgICAgICAgICAgIGR1cmluZyAtPSAyMDA7XG4gICAgICAgICAgICBzbGVlcCgyMDApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkdXJpbmcgPiAwKSB7XG4gICAgICAgICAgICBzbGVlcChkdXJpbmcpO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBVdGlscy5nZXRUYWl3YW5UaW1lID0gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gRGF0ZS5ub3coKSArIDggKiA2MCAqIDYwICogMTAwMDtcbiAgICB9O1xuICAgIFV0aWxzLmxvZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBhcmcgPSBhcmdzW2ldO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmcgPT09ICdvYmplY3QnKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tpXSA9IEpTT04uc3RyaW5naWZ5KGFyZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShVdGlscy5nZXRUYWl3YW5UaW1lKCkpO1xuICAgICAgICB2YXIgZGF0ZVN0cmluZyA9IFwiW1wiLmNvbmNhdChkYXRlLmdldE1vbnRoKCkgKyAxLCBcIi1cIikuY29uY2F0KGRhdGUuZ2V0RGF0ZSgpLCBcIlRcIikuY29uY2F0KGRhdGUuZ2V0SG91cnMoKSwgXCI6XCIpLmNvbmNhdChkYXRlLmdldE1pbnV0ZXMoKSwgXCI6XCIpLmNvbmNhdChkYXRlLmdldFNlY29uZHMoKSwgXCJdXCIpO1xuICAgICAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBfX3NwcmVhZEFycmF5KFtkYXRlU3RyaW5nXSwgYXJncywgZmFsc2UpKTtcbiAgICB9O1xuICAgIFV0aWxzLnN0YXJ0QXBwID0gZnVuY3Rpb24gKHBhY2thZ2VOYW1lKSB7XG4gICAgICAgIGV4ZWN1dGUoXCJCT09UQ0xBU1NQQVRIPS9zeXN0ZW0vZnJhbWV3b3JrL2NvcmUuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvbnNjcnlwdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvb2todHRwLmphcjovc3lzdGVtL2ZyYW1ld29yay9jb3JlLWp1bml0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9ib3VuY3ljYXN0bGUuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2V4dC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrLmphcjovc3lzdGVtL2ZyYW1ld29yay9mcmFtZXdvcmsyLmphcjovc3lzdGVtL2ZyYW1ld29yay90ZWxlcGhvbnktY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay92b2lwLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvbW1zLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYW5kcm9pZC5wb2xpY3kuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3NlcnZpY2VzLmphcjovc3lzdGVtL2ZyYW1ld29yay9hcGFjaGUteG1sLmphcjovc3lzdGVtL2ZyYW1ld29yay93ZWJ2aWV3Y2hyb21pdW0uamFyIGFtIHN0YXJ0IC1uIFwiLmNvbmNhdChwYWNrYWdlTmFtZSkpO1xuICAgICAgICBleGVjdXRlKFwiQU5EUk9JRF9EQVRBPS9kYXRhIEJPT1RDTEFTU1BBVEg9L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1vai5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1saWJhcnQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvbnNjcnlwdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvb2todHRwLmphcjovc3lzdGVtL2ZyYW1ld29yay9jb3JlLWp1bml0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9ib3VuY3ljYXN0bGUuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2V4dC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrLmphcjovc3lzdGVtL2ZyYW1ld29yay90ZWxlcGhvbnktY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay92b2lwLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvaW1zLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvbW1zLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYW5kcm9pZC5wb2xpY3kuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FwYWNoZS14bWwuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29yZy5hcGFjaGUuaHR0cC5sZWdhY3kuYm9vdC5qYXIgYW0gc3RhcnQgLW4gXCIuY29uY2F0KHBhY2thZ2VOYW1lKSk7XG4gICAgICAgIGV4ZWN1dGUoXCJBTkRST0lEX0RBVEE9L2RhdGEgbW9ua2V5IC0tcGN0LXN5c2tleXMgMCAtcCBcIi5jb25jYXQocGFja2FnZU5hbWUsIFwiIC1jIGFuZHJvaWQuaW50ZW50LmNhdGVnb3J5LkxBVU5DSEVSIDFcIikpO1xuICAgICAgICBleGVjdXRlKCdBTkRST0lEX0JPT1RMT0dPPTEgJyArXG4gICAgICAgICAgICAnQU5EUk9JRF9ST09UPS9zeXN0ZW0gJyArXG4gICAgICAgICAgICAnQU5EUk9JRF9BU1NFVFM9L3N5c3RlbS9hcHAgJyArXG4gICAgICAgICAgICAnQU5EUk9JRF9EQVRBPS9kYXRhICcgK1xuICAgICAgICAgICAgJ0FORFJPSURfU1RPUkFHRT0vc3RvcmFnZSAnICtcbiAgICAgICAgICAgICdBTkRST0lEX0FSVF9ST09UPS9hcGV4L2NvbS5hbmRyb2lkLmFydCAnICtcbiAgICAgICAgICAgICdBTkRST0lEX0kxOE5fUk9PVD0vYXBleC9jb20uYW5kcm9pZC5pMThuICcgK1xuICAgICAgICAgICAgJ0FORFJPSURfVFpEQVRBX1JPT1Q9L2FwZXgvY29tLmFuZHJvaWQudHpkYXRhICcgK1xuICAgICAgICAgICAgJ0VYVEVSTkFMX1NUT1JBR0U9L3NkY2FyZCAnICtcbiAgICAgICAgICAgICdBU0VDX01PVU5UUE9JTlQ9L21udC9hc2VjICcgK1xuICAgICAgICAgICAgJ0JPT1RDTEFTU1BBVEg9L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvY29yZS1vai5qYXI6L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvY29yZS1saWJhcnQuamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2NvcmUtaWN1NGouamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL29raHR0cC5qYXI6L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvYm91bmN5Y2FzdGxlLmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9hcGFjaGUteG1sLmphcjovc3lzdGVtL2ZyYW1ld29yay9mcmFtZXdvcmsuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2V4dC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ltcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay1hdGItYmFja3dhcmQtY29tcGF0aWJpbGl0eS5qYXI6L2FwZXgvY29tLmFuZHJvaWQuY29uc2NyeXB0L2phdmFsaWIvY29uc2NyeXB0LmphcjovYXBleC9jb20uYW5kcm9pZC5tZWRpYS9qYXZhbGliL3VwZGF0YWJsZS1tZWRpYS5qYXI6L2FwZXgvY29tLmFuZHJvaWQubWVkaWFwcm92aWRlci9qYXZhbGliL2ZyYW1ld29yay1tZWRpYXByb3ZpZGVyLmphcjovYXBleC9jb20uYW5kcm9pZC5vcy5zdGF0c2QvamF2YWxpYi9mcmFtZXdvcmstc3RhdHNkLmphcjovYXBleC9jb20uYW5kcm9pZC5wZXJtaXNzaW9uL2phdmFsaWIvZnJhbWV3b3JrLXBlcm1pc3Npb24uamFyOi9hcGV4L2NvbS5hbmRyb2lkLnNka2V4dC9qYXZhbGliL2ZyYW1ld29yay1zZGtleHRlbnNpb25zLmphcjovYXBleC9jb20uYW5kcm9pZC53aWZpL2phdmFsaWIvZnJhbWV3b3JrLXdpZmkuamFyOi9hcGV4L2NvbS5hbmRyb2lkLnRldGhlcmluZy9qYXZhbGliL2ZyYW1ld29yay10ZXRoZXJpbmcuamFyICcgK1xuICAgICAgICAgICAgJ0RFWDJPQVRCT09UQ0xBU1NQQVRIPS9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2NvcmUtb2ouamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2NvcmUtbGliYXJ0LmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9jb3JlLWljdTRqLmphcjovYXBleC9jb20uYW5kcm9pZC5hcnQvamF2YWxpYi9va2h0dHAuamFyOi9hcGV4L2NvbS5hbmRyb2lkLmFydC9qYXZhbGliL2JvdW5jeWNhc3RsZS5qYXI6L2FwZXgvY29tLmFuZHJvaWQuYXJ0L2phdmFsaWIvYXBhY2hlLXhtbC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3RlbGVwaG9ueS1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL3ZvaXAtY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay9pbXMtY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay9mcmFtZXdvcmstYXRiLWJhY2t3YXJkLWNvbXBhdGliaWxpdHkuamFyICcgK1xuICAgICAgICAgICAgJ1NZU1RFTVNFUlZFUkNMQVNTUEFUSD0vc3lzdGVtL2ZyYW1ld29yay9jb20uYW5kcm9pZC5sb2NhdGlvbi5wcm92aWRlci5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvc2VydmljZXMuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2V0aGVybmV0LXNlcnZpY2UuamFyOi9hcGV4L2NvbS5hbmRyb2lkLnBlcm1pc3Npb24vamF2YWxpYi9zZXJ2aWNlLXBlcm1pc3Npb24uamFyOi9hcGV4L2NvbS5hbmRyb2lkLmlwc2VjL2phdmFsaWIvYW5kcm9pZC5uZXQuaXBzZWMuaWtlLmphciAnICtcbiAgICAgICAgICAgIFwibW9ua2V5IC0tcGN0LXN5c2tleXMgMCAtcCBcIi5jb25jYXQocGFja2FnZU5hbWUsIFwiIC1jIGFuZHJvaWQuaW50ZW50LmNhdGVnb3J5LkxBVU5DSEVSIDFcIikpO1xuICAgIH07XG4gICAgVXRpbHMuc3RvcEFwcCA9IGZ1bmN0aW9uIChwYWNrYWdlTmFtZSkge1xuICAgICAgICBleGVjdXRlKFwiQk9PVENMQVNTUEFUSD0vc3lzdGVtL2ZyYW1ld29yay9jb3JlLmphcjovc3lzdGVtL2ZyYW1ld29yay9jb25zY3J5cHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29raHR0cC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1qdW5pdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYm91bmN5Y2FzdGxlLmphcjovc3lzdGVtL2ZyYW1ld29yay9leHQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2ZyYW1ld29yay5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrMi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdGVsZXBob255LWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvdm9pcC1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL21tcy1jb21tb24uamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FuZHJvaWQucG9saWN5Lmphcjovc3lzdGVtL2ZyYW1ld29yay9zZXJ2aWNlcy5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYXBhY2hlLXhtbC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvd2Vidmlld2Nocm9taXVtLmphciBhbSBmb3JjZS1zdG9wIFwiLmNvbmNhdChwYWNrYWdlTmFtZSkpO1xuICAgICAgICBleGVjdXRlKFwiQU5EUk9JRF9EQVRBPS9kYXRhIEJPT1RDTEFTU1BBVEg9L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1vai5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvY29yZS1saWJhcnQuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2NvbnNjcnlwdC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvb2todHRwLmphcjovc3lzdGVtL2ZyYW1ld29yay9jb3JlLWp1bml0Lmphcjovc3lzdGVtL2ZyYW1ld29yay9ib3VuY3ljYXN0bGUuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2V4dC5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvZnJhbWV3b3JrLmphcjovc3lzdGVtL2ZyYW1ld29yay90ZWxlcGhvbnktY29tbW9uLmphcjovc3lzdGVtL2ZyYW1ld29yay92b2lwLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvaW1zLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvbW1zLWNvbW1vbi5qYXI6L3N5c3RlbS9mcmFtZXdvcmsvYW5kcm9pZC5wb2xpY3kuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL2FwYWNoZS14bWwuamFyOi9zeXN0ZW0vZnJhbWV3b3JrL29yZy5hcGFjaGUuaHR0cC5sZWdhY3kuYm9vdC5qYXIgYW0gZm9yY2Utc3RvcCBcIi5jb25jYXQocGFja2FnZU5hbWUpKTtcbiAgICB9O1xuICAgIFV0aWxzLmdldEN1cnJlbnRBcHAgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBleGVjdXRlKCdkdW1wc3lzIHdpbmRvdyB3aW5kb3dzJykuc3BsaXQoJ21DdXJyZW50Rm9jdXMnKTtcbiAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICByZXR1cm4gWycnLCAnJ107XG4gICAgICAgIH1cbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0WzFdLnNwbGl0KCcgJyk7XG4gICAgICAgIGlmIChyZXN1bHQubGVuZ3RoIDwgMykge1xuICAgICAgICAgICAgcmV0dXJuIFsnJywgJyddO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdFsyXSA9IHJlc3VsdFsyXS5yZXBsYWNlKCd9JywgJycpO1xuICAgICAgICByZXN1bHQgPSByZXN1bHRbMl0uc3BsaXQoJy8nKTtcbiAgICAgICAgdmFyIHBhY2thZ2VOYW1lID0gJyc7XG4gICAgICAgIHZhciBhY3Rpdml0eU5hbWUgPSAnJztcbiAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPT0gMSkge1xuICAgICAgICAgICAgcGFja2FnZU5hbWUgPSByZXN1bHRbMF0udHJpbSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHJlc3VsdC5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBwYWNrYWdlTmFtZSA9IHJlc3VsdFswXS50cmltKCk7XG4gICAgICAgICAgICBhY3Rpdml0eU5hbWUgPSByZXN1bHRbMV0udHJpbSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBbcGFja2FnZU5hbWUsIGFjdGl2aXR5TmFtZV07XG4gICAgfTtcbiAgICBVdGlscy5pc0FwcE9uVG9wID0gZnVuY3Rpb24gKHBhY2thZ2VOYW1lKSB7XG4gICAgICAgIHZhciB0b3BJbmZvID0gZXhlY3V0ZSgnZHVtcHN5cyBhY3Rpdml0eSBhY3Rpdml0aWVzIHwgZ3JlcCBtUmVzdW1lZEFjdGl2aXR5Jyk7XG4gICAgICAgIHJldHVybiB0b3BJbmZvLmluZGV4T2YocGFja2FnZU5hbWUpICE9PSAtMTtcbiAgICB9O1xuICAgIFV0aWxzLnNlbmRTbGFja01lc3NhZ2UgPSBmdW5jdGlvbiAodXJsLCB0aXRsZSwgbWVzc2FnZSkge1xuICAgICAgICB2YXIgYm9keSA9IHtcbiAgICAgICAgICAgIGJsb2NrczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3NlY3Rpb24nLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAnbXJrZHduJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICcqJyArIHRpdGxlICsgJyonLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnZGl2aWRlcicsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdzZWN0aW9uJyxcbiAgICAgICAgICAgICAgICAgICAgdGV4dDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ21ya2R3bicsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiBtZXNzYWdlLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgICAgICBodHRwQ2xpZW50KCdQT1NUJywgdXJsLCBKU09OLnN0cmluZ2lmeShib2R5KSwge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBVdGlscy5zZW5kTG9nID0gZnVuY3Rpb24gKGFwaUtleSwgY2hhbm5lbCwgbGV2ZWwsIHRpdGxlLCBtZXNzYWdlKSB7XG4gICAgICAgIHZhciBib2R5ID0ge1xuICAgICAgICAgICAgYXBpS2V5OiBhcGlLZXksXG4gICAgICAgICAgICBjaGFubmVsOiBjaGFubmVsLFxuICAgICAgICAgICAgbGV2ZWw6IGxldmVsLFxuICAgICAgICAgICAgdGl0bGU6IHRpdGxlLFxuICAgICAgICAgICAgbWVzc2FnZTogbWVzc2FnZSxcbiAgICAgICAgfTtcbiAgICAgICAgaHR0cENsaWVudCgnUE9TVCcsICdodHRwczovL2FzaWEtZWFzdDEtcm9ib3Rtb24tOTgzNzAuY2xvdWRmdW5jdGlvbnMubmV0L3hMb2dnaW5nQVBJLWxvZycsIEpTT04uc3RyaW5naWZ5KGJvZHkpLCB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFV0aWxzLndhaXRGb3JBY3Rpb24gPSBmdW5jdGlvbiAoYWN0aW9uLCB0aW1lb3V0LCBtYXRjaFRpbWVzLCBpbnRlcnZhbCkge1xuICAgICAgICBpZiAobWF0Y2hUaW1lcyA9PT0gdm9pZCAwKSB7IG1hdGNoVGltZXMgPSAxOyB9XG4gICAgICAgIGlmIChpbnRlcnZhbCA9PT0gdm9pZCAwKSB7IGludGVydmFsID0gNjAwOyB9XG4gICAgICAgIHZhciBub3cgPSBEYXRlLm5vdygpO1xuICAgICAgICB2YXIgbWF0Y2hzID0gMDtcbiAgICAgICAgd2hpbGUgKERhdGUubm93KCkgLSBub3cgPCB0aW1lb3V0KSB7XG4gICAgICAgICAgICBpZiAoYWN0aW9uKCkpIHtcbiAgICAgICAgICAgICAgICBtYXRjaHMrKztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtYXRjaHMgPj0gbWF0Y2hUaW1lcykge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgVXRpbHMuc2xlZXAoaW50ZXJ2YWwpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChtYXRjaHMgPj0gbWF0Y2hUaW1lcykge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH07XG4gICAgVXRpbHMucGFkWmVybyA9IGZ1bmN0aW9uIChudW0pIHtcbiAgICAgICAgcmV0dXJuIG51bSA8IDEwID8gXCIwXCIuY29uY2F0KG51bSkgOiBcIlwiLmNvbmNhdChudW0pO1xuICAgIH07XG4gICAgVXRpbHMuc2F2ZVNjcmVlbnNob3RUb0Rpc2sgPSBmdW5jdGlvbiAoZm9sZGVyUGF0aCwgc3VmZml4LCB0aW1lc3RhbXAsIGltZykge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBpZiAoc3VmZml4ID09PSB2b2lkIDApIHsgc3VmZml4ID0gJyc7IH1cbiAgICAgICAgaWYgKHRpbWVzdGFtcCA9PT0gdm9pZCAwKSB7IHRpbWVzdGFtcCA9IHRydWU7IH1cbiAgICAgICAgaWYgKGltZyA9PT0gdm9pZCAwKSB7IGltZyA9IHVuZGVmaW5lZDsgfVxuICAgICAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKFV0aWxzLmdldFRhaXdhblRpbWUoKSk7XG4gICAgICAgIHZhciBfYSA9IFtkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSArIDEsIGRhdGUuZ2V0RGF0ZSgpLCBkYXRlLmdldEhvdXJzKCksIGRhdGUuZ2V0TWludXRlcygpLCBkYXRlLmdldFNlY29uZHMoKV0ubWFwKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBfdGhpcy5wYWRaZXJvKGl0ZW0pOyB9KSwgWVlZWSA9IF9hWzBdLCBNTSA9IF9hWzFdLCBkZCA9IF9hWzJdLCBoaCA9IF9hWzNdLCBtbSA9IF9hWzRdLCBzcyA9IF9hWzVdO1xuICAgICAgICB2YXIgZmlsZW5hbWUgPSBcIlwiLmNvbmNhdChzdWZmaXgsIFwiLnBuZ1wiKTtcbiAgICAgICAgaWYgKHRpbWVzdGFtcCkge1xuICAgICAgICAgICAgZmlsZW5hbWUgPSBcIlwiLmNvbmNhdChZWVlZLCBcIi1cIikuY29uY2F0KE1NLCBcIi1cIikuY29uY2F0KGRkLCBcIlRcIikuY29uY2F0KGhoLCBcIi5cIikuY29uY2F0KG1tLCBcIi5cIikuY29uY2F0KHNzLCBcIl9cIikuY29uY2F0KHN1ZmZpeCwgXCIucG5nXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpbWcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgc2F2ZUltYWdlKGltZywgXCJcIi5jb25jYXQoZm9sZGVyUGF0aCwgXCIvXCIpLmNvbmNhdChmaWxlbmFtZSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaW1nID0gZ2V0U2NyZWVuc2hvdCgpO1xuICAgICAgICAgICAgc2F2ZUltYWdlKGltZywgXCJcIi5jb25jYXQoZm9sZGVyUGF0aCwgXCIvXCIpLmNvbmNhdChmaWxlbmFtZSkpO1xuICAgICAgICAgICAgcmVsZWFzZUltYWdlKGltZyk7XG4gICAgICAgIH1cbiAgICAgICAgVXRpbHMubG9nKFwiV3JpdGUgdG8gZmlsZTogXCIuY29uY2F0KGZvbGRlclBhdGgsIFwiL1wiKS5jb25jYXQoZmlsZW5hbWUpKTtcbiAgICB9O1xuICAgIFV0aWxzLnJlbW92ZU9sZGVzdEZpbGVzSWZFeGNlZWRzTGltaXQgPSBmdW5jdGlvbiAoZm9sZGVyUGF0aCwgbWF4RmlsZXMpIHtcbiAgICAgICAgaWYgKG1heEZpbGVzID09PSB2b2lkIDApIHsgbWF4RmlsZXMgPSAxMDA7IH1cbiAgICAgICAgdmFyIGZpbGVMaXN0ID0gZXhlY3V0ZShcImxzIC1sIFwiLmNvbmNhdChmb2xkZXJQYXRoKSkuc3BsaXQoJ1xcbicpO1xuICAgICAgICAvLyBTb21lIE9TIHJldHVybiBmaXJzdCBsaW5lIHRvdGFsIDggKE1hYywgcmVkcm9pZCksIHNvbWUgbm90IChNZW11KVxuICAgICAgICBpZiAoZmlsZUxpc3RbMF0gJiYgZmlsZUxpc3RbMF0uaW5kZXhPZigndG90YWwnKSA9PT0gMCkge1xuICAgICAgICAgICAgZmlsZUxpc3Quc2hpZnQoKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZmlsZXNXaXRoRGF0ZXMgPSBmaWxlTGlzdC5tYXAoZnVuY3Rpb24gKGxpbmUpIHtcbiAgICAgICAgICAgIHZhciBwYXJ0cyA9IGxpbmUudHJpbSgpLnNwbGl0KCcgJyk7XG4gICAgICAgICAgICB2YXIgZmlsZW5hbWUgPSBwYXJ0c1twYXJ0cy5sZW5ndGggLSAxXTsgLy8gMjAyMy0wOS0wMlQxNS4wOC4xN19sb2cucG5nXG4gICAgICAgICAgICB2YXIgZGF0ZU9iaiA9IG5ldyBEYXRlKHBhcnRzW3BhcnRzLmxlbmd0aCAtIDNdLnNwbGl0KCdfJylbMF0pO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBkYXRlOiBkYXRlT2JqLFxuICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBmaWxlbmFtZSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICBmaWxlc1dpdGhEYXRlcy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBhLmRhdGUuZ2V0VGltZSgpIC0gYi5kYXRlLmdldFRpbWUoKTsgfSk7XG4gICAgICAgIC8vIElmIHRoZXJlIGFyZSBtb3JlIHRoYW4gJHttYXhGaWxlc30gZmlsZXMsIHJlbW92ZSB0aGUgb2xkZXN0XG4gICAgICAgIHdoaWxlIChmaWxlc1dpdGhEYXRlcy5sZW5ndGggPiBtYXhGaWxlcykge1xuICAgICAgICAgICAgdmFyIG9sZGVzdEZpbGUgPSBmaWxlc1dpdGhEYXRlcy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKG9sZGVzdEZpbGUpIHtcbiAgICAgICAgICAgICAgICBleGVjdXRlKFwicm0gXCIuY29uY2F0KGZvbGRlclBhdGgsIFwiL1wiKS5jb25jYXQob2xkZXN0RmlsZS5maWxlbmFtZSkpO1xuICAgICAgICAgICAgICAgIFV0aWxzLmxvZyhcInJtOiBcIi5jb25jYXQoZm9sZGVyUGF0aCwgXCIvXCIpLmNvbmNhdChvbGRlc3RGaWxlLmZpbGVuYW1lKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFV0aWxzLmpvaW5QYXRocyA9IGZ1bmN0aW9uIChwYXRoMSwgcGF0aDIpIHtcbiAgICAgICAgaWYgKHBhdGgyID09PSAnJykge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGgxO1xuICAgICAgICB9XG4gICAgICAgIGlmIChwYXRoMS5jaGFyQXQocGF0aDEubGVuZ3RoIC0gMSkgPT09ICcvJykge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGgxICsgcGF0aDI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aDEgKyAnLycgKyBwYXRoMjtcbiAgICAgICAgfVxuICAgIH07XG4gICAgVXRpbHMuc2F2ZVBvaW50c01hcmtlZEltYWdlID0gZnVuY3Rpb24gKF9hKSB7XG4gICAgICAgIHZhciBpbWFnZSA9IF9hLmltYWdlLCBuYW1lID0gX2EubmFtZSwgcG9pbnRzID0gX2EucG9pbnRzLCBmb2xkZXJQYXRoID0gX2EuZm9sZGVyUGF0aCwgcmdiYSA9IF9hLnJnYmE7XG4gICAgICAgIHZhciBmaWxlcGF0aCA9IFwiXCIuY29uY2F0KGZvbGRlclBhdGgsIFwiL1wiKS5jb25jYXQobmFtZSwgXCIucG5nXCIpO1xuICAgICAgICAvLyBpZiBmaWxlIGV4aXN0cywgc2tpcFxuICAgICAgICB2YXIgcmVzID0gZXhlY3V0ZShcInRlc3QgLWUgXCIuY29uY2F0KGZpbGVwYXRoLCBcIiAmJiBlY2hvIDFcIikpO1xuICAgICAgICBpZiAocmVzID09PSAnMScpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY2xvbmVkSW1nID0gY2xvbmUoaW1hZ2UpO1xuICAgICAgICB2YXIgX2IgPSByZ2JhIHx8IHsgcjogMjU1LCBnOiAwLCBiOiAwLCBhOiAyNTUgfSwgciA9IF9iLnIsIGcgPSBfYi5nLCBiID0gX2IuYiwgYSA9IF9iLmE7XG4gICAgICAgIHZhciByYWRpdXMgPSAzO1xuICAgICAgICBmb3IgKHZhciBpIGluIHBvaW50cykge1xuICAgICAgICAgICAgdmFyIF9jID0gcG9pbnRzW2ldLCB4ID0gX2MueCwgeSA9IF9jLnk7XG4gICAgICAgICAgICBkcmF3Q2lyY2xlKGNsb25lZEltZywgeCwgeSwgcmFkaXVzLCByLCBnLCBiLCBhKTtcbiAgICAgICAgfVxuICAgICAgICBzYXZlSW1hZ2UoY2xvbmVkSW1nLCBmaWxlcGF0aCk7XG4gICAgICAgIHJlbGVhc2VJbWFnZShjbG9uZWRJbWcpO1xuICAgICAgICBjb25zb2xlLmxvZyhcIltzYXZlUG9pbnRzTWFya2VkSW1hZ2VdOiBcIi5jb25jYXQobmFtZSkpO1xuICAgIH07XG4gICAgcmV0dXJuIFV0aWxzO1xufSgpKTtcbmV4cG9ydHMuVXRpbHMgPSBVdGlscztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCIsIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy51cGRhdGVHYW1lU3RhdHVzID0gdm9pZCAwO1xudmFyIHVwZGF0ZUdhbWVTdGF0dXMgPSBmdW5jdGlvbiAoZGV2aWNlSWQsIGluc3RhbmNlSWQsIHN0YXR1cykge1xuICAgIHZhciBlbmNvZGVLZXkgPSAnMmRiZTE0ODNjYWFiZmU2ZDA4OTkyN2RkMWI0NzY0YTg3Y2YyMjRlMmFlYmUwZmFhOGNhZDZmNWE2YTBkNGI1ZmFmNDMzYjEwYTE2YTZlMGZmNGQxZjMxN2FkZGRkMjJjJztcbiAgICB2YXIgZGVjb2RlS2V5ID0geERlY29kZUhleChlbmNvZGVLZXkpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICAgIGRldmljZUlkOiBkZXZpY2VJZCxcbiAgICAgICAgbGljZW5zZUlkOiBpbnN0YW5jZUlkLFxuICAgICAgICBzdGF0dXM6IHN0YXR1cyxcbiAgICAgICAga2V5OiBkZWNvZGVLZXksXG4gICAgfTtcbiAgICB2YXIgcmVzdWx0ID0gaHR0cENsaWVudCgnUE9TVCcsICdodHRwczovL3VzLWNlbnRyYWwxLXJvYm90bW9uLTk4MzcwLmNsb3VkZnVuY3Rpb25zLm5ldC9YUm9ib3Rtb25Hcm91cC14UG9zdFN0YXR1cycsIEpTT04uc3RyaW5naWZ5KG9iaiksIHtcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICB9KTtcbiAgICB2YXIgcmVzdWx0T2JqID0gSlNPTi5wYXJzZShyZXN1bHQpO1xuICAgIGNvbnNvbGUubG9nKCdyZXN1bHQnLCAnc3VjY2VzcycsIHJlc3VsdE9iai5zdWNjZXNzLCAnZXJyb3InLCByZXN1bHRPYmouZXJyb3IpO1xuICAgIHJldHVybiByZXN1bHRPYmouc3VjY2Vzcztcbn07XG5leHBvcnRzLnVwZGF0ZUdhbWVTdGF0dXMgPSB1cGRhdGVHYW1lU3RhdHVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9eHIuanMubWFwIiwidmFyIGNoYXJlbmMgPSB7XG4gIC8vIFVURi04IGVuY29kaW5nXG4gIHV0Zjg6IHtcbiAgICAvLyBDb252ZXJ0IGEgc3RyaW5nIHRvIGEgYnl0ZSBhcnJheVxuICAgIHN0cmluZ1RvQnl0ZXM6IGZ1bmN0aW9uKHN0cikge1xuICAgICAgcmV0dXJuIGNoYXJlbmMuYmluLnN0cmluZ1RvQnl0ZXModW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpKTtcbiAgICB9LFxuXG4gICAgLy8gQ29udmVydCBhIGJ5dGUgYXJyYXkgdG8gYSBzdHJpbmdcbiAgICBieXRlc1RvU3RyaW5nOiBmdW5jdGlvbihieXRlcykge1xuICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoY2hhcmVuYy5iaW4uYnl0ZXNUb1N0cmluZyhieXRlcykpKTtcbiAgICB9XG4gIH0sXG5cbiAgLy8gQmluYXJ5IGVuY29kaW5nXG4gIGJpbjoge1xuICAgIC8vIENvbnZlcnQgYSBzdHJpbmcgdG8gYSBieXRlIGFycmF5XG4gICAgc3RyaW5nVG9CeXRlczogZnVuY3Rpb24oc3RyKSB7XG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdLCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKylcbiAgICAgICAgYnl0ZXMucHVzaChzdHIuY2hhckNvZGVBdChpKSAmIDB4RkYpO1xuICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH0sXG5cbiAgICAvLyBDb252ZXJ0IGEgYnl0ZSBhcnJheSB0byBhIHN0cmluZ1xuICAgIGJ5dGVzVG9TdHJpbmc6IGZ1bmN0aW9uKGJ5dGVzKSB7XG4gICAgICBmb3IgKHZhciBzdHIgPSBbXSwgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKylcbiAgICAgICAgc3RyLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShieXRlc1tpXSkpO1xuICAgICAgcmV0dXJuIHN0ci5qb2luKCcnKTtcbiAgICB9XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY2hhcmVuYztcbiIsIihmdW5jdGlvbigpIHtcbiAgdmFyIGJhc2U2NG1hcFxuICAgICAgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLycsXG5cbiAgY3J5cHQgPSB7XG4gICAgLy8gQml0LXdpc2Ugcm90YXRpb24gbGVmdFxuICAgIHJvdGw6IGZ1bmN0aW9uKG4sIGIpIHtcbiAgICAgIHJldHVybiAobiA8PCBiKSB8IChuID4+PiAoMzIgLSBiKSk7XG4gICAgfSxcblxuICAgIC8vIEJpdC13aXNlIHJvdGF0aW9uIHJpZ2h0XG4gICAgcm90cjogZnVuY3Rpb24obiwgYikge1xuICAgICAgcmV0dXJuIChuIDw8ICgzMiAtIGIpKSB8IChuID4+PiBiKTtcbiAgICB9LFxuXG4gICAgLy8gU3dhcCBiaWctZW5kaWFuIHRvIGxpdHRsZS1lbmRpYW4gYW5kIHZpY2UgdmVyc2FcbiAgICBlbmRpYW46IGZ1bmN0aW9uKG4pIHtcbiAgICAgIC8vIElmIG51bWJlciBnaXZlbiwgc3dhcCBlbmRpYW5cbiAgICAgIGlmIChuLmNvbnN0cnVjdG9yID09IE51bWJlcikge1xuICAgICAgICByZXR1cm4gY3J5cHQucm90bChuLCA4KSAmIDB4MDBGRjAwRkYgfCBjcnlwdC5yb3RsKG4sIDI0KSAmIDB4RkYwMEZGMDA7XG4gICAgICB9XG5cbiAgICAgIC8vIEVsc2UsIGFzc3VtZSBhcnJheSBhbmQgc3dhcCBhbGwgaXRlbXNcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbi5sZW5ndGg7IGkrKylcbiAgICAgICAgbltpXSA9IGNyeXB0LmVuZGlhbihuW2ldKTtcbiAgICAgIHJldHVybiBuO1xuICAgIH0sXG5cbiAgICAvLyBHZW5lcmF0ZSBhbiBhcnJheSBvZiBhbnkgbGVuZ3RoIG9mIHJhbmRvbSBieXRlc1xuICAgIHJhbmRvbUJ5dGVzOiBmdW5jdGlvbihuKSB7XG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdOyBuID4gMDsgbi0tKVxuICAgICAgICBieXRlcy5wdXNoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikpO1xuICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH0sXG5cbiAgICAvLyBDb252ZXJ0IGEgYnl0ZSBhcnJheSB0byBiaWctZW5kaWFuIDMyLWJpdCB3b3Jkc1xuICAgIGJ5dGVzVG9Xb3JkczogZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGZvciAodmFyIHdvcmRzID0gW10sIGkgPSAwLCBiID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrLCBiICs9IDgpXG4gICAgICAgIHdvcmRzW2IgPj4+IDVdIHw9IGJ5dGVzW2ldIDw8ICgyNCAtIGIgJSAzMik7XG4gICAgICByZXR1cm4gd29yZHM7XG4gICAgfSxcblxuICAgIC8vIENvbnZlcnQgYmlnLWVuZGlhbiAzMi1iaXQgd29yZHMgdG8gYSBieXRlIGFycmF5XG4gICAgd29yZHNUb0J5dGVzOiBmdW5jdGlvbih3b3Jkcykge1xuICAgICAgZm9yICh2YXIgYnl0ZXMgPSBbXSwgYiA9IDA7IGIgPCB3b3Jkcy5sZW5ndGggKiAzMjsgYiArPSA4KVxuICAgICAgICBieXRlcy5wdXNoKCh3b3Jkc1tiID4+PiA1XSA+Pj4gKDI0IC0gYiAlIDMyKSkgJiAweEZGKTtcbiAgICAgIHJldHVybiBieXRlcztcbiAgICB9LFxuXG4gICAgLy8gQ29udmVydCBhIGJ5dGUgYXJyYXkgdG8gYSBoZXggc3RyaW5nXG4gICAgYnl0ZXNUb0hleDogZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGZvciAodmFyIGhleCA9IFtdLCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGhleC5wdXNoKChieXRlc1tpXSA+Pj4gNCkudG9TdHJpbmcoMTYpKTtcbiAgICAgICAgaGV4LnB1c2goKGJ5dGVzW2ldICYgMHhGKS50b1N0cmluZygxNikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGhleC5qb2luKCcnKTtcbiAgICB9LFxuXG4gICAgLy8gQ29udmVydCBhIGhleCBzdHJpbmcgdG8gYSBieXRlIGFycmF5XG4gICAgaGV4VG9CeXRlczogZnVuY3Rpb24oaGV4KSB7XG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdLCBjID0gMDsgYyA8IGhleC5sZW5ndGg7IGMgKz0gMilcbiAgICAgICAgYnl0ZXMucHVzaChwYXJzZUludChoZXguc3Vic3RyKGMsIDIpLCAxNikpO1xuICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH0sXG5cbiAgICAvLyBDb252ZXJ0IGEgYnl0ZSBhcnJheSB0byBhIGJhc2UtNjQgc3RyaW5nXG4gICAgYnl0ZXNUb0Jhc2U2NDogZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGZvciAodmFyIGJhc2U2NCA9IFtdLCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSAzKSB7XG4gICAgICAgIHZhciB0cmlwbGV0ID0gKGJ5dGVzW2ldIDw8IDE2KSB8IChieXRlc1tpICsgMV0gPDwgOCkgfCBieXRlc1tpICsgMl07XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgNDsgaisrKVxuICAgICAgICAgIGlmIChpICogOCArIGogKiA2IDw9IGJ5dGVzLmxlbmd0aCAqIDgpXG4gICAgICAgICAgICBiYXNlNjQucHVzaChiYXNlNjRtYXAuY2hhckF0KCh0cmlwbGV0ID4+PiA2ICogKDMgLSBqKSkgJiAweDNGKSk7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgYmFzZTY0LnB1c2goJz0nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBiYXNlNjQuam9pbignJyk7XG4gICAgfSxcblxuICAgIC8vIENvbnZlcnQgYSBiYXNlLTY0IHN0cmluZyB0byBhIGJ5dGUgYXJyYXlcbiAgICBiYXNlNjRUb0J5dGVzOiBmdW5jdGlvbihiYXNlNjQpIHtcbiAgICAgIC8vIFJlbW92ZSBub24tYmFzZS02NCBjaGFyYWN0ZXJzXG4gICAgICBiYXNlNjQgPSBiYXNlNjQucmVwbGFjZSgvW15BLVowLTkrXFwvXS9pZywgJycpO1xuXG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdLCBpID0gMCwgaW1vZDQgPSAwOyBpIDwgYmFzZTY0Lmxlbmd0aDtcbiAgICAgICAgICBpbW9kNCA9ICsraSAlIDQpIHtcbiAgICAgICAgaWYgKGltb2Q0ID09IDApIGNvbnRpbnVlO1xuICAgICAgICBieXRlcy5wdXNoKCgoYmFzZTY0bWFwLmluZGV4T2YoYmFzZTY0LmNoYXJBdChpIC0gMSkpXG4gICAgICAgICAgICAmIChNYXRoLnBvdygyLCAtMiAqIGltb2Q0ICsgOCkgLSAxKSkgPDwgKGltb2Q0ICogMikpXG4gICAgICAgICAgICB8IChiYXNlNjRtYXAuaW5kZXhPZihiYXNlNjQuY2hhckF0KGkpKSA+Pj4gKDYgLSBpbW9kNCAqIDIpKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYnl0ZXM7XG4gICAgfVxuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzID0gY3J5cHQ7XG59KSgpO1xuIiwiLyohXG4gKiBEZXRlcm1pbmUgaWYgYW4gb2JqZWN0IGlzIGEgQnVmZmVyXG4gKlxuICogQGF1dGhvciAgIEZlcm9zcyBBYm91a2hhZGlqZWggPGh0dHBzOi8vZmVyb3NzLm9yZz5cbiAqIEBsaWNlbnNlICBNSVRcbiAqL1xuXG4vLyBUaGUgX2lzQnVmZmVyIGNoZWNrIGlzIGZvciBTYWZhcmkgNS03IHN1cHBvcnQsIGJlY2F1c2UgaXQncyBtaXNzaW5nXG4vLyBPYmplY3QucHJvdG90eXBlLmNvbnN0cnVjdG9yLiBSZW1vdmUgdGhpcyBldmVudHVhbGx5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPSBudWxsICYmIChpc0J1ZmZlcihvYmopIHx8IGlzU2xvd0J1ZmZlcihvYmopIHx8ICEhb2JqLl9pc0J1ZmZlcilcbn1cblxuZnVuY3Rpb24gaXNCdWZmZXIgKG9iaikge1xuICByZXR1cm4gISFvYmouY29uc3RydWN0b3IgJiYgdHlwZW9mIG9iai5jb25zdHJ1Y3Rvci5pc0J1ZmZlciA9PT0gJ2Z1bmN0aW9uJyAmJiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIob2JqKVxufVxuXG4vLyBGb3IgTm9kZSB2MC4xMCBzdXBwb3J0LiBSZW1vdmUgdGhpcyBldmVudHVhbGx5LlxuZnVuY3Rpb24gaXNTbG93QnVmZmVyIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmoucmVhZEZsb2F0TEUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIG9iai5zbGljZSA9PT0gJ2Z1bmN0aW9uJyAmJiBpc0J1ZmZlcihvYmouc2xpY2UoMCwgMCkpXG59XG4iLCIoZnVuY3Rpb24oKXtcclxuICB2YXIgY3J5cHQgPSByZXF1aXJlKCdjcnlwdCcpLFxyXG4gICAgICB1dGY4ID0gcmVxdWlyZSgnY2hhcmVuYycpLnV0ZjgsXHJcbiAgICAgIGlzQnVmZmVyID0gcmVxdWlyZSgnaXMtYnVmZmVyJyksXHJcbiAgICAgIGJpbiA9IHJlcXVpcmUoJ2NoYXJlbmMnKS5iaW4sXHJcblxyXG4gIC8vIFRoZSBjb3JlXHJcbiAgbWQ1ID0gZnVuY3Rpb24gKG1lc3NhZ2UsIG9wdGlvbnMpIHtcclxuICAgIC8vIENvbnZlcnQgdG8gYnl0ZSBhcnJheVxyXG4gICAgaWYgKG1lc3NhZ2UuY29uc3RydWN0b3IgPT0gU3RyaW5nKVxyXG4gICAgICBpZiAob3B0aW9ucyAmJiBvcHRpb25zLmVuY29kaW5nID09PSAnYmluYXJ5JylcclxuICAgICAgICBtZXNzYWdlID0gYmluLnN0cmluZ1RvQnl0ZXMobWVzc2FnZSk7XHJcbiAgICAgIGVsc2VcclxuICAgICAgICBtZXNzYWdlID0gdXRmOC5zdHJpbmdUb0J5dGVzKG1lc3NhZ2UpO1xyXG4gICAgZWxzZSBpZiAoaXNCdWZmZXIobWVzc2FnZSkpXHJcbiAgICAgIG1lc3NhZ2UgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChtZXNzYWdlLCAwKTtcclxuICAgIGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KG1lc3NhZ2UpICYmIG1lc3NhZ2UuY29uc3RydWN0b3IgIT09IFVpbnQ4QXJyYXkpXHJcbiAgICAgIG1lc3NhZ2UgPSBtZXNzYWdlLnRvU3RyaW5nKCk7XHJcbiAgICAvLyBlbHNlLCBhc3N1bWUgYnl0ZSBhcnJheSBhbHJlYWR5XHJcblxyXG4gICAgdmFyIG0gPSBjcnlwdC5ieXRlc1RvV29yZHMobWVzc2FnZSksXHJcbiAgICAgICAgbCA9IG1lc3NhZ2UubGVuZ3RoICogOCxcclxuICAgICAgICBhID0gIDE3MzI1ODQxOTMsXHJcbiAgICAgICAgYiA9IC0yNzE3MzM4NzksXHJcbiAgICAgICAgYyA9IC0xNzMyNTg0MTk0LFxyXG4gICAgICAgIGQgPSAgMjcxNzMzODc4O1xyXG5cclxuICAgIC8vIFN3YXAgZW5kaWFuXHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IG0ubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbVtpXSA9ICgobVtpXSA8PCAgOCkgfCAobVtpXSA+Pj4gMjQpKSAmIDB4MDBGRjAwRkYgfFxyXG4gICAgICAgICAgICAgKChtW2ldIDw8IDI0KSB8IChtW2ldID4+PiAgOCkpICYgMHhGRjAwRkYwMDtcclxuICAgIH1cclxuXHJcbiAgICAvLyBQYWRkaW5nXHJcbiAgICBtW2wgPj4+IDVdIHw9IDB4ODAgPDwgKGwgJSAzMik7XHJcbiAgICBtWygoKGwgKyA2NCkgPj4+IDkpIDw8IDQpICsgMTRdID0gbDtcclxuXHJcbiAgICAvLyBNZXRob2Qgc2hvcnRjdXRzXHJcbiAgICB2YXIgRkYgPSBtZDUuX2ZmLFxyXG4gICAgICAgIEdHID0gbWQ1Ll9nZyxcclxuICAgICAgICBISCA9IG1kNS5faGgsXHJcbiAgICAgICAgSUkgPSBtZDUuX2lpO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbS5sZW5ndGg7IGkgKz0gMTYpIHtcclxuXHJcbiAgICAgIHZhciBhYSA9IGEsXHJcbiAgICAgICAgICBiYiA9IGIsXHJcbiAgICAgICAgICBjYyA9IGMsXHJcbiAgICAgICAgICBkZCA9IGQ7XHJcblxyXG4gICAgICBhID0gRkYoYSwgYiwgYywgZCwgbVtpKyAwXSwgIDcsIC02ODA4NzY5MzYpO1xyXG4gICAgICBkID0gRkYoZCwgYSwgYiwgYywgbVtpKyAxXSwgMTIsIC0zODk1NjQ1ODYpO1xyXG4gICAgICBjID0gRkYoYywgZCwgYSwgYiwgbVtpKyAyXSwgMTcsICA2MDYxMDU4MTkpO1xyXG4gICAgICBiID0gRkYoYiwgYywgZCwgYSwgbVtpKyAzXSwgMjIsIC0xMDQ0NTI1MzMwKTtcclxuICAgICAgYSA9IEZGKGEsIGIsIGMsIGQsIG1baSsgNF0sICA3LCAtMTc2NDE4ODk3KTtcclxuICAgICAgZCA9IEZGKGQsIGEsIGIsIGMsIG1baSsgNV0sIDEyLCAgMTIwMDA4MDQyNik7XHJcbiAgICAgIGMgPSBGRihjLCBkLCBhLCBiLCBtW2krIDZdLCAxNywgLTE0NzMyMzEzNDEpO1xyXG4gICAgICBiID0gRkYoYiwgYywgZCwgYSwgbVtpKyA3XSwgMjIsIC00NTcwNTk4Myk7XHJcbiAgICAgIGEgPSBGRihhLCBiLCBjLCBkLCBtW2krIDhdLCAgNywgIDE3NzAwMzU0MTYpO1xyXG4gICAgICBkID0gRkYoZCwgYSwgYiwgYywgbVtpKyA5XSwgMTIsIC0xOTU4NDE0NDE3KTtcclxuICAgICAgYyA9IEZGKGMsIGQsIGEsIGIsIG1baSsxMF0sIDE3LCAtNDIwNjMpO1xyXG4gICAgICBiID0gRkYoYiwgYywgZCwgYSwgbVtpKzExXSwgMjIsIC0xOTkwNDA0MTYyKTtcclxuICAgICAgYSA9IEZGKGEsIGIsIGMsIGQsIG1baSsxMl0sICA3LCAgMTgwNDYwMzY4Mik7XHJcbiAgICAgIGQgPSBGRihkLCBhLCBiLCBjLCBtW2krMTNdLCAxMiwgLTQwMzQxMTAxKTtcclxuICAgICAgYyA9IEZGKGMsIGQsIGEsIGIsIG1baSsxNF0sIDE3LCAtMTUwMjAwMjI5MCk7XHJcbiAgICAgIGIgPSBGRihiLCBjLCBkLCBhLCBtW2krMTVdLCAyMiwgIDEyMzY1MzUzMjkpO1xyXG5cclxuICAgICAgYSA9IEdHKGEsIGIsIGMsIGQsIG1baSsgMV0sICA1LCAtMTY1Nzk2NTEwKTtcclxuICAgICAgZCA9IEdHKGQsIGEsIGIsIGMsIG1baSsgNl0sICA5LCAtMTA2OTUwMTYzMik7XHJcbiAgICAgIGMgPSBHRyhjLCBkLCBhLCBiLCBtW2krMTFdLCAxNCwgIDY0MzcxNzcxMyk7XHJcbiAgICAgIGIgPSBHRyhiLCBjLCBkLCBhLCBtW2krIDBdLCAyMCwgLTM3Mzg5NzMwMik7XHJcbiAgICAgIGEgPSBHRyhhLCBiLCBjLCBkLCBtW2krIDVdLCAgNSwgLTcwMTU1ODY5MSk7XHJcbiAgICAgIGQgPSBHRyhkLCBhLCBiLCBjLCBtW2krMTBdLCAgOSwgIDM4MDE2MDgzKTtcclxuICAgICAgYyA9IEdHKGMsIGQsIGEsIGIsIG1baSsxNV0sIDE0LCAtNjYwNDc4MzM1KTtcclxuICAgICAgYiA9IEdHKGIsIGMsIGQsIGEsIG1baSsgNF0sIDIwLCAtNDA1NTM3ODQ4KTtcclxuICAgICAgYSA9IEdHKGEsIGIsIGMsIGQsIG1baSsgOV0sICA1LCAgNTY4NDQ2NDM4KTtcclxuICAgICAgZCA9IEdHKGQsIGEsIGIsIGMsIG1baSsxNF0sICA5LCAtMTAxOTgwMzY5MCk7XHJcbiAgICAgIGMgPSBHRyhjLCBkLCBhLCBiLCBtW2krIDNdLCAxNCwgLTE4NzM2Mzk2MSk7XHJcbiAgICAgIGIgPSBHRyhiLCBjLCBkLCBhLCBtW2krIDhdLCAyMCwgIDExNjM1MzE1MDEpO1xyXG4gICAgICBhID0gR0coYSwgYiwgYywgZCwgbVtpKzEzXSwgIDUsIC0xNDQ0NjgxNDY3KTtcclxuICAgICAgZCA9IEdHKGQsIGEsIGIsIGMsIG1baSsgMl0sICA5LCAtNTE0MDM3ODQpO1xyXG4gICAgICBjID0gR0coYywgZCwgYSwgYiwgbVtpKyA3XSwgMTQsICAxNzM1MzI4NDczKTtcclxuICAgICAgYiA9IEdHKGIsIGMsIGQsIGEsIG1baSsxMl0sIDIwLCAtMTkyNjYwNzczNCk7XHJcblxyXG4gICAgICBhID0gSEgoYSwgYiwgYywgZCwgbVtpKyA1XSwgIDQsIC0zNzg1NTgpO1xyXG4gICAgICBkID0gSEgoZCwgYSwgYiwgYywgbVtpKyA4XSwgMTEsIC0yMDIyNTc0NDYzKTtcclxuICAgICAgYyA9IEhIKGMsIGQsIGEsIGIsIG1baSsxMV0sIDE2LCAgMTgzOTAzMDU2Mik7XHJcbiAgICAgIGIgPSBISChiLCBjLCBkLCBhLCBtW2krMTRdLCAyMywgLTM1MzA5NTU2KTtcclxuICAgICAgYSA9IEhIKGEsIGIsIGMsIGQsIG1baSsgMV0sICA0LCAtMTUzMDk5MjA2MCk7XHJcbiAgICAgIGQgPSBISChkLCBhLCBiLCBjLCBtW2krIDRdLCAxMSwgIDEyNzI4OTMzNTMpO1xyXG4gICAgICBjID0gSEgoYywgZCwgYSwgYiwgbVtpKyA3XSwgMTYsIC0xNTU0OTc2MzIpO1xyXG4gICAgICBiID0gSEgoYiwgYywgZCwgYSwgbVtpKzEwXSwgMjMsIC0xMDk0NzMwNjQwKTtcclxuICAgICAgYSA9IEhIKGEsIGIsIGMsIGQsIG1baSsxM10sICA0LCAgNjgxMjc5MTc0KTtcclxuICAgICAgZCA9IEhIKGQsIGEsIGIsIGMsIG1baSsgMF0sIDExLCAtMzU4NTM3MjIyKTtcclxuICAgICAgYyA9IEhIKGMsIGQsIGEsIGIsIG1baSsgM10sIDE2LCAtNzIyNTIxOTc5KTtcclxuICAgICAgYiA9IEhIKGIsIGMsIGQsIGEsIG1baSsgNl0sIDIzLCAgNzYwMjkxODkpO1xyXG4gICAgICBhID0gSEgoYSwgYiwgYywgZCwgbVtpKyA5XSwgIDQsIC02NDAzNjQ0ODcpO1xyXG4gICAgICBkID0gSEgoZCwgYSwgYiwgYywgbVtpKzEyXSwgMTEsIC00MjE4MTU4MzUpO1xyXG4gICAgICBjID0gSEgoYywgZCwgYSwgYiwgbVtpKzE1XSwgMTYsICA1MzA3NDI1MjApO1xyXG4gICAgICBiID0gSEgoYiwgYywgZCwgYSwgbVtpKyAyXSwgMjMsIC05OTUzMzg2NTEpO1xyXG5cclxuICAgICAgYSA9IElJKGEsIGIsIGMsIGQsIG1baSsgMF0sICA2LCAtMTk4NjMwODQ0KTtcclxuICAgICAgZCA9IElJKGQsIGEsIGIsIGMsIG1baSsgN10sIDEwLCAgMTEyNjg5MTQxNSk7XHJcbiAgICAgIGMgPSBJSShjLCBkLCBhLCBiLCBtW2krMTRdLCAxNSwgLTE0MTYzNTQ5MDUpO1xyXG4gICAgICBiID0gSUkoYiwgYywgZCwgYSwgbVtpKyA1XSwgMjEsIC01NzQzNDA1NSk7XHJcbiAgICAgIGEgPSBJSShhLCBiLCBjLCBkLCBtW2krMTJdLCAgNiwgIDE3MDA0ODU1NzEpO1xyXG4gICAgICBkID0gSUkoZCwgYSwgYiwgYywgbVtpKyAzXSwgMTAsIC0xODk0OTg2NjA2KTtcclxuICAgICAgYyA9IElJKGMsIGQsIGEsIGIsIG1baSsxMF0sIDE1LCAtMTA1MTUyMyk7XHJcbiAgICAgIGIgPSBJSShiLCBjLCBkLCBhLCBtW2krIDFdLCAyMSwgLTIwNTQ5MjI3OTkpO1xyXG4gICAgICBhID0gSUkoYSwgYiwgYywgZCwgbVtpKyA4XSwgIDYsICAxODczMzEzMzU5KTtcclxuICAgICAgZCA9IElJKGQsIGEsIGIsIGMsIG1baSsxNV0sIDEwLCAtMzA2MTE3NDQpO1xyXG4gICAgICBjID0gSUkoYywgZCwgYSwgYiwgbVtpKyA2XSwgMTUsIC0xNTYwMTk4MzgwKTtcclxuICAgICAgYiA9IElJKGIsIGMsIGQsIGEsIG1baSsxM10sIDIxLCAgMTMwOTE1MTY0OSk7XHJcbiAgICAgIGEgPSBJSShhLCBiLCBjLCBkLCBtW2krIDRdLCAgNiwgLTE0NTUyMzA3MCk7XHJcbiAgICAgIGQgPSBJSShkLCBhLCBiLCBjLCBtW2krMTFdLCAxMCwgLTExMjAyMTAzNzkpO1xyXG4gICAgICBjID0gSUkoYywgZCwgYSwgYiwgbVtpKyAyXSwgMTUsICA3MTg3ODcyNTkpO1xyXG4gICAgICBiID0gSUkoYiwgYywgZCwgYSwgbVtpKyA5XSwgMjEsIC0zNDM0ODU1NTEpO1xyXG5cclxuICAgICAgYSA9IChhICsgYWEpID4+PiAwO1xyXG4gICAgICBiID0gKGIgKyBiYikgPj4+IDA7XHJcbiAgICAgIGMgPSAoYyArIGNjKSA+Pj4gMDtcclxuICAgICAgZCA9IChkICsgZGQpID4+PiAwO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBjcnlwdC5lbmRpYW4oW2EsIGIsIGMsIGRdKTtcclxuICB9O1xyXG5cclxuICAvLyBBdXhpbGlhcnkgZnVuY3Rpb25zXHJcbiAgbWQ1Ll9mZiAgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCwgeCwgcywgdCkge1xyXG4gICAgdmFyIG4gPSBhICsgKGIgJiBjIHwgfmIgJiBkKSArICh4ID4+PiAwKSArIHQ7XHJcbiAgICByZXR1cm4gKChuIDw8IHMpIHwgKG4gPj4+ICgzMiAtIHMpKSkgKyBiO1xyXG4gIH07XHJcbiAgbWQ1Ll9nZyAgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCwgeCwgcywgdCkge1xyXG4gICAgdmFyIG4gPSBhICsgKGIgJiBkIHwgYyAmIH5kKSArICh4ID4+PiAwKSArIHQ7XHJcbiAgICByZXR1cm4gKChuIDw8IHMpIHwgKG4gPj4+ICgzMiAtIHMpKSkgKyBiO1xyXG4gIH07XHJcbiAgbWQ1Ll9oaCAgPSBmdW5jdGlvbiAoYSwgYiwgYywgZCwgeCwgcywgdCkge1xyXG4gICAgdmFyIG4gPSBhICsgKGIgXiBjIF4gZCkgKyAoeCA+Pj4gMCkgKyB0O1xyXG4gICAgcmV0dXJuICgobiA8PCBzKSB8IChuID4+PiAoMzIgLSBzKSkpICsgYjtcclxuICB9O1xyXG4gIG1kNS5faWkgID0gZnVuY3Rpb24gKGEsIGIsIGMsIGQsIHgsIHMsIHQpIHtcclxuICAgIHZhciBuID0gYSArIChjIF4gKGIgfCB+ZCkpICsgKHggPj4+IDApICsgdDtcclxuICAgIHJldHVybiAoKG4gPDwgcykgfCAobiA+Pj4gKDMyIC0gcykpKSArIGI7XHJcbiAgfTtcclxuXHJcbiAgLy8gUGFja2FnZSBwcml2YXRlIGJsb2Nrc2l6ZVxyXG4gIG1kNS5fYmxvY2tzaXplID0gMTY7XHJcbiAgbWQ1Ll9kaWdlc3RzaXplID0gMTY7XHJcblxyXG4gIG1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG1lc3NhZ2UsIG9wdGlvbnMpIHtcclxuICAgIGlmIChtZXNzYWdlID09PSB1bmRlZmluZWQgfHwgbWVzc2FnZSA9PT0gbnVsbClcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbGxlZ2FsIGFyZ3VtZW50ICcgKyBtZXNzYWdlKTtcclxuXHJcbiAgICB2YXIgZGlnZXN0Ynl0ZXMgPSBjcnlwdC53b3Jkc1RvQnl0ZXMobWQ1KG1lc3NhZ2UsIG9wdGlvbnMpKTtcclxuICAgIHJldHVybiBvcHRpb25zICYmIG9wdGlvbnMuYXNCeXRlcyA/IGRpZ2VzdGJ5dGVzIDpcclxuICAgICAgICBvcHRpb25zICYmIG9wdGlvbnMuYXNTdHJpbmcgPyBiaW4uYnl0ZXNUb1N0cmluZyhkaWdlc3RieXRlcykgOlxyXG4gICAgICAgIGNyeXB0LmJ5dGVzVG9IZXgoZGlnZXN0Ynl0ZXMpO1xyXG4gIH07XHJcblxyXG59KSgpO1xyXG4iLCJleHBvcnQgY29uc3QgaXNQcm9kdWN0aW9uID0gdHJ1ZTtcbiIsImltcG9ydCB7IGRlY29kZUhleCB9IGZyb20gJy4vdXRpbHMnO1xuXG4vLyBnZW5lcmFsIGNvbnN0YW50c1xuY29uc3Qgc2Vjb25kSW5NczogbnVtYmVyID0gMV8wMDA7XG5leHBvcnQgY29uc3QgbWludXRlSW5NczogbnVtYmVyID0gNjAgKiBzZWNvbmRJbk1zO1xuZXhwb3J0IGNvbnN0IGhvdXJJbk1zOiBudW1iZXIgPSA2MCAqIG1pbnV0ZUluTXM7XG5leHBvcnQgY29uc3QgZGF5SW5NczogbnVtYmVyID0gMjQgKiBob3VySW5NcztcblxuLy8gc2NyaXB0IHZlcnNpb24gc2V0dGluZ3NcbmV4cG9ydCBjb25zdCBGUkVFX1VTRVJfTUFYX0dBTUVfRFVSSU5HX01TID0gOCAqIGhvdXJJbk1zO1xuXG4vLyByZXJvdXRlciBzZXR0aW5nc1xuZXhwb3J0IGNvbnN0IHBhY2thZ2VOYW1lOiBzdHJpbmcgPSAnY29tLmNvbTJ1cy5uaW5lcGIzZC5ub3JtYWwuZnJlZWZ1bGwuZ29vZ2xlLmdsb2JhbC5hbmRyb2lkLmNvbW1vbic7XG5leHBvcnQgY29uc3QgZGVidWdTbGFja1VybCA9ICcnO1xuXG4vLyBsb2dnZXIgc2V0dGluZ3NcbmV4cG9ydCBjb25zdCBsb2dnZXJDb25maWcgPSB7XG4gIGFwaUtleTogZGVjb2RlSGV4KCdjMGEzNWIwNmY1OWQ4Yjg2OTRjNzVlMmZiMWFlYjAwY2ViZmQ4OTRlMGJjOWVhZjk1YzUzODdiZDExZDg5ZmY1OTg1MGEyMGE5ODNiZmUyMThmNDI2MTQzZDdhZTcxNTYnKSxcbiAgY2hhbm5lbDogJ21sYjlpJyxcbn07XG5cbmV4cG9ydCBjb25zdCBzYXZlSW1hZ2VSb290OiBzdHJpbmcgPSAnL2RhdGEvbWVkaWEvMC9Eb3dubG9hZHMvJztcblxuZXhwb3J0IGNvbnN0IHJvdGF0aW9uID0gJ2hvcml6b250YWwnO1xuZXhwb3J0IGNvbnN0IGRldkhlaWdodCA9IDM2MDtcbmV4cG9ydCBjb25zdCBkZXZXaWR0aCA9IDY0MDtcblxuZXhwb3J0IGNvbnN0IHRhc2tDb25maWdGaW5kUm91dGVEZWxheSA9IDIgKiBzZWNvbmRJbk1zO1xuZXhwb3J0IGNvbnN0IHRhc2tEZWxheSA9IDAuNSAqIHNlY29uZEluTXM7XG5leHBvcnQgY29uc3QgYWN0aW9uRHVyaW5nID0gMC4xOCAqIHNlY29uZEluTXM7XG5leHBvcnQgY29uc3Qgc3RhcnRBcHBEZWxheSA9IDEwICogc2Vjb25kSW5NcztcbmV4cG9ydCBjb25zdCBkZWZhdWx0TWF0Y2hUaHJlcyA9IDAuOTtcblxuLy8gcGFnZSByZWxhdGVkIHNldHRpbmdzXG5leHBvcnQgY29uc3Qgc2xlZXBTaG9ydDogbnVtYmVyID0gMS41ICogc2Vjb25kSW5NcztcbmV4cG9ydCBjb25zdCBzbGVlcE1lZGl1bTogbnVtYmVyID0gMyAqIHNlY29uZEluTXM7XG5leHBvcnQgY29uc3Qgc2xlZXBMb25nOiBudW1iZXIgPSA0ICogc2Vjb25kSW5NcztcbmV4cG9ydCBjb25zdCBzbGVlcFdhaXRQYWdlTG9uZzogbnVtYmVyID0gMjQgKiBzZWNvbmRJbk1zO1xuZXhwb3J0IGNvbnN0IHNsZWVwRm9yQWQ6IG51bWJlciA9IDMwICogc2Vjb25kSW5NcztcbmV4cG9ydCBjb25zdCBkdXJpbmdNYXhBZFJldHJ5OiBudW1iZXIgPSAzICogc2Vjb25kSW5NcztcblxuLy8gY2xvdWQgc3RhdGUgc2V0dGluZ3NcbmV4cG9ydCBjb25zdCBzd2l0Y2hXYWl0aW5nTG9naW5QYWdlc0ludGVydmFsOiBudW1iZXIgPSAzMCAqIG1pbnV0ZUluTXM7XG5leHBvcnQgY29uc3Qgc2VuZFJ1bm5pbmdFdmVudEludGVydmFsOiBudW1iZXIgPSA1ICogbWludXRlSW5NcztcbmV4cG9ydCBjb25zdCBzZW5kV2FpdElucHV0RXZlbnRJbnRlcnZhbDogbnVtYmVyID0gNSAqIG1pbnV0ZUluTXM7XG5leHBvcnQgY29uc3QgdXBsb2FkU2Vzc2lvbkludGVydmFsOiBudW1iZXIgPSAxICogaG91ckluTXM7XG5cbi8vIGxvZyBzY3JlZW5zaG90IHNldHRpbmdzXG5leHBvcnQgY29uc3QgbG9nU2NyZWVuc2hvdE1pbkludGVydmFsSW5TZWMgPSAzMDtcbmV4cG9ydCBjb25zdCBsb2dTY3JlZW5zaG90TWF4RmlsZXMgPSAoNjAgLyBsb2dTY3JlZW5zaG90TWluSW50ZXJ2YWxJblNlYykgKiA2MCAqIDE7IC8vIGtlZXAgMSBob3Vyc1xuXG4vLyB1c2VyIGRlZmluZWQgc2V0dGluZ3NcbmV4cG9ydCBjb25zdCBsZWFndWVZZWFyTWluOiBudW1iZXIgPSAyMDI1O1xuZXhwb3J0IGNvbnN0IGxlYWd1ZVllYXJNYXg6IG51bWJlciA9IDIwMzQ7XG4iLCJpbXBvcnQgeyBVdGlscyB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IGdldFBvaW50c0luUmFuZ2UgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuL2NvbnN0YW50cyc7XG5cbi8qKiBAZGVzY3JpcHRpb246IHVzZWQgdG8gZmluZCB1bm1hdGNoZWQgcG9pbnRzIGZvciBjaGVja2luZyB3aHkgYSBwYWdlIGlzIG5vdCBtYXRjaCAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRVbm1hdGNoZWRQb2ludHMoY29tcG9uZW50czogeyBuYW1lOiBzdHJpbmc7IHBvaW50czogWFlSR0JbXTsgdGhyZXM/OiBudW1iZXIgfVtdLCBpbWFnZT86IEltYWdlKSB7XG4gIGNvbnN0IG5lZWRSZWxlYXNlID0gIWltYWdlO1xuICBpZiAoIWltYWdlKSB7XG4gICAgaW1hZ2UgPSBnZXRTY3JlZW5zaG90KCk7XG4gIH1cblxuICBjb25zdCByZXN1bHRzOiB7IFtuYW1lOiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9O1xuICBmb3IgKGNvbnN0IGNvbXBvbmVudCBvZiBjb21wb25lbnRzKSB7XG4gICAgY29uc3QgeyBuYW1lLCBwb2ludHMsIHRocmVzIH0gPSBjb21wb25lbnQ7XG4gICAgY29uc3Qgc2NvcmVUaHJlczogbnVtYmVyID0gdGhyZXMgPz8gQ09OU1RBTlRTLmRlZmF1bHRNYXRjaFRocmVzO1xuICAgIGZvciAoY29uc3QgaSBpbiBwb2ludHMpIHtcbiAgICAgIGNvbnN0IHAgPSBwb2ludHNbaV07XG4gICAgICBjb25zdCB7IHIsIGcsIGIgfSA9IGdldEltYWdlQ29sb3IoaW1hZ2UsIHAueCwgcC55KTtcbiAgICAgIGNvbnN0IHNjb3JlID0gVXRpbHMuaWRlbnRpdHlDb2xvcih7IHIsIGcsIGIgfSwgcCk7XG5cbiAgICAgIGNvbnN0IGlzTWF0Y2hlZCA9IHNjb3JlID49IHNjb3JlVGhyZXM7XG4gICAgICBpZiAoaXNNYXRjaGVkKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXJlc3VsdHNbbmFtZV0pIHtcbiAgICAgICAgcmVzdWx0c1tuYW1lXSA9ICcnO1xuICAgICAgfVxuICAgICAgcmVzdWx0c1tuYW1lXSArPSBgZXhwZWN0ZWQ6ICR7Zm9ybWF0WFlSR0IocCl9XFxuICAgICBnZXQ6ICR7Zm9ybWF0WFlSR0IoeyB4OiBwLngsIHk6IHAueSwgciwgZywgYiB9KX0gKHA6ICR7aX0sICR7c2NvcmV9IDwgJHtzY29yZVRocmVzfSlcXG5gO1xuICAgIH1cbiAgfVxuXG4gIGlmIChuZWVkUmVsZWFzZSkge1xuICAgIHJlbGVhc2VJbWFnZShpbWFnZSk7XG4gIH1cbiAgZm9yIChjb25zdCBuYW1lIGluIHJlc3VsdHMpIHtcbiAgICBjb25zb2xlLmxvZyhgW1VubWF0Y2hlZF06ICR7bmFtZX1cXG4ke3Jlc3VsdHNbbmFtZV19XFxuYCk7XG4gIH1cbn1cblxuLyoqIEBkZXNjcmlwdGlvbjogdXNlZCB0byBmaW5kIHVuY2hhbmdlZCBwb2ludHMgaW4gYW5pbWF0aW9uIHRvIGFkZCBuZXcgcGFnZXMgKi9cbmV4cG9ydCBmdW5jdGlvbiBmaW5kVW5jaGFuZ2VkUG9pbnRzKFxuICBsZWZ0VG9wOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyIH0sXG4gIHJpZ2h0Qm90dG9tOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyIH0sXG4gIHRpbWVzOiBudW1iZXIsXG4gIGludGVydmFsOiBudW1iZXIsXG4gIHNwZWNpZmljQ29sb3I/OiB7IHI6IG51bWJlcjsgZzogbnVtYmVyOyBiOiBudW1iZXIgfVxuKSB7XG4gIGNvbnN0IHJlczogYW55ID0ge307XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdGltZXM7IGkrKykge1xuICAgIGNvbnN0IHNjcmVlbnNob3QgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgY29uc3QgcG9pbnRzID0gZ2V0UG9pbnRzSW5SYW5nZShzY3JlZW5zaG90LCBsZWZ0VG9wLCByaWdodEJvdHRvbSk7XG4gICAgaWYgKGkgPT09IDApIHtcbiAgICAgIGZvciAoY29uc3QgcCBvZiBwb2ludHMpIHtcbiAgICAgICAgcmVzW2Zvcm1hdFhZUkdCKHApXSA9IDE7XG4gICAgICB9XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwIG9mIHBvaW50cykge1xuICAgICAgaWYgKHJlc1tmb3JtYXRYWVJHQihwKV0pIHtcbiAgICAgICAgcmVzW2Zvcm1hdFhZUkdCKHApXSsrO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJlbGVhc2VJbWFnZShzY3JlZW5zaG90KTtcbiAgICBVdGlscy5zbGVlcChpbnRlcnZhbCk7XG4gIH1cblxuICBpZiAoc3BlY2lmaWNDb2xvcikge1xuICAgIGNvbnN0IHRhcmdldEtleSA9IGZvcm1hdFhZUkdCKHsgLi4uc3BlY2lmaWNDb2xvciwgeDogMCwgeTogMCB9KTtcbiAgICBjb25zdCB0YXJnZXQgPSB0YXJnZXRLZXkuc3Vic3RyaW5nKDEzKTtcbiAgICBjb25zdCBsZW5TdGFydCA9IHRhcmdldEtleS5sZW5ndGggLSAxMztcbiAgICBmb3IgKGNvbnN0IGsgaW4gcmVzKSB7XG4gICAgICBpZiAocmVzW2tdID09PSB0aW1lcykge1xuICAgICAgICBjb25zdCBsZW4gPSBrLmxlbmd0aDtcbiAgICAgICAgaWYgKGsuc3Vic3RyaW5nKGxlbiAtIGxlblN0YXJ0KSA9PT0gdGFyZ2V0KSB7XG4gICAgICAgICAgY29uc29sZS5sb2coayk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkocmVzKSk7XG4gIH1cbiAgY29uc29sZS5sb2coJ2RvbmUnKTtcbn1cblxuZnVuY3Rpb24gZm9ybWF0WFlSR0IocDogWFlSR0IpIHtcbiAgcmV0dXJuIGB7eDogJHtwLnh9LCB5OiAke3AueX0sIHI6ICR7cC5yfSwgZzogJHtwLmd9LCBiOiAke3AuYn19YDtcbn1cbiIsImV4cG9ydCAqIGZyb20gJy4vbWxiOWknO1xuIiwiaW1wb3J0IHsgVXRpbHMsIFJvdXRlQ29uZmlnLCBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgcmVyb3V0ZXIsIENvbmZpZywgc3RhdGUgfSBmcm9tICcuL21vZHVsZXMnO1xuaW1wb3J0IHsgVEFTS1MsIHN0YXlJbkxvZ2luLCB3ZWVrbHlNaXNzaW9uLCBzZXR0aW5nLCBhZFJld2FyZCwgcGxheUxlYWd1ZUdhbWUsIHBsYXlCYXR0bGVHYW1lLCBjb21tb25zLCByZWNlaXZlSW5ib3ggfSBmcm9tICcuL3Rhc2tzJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgKiBhcyBWRVJTSU9OIGZyb20gJy4vdmVyc2lvbic7XG5pbXBvcnQgeyBnZXRDb2xvckNvdW50SW5SYW5nZSwgaXNTYW1lQ29sb3IsIGdldFBvaW50c0luUmFuZ2UgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCB7IGZpbmRVbmNoYW5nZWRQb2ludHMsIGZpbmRVbm1hdGNoZWRQb2ludHMgfSBmcm9tICcuL2RlYnVnVXRpbHMnO1xuXG5jb25zdCBWRVJTSU9OX0NPREU6IHN0cmluZyA9IFZFUlNJT04uUFJPRFVDVElPTl9WRVJTSU9OX0NPREU7XG5jb25zdCBHSVRfVkVSU0lPTiA9IFZFUlNJT04uR0lUX1ZFUlNJT047XG5cbmV4cG9ydCBjbGFzcyBNTEI5SSB7XG4gIHB1YmxpYyBzdGF0aWMgcGFja2FnZU5hbWU6IHN0cmluZyA9ICdjb20uY29tMnVzLm5pbmVwYjNkLm5vcm1hbC5mcmVlZnVsbC5nb29nbGUuZ2xvYmFsLmFuZHJvaWQuY29tbW9uJztcblxuICBjb25zdHJ1Y3Rvcihqc29uQ29uZmlnOiBhbnkpIHtcbiAgICBjb25zb2xlLmxvZygnIyMjIyMjIyMjIyMjIG5ldyBNTEI5SSAjIyMjIyMjIyMjIyMnKTtcbiAgICBjb25zb2xlLmxvZyhgc2NyaXB0IHZlcnNpb24gJHtWRVJTSU9OX0NPREV9YCk7XG4gICAgY29uc29sZS5sb2coYGdpdCB2ZXJzaW9uICR7R0lUX1ZFUlNJT059YCk7XG4gICAgc3RhdGUuaW5pdChqc29uQ29uZmlnKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGFydCgpIHtcbiAgICBpZiAoQ29uZmlnLnNjcmlwdENvbmZpZy5pc0xvY2FsUGFpZCkge1xuICAgICAgdmFyIHBsYW4gPSBnZXRVc2VyUGxhbigpO1xuICAgICAgaWYgKHBsYW4gIT0gJ3VzZXJfcGxhbl9tbGI5aScpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3VzZXIgcGxhbiBpZDogJywgSlNPTi5zdHJpbmdpZnkocGxhbikpO1xuICAgICAgICBjb25zb2xlLmxvZygncGxlYXNlIHN1YnNjcmliZSBwcmVtaXVtIHBsYW4nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH1cbiAgICBzdGF0ZS5yZXNldEJlZm9yZUFkZFJvdXRlQW5kVGFzaygpO1xuICAgIHRoaXMuYWRkUm91dGVzQW5kVGFza3MoKTtcbiAgICBpZiAodHJ1ZSkge1xuICAgICAgc3RhdGUuc3RhcnQoKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBkZWJ1ZyBjdXJyZW50IHBhZ2VcbiAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICBjb25zb2xlLmxvZyhyZXJvdXRlci5nZXRDdXJyZW50TWF0Y2hOYW1lcygpKTtcbiAgICBjb25zdCBkZWJ1Z1BhZ2UgPSBuZXcgUGFnZSgnJywgW10pO1xuXG4gICAgY29uc3QgaW1hZ2UgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgY29uc29sZS5sb2coZmluZFVubWF0Y2hlZFBvaW50cyhbZGVidWdQYWdlXSwgaW1hZ2UpKTtcbiAgICBjb25zdCBpc01hdGNoID0gcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShkZWJ1Z1BhZ2UsIGltYWdlKTtcbiAgICBjb25zb2xlLmxvZyhpc01hdGNoKTtcbiAgICBpZiAoaXNNYXRjaCkge1xuICAgICAgc2F2ZUltYWdlKGltYWdlLCBgL2RhdGEvbWVkaWEvMC9Eb3dubG9hZHMvcGFnZVJlZmVyZW5jZS8ke2RlYnVnUGFnZS5uYW1lfS5wbmdgKTtcbiAgICAgIFV0aWxzLnNhdmVQb2ludHNNYXJrZWRJbWFnZSh7XG4gICAgICAgIGltYWdlOiBpbWFnZSxcbiAgICAgICAgbmFtZTogYG1hcmtlZF8ke2RlYnVnUGFnZS5uYW1lfWAsXG4gICAgICAgIHBvaW50czogZGVidWdQYWdlLnBvaW50cyxcbiAgICAgICAgZm9sZGVyUGF0aDogJy9kYXRhL21lZGlhLzAvRG93bmxvYWRzL3BhZ2VSZWZlcmVuY2UnLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZmluZFVuY2hhbmdlZFBvaW50cyh7IHg6IDMwNSwgeTogMjk2IH0sIHsgeDogMzU5LCB5OiAzMDcgfSwgNSwgQ09OU1RBTlRTLnNsZWVwTWVkaXVtLCB7IHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSk7XG4gICAgZ2V0UG9pbnRzSW5SYW5nZShpbWFnZSwgeyB4OiAzMTYsIHk6IDUyIH0sIHsgeDogNDQ2LCB5OiA1OSB9KS5mb3JFYWNoKFxuICAgICAgcCA9PiBwLnggJSA1ID09IDAgJiYgcC55ICUgNSA9PSAwICYmIGNvbnNvbGUubG9nKGB7eDogJHtwLnh9LCB5OiAke3AueX0sIHI6ICR7cC5yfSwgZzogJHtwLmd9LCBiOiAke3AuYn19YClcbiAgICApO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCA1OyBpKyspIHtcbiAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgY29uc29sZS5sb2coJ21hdGNoJyk7XG4gICAgICBjb25zb2xlLmxvZyhyZXJvdXRlci5nZXRDdXJyZW50TWF0Y2hOYW1lcygpKTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICB9XG5cbiAgICByZWxlYXNlSW1hZ2UoaW1hZ2UpO1xuICAgIGNvbnNvbGUubG9nKCdkZWJ1ZyBlbmQnKTtcbiAgfVxuICBwdWJsaWMgc3RvcCgpIHtcbiAgICBzdGF0ZS5lbmQoKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRSb3V0ZXNBbmRUYXNrcygpIHtcbiAgICB0aGlzLmFkZFJvdXRlcygpO1xuICAgIHRoaXMuaGFuZGxlVW5rbm93bigpO1xuICAgIC8vIHJlcm91dGVyLmdldEN1cnJlbnRNYXRjaE5hbWVzKCk7XG5cbiAgICBpZiAoQ29uZmlnLnNjcmlwdENvbmZpZy5pc0xvY2FsUGFpZCB8fCBDb25maWcuc2NyaXB0Q29uZmlnLmlzRGV2KSB7XG4gICAgICB0aGlzLmFkZFByZW1pdW1UYXNrcygpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoIUNvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCkge1xuICAgICAgdGhpcy5hZGRCYXNpY1Rhc2tzKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy5saWNlbnNlSWQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdubyBsaWNlbnNlIGlkJyk7XG4gICAgICBzdGF5SW5Mb2dpbi5hZGRUYXNrKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdGhpcy5hZGRQcmVtaXVtVGFza3MoKTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRCYXNpY1Rhc2tzKCkge1xuICAgIHBsYXlMZWFndWVHYW1lLmFkZFRhc2soKTtcbiAgfVxuICBwdWJsaWMgYWRkUHJlbWl1bVRhc2tzKCkge1xuICAgIHNldHRpbmcuYWRkVGFzaygpO1xuICAgIHBsYXlMZWFndWVHYW1lLmFkZFRhc2soKTtcblxuICAgIENvbmZpZy5zY3JpcHRDb25maWcuaXNSdW5QbGF5QmF0dGxlR2FtZSAmJiBwbGF5QmF0dGxlR2FtZS5hZGRUYXNrKCk7XG4gICAgLy8gQ29uZmlnLmNvbmZpZy5pc1J1bldlZWtseU1pc3Npb24gJiYgd2Vla2x5TWlzc2lvbi5hZGRUYXNrKCk7XG4gICAgQ29uZmlnLnNjcmlwdENvbmZpZy5pc1J1bkFkUmV3YXJkICYmIGFkUmV3YXJkLmFkZFRhc2soKTtcbiAgICAvLyBDb25maWcuY29uZmlnLmlzRGV2ICYmIHJlY2VpdmVJbmJveC5hZGRUYXNrKCk7XG5cbiAgICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICAgIG5hbWU6IFRBU0tTLnJlc3RhcnRBcHBQZXJEYXksXG4gICAgICAvLyBtYXhUYXNrUnVuVGltZXM6IDEsXG4gICAgICBtaW5Sb3VuZEludGVydmFsOiBDT05TVEFOVFMuZGF5SW5NcyxcbiAgICAgIGJlZm9yZVJvdXRlOiB0YXNrID0+IHtcbiAgICAgICAgaWYgKHRhc2subGFzdFJ1blRpbWUgIT09IDApIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygncmVzdGFydCBhcHAgdGFzaycpO1xuICAgICAgICAgIHJlcm91dGVyLnJlc3RhcnRBcHAoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJ3NraXBSb3V0ZUxvb3AnO1xuICAgICAgfSxcbiAgICAgIG1heFRhc2tEdXJpbmc6IDMwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgICBmb3JjZVN0b3A6IHRydWUsXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgYWRkUm91dGVzKCkge1xuICAgIC8vICoqIGxvZ2luIHBhZ2VzXG4gICAgc3RheUluTG9naW4uYWRkUm91dGVzKCk7XG5cbiAgICAvLyAqKiBnYW1lIHNldHRpbmdcbiAgICBzZXR0aW5nLmFkZFJvdXRlcygpO1xuXG4gICAgLy8gKiogYWQgcmV3YXJkXG4gICAgYWRSZXdhcmQuYWRkUm91dGVzKCk7XG5cbiAgICAvLyAqKiB3ZWVrbHkgbWlzc2lvblxuICAgIHdlZWtseU1pc3Npb24uYWRkUm91dGVzKCk7XG5cbiAgICAvLyAqKiByZWNlaXZlIGluYm94XG4gICAgcmVjZWl2ZUluYm94LmFkZFJvdXRlcygpO1xuXG4gICAgLy8gKiogcGxheUJhdHRsZUdhbWVcbiAgICBwbGF5QmF0dGxlR2FtZS5hZGRSb3V0ZXMoKTtcblxuICAgIC8vICoqIHBsYXlMZWFndWVHYW1lXG4gICAgcGxheUxlYWd1ZUdhbWUuYWRkUm91dGVzKCk7XG5cbiAgICAvLyAqKiBjb21tb24gcGFnZXNcbiAgICBjb21tb25zLmFkZFJvdXRlcygpO1xuICB9XG5cbiAgcHVibGljIGhhbmRsZVVua25vd24oKSB7XG4gICAgcmVyb3V0ZXIuYWRkVW5rbm93bkFjdGlvbigoY29udGV4dCwgaW1hZ2UsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICAvLyByZXJvdXRlci5nZXRDdXJyZW50TWF0Y2hOYW1lcygpO1xuICAgICAgY29uc3QgbGFzdE1hdGNoZWRQYXRoID0gY29udGV4dC5sYXN0TWF0Y2hlZFBhdGguc3Vic3RyaW5nKDEpO1xuICAgICAgVXRpbHMubG9nKGB1bmtub3duIGNvdW50ICR7Y29udGV4dC5tYXRjaFRpbWVzfSwgZHVyaW5nICR7Y29udGV4dC5tYXRjaER1cmluZ30sIGxhc3QgbWF0Y2hlZDogJHtsYXN0TWF0Y2hlZFBhdGh9YCk7XG4gICAgICBjb25zdCBpc0luQXBwID0gcmVyb3V0ZXIuY2hlY2tJbkFwcCgpO1xuICAgICAgaWYgKCFpc0luQXBwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdub3QgaW4gYXBwJyk7XG4gICAgICAgIGlmIChDb25maWcuc2NyaXB0Q29uZmlnLmhhc0Nvb2xGZWF0dXJlKSB7XG4gICAgICAgICAgcmVyb3V0ZXIucmVzdGFydEFwcCgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKENvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCAmJiBzdGF0ZS5pc1dhaXRpbmdMb2dpbikge1xuICAgICAgICBjb25zb2xlLmxvZygnd2FpdCB1c2VyIGlucHV0Jyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgc3dpdGNoIChjb250ZXh0LnRhc2submFtZSkge1xuICAgICAgICBjYXNlIFRBU0tTLnBsYXlCYXR0bGVHYW1lOlxuICAgICAgICBjYXNlIFRBU0tTLnBsYXlMZWFndWVHYW1lOlxuICAgICAgICAgIGlmIChjb250ZXh0Lm1hdGNoRHVyaW5nIDwgQ09OU1RBTlRTLm1pbnV0ZUluTXMgKiAyKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnbWlnaHQgYmUgaW4gcGxheWluZyBhbmltYXRpb24nKTtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAwLCB5OiAwIH0pO1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3RhcCcpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cblxuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDAsIHk6IDAgfSk7XG4gICAgICBjb25zb2xlLmxvZygndGFwJyk7XG5cbiAgICAgIGlmIChjb250ZXh0Lm1hdGNoVGltZXMgJSAxMSA9PT0gMCkge1xuICAgICAgICBrZXljb2RlKCdLRVlDT0RFX0JBQ0snLCAxMDApO1xuICAgICAgICBVdGlscy5sb2coJ2tleWNvZGUgYmFjayBmb3IgdW5rbm93bicpO1xuICAgICAgfVxuICAgICAgaWYgKGNvbnRleHQubWF0Y2hEdXJpbmcgPiBDT05TVEFOVFMubWludXRlSW5NcyAqIDMwKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzdHVjayBpbiB1bmtub3duIHBhZ2UgbW9yZSB0aGFuIDMwIG1pbicpO1xuICAgICAgICBDb25maWcuc2NyaXB0Q29uZmlnLmhhc0Nvb2xGZWF0dXJlICYmIHJlcm91dGVyLnJlc3RhcnRBcHAoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBoYW5kbGVDbG9zZUFkKCkge1xuICAgIGNvbnNvbGUubG9nKCd0cnkgY2xvc2UgYWQnKTtcbiAgICBrZXljb2RlKCdCQUNLJywgMTAwKTtcbiAgICBjb25zb2xlLmxvZygna2V5IGNvZGUgYmFjaycpO1xuICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgaWYgKHJlcm91dGVyLmdldEN1cnJlbnRNYXRjaE5hbWVzKCkubGVuZ3RoICE9PSAwKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gdHJ5IHRhcCBjbG9zZSBidG5cbiAgICBmb3IgKGNvbnN0IGNsb3NlQnRuIG9mIFtcbiAgICAgIC8vIHJpZ2h0XG4gICAgICB7IHg6IDYyMiwgeTogMTkgfSxcblxuICAgICAgLy8gbGVmdFxuICAgICAgeyB4OiA4LCB5OiAxNSB9LFxuICAgIF0pIHtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoY2xvc2VCdG4pO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xuICAgIH1cbiAgfVxuICBwdWJsaWMgaGFuZGxlUG93ZXJTYXZpbmdQYWdlKCkge1xuICAgIGNvbnNvbGUubG9nKCdoYW5kbGVQb3dlclNhdmluZ1BhZ2UnKTtcbiAgICByZXJvdXRlci5zY3JlZW4udGFwRG93bih7IHg6IDEwMCwgeTogMTgwIH0pO1xuICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLm1vdmVUbyh7IHg6IDUwMCwgeTogMTgwIH0pO1xuICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcFVwKHsgeDogNTAwLCB5OiAxODAgfSk7XG4gICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgfVxuXG4gIHB1YmxpYyB3cmFwUm91dGVBY3Rpb24oYWN0aW9uOiBSb3V0ZUNvbmZpZ1snYWN0aW9uJ10pOiBSb3V0ZUNvbmZpZ1snYWN0aW9uJ10ge1xuICAgIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy5pc0Nsb3VkKSB7XG4gICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH1cblxuICAgIHJldHVybiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnd3JhcFJvdXRlQWN0aW9uJywgY29udGV4dC50YXNrLm5hbWUsIG1hdGNoZWRbMF0ubmFtZSk7XG4gICAgICBpZiAodHlwZW9mIGFjdGlvbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBhY3Rpb24oY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKTtcbiAgICAgIH1cbiAgICAgIGlmIChhY3Rpb24gPT09ICdnb05leHQnKSB7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChtYXRjaGVkWzBdKTtcbiAgICAgIH1cbiAgICAgIGlmIChhY3Rpb24gPT09ICdnb0JhY2snKSB7XG4gICAgICAgIHJlcm91dGVyLmdvQmFjayhtYXRjaGVkWzBdKTtcbiAgICAgIH1cblxuICAgICAgLy8gdXBsb2FkIHNlc3Npb24gaWYgbmVlZGVkXG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICB9O1xuICB9XG59XG4iLCJpbXBvcnQgeyBTY3JpcHRDb25maWcgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyBsZWFndWVZZWFyTWluIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB7IGlzUHJvZHVjdGlvbiB9IGZyb20gJy4uLy4uL2NvbmZpZyc7XG5cbmV4cG9ydCBjb25zdCBzY3JpcHRDb25maWc6IFNjcmlwdENvbmZpZyA9IHtcbiAgbGVhZ3VlU2Vhc29uTW9kZTogJ2Z1bGwnLFxuICBsZWFndWVZZWFyOiBsZWFndWVZZWFyTWluLFxuICBsZWFndWVNb2RlOiAnbWFzdGVyJyxcbiAgdXNlRHJpbms6IGlzUHJvZHVjdGlvbiA/IGZhbHNlIDogdHJ1ZSxcblxuICBpc1J1blBsYXlCYXR0bGVHYW1lOiB0cnVlLFxuICBpc1J1bkFkUmV3YXJkOiBmYWxzZSxcbiAgaXNSdW5XZWVrbHlNaXNzaW9uOiBmYWxzZSxcblxuICBpc1Byb2R1Y3Rpb24sXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0KGpzb25Db25maWc6IGFueSkge1xuICBpZiAodHlwZW9mIGpzb25Db25maWcgIT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgYyA9IEpTT04ucGFyc2UoanNvbkNvbmZpZyk7XG4gIHNjcmlwdENvbmZpZy5sZWFndWVTZWFzb25Nb2RlID0gYy5sZWFndWVTZWFzb25Nb2RlID8/IHNjcmlwdENvbmZpZy5sZWFndWVTZWFzb25Nb2RlO1xuICBzY3JpcHRDb25maWcubGVhZ3VlWWVhciA9IGMubGVhZ3VlWWVhciA/PyBzY3JpcHRDb25maWcubGVhZ3VlWWVhcjtcbiAgc2NyaXB0Q29uZmlnLmxlYWd1ZU1vZGUgPSBjLmxlYWd1ZU1vZGUgPz8gc2NyaXB0Q29uZmlnLmxlYWd1ZU1vZGU7XG4gIHNjcmlwdENvbmZpZy51c2VEcmluayA9IGMudXNlRHJpbmsgPz8gc2NyaXB0Q29uZmlnLnVzZURyaW5rO1xuXG4gIHNjcmlwdENvbmZpZy54cm9ib3Rtb25TM0tleSA9IGMueHJvYm90bW9uUzNLZXkgPz8gc2NyaXB0Q29uZmlnLnhyb2JvdG1vblMzS2V5O1xuICBzY3JpcHRDb25maWcueHJvYm90bW9uUzNUb2tlbiA9IGMueHJvYm90bW9uUzNUb2tlbiA/PyBzY3JpcHRDb25maWcueHJvYm90bW9uUzNUb2tlbjtcbiAgc2NyaXB0Q29uZmlnLmFtYXpvbmF3c1MzS2V5ID0gYy5hbWF6b25hd3NTM0tleSA/PyBzY3JpcHRDb25maWcuYW1hem9uYXdzUzNLZXk7XG4gIHNjcmlwdENvbmZpZy5hbWF6b25hd3NTM1Rva2VuID0gYy5hbWF6b25hd3NTM1Rva2VuID8/IHNjcmlwdENvbmZpZy5hbWF6b25hd3NTM1Rva2VuO1xuICBzY3JpcHRDb25maWcubGljZW5zZUlkID0gYy5saWNlbnNlSWQgPz8gc2NyaXB0Q29uZmlnLmxpY2Vuc2VJZDtcbiAgc2NyaXB0Q29uZmlnLmRldmljZUlkID0gYy5kZXZpY2VJZCA/PyBzY3JpcHRDb25maWcuZGV2aWNlSWQ7XG5cbiAgLy8gc2NyaXB0IHZlcnNpb24gc2V0dGluZ3NcbiAgc2NyaXB0Q29uZmlnLmlzUHJvZHVjdGlvbjsgLy8gdGhpcyBpcyBub3QgaW4gdGhlIGpzb24gY29uZmlnXG4gIGNvbnN0IHsgaXNDbG91ZCA9IHRydWUsIGlzTG9jYWxQYWlkID0gZmFsc2UsIGlzRGV2ID0gZmFsc2UgfSA9IGM7XG4gIHNjcmlwdENvbmZpZy5pc0Nsb3VkID0gaXNDbG91ZDtcbiAgc2NyaXB0Q29uZmlnLmlzTG9jYWxQYWlkID0gaXNMb2NhbFBhaWQ7XG4gIHNjcmlwdENvbmZpZy5pc0ZyZWVVc2VyID0gIWlzQ2xvdWQgJiYgIWlzTG9jYWxQYWlkICYmICFpc0RldjtcbiAgc2NyaXB0Q29uZmlnLmlzRGV2ID0gaXNEZXY7XG4gIHNjcmlwdENvbmZpZy5oYXNDb29sRmVhdHVyZSA9ICFzY3JpcHRDb25maWcuaXNGcmVlVXNlcjtcblxuICBzY3JpcHRDb25maWcuaXNSdW5XZWVrbHlNaXNzaW9uID0gc2NyaXB0Q29uZmlnLmhhc0Nvb2xGZWF0dXJlICYmIChjLmlzUnVuV2Vla2x5TWlzc2lvbiA/PyBzY3JpcHRDb25maWcuaXNSdW5XZWVrbHlNaXNzaW9uKTtcbiAgc2NyaXB0Q29uZmlnLmlzUnVuQWRSZXdhcmQgPSBzY3JpcHRDb25maWcuaGFzQ29vbEZlYXR1cmUgJiYgKGMuaXNSdW5BZFJld2FyZCA/PyBzY3JpcHRDb25maWcuaXNSdW5BZFJld2FyZCk7XG4gIHNjcmlwdENvbmZpZy5pc1J1blBsYXlCYXR0bGVHYW1lID0gc2NyaXB0Q29uZmlnLmhhc0Nvb2xGZWF0dXJlICYmIChjLmlzUnVuUGxheUJhdHRsZUdhbWUgPz8gc2NyaXB0Q29uZmlnLmlzUnVuUGxheUJhdHRsZUdhbWUpO1xufVxuIiwiaW1wb3J0IHsgVXRpbHMsIEdhbWVTdGF0dXMsIHJlcm91dGVyIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5cbmxldCBsYXN0UnVubmluZ0V2ZW50OiBudW1iZXIgPSAwO1xubGV0IGxhc3RTZW5kR2FtZVN0YXR1c0V2ZW50QXQ6IG51bWJlciA9IDA7XG5sZXQgY250ID0gMDtcbmVudW0gRXZlbnROYW1lIHtcbiAgUlVOTklORyA9ICdydW5uaW5nJyxcbiAgR0FNRV9TVEFUVVMgPSAnZ2FtZVN0YXR1cycsXG59XG5jb25zdCBwcmVmaXggPSAnW0V2ZW50XSc7XG5cbmV4cG9ydCBsZXQgbGFzdEdhbWVTdGF0dXNFdmVudDogc3RyaW5nID0gJyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2dpbklucHV0aW5nKCkge1xuICBjbnQrKztcbiAgY29uc29sZS5sb2coYGxvZ2luSW5wdXRpbmc6ICR7Y250fWApO1xuICBjb25zdCBjb250ZW50ID0gR2FtZVN0YXR1cy5XQUlUX0ZPUl9MT0dJTl9JTlBVVDtcbiAgcmV0dXJuIHJlcm91dGVyLnVwZGF0ZUdhbWVTdGF0dXMoY29udGVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsb2dpblN1Y2Nlc3MoKSB7XG4gIGlmIChsYXN0R2FtZVN0YXR1c0V2ZW50ICE9PSBHYW1lU3RhdHVzLldBSVRfRk9SX0xPR0lOX0lOUFVUKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGNvbnN0IGNvbnRlbnQgPSBHYW1lU3RhdHVzLkxPR0lOX1NVQ0NFRURFRDtcbiAgcmV0dXJuIHJlcm91dGVyLnVwZGF0ZUdhbWVTdGF0dXMoY29udGVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBsYXVuY2hpbmcoKSB7XG4gIC8vIHNldCB0byBkZWZhdWx0IG9uY2UgYXBwIGlzIGxhdW5jaGVkIChmaXJzdCBhbmQgYWdhaW4pXG4gIGxhc3RSdW5uaW5nRXZlbnQgPSAwO1xuICBjb25zdCBjb250ZW50ID0gR2FtZVN0YXR1cy5MQVVOQ0hJTkc7XG4gIHJldHVybiByZXJvdXRlci51cGRhdGVHYW1lU3RhdHVzKGNvbnRlbnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGxheWluZygpIHtcbiAgY29uc3QgY29udGVudCA9IEdhbWVTdGF0dXMuUExBWUlORztcbiAgcmV0dXJuIHJlcm91dGVyLnVwZGF0ZUdhbWVTdGF0dXMoY29udGVudCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydW5uaW5nKHVzZUludGVydmFsOiBib29sZWFuID0gZmFsc2UpIHtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgaWYgKHVzZUludGVydmFsICYmIG5vdyAtIGxhc3RSdW5uaW5nRXZlbnQgPCBDT05TVEFOVFMuc2VuZFJ1bm5pbmdFdmVudEludGVydmFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxhc3RSdW5uaW5nRXZlbnQgPSBub3c7XG4gIHNlbmRFdmVudChFdmVudE5hbWUuUlVOTklORywgJycpO1xuICBjb25zb2xlLmxvZyhgJHtwcmVmaXh9IHJ1bm5pbmdgKTtcbn1cblxuIiwiZXhwb3J0IHsgcmVyb3V0ZXIgfSBmcm9tICcuL3Jlcm91dGVyJztcbmV4cG9ydCAqIGFzIENvbmZpZyBmcm9tICcuL2NvbmZpZyc7XG5leHBvcnQgKiBhcyBzdGF0ZSBmcm9tICcuL3N0YXRlJztcbmV4cG9ydCB7IGxvZ2dlciB9IGZyb20gJy4vbG9nZ2VyJztcbiIsImltcG9ydCB7IFV0aWxzIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgKiBhcyBDb25maWcgZnJvbSAnLi9jb25maWcnO1xuXG5lbnVtIExvZ0xldmVsIHtcbiAgSU5GTyA9ICdpbmZvJyxcbiAgV0FSTklORyA9ICd3YXJuaW5nJyxcbiAgRVJST1IgPSAnZXJyb3InLFxufVxuXG5mdW5jdGlvbiBzZW5kTG9nKGxldmVsOiBMb2dMZXZlbCwgdGl0bGU6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSB7XG4gIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy5pc0Nsb3VkKSB7XG4gICAgY29uc29sZS5sb2coYFske2xldmVsfV0gJHt0aXRsZX06ICR7bWVzc2FnZX1gKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgdXNlckluZm8gPSBgXG4gICAgICAgIGRldmljZUlkOiAke0NvbmZpZy5zY3JpcHRDb25maWcuZGV2aWNlSWR9XFxuXG4gICAgICAgIGxpY2Vuc2U6ICR7Q29uZmlnLnNjcmlwdENvbmZpZy5saWNlbnNlSWQgfHwgJ0RFQlVHJ31cXG5cbiAgICAgIGA7XG4gIFV0aWxzLnNlbmRMb2coQ09OU1RBTlRTLmxvZ2dlckNvbmZpZy5hcGlLZXksIENPTlNUQU5UUy5sb2dnZXJDb25maWcuY2hhbm5lbCwgbGV2ZWwsIHRpdGxlLCB1c2VySW5mbyArIG1lc3NhZ2UpO1xufVxuXG5leHBvcnQgY29uc3QgbG9nZ2VyID0ge1xuICBpbmZvOiAodGl0bGU6IHN0cmluZywgbWVzc2FnZTogc3RyaW5nKSA9PiB7XG4gICAgc2VuZExvZyhMb2dMZXZlbC5JTkZPLCB0aXRsZSwgbWVzc2FnZSk7XG4gIH0sXG4gIHdhcm5pbmc6ICh0aXRsZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcpID0+IHtcbiAgICBzZW5kTG9nKExvZ0xldmVsLldBUk5JTkcsIHRpdGxlLCBtZXNzYWdlKTtcbiAgfSxcbiAgZXJyb3I6ICh0aXRsZTogc3RyaW5nLCBtZXNzYWdlOiBzdHJpbmcpID0+IHtcbiAgICBzZW5kTG9nKExvZ0xldmVsLkVSUk9SLCB0aXRsZSwgbWVzc2FnZSk7XG4gIH0sXG59O1xuIiwiaW1wb3J0IHsgcmVyb3V0ZXIgYXMgciB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRSZXJvdXRlcigpIHtcbiAgci5yZXNldCgpO1xuICByLmRlZmF1bHRDb25maWcuVGFza0NvbmZpZ0F1dG9TdG9wID0gdHJ1ZTtcbiAgci5kZWZhdWx0Q29uZmlnLlJvdXRlQ29uZmlnRGVidWcgPSBmYWxzZTtcbiAgci5kZWZhdWx0Q29uZmlnLlRhc2tDb25maWdGaW5kUm91dGVEZWxheSA9IENPTlNUQU5UUy50YXNrQ29uZmlnRmluZFJvdXRlRGVsYXk7XG4gIHIuZGVmYXVsdENvbmZpZy5QYWdlVGhyZXMgPSBDT05TVEFOVFMuZGVmYXVsdE1hdGNoVGhyZXM7XG4gIHIuZGVmYXVsdENvbmZpZy5Hcm91cFBhZ2VUaHJlcyA9IENPTlNUQU5UUy5kZWZhdWx0TWF0Y2hUaHJlcztcblxuICAvLyBpZiBub3Qgc2V0IHBhY2thZ2VOYW1lIGZpcnN0LCBjYW5ub3QgaGFuZGxlIHN0YXJ0LyBzdG9wIGFwcFxuICByLnJlcm91dGVyQ29uZmlnLnBhY2thZ2VOYW1lID0gQ09OU1RBTlRTLnBhY2thZ2VOYW1lO1xuICByLnJlcm91dGVyQ29uZmlnLmRlYnVnU2xhY2tVcmwgPSBDT05TVEFOVFMuZGVidWdTbGFja1VybDtcbiAgci5yZXJvdXRlckNvbmZpZy5zYXZlSW1hZ2VSb290ID0gQ09OU1RBTlRTLnNhdmVJbWFnZVJvb3Q7XG4gIHIucmVyb3V0ZXJDb25maWcuc3RhcnRBcHBEZWxheSA9IENPTlNUQU5UUy5zdGFydEFwcERlbGF5O1xuICByLnJlcm91dGVyQ29uZmlnLnRhc2tEZWxheSA9IENPTlNUQU5UUy50YXNrRGVsYXk7XG5cbiAgci5zY3JlZW5Db25maWcuYWN0aW9uRHVyaW5nID0gQ09OU1RBTlRTLmFjdGlvbkR1cmluZztcblxuICByLnNjcmVlbkNvbmZpZy5sb2dTY3JlZW5zaG90TWF4RmlsZXMgPSBDT05TVEFOVFMubG9nU2NyZWVuc2hvdE1heEZpbGVzO1xuICByLnNjcmVlbkNvbmZpZy5sb2dTY3JlZW5zaG90TWluSW50ZXJ2YWxJblNlYyA9IENPTlNUQU5UUy5sb2dTY3JlZW5zaG90TWluSW50ZXJ2YWxJblNlYztcblxuICByLnNjcmVlbkNvbmZpZy5yb3RhdGlvbiA9IENPTlNUQU5UUy5yb3RhdGlvbjtcbiAgci5zY3JlZW5Db25maWcuZGV2SGVpZ2h0ID0gQ09OU1RBTlRTLmRldkhlaWdodDtcbiAgci5zY3JlZW5Db25maWcuZGV2V2lkdGggPSBDT05TVEFOVFMuZGV2V2lkdGg7XG59XG5cbnJlc2V0UmVyb3V0ZXIoKTtcbmV4cG9ydCBsZXQgcmVyb3V0ZXIgPSByO1xuIiwiaW1wb3J0IHsgZGVmYXVsdCBhcyBNRDUgfSBmcm9tICdtZDUnO1xuaW1wb3J0IHsgZXhlY3V0ZUNvbW1hbmRzIH0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgcmVyb3V0ZXIgfSBmcm9tICcuL3Jlcm91dGVyJztcbmltcG9ydCB7IHNjcmlwdENvbmZpZyB9IGZyb20gJy4vY29uZmlnJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi9jb25zdGFudHMnO1xuXG5jb25zdCBJU19ERUJVRyA9IHRydWU7XG5cbi8vIGFwcCBvcmlnaW4gaW5mb1xuY29uc3QgYXBwU2Vzc2lvblJvb3QgPSBgZGF0YS9kYXRhLyR7Q09OU1RBTlRTLnBhY2thZ2VOYW1lfWA7XG5jb25zdCBhcHBSZWNvcmRSb290ID0gYC9zZGNhcmQvQW5kcm9pZC9kYXRhLyR7Q09OU1RBTlRTLnBhY2thZ2VOYW1lfS9maWxlc2A7XG5cbi8vIGNhY2hlIGluZm9cbmNvbnN0IGxpY2Vuc2VGaWxlUGF0aDogc3RyaW5nID0gJy9zZGNhcmQvUm9ib3Rtb24vbGljZW5zZS50eHQnO1xuY29uc3Qgc2NyaXB0Q2FjaGVSb290ID0gJy9zZGNhcmQvUm9ib3Rtb24vbG9naW5DYWNoZSc7XG5jb25zdCBhbmRyb2lkSWRGaWxlUGF0aCA9IGAke3NjcmlwdENhY2hlUm9vdH0vYW5kcm9pZF9pZC50eHRgO1xuY29uc3QgZ2FtZVJlY29yZENhY2hlUm9vdCA9IGAke3NjcmlwdENhY2hlUm9vdH0vZ2FtZVJlY29yZGA7XG5cbi8vIGNsb3VkIGluZm9cbmNvbnN0IGVuZHBvaW50ID0gJ3MzLnJvYm90bW9uLmFwcDo5MDAwJztcbmNvbnN0IGJ1Y2tldCA9ICdtbGItcmVjb3JkJztcblxuZXhwb3J0IGZ1bmN0aW9uIGluaXRTZXNzaW9uKCkge1xuICBpZiAoIXNjcmlwdENvbmZpZy5pc0Nsb3VkKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc29sZS5sb2coYGluaXQgc2Vzc2lvbiBzdGFydGApO1xuICBsZXQgeyBsaWNlbnNlSWQgfSA9IHNjcmlwdENvbmZpZztcbiAgbGljZW5zZUlkID0gbGljZW5zZUlkIHx8ICcnO1xuICBsZXQgbGFzdExpY2Vuc2VJZCA9IHJlYWRGaWxlKGxpY2Vuc2VGaWxlUGF0aCkgfHwgJyc7XG4gIGNvbnNvbGUubG9nKGBsYXN0TGljZW5zZUlkOiAke2xhc3RMaWNlbnNlSWR9LCBjdXJyZW50TGljZW5zZUlkOiAke2xpY2Vuc2VJZH1gKTtcblxuICBpZiAobGFzdExpY2Vuc2VJZCA9PT0gJycgJiYgbGljZW5zZUlkID09PSAnJykge1xuICAgIGNvbnNvbGUubG9nKCdpbml0U2Vzc2lvbiBjYXNlIDEnKTtcbiAgICAvLyBjYXNlIDE6IGNsZWFyIHNlc3Npb24sIHNldCByYW5kb20gYW5kcm9pZCBpZCwgc3RvcCBhcHBcbiAgICBsb2dPdXQoKTtcbiAgfSBlbHNlIGlmIChsYXN0TGljZW5zZUlkICE9PSAnJyAmJiBsaWNlbnNlSWQgPT09ICcnKSB7XG4gICAgY29uc29sZS5sb2coJ2luaXRTZXNzaW9uIGNhc2UgMicpO1xuICAgIC8vIGNhc2UgMjogY2xlYXIgc2Vzc2lvbiwgc2V0IHJhbmRvbSBhbmRyb2lkIGlkLCBzdG9wIGFwcFxuICAgIGxvZ091dCgpO1xuICB9IGVsc2UgaWYgKGxhc3RMaWNlbnNlSWQgPT09ICcnICYmIGxpY2Vuc2VJZCAhPT0gJycpIHtcbiAgICBjb25zb2xlLmxvZygnaW5pdFNlc3Npb24gY2FzZSAzJyk7XG4gICAgLy8gY2FzZSAzOiBjaGVjayBoYXMgc2Vzc2lvblxuICAgIGNvbnN0IGhhc0Nsb3VkU2Vzc2lvbiA9IGZldGNoU2Vzc2lvbigpO1xuICAgIGlmIChoYXNDbG91ZFNlc3Npb24pIHtcbiAgICAgIGNvbnNvbGUubG9nKCdoYXNDbG91ZFNlc3Npb24gZG9Mb2dpbicpO1xuICAgICAgbG9nSW4oKTtcbiAgICAgIHNsZWVwKDMwMDApO1xuICAgIH1cbiAgfSBlbHNlIGlmIChsYXN0TGljZW5zZUlkICE9PSAnJyAmJiBsaWNlbnNlSWQgIT09ICcnICYmIGxhc3RMaWNlbnNlSWQgIT09IGxpY2Vuc2VJZCkge1xuICAgIGNvbnNvbGUubG9nKCdpbml0U2Vzc2lvbiBjYXNlIDQnKTtcbiAgICAvLyBjYXNlIDQ6IGNsZWFyIHNlc3Npb24sIHNldCByYW5kb20gYW5kcm9pZCBpZCwgc3RvcCBhcHBcbiAgICBsb2dPdXQoKTtcbiAgICBjb25zdCBoYXNDbG91ZFNlc3Npb24gPSBmZXRjaFNlc3Npb24oKTtcbiAgICBpZiAoaGFzQ2xvdWRTZXNzaW9uKSB7XG4gICAgICBjb25zb2xlLmxvZygnaGFzQ2xvdWRTZXNzaW9uIGRvTG9naW4nKTtcbiAgICAgIGxvZ0luKCk7XG4gICAgICBzbGVlcCgzMDAwKTtcbiAgICB9XG4gIH0gZWxzZSBpZiAobGFzdExpY2Vuc2VJZCAhPT0gJycgJiYgbGljZW5zZUlkICE9PSAnJyAmJiBsYXN0TGljZW5zZUlkID09PSBsaWNlbnNlSWQpIHtcbiAgICBjb25zb2xlLmxvZygnaW5pdFNlc3Npb24gY2FzZSA1Jyk7XG4gICAgLy8gY2FzZSA1OiBjaGVjayBoYXMgc2Vzc2lvblxuICAgIC8vIFRPRE8gdHJ5IHRvIGRvIG5vdGhpbmdcbiAgICBjb25zdCBoYXNDbG91ZFNlc3Npb24gPSBmZXRjaFNlc3Npb24oKTtcbiAgICBpZiAoaGFzQ2xvdWRTZXNzaW9uKSB7XG4gICAgICBjb25zb2xlLmxvZygnaGFzQ2xvdWRTZXNzaW9uIGRvTG9naW4nKTtcbiAgICAgIGxvZ0luKCk7XG4gICAgICBzbGVlcCgzMDAwKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJ1Vua25vd24gY2FzZSAhISEnKTtcbiAgfVxuXG4gIC8vIHJlc3RhcnQgYXBwIGlmIG5lZWRlZFxuICBzdGFydEFwcCgpO1xuICBzbGVlcCgzMDAwKTtcbiAgLy8gY29uc29sZS5sb2coYGluaXQgc2Vzc2lvbiBkb25lYCk7XG59XG5cbmZ1bmN0aW9uIHN0YXJ0QXBwKCkge1xuICBsZXQgaXNJbkFwcCA9IHJlcm91dGVyLmNoZWNrSW5BcHAoKTtcbiAgd2hpbGUgKCFpc0luQXBwKSB7XG4gICAgcmVyb3V0ZXIuc3RhcnRBcHAoKTtcbiAgICBzbGVlcCgzMDAwKTtcbiAgICBpc0luQXBwID0gcmVyb3V0ZXIuY2hlY2tJbkFwcCgpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHN0b3BBcHAoKSB7XG4gIGxldCBpc0luQXBwID0gcmVyb3V0ZXIuY2hlY2tJbkFwcCgpO1xuICB3aGlsZSAoaXNJbkFwcCkge1xuICAgIHJlcm91dGVyLnN0b3BBcHAoKTtcbiAgICBzbGVlcCgzMDAwKTtcbiAgICBpc0luQXBwID0gcmVyb3V0ZXIuY2hlY2tJbkFwcCgpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBlbmRTZXNzaW9uKCkge1xuICBpZiAoIXNjcmlwdENvbmZpZy5pc0Nsb3VkKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxldCB7IGxpY2Vuc2VJZCB9ID0gc2NyaXB0Q29uZmlnO1xuICBsaWNlbnNlSWQgPSBsaWNlbnNlSWQgfHwgJyc7XG4gIGlmIChsaWNlbnNlSWQpIHtcbiAgICBsb2dPdXQoKTtcbiAgICBzbGVlcCgzMDAwKTtcbiAgICBjb25zb2xlLmxvZygnPT09PSBzdG9wIHNjcmlwdDogaGFzIGxpY2Vuc2VJZDsgY2xvc2UgYXBwIGFuZCBjbGVhciBzZXNzaW9uJyk7XG4gIH0gZWxzZSB7XG4gICAgY29uc29sZS5sb2coJz09PT0gc3RvcCBzY3JpcHQ6IG5vIGxpY2Vuc2VJZDsgbm90IHRvIGNsb3NlIGFwcCBmb3IgbGV0IG5ldyB1c2VyIGxvZ2luJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwbG9hZFNlc3Npb24oKSB7XG4gIGlmICghc2NyaXB0Q29uZmlnLmlzQ2xvdWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbGV0IHsgeHJvYm90bW9uUzNLZXksIHhyb2JvdG1vblMzVG9rZW4sIGxpY2Vuc2VJZCB9ID0gc2NyaXB0Q29uZmlnO1xuICBsaWNlbnNlSWQgPSBsaWNlbnNlSWQgfHwgJyc7XG5cbiAgaWYgKCEoeHJvYm90bW9uUzNLZXkgJiYgeHJvYm90bW9uUzNUb2tlbiAmJiBsaWNlbnNlSWQpKSB7XG4gICAgY29uc29sZS5sb2coJ2ZhaWxlZCB1cGxvYWQ7IHJlcXVpcmVkIGtleSBpcyBlbXB0eScpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNvbnNvbGUubG9nKGB1cGxvYWQgc2Vzc2lvbiAke2xpY2Vuc2VJZH0gc3RhcnRgKTtcbiAgZXhlY3V0ZUNvbW1hbmRzKFxuICAgIC8vIHJlbW92ZSB0bXAgZmlsZSByb290XG4gICAgYHJtIC1yZiAke3NjcmlwdENhY2hlUm9vdH1gLFxuICAgIGBybSAtZiAke3NjcmlwdENhY2hlUm9vdH0uZ3pgLFxuXG4gICAgLy8gY29weSBsb2NhbCBzZXNzaW9uIHRvIHRtcCBmaWxlIHJvb3RcbiAgICBgbWtkaXIgLXAgJHtzY3JpcHRDYWNoZVJvb3R9L2AsXG4gICAgYGNwIC1yICR7YXBwU2Vzc2lvblJvb3R9L2ZpbGVzICR7c2NyaXB0Q2FjaGVSb290fS9gLFxuICAgIGBjcCAtciAke2FwcFNlc3Npb25Sb290fS9zaGFyZWRfcHJlZnMgJHtzY3JpcHRDYWNoZVJvb3R9L2AsXG5cbiAgICAvLyBybSBhZCBmaWxlc1xuICAgIGBybSAtcmYgJHtzY3JpcHRDYWNoZVJvb3R9L2ZpbGVzL2FsYFxuICApO1xuICBjb3B5R2FtZVJlY29yZFRvQ2FjaGUoKTtcblxuICAvLyBjb3B5IGN1cnJlbnQgYW5kcm9pZCBpZCB0byB0bXAgZmlsZSByb290XG4gIGNvbnN0IGFuZHJvaWRJZCA9IGV4ZWN1dGUoJ0FORFJPSURfREFUQT0vZGF0YSBzZXR0aW5ncyBnZXQgc2VjdXJlIGFuZHJvaWRfaWQnKTtcbiAgY29uc29sZS5sb2coYHVwbG9hZCBhbmRyb2lkSWQ6ICR7YW5kcm9pZElkfWApO1xuICB3cml0ZUZpbGUoYW5kcm9pZElkRmlsZVBhdGgsIGFuZHJvaWRJZCk7XG5cbiAgdGFyZ3ooYCR7c2NyaXB0Q2FjaGVSb290fS5nemAsIGAke3NjcmlwdENhY2hlUm9vdH1gKTtcblxuICAvLyB1cGxvYWQgc2Vzc2lvblxuICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuICBjb25zdCBzZXNzaW9uRmlsZU5hbWUgPSBgbG9naW5DYWNoZS8ke2xpY2Vuc2VJZH0uZ3pgO1xuICBjb25zdCBzaXplT3JFcnJvciA9IHMzVXBsb2FkRmlsZShcbiAgICBgJHtzY3JpcHRDYWNoZVJvb3R9Lmd6YCxcbiAgICBzZXNzaW9uRmlsZU5hbWUsXG4gICAgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScsXG4gICAgZW5kcG9pbnQsXG4gICAgYnVja2V0LFxuICAgIHhyb2JvdG1vblMzS2V5LFxuICAgIHhyb2JvdG1vblMzVG9rZW4sXG4gICAgJycsXG4gICAgZmFsc2VcbiAgKTtcbiAgY29uc29sZS5sb2coYHVwbG9hZCBzZXNzaW9uIHRvICR7ZW5kcG9pbnR9IGZpbmlzaC4gc2l6ZU9yRXJyb3IgJHtzaXplT3JFcnJvcn07IHVzZWRUaW1lICR7RGF0ZS5ub3coKSAtIG5vd31gKTtcblxuICAvLyByZW1vdmUgdG1wIGZpbGUgcm9vdFxuICBleGVjdXRlQ29tbWFuZHMoYHJtIC1yZiAke3NjcmlwdENhY2hlUm9vdH1gLCBgcm0gLWYgJHtzY3JpcHRDYWNoZVJvb3R9Lmd6YCk7XG59XG5cbmZ1bmN0aW9uIGxvZ091dCgpIHtcbiAgY29uc29sZS5sb2coYHNjcmlwdCBsb2dvdXQgc3RhcnRgKTtcbiAgLy8gc3RvcCBhcHBcbiAgc3RvcEFwcCgpO1xuICBjb25zb2xlLmxvZygnYXBwIGlzIHN0b3BwZWQsIGNsZWFyIHNlc3Npb24gc3RhcnQnKTtcbiAgY2xlYXJTZXNzaW9uKCk7XG4gIHdyaXRlRmlsZShsaWNlbnNlRmlsZVBhdGgsICcnKTtcbiAgY29uc29sZS5sb2coJ3NjcmlwdCBsb2dvdXQgZG9uZScpO1xufVxuXG5mdW5jdGlvbiBsb2dJbigpIHtcbiAgbGV0IHsgbGljZW5zZUlkIH0gPSBzY3JpcHRDb25maWc7XG4gIGxpY2Vuc2VJZCA9IGxpY2Vuc2VJZCB8fCAnJztcbiAgY29uc29sZS5sb2coYHNjcmlwdCBsb2dpbiBzdGFydCwgc3RhcnRBcHAgLT4gc3RvcEFwcCAtPiBzZXRTZXNzaW9uYCk7XG4gIC8vIHN0YXJ0IGFwcCwgc2Vzc2lvbiBvciBpbWFnZSBkYXRhIG1heSBiZSBvbGRcbiAgc3RhcnRBcHAoKTtcbiAgc2xlZXAoMTBfMDAwKTtcbiAgLy8gc3RvcCBhcHBcbiAgc3RvcEFwcCgpO1xuICBjb25zb2xlLmxvZygnYXBwIGlzIHN0b3BwZWQsIHNldCBzZXNzaW9uIHN0YXJ0Jyk7XG4gIHNldFNlc3Npb24oKTtcbiAgd3JpdGVGaWxlKGxpY2Vuc2VGaWxlUGF0aCwgbGljZW5zZUlkKTtcbiAgY29uc29sZS5sb2coYHNjcmlwdCBsb2dpbiBkb25lYCk7XG59XG5cbmZ1bmN0aW9uIGZldGNoU2Vzc2lvbigpOiBib29sZWFuIHtcbiAgbGV0IHsgeHJvYm90bW9uUzNLZXksIHhyb2JvdG1vblMzVG9rZW4sIGxpY2Vuc2VJZCB9ID0gc2NyaXB0Q29uZmlnO1xuICBsaWNlbnNlSWQgPSBsaWNlbnNlSWQgfHwgJyc7XG4gIGlmICghKHhyb2JvdG1vblMzS2V5ICYmIHhyb2JvdG1vblMzVG9rZW4gJiYgbGljZW5zZUlkKSkge1xuICAgIGNvbnNvbGUubG9nKCdmZXRjaCBmYWlsZWQ6IHJlcXVpcmVkIGtleSBpcyBlbXB0eScpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNvbnNvbGUubG9nKGBmZXRjaFNlc3Npb24gc3RhcnQgJHtsaWNlbnNlSWR9YCk7XG4gIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG5cbiAgZXhlY3V0ZUNvbW1hbmRzKFxuICAgIC8vIHJlbW92ZSBvbGQgZmlsZXNcbiAgICBgcm0gLXJmICR7c2NyaXB0Q2FjaGVSb290fWAsXG4gICAgYHJtIC1mICR7c2NyaXB0Q2FjaGVSb290fS5nemAsXG5cbiAgICAvLyBjcmVhdGUgdG1wIGZpbGUgcm9vdFxuICAgIGBta2RpciAtcCAke3NjcmlwdENhY2hlUm9vdH1gXG4gICk7XG5cbiAgY29uc3Qgc2Vzc2lvbkZpbGVOYW1lID0gYGxvZ2luQ2FjaGUvJHtsaWNlbnNlSWR9Lmd6YDtcbiAgY29uc3QgcmVzdWx0T3JFcnJvciA9IHMzRG93bmxvYWRGaWxlKGAke3NjcmlwdENhY2hlUm9vdH0uZ3pgLCBzZXNzaW9uRmlsZU5hbWUsIGVuZHBvaW50LCBidWNrZXQsIHhyb2JvdG1vblMzS2V5LCB4cm9ib3Rtb25TM1Rva2VuLCAnJywgZmFsc2UpO1xuICBpZiAocmVzdWx0T3JFcnJvciAhPT0gdHJ1ZSkge1xuICAgIGNvbnNvbGUubG9nKGBmZXRjaFNlc3Npb24gZmFpbGVkICR7cmVzdWx0T3JFcnJvcn1gKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc29sZS5sb2coYERvd25sb2FkIHNlc3Npb24gZnJvbSAke2VuZHBvaW50fSBmaW5pc2guIHVzZWRUaW1lYCwgRGF0ZS5ub3coKSAtIG5vdywgbGljZW5zZUlkLCByZXN1bHRPckVycm9yKTtcbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHNldFNlc3Npb24oKSB7XG4gIC8vIGNsZWFyIGFwcCBzZXNzaW9uIHRvIGF2b2lkIGNhbm5vdCBvdmVyd3JpdGVcbiAgY29uc3QgZ2FtZVJlY29yZEZpbGVOYW1lID0gZ2V0R2FtZVJlY29yZEZpbGVOYW1lKCkgfHwgJ05PVF9FWElTVF9SRUNPUkQnO1xuXG4gIGNvbnNvbGUubG9nKGBybSBhcHAgc2Vzc2lvbiBmaWxlc2ApO1xuICBleGVjdXRlQ29tbWFuZHMoXG4gICAgLy9cbiAgICBgcm0gLXJmICR7YXBwU2Vzc2lvblJvb3R9L2ZpbGVzYCxcbiAgICBgcm0gLXJmICR7YXBwU2Vzc2lvblJvb3R9L3NoYXJlZF9wcmVmc2AsXG4gICAgYHJtIC1yZiAke2FwcFJlY29yZFJvb3R9LyR7Z2FtZVJlY29yZEZpbGVOYW1lfWBcbiAgKTtcblxuICAvLyB1bnRhcmd6IGNsb3VkIHNlc3Npb24gYW5kIG92ZXJ3cml0ZSBhcHAgc2Vzc2lvblxuICBjb25zb2xlLmxvZyhgc2V0IHNlc3Npb24gc3RhcnRgKTtcbiAgdW50YXJneihgJHtzY3JpcHRDYWNoZVJvb3R9Lmd6YCk7XG4gIGV4ZWN1dGVDb21tYW5kcyhcbiAgICBgY3AgLXIgJHtzY3JpcHRDYWNoZVJvb3R9L2ZpbGVzICR7YXBwU2Vzc2lvblJvb3R9L2AsXG4gICAgYGNwIC1yICR7c2NyaXB0Q2FjaGVSb290fS9zaGFyZWRfcHJlZnMgJHthcHBTZXNzaW9uUm9vdH0vYCxcbiAgICBgY3AgLXIgJHtzY3JpcHRDYWNoZVJvb3R9L2dhbWVSZWNvcmQvKiAke2FwcFJlY29yZFJvb3R9L2AsXG5cbiAgICBgY2htb2QgLVIgNzc3ICR7YXBwU2Vzc2lvblJvb3R9L2ZpbGVzYCxcbiAgICBgY2htb2QgLVIgNzc3ICR7YXBwU2Vzc2lvblJvb3R9L3NoYXJlZF9wcmVmc2AsXG4gICAgYGNobW9kIC1SIDc3NyAke2FwcFJlY29yZFJvb3R9YFxuICApO1xuICBjb25zb2xlLmxvZyhgY29weSBjYWNoZSBzZXNzaW9uIHRvIGFwcCBzZXNzaW9uIGRvbmVgKTtcbiAgc2V0QW5kcm9pZElkKCdjbG91ZCcpO1xuICBzbGVlcCgyMDAwKTtcbiAgY29uc29sZS5sb2coJ3NldCBzZXNzaW9uIGRvbmUnKTtcbn1cblxuZnVuY3Rpb24gY2xlYXJTZXNzaW9uKCkge1xuICBjb25zb2xlLmxvZyhgY2xlYXIgc2Vzc2lvbiBzdGFydGApO1xuICBzZXRBbmRyb2lkSWQoJ3JhbmRvbScpO1xuICBjb25zdCBnYW1lUmVjb3JkRmlsZU5hbWUgPSBnZXRHYW1lUmVjb3JkRmlsZU5hbWUoKSB8fCAnTk9UX0VYSVNUX1JFQ09SRCc7XG4gIGNvbnNvbGUubG9nKGBybSBhcHAgc2Vzc2lvbiBmaWxlcyAmIGNhY2hlIHNlc3Npb24gZmlsZXNgKTtcbiAgZXhlY3V0ZUNvbW1hbmRzKFxuICAgIGBybSAtcmYgJHtzY3JpcHRDYWNoZVJvb3R9Lmd6YCxcbiAgICBgcm0gLXJmICR7c2NyaXB0Q2FjaGVSb290fWAsXG5cbiAgICBgcm0gLXJmICR7YXBwU2Vzc2lvblJvb3R9L2ZpbGVzYCxcbiAgICBgcm0gLXJmICR7YXBwU2Vzc2lvblJvb3R9L3NoYXJlZF9wcmVmc2AsXG4gICAgYHJtIC1yZiAke2FwcFJlY29yZFJvb3R9LyR7Z2FtZVJlY29yZEZpbGVOYW1lfWBcbiAgKTtcblxuICBzbGVlcCgyMDAwKTtcbiAgY29uc29sZS5sb2coJ2NsZWFyIHNlc3Npb24gZG9uZScpO1xufVxuXG5mdW5jdGlvbiBzZXRBbmRyb2lkSWQoc291cmNlOiAncmFuZG9tJyB8ICdjbG91ZCcpIHtcbiAgbGV0IFtvcmlBbmRyb2lkSWRdID0gZXhlY3V0ZUNvbW1hbmRzKCdBTkRST0lEX0RBVEE9L2RhdGEgc2V0dGluZ3MgZ2V0IHNlY3VyZSBhbmRyb2lkX2lkJyk7XG4gIGxldCBhbmRyb2lkSWQgPSBNRDUoYCR7RGF0ZS5ub3coKX0ke29yaUFuZHJvaWRJZH1gKS5zdWJzdHJpbmcoMCwgMTYpO1xuICBpZiAoc291cmNlID09PSAnY2xvdWQnKSB7XG4gICAgYW5kcm9pZElkID0gcmVhZEZpbGUoYW5kcm9pZElkRmlsZVBhdGgpIHx8IGFuZHJvaWRJZDtcbiAgfVxuICBleGVjdXRlQ29tbWFuZHMoJ0FORFJPSURfREFUQT0vZGF0YSBzZXR0aW5ncyBwdXQgc2VjdXJlIGFuZHJvaWRfaWQgJyArIGFuZHJvaWRJZCk7XG4gIGNvbnNvbGUubG9nKGBzZXQgYW5kcm9pZElkOyAke29yaUFuZHJvaWRJZH0gc2V0IHRvLT4gJHthbmRyb2lkSWR9YCk7XG59XG5cbmZ1bmN0aW9uIGNvcHlHYW1lUmVjb3JkVG9DYWNoZSgpIHtcbiAgY29uc3QgZmlsZU5hbWUgPSBnZXRHYW1lUmVjb3JkRmlsZU5hbWUoKTtcbiAgaWYgKCFmaWxlTmFtZSkge1xuICAgIGNvbnNvbGUubG9nKCdjYW5ub3QgY29weSBnYW1lIHJlY29yZCBmaWxlIGJjIG5vIGZvdW5kJyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGV4ZWN1dGVDb21tYW5kcyhgbWtkaXIgLXAgJHtnYW1lUmVjb3JkQ2FjaGVSb290fWAsIGBjcCAtciAke2FwcFJlY29yZFJvb3R9LyR7ZmlsZU5hbWV9ICR7Z2FtZVJlY29yZENhY2hlUm9vdH0vJHtmaWxlTmFtZX0vYCk7XG4gIGNvbnNvbGUubG9nKGBjb3B5IGdhbWUgcmVjb3JkIGZpbGUgZG9uZTogJHtnYW1lUmVjb3JkQ2FjaGVSb290fS8ke2ZpbGVOYW1lfWApO1xufVxuXG5mdW5jdGlvbiBnZXRHYW1lUmVjb3JkRmlsZU5hbWUoKSB7XG4gIGNvbnN0IGZpbGVzID0gZXhlY3V0ZUNvbW1hbmRzKGBscyAke2FwcFJlY29yZFJvb3R9YClbMF0uc3BsaXQoJ1xcbicpO1xuICBmb3IgKGxldCBmaWxlTmFtZSBvZiBmaWxlcykge1xuICAgIGlmIChmaWxlTmFtZS5sZW5ndGggPT09IDMyKSB7XG4gICAgICBmaWxlTmFtZSA9IGZpbGVOYW1lLnRyaW0oKTtcbiAgICAgIGNvbnNvbGUubG9nKGBnYW1lIHJlY29yZCBmaWxlIGZvdW5kZWQ6ICR7ZmlsZU5hbWV9YCk7XG4gICAgICByZXR1cm4gZmlsZU5hbWU7XG4gICAgfVxuICB9XG4gIHJldHVybiAnJztcbn1cblxuZnVuY3Rpb24gY29tcGFyZUZpbGVzRm9yTG9nKGZpbGVzQWZ0ZXI6IHN0cmluZ1tdLCBmaWxlc0JlZm9yZTogc3RyaW5nW10pIHtcbiAgaWYgKCFJU19ERUJVRykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBjb3VudE1hcDogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHt9O1xuICBmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXNBZnRlcikge1xuICAgIGNvbnN0IGNvdW50ID0gY291bnRNYXBbZmlsZV0gfHwgMDtcbiAgICBjb3VudE1hcFtmaWxlXSA9IGNvdW50ICsgMTtcbiAgfVxuICBmb3IgKGNvbnN0IGZpbGUgb2YgZmlsZXNCZWZvcmUpIHtcbiAgICBjb25zdCBjb3VudCA9IGNvdW50TWFwW2ZpbGVdIHx8IDA7XG4gICAgY291bnRNYXBbZmlsZV0gPSBjb3VudCAtIDE7XG4gIH1cblxuICBjb25zdCBjb21tb25GaWxlczogc3RyaW5nW10gPSBbXTtcbiAgY29uc3QgYmVmb3JlTm90SGFzRmlsZXM6IHN0cmluZ1tdID0gW107XG4gIGNvbnN0IGFmdGVyTm90SGFzRmlsZXM6IHN0cmluZ1tdID0gW107XG4gIGZvciAoY29uc3QgZiBvZiBPYmplY3Qua2V5cyhjb3VudE1hcCkpIHtcbiAgICBjb25zdCBjb3VudCA9IGNvdW50TWFwW2ZdO1xuICAgIHN3aXRjaCAoY291bnQpIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgICAgY29tbW9uRmlsZXMucHVzaChmKTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDE6XG4gICAgICAgIGJlZm9yZU5vdEhhc0ZpbGVzLnB1c2goZik7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAtMTpcbiAgICAgICAgYWZ0ZXJOb3RIYXNGaWxlcy5wdXNoKGYpO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBjb3VudCcsIGNvdW50KTtcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIGNvbnNvbGUubG9nKGBjb21tb25GaWxlczpcXG4ke2NvbW1vbkZpbGVzLmpvaW4oJ1xcbicpfWApO1xuICBjb25zb2xlLmxvZyhgYmVmb3JlTm90SGFzRmlsZXM6XFxuJHtiZWZvcmVOb3RIYXNGaWxlcy5qb2luKCdcXG4nKX1gKTtcbiAgY29uc29sZS5sb2coYGFmdGVyTm90SGFzRmlsZXM6XFxuJHthZnRlck5vdEhhc0ZpbGVzLmpvaW4oJ1xcbicpfWApO1xufVxuIiwiaW1wb3J0IHsgcmVyb3V0ZXIsIHJlc2V0UmVyb3V0ZXIgfSBmcm9tICcuL3Jlcm91dGVyJztcbmltcG9ydCAqIGFzIEV2ZW50U2VuZGVyIGZyb20gJy4vZXZlbnRTZW5kZXInO1xuaW1wb3J0IHsgbG9nZ2VyIH0gZnJvbSAnLi9sb2dnZXInO1xuaW1wb3J0ICogYXMgU2Vzc2lvbiBmcm9tICcuL3Nlc3Npb24nO1xuaW1wb3J0ICogYXMgQ29uZmlnIGZyb20gJy4vY29uZmlnJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi9jb25zdGFudHMnO1xuXG5pbXBvcnQgeyBleGVjdXRlQ29tbWFuZHMgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBjb25zdCBsZWFndWVHYW1lID0ge1xuICB0cnlFbnRlckdhbWVDbnRzOiAwLFxuICBuZWVkUmVzZXRQcm9ncmVzczogZmFsc2UsXG4gIG5lZWRSZXNldFByb2dyZXNzUmVhc29uOiAnJyxcbiAgbGFzdENoZWNrUG93ZXJTYXZlQXQ6IDAsXG4gIHBvd2VyU2F2ZUNvbG9yQ291bnQ6IHt9LFxuICBuZWVkU2V0RHJpbms6IHRydWUsXG59O1xuZXhwb3J0IGNvbnN0IHJhbmtHYW1lID0ge1xuICBuZWVkU2V0RHJpbms6IHRydWUsXG59O1xuXG5leHBvcnQgbGV0IGlzV2FpdGluZ0xvZ2luID0gZmFsc2U7XG5leHBvcnQgbGV0IGhhc1Nlc3Npb24gPSBmYWxzZTtcbmxldCBsYXN0VXBsb2FkU2Vzc2lvbkF0ID0gMDtcbmxldCB1bmV4cGVjdGVkTmV0d29ya0Vycm9yVGltZXN0YW1wczogbnVtYmVyW10gPSBbXTtcblxuY29uc3QgZnJlZVVzZXJHYW1lRHVyYXRpb25Db3VudGVyID0gKCgpID0+IHtcbiAgbGV0IHN0YXJ0QXQgPSBEYXRlLm5vdygpO1xuICBjb25zdCByZXNldCA9ICgpID0+IHtcbiAgICBzdGFydEF0ID0gRGF0ZS5ub3coKTtcbiAgICBjb25zb2xlLmxvZygncmVzZXQgZnJlZSB1c2VyIGdhbWUgZHVyYXRpb24gY291bnRlcicpO1xuICB9O1xuICBjb25zdCBjaGVjayA9ICgpID0+IHtcbiAgICBjb25zdCByZW1haW5NcyA9IENPTlNUQU5UUy5GUkVFX1VTRVJfTUFYX0dBTUVfRFVSSU5HX01TIC0gKERhdGUubm93KCkgLSBzdGFydEF0KTtcbiAgICBpZiAocmVtYWluTXMgPD0gMCkge1xuICAgICAgY29uc29sZS5sb2coJ2ZyZWUgdXNlciBnYW1lIGR1cmF0aW9uIHJlYWNoZWQnKTtcbiAgICAgIHJlcm91dGVyLnN0b3AoKTtcbiAgICAgIHRocm93IG5ldyBFcnJvcignZnJlZSB1c2VyIGdhbWUgZHVyYXRpb24gcmVhY2hlZCcpO1xuICAgIH1cbiAgICBjb25zb2xlLmxvZyhgZnJlZSB1c2VyIGdhbWUgZHVyYXRpb24gcmVtYWluOiAke3JlbWFpbk1zIC8gQ09OU1RBTlRTLm1pbnV0ZUluTXN9IG1pbnV0ZXNgKTtcbiAgfTtcbiAgcmV0dXJuIHsgcmVzZXQsIGNoZWNrIH07XG59KSgpO1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChqc29uQ29uZmlnOiBhbnkpIHtcbiAgQ29uZmlnLnNldChqc29uQ29uZmlnKTtcbiAgaWYgKENvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCkge1xuICAgIFNlc3Npb24uaW5pdFNlc3Npb24oKTtcbiAgICBleGVjdXRlQ29tbWFuZHMoJ3BtIGRpc2FibGUtdXNlciBjb20uYW5kcm9pZC5pbnB1dG1ldGhvZC5sYXRpbicpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByZXNldEJlZm9yZUFkZFJvdXRlQW5kVGFzaygpIHtcbiAgcmVzZXRSZXJvdXRlcigpO1xuICByZXJvdXRlci5kZWJ1ZyA9IGZhbHNlOyAvLyBDb25maWcuY29uZmlnLmlzQ2xvdWQgfHwgQ29uZmlnLmNvbmZpZy5pc0RldiB8fCBmYWxzZTtcbiAgcmVyb3V0ZXIucmVyb3V0ZXJDb25maWcuc3RyaWN0TW9kZSA9ICEoQ29uZmlnLnNjcmlwdENvbmZpZy5pc1Byb2R1Y3Rpb24gPz8gZmFsc2UpO1xuICByZXJvdXRlci5yZXJvdXRlckNvbmZpZy5hdXRvTGF1bmNoQXBwID0gQ29uZmlnLnNjcmlwdENvbmZpZy5oYXNDb29sRmVhdHVyZSB8fCBmYWxzZTtcbiAgcmVyb3V0ZXIucmVyb3V0ZXJDb25maWcuZGV2aWNlSWQgPSBDb25maWcuc2NyaXB0Q29uZmlnLmRldmljZUlkIHx8ICcnO1xuICByZXJvdXRlci5yZXJvdXRlckNvbmZpZy5pbnN0YW5jZUlkID0gQ29uZmlnLnNjcmlwdENvbmZpZy5saWNlbnNlSWQgfHwgJyc7XG4gIHJlcm91dGVyLnJlcm91dGVyQ29uZmlnLnNhdmVNYXRjaGVkU2NyZWVuID0gIShDb25maWcuc2NyaXB0Q29uZmlnLmlzUHJvZHVjdGlvbiA/PyBmYWxzZSk7XG5cbiAgbGVhZ3VlR2FtZS50cnlFbnRlckdhbWVDbnRzID0gMDtcbiAgbGVhZ3VlR2FtZS5uZWVkUmVzZXRQcm9ncmVzcyA9IGZhbHNlO1xuICBsZWFndWVHYW1lLm5lZWRSZXNldFByb2dyZXNzUmVhc29uID0gJyc7XG4gIGxlYWd1ZUdhbWUubGFzdENoZWNrUG93ZXJTYXZlQXQgPSAwO1xuICBsZWFndWVHYW1lLnBvd2VyU2F2ZUNvbG9yQ291bnQgPSB7fTtcbiAgbGVhZ3VlR2FtZS5uZWVkU2V0RHJpbmsgPSB0cnVlO1xuICByYW5rR2FtZS5uZWVkU2V0RHJpbmsgPSB0cnVlO1xuICBpc1dhaXRpbmdMb2dpbiA9IGZhbHNlO1xuICBsYXN0VXBsb2FkU2Vzc2lvbkF0ID0gMDtcbiAgaGFzU2Vzc2lvbiA9IGZhbHNlO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RhcnQoKSB7XG4gIGlmIChDb25maWcuc2NyaXB0Q29uZmlnLmlzRGV2KSB7XG4gICAgY29uc29sZS5sb2coYGluaXQgY29uZmlnOiAke0pTT04uc3RyaW5naWZ5KENvbmZpZy5zY3JpcHRDb25maWcpfWApO1xuICB9XG4gIGlmIChDb25maWcuc2NyaXB0Q29uZmlnLmlzRnJlZVVzZXIpIHtcbiAgICBmcmVlVXNlckdhbWVEdXJhdGlvbkNvdW50ZXIucmVzZXQoKTtcbiAgfVxuICByZXJvdXRlci5zdGFydChDT05TVEFOVFMucGFja2FnZU5hbWUpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZW5kKCkge1xuICBpZiAoQ29uZmlnLnNjcmlwdENvbmZpZy5pc0Nsb3VkKSB7XG4gICAgU2Vzc2lvbi5lbmRTZXNzaW9uKCk7XG4gIH1cbiAgcmVyb3V0ZXIuc3RvcCgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25SdW5uaW5nKHVzZUludGVydmFsOiBib29sZWFuID0gZmFsc2UpIHtcbiAgKENvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCB8fCBDb25maWcuc2NyaXB0Q29uZmlnLmlzRGV2KSAmJiBFdmVudFNlbmRlci5ydW5uaW5nKHVzZUludGVydmFsKTtcbiAgaWYgKENvbmZpZy5zY3JpcHRDb25maWcuaXNGcmVlVXNlcikge1xuICAgIGZyZWVVc2VyR2FtZUR1cmF0aW9uQ291bnRlci5jaGVjaygpO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkxvZ2luUGFnZShuZWVkVXNlcklucHV0OiBib29sZWFuID0gZmFsc2UpIHtcbiAgaGFzU2Vzc2lvbiA9IGZhbHNlO1xuICBpZiAoIShDb25maWcuc2NyaXB0Q29uZmlnLmlzQ2xvdWQgfHwgQ29uZmlnLnNjcmlwdENvbmZpZy5pc0RldikpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgLy8gdXNlIGludGVydmFsIGluIHJ1bm5pbmdcbiAgRXZlbnRTZW5kZXIucnVubmluZyh0cnVlKTtcblxuICBpZiAobmVlZFVzZXJJbnB1dCkge1xuICAgIGlzV2FpdGluZ0xvZ2luID0gdHJ1ZTtcbiAgICBFdmVudFNlbmRlci5sb2dpbklucHV0aW5nKCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTG9naW5TdWNjZXNzKCkge1xuICBoYXNTZXNzaW9uID0gdHJ1ZTtcbiAgaXNXYWl0aW5nTG9naW4gPSBmYWxzZTtcbiAgaWYgKCEoQ29uZmlnLnNjcmlwdENvbmZpZy5pc0Nsb3VkIHx8IENvbmZpZy5zY3JpcHRDb25maWcuaXNEZXYpKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIEV2ZW50U2VuZGVyLmxvZ2luU3VjY2VzcygpO1xuICBFdmVudFNlbmRlci5wbGF5aW5nKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkxhdW5jaGluZygpIHtcbiAgaGFzU2Vzc2lvbiA9IGZhbHNlO1xuICBpc1dhaXRpbmdMb2dpbiA9IGZhbHNlO1xuICBsYXN0VXBsb2FkU2Vzc2lvbkF0ID0gMDtcbiAgbGVhZ3VlR2FtZS50cnlFbnRlckdhbWVDbnRzO1xuICBsZWFndWVHYW1lLm5lZWRSZXNldFByb2dyZXNzO1xuICBsZWFndWVHYW1lLm5lZWRSZXNldFByb2dyZXNzUmVhc29uO1xuICBsZWFndWVHYW1lLmxhc3RDaGVja1Bvd2VyU2F2ZUF0ID0gMDtcbiAgbGVhZ3VlR2FtZS5wb3dlclNhdmVDb2xvckNvdW50ID0ge307XG4gIGxlYWd1ZUdhbWUubmVlZFNldERyaW5rID0gdHJ1ZTtcbiAgcmFua0dhbWUubmVlZFNldERyaW5rID0gdHJ1ZTtcbiAgKENvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCB8fCBDb25maWcuc2NyaXB0Q29uZmlnLmlzRGV2KSAmJiBFdmVudFNlbmRlci5sYXVuY2hpbmcoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTG9hZGluZygpIHtcbiAgaXNXYWl0aW5nTG9naW4gPSBmYWxzZTtcbiAgaWYgKENvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCB8fCBDb25maWcuc2NyaXB0Q29uZmlnLmlzRGV2KSB7XG4gICAgRXZlbnRTZW5kZXIubGF1bmNoaW5nKCk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uVW5leHBlY3RlZE5ldHdvcmtFcnJvcigpIHtcbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcblxuICAvLyBybSBhbGwgb2xkIHRpbWVzdGFtcCBpZiBsYXN0IG9uZSBoYXBwZW5lZCAyIGhvdXJzIGJlZm9yZVxuICBjb25zdCBiZWZvcmUySHIgPSBub3cgLSBDT05TVEFOVFMuaG91ckluTXMgKiAyO1xuICBsZXQgY250ID0gdW5leHBlY3RlZE5ldHdvcmtFcnJvclRpbWVzdGFtcHMubGVuZ3RoO1xuICBpZiAoY250ID4gMCAmJiB1bmV4cGVjdGVkTmV0d29ya0Vycm9yVGltZXN0YW1wc1tjbnQgLSAxXSA8IGJlZm9yZTJIcikge1xuICAgIHVuZXhwZWN0ZWROZXR3b3JrRXJyb3JUaW1lc3RhbXBzID0gW107XG4gICAgY250ID0gMDtcbiAgfVxuXG4gIC8vIGFkZCBuZXcgdGltZXN0YW1wXG4gIHVuZXhwZWN0ZWROZXR3b3JrRXJyb3JUaW1lc3RhbXBzLnB1c2gobm93KTtcbiAgY250Kys7XG5cbiAgLy8gbG9nXG4gIGNvbnN0IG1zZyA9IGB1bnN0YWJsZSBuZXR3b3JrIGVycm9yIGhhcHBlbmVkLCBjbnQgJHtjbnR9YDtcbiAgY29uc29sZS5sb2cobXNnKTtcblxuICAvLyBvbmx5IGRvIGFueXRoaW5nIGlmIGl0IGhhcHBlbmVkIDN4IHRpbWVzIGFjY3VtdWxhdGl2ZWx5XG4gIGlmIChjbnQgJSAzKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKGNudCA+PSAzMCkge1xuICAgIGNvbnN0IGFjdGlvbiA9ICd1bnN0YWJsZSBuZXR3b3JrIGVycm9yID4gMzAgdGltZXMsIHRyeSByZXNldCBsZWFndWUgcHJvZ3Jlc3MnO1xuICAgIGNvbnNvbGUubG9nKGFjdGlvbik7XG4gICAgb25OZWVkUmVzZXRMZWFndWVFcnJvcihhY3Rpb24pO1xuICAgIGxvZ2dlci5lcnJvcignJywgbXNnICsgJywgJyArIGFjdGlvbik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgY29uc3QgYWN0aW9uID0gJ3Vuc3RhYmxlIG5ldHdvcmsgZXJyb3IgPiAzIHRpbWVzLCByZXN0YXJ0IGFwcCc7XG4gIGNvbnNvbGUubG9nKGFjdGlvbik7XG4gIGlmIChjbnQgPj0gNSkge1xuICAgIGxvZ2dlci5lcnJvcignJywgbXNnICsgJywgJyArIGFjdGlvbik7XG4gIH1cbiAgcmVyb3V0ZXIucmVzdGFydEFwcCgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb25GcmVlemVkRXJyb3IocGFnZU5hbWU6IHN0cmluZyA9ICd1bmtub3duJykge1xuICBjb25zdCBtc2cgPSBgcmVzdGFydCBhcHAgYmMgZnJlZXplIGF0ICR7cGFnZU5hbWV9YDtcbiAgY29uc29sZS5sb2cobXNnKTtcbiAgbG9nZ2VyLndhcm5pbmcoJycsIG1zZyk7XG4gIHJlcm91dGVyLnJlc3RhcnRBcHAoKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTmVlZFJlc2V0TGVhZ3VlRXJyb3IocmVhc29uOiBzdHJpbmcgPSAndW5rbm93bicpIHtcbiAgbGVhZ3VlR2FtZS5uZWVkUmVzZXRQcm9ncmVzcyA9IHRydWU7XG4gIGxlYWd1ZUdhbWUubmVlZFJlc2V0UHJvZ3Jlc3NSZWFzb24gPSByZWFzb247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkZpbmlzaFJlc2V0TGVhZ3VlUHJvZ3Jlc3MoKSB7XG4gIGNvbnN0IG1zZyA9IGByZXNldCBsZWFndWUgcHJvZ3Jlc3MgZG9uZSwgcmVhc29uOiAke2xlYWd1ZUdhbWUubmVlZFJlc2V0UHJvZ3Jlc3NSZWFzb259YDtcbiAgY29uc29sZS5sb2cobXNnKTtcbiAgbG9nZ2VyLmVycm9yKCcnLCBtc2cpO1xuICBsZWFndWVHYW1lLm5lZWRSZXNldFByb2dyZXNzID0gZmFsc2U7XG4gIGxlYWd1ZUdhbWUubmVlZFJlc2V0UHJvZ3Jlc3NSZWFzb24gPSAnJztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrVXBsb2FkU2Vzc2lvbigpIHtcbiAgLy8gb25seSB1cGxvYWQgc2Vzc2lvbiB3aGVuIGlzIHBsYXlpbmdcbiAgaWYgKCFDb25maWcuc2NyaXB0Q29uZmlnLmlzQ2xvdWQgfHwgIWhhc1Nlc3Npb24pIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgaWYgKG5vdyAtIGxhc3RVcGxvYWRTZXNzaW9uQXQgPCBDT05TVEFOVFMudXBsb2FkU2Vzc2lvbkludGVydmFsKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGxhc3RVcGxvYWRTZXNzaW9uQXQgPSBub3c7XG4gIGNvbnNvbGUubG9nKCd1cGxvYWQgc2Vzc2lvbicpO1xuICBTZXNzaW9uLnVwbG9hZFNlc3Npb24oKTtcbn1cbiIsImltcG9ydCB7IFV0aWxzLCBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyIH0gZnJvbSAnLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi90YXNrTmFtZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRUYXNrKCkge1xuICBjb25zb2xlLmxvZygnYWRkVGFzayBhZFJld2FyZCcpO1xuICAvLyBvbmx5IHJ1biBvbmNlXG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLmFkUmV3YXJkLFxuICAgIC8vIG1heFRhc2tSdW5UaW1lczogMSxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBDT05TVEFOVFMubWludXRlSW5NcyAqIDMwLFxuICAgIGZpbmRSb3V0ZURlbGF5OiBDT05TVEFOVFMuc2xlZXBNZWRpdW0sXG4gICAgbWF4VGFza0R1cmluZzogQ09OU1RBTlRTLnNsZWVwRm9yQWQgKyBDT05TVEFOVFMuZHVyaW5nTWF4QWRSZXRyeSxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2FkUmV3YXJkLm5hbWV9YCxcbiAgICBtYXRjaDogYWRSZXdhcmQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MuYWRSZXdhcmQpIHtcbiAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKGFkUmV3YXJkKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXJvdXRlci5nb05leHQoYWRSZXdhcmQpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgICAgIGNvbnN0IHNjcmVlbnNob3QgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgICBjb25zdCBpc0VudGVyQWQgPSAhcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShhZFJld2FyZCwgc2NyZWVuc2hvdCk7XG4gICAgICByZWxlYXNlSW1hZ2Uoc2NyZWVuc2hvdCk7XG4gICAgICBpZiAoIWlzRW50ZXJBZCkge1xuICAgICAgICBjb25zb2xlLmxvZygnZXJyb3I6IGNhbm5vdCBwbGF5IGFkLCB0cnkgbGF0ZXInKTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ3dhdGNoIGFkJyk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBGb3JBZCAtIENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgICAvLyBoYW5kbGUgYWQgY2xvc2VcbiAgICAgIGNvbnNvbGUubG9nKCd0cnkgY2xvc2UgYWQnKTtcbiAgICAgIGxldCBpc0FkQ2xvc2VkID0gZmFsc2U7XG5cbiAgICAgIC8vIHRyeSBrZXkgY29kZSBiYWNrIDUgdGltZXNcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNSAmJiAhaXNBZENsb3NlZDsgaSsrKSB7XG4gICAgICAgIGtleWNvZGUoJ0JBQ0snLCAxMDApO1xuICAgICAgICBjb25zb2xlLmxvZyhga2V5IGNvZGUgYmFjayB0byBjbG9zZSBhZCAke2kgKyAxfWApO1xuICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuXG4gICAgICAgIGNvbnN0IHNjcmVlbnNob3QgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgICAgIGlzQWRDbG9zZWQgPSByZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKGFkUmV3YXJkUmVkZWVtLCBzY3JlZW5zaG90KTtcbiAgICAgICAgcmVsZWFzZUltYWdlKHNjcmVlbnNob3QpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNBZENsb3NlZCkge1xuICAgICAgICBjb25zb2xlLmxvZygnYWQgY2xvc2VkJyk7XG4gICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIHJlc3RhcnQgYXBwIGlmIGFkIG5vdCBjbG9zZWRcbiAgICAgIGNvbnNvbGUubG9nKCdhZCBub3QgY2xvc2VkLCByZXN0YXJ0IGFwcCcpO1xuICAgICAgcmVyb3V0ZXIuc3RvcEFwcCgpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgICAgIHJlcm91dGVyLnN0YXJ0QXBwKCk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7YWRSZXdhcmRSZWRlZW0ubmFtZX1gLFxuICAgIG1hdGNoOiBhZFJld2FyZFJlZGVlbSxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgY29uc29sZS5sb2coJ2FkIHJld2FyZCBnZXQnKTtcbiAgICAgIHJlcm91dGVyLmdvTmV4dChhZFJld2FyZFJlZGVlbSk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLmFkUmV3YXJkKSB7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcbn1cblxuLy8gYWRSZXdhcmQgcGFnZXNcbmNvbnN0IGFkUmV3YXJkID0gbmV3IFBhZ2UoXG4gICdhZFJld2FyZCcsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMjgsIHk6IDQ1LCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiAzNiwgeTogMjY3LCByOiAxODEsIGc6IDE4NiwgYjogMTk3IH0sXG4gICAgeyB4OiAzMiwgeTogMzA3LCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiA2MDUsIHk6IDUyLCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA2MTEsIHk6IDI0NCwgcjogMTgxLCBnOiAxODYsIGI6IDE5NyB9LFxuICAgIHsgeDogNjA3LCB5OiAzMTksIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcblxuICAgIC8vIHdhdGNoIGFkIGljb24gJiBidG4gYmdcbiAgICB7IHg6IDM0NCwgeTogMzAwLCByOiA0OSwgZzogMTYyLCBiOiA5MCB9LFxuICAgIHsgeDogNDkwLCB5OiAzMTgsIHI6IDQxLCBnOiAxNDIsIGI6IDgyIH0sXG4gICAgeyB4OiAzNjEsIHk6IDMwOCwgcjogMCwgZzogMTQ3LCBiOiAxNDEgfSxcbiAgICB7IHg6IDM3NSwgeTogMzE2LCByOiAwLCBnOiAxMTAsIGI6IDEwNyB9LFxuXG4gICAgLy8gY2FuY2VsXG4gICAgeyB4OiAxOTAsIHk6IDMxMCwgcjogOCwgZzogMTA5LCBiOiAyNDcgfSxcbiAgICB7IHg6IDIwNCwgeTogMzEwLCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogMjE5LCB5OiAzMTAsIHI6IDI0MiwgZzogMjQ2LCBiOiAyNTMgfSxcbiAgICB7IHg6IDIzMiwgeTogMzEwLCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogMjQ3LCB5OiAzMTAsIHI6IDgsIGc6IDEwOSwgYjogMjQ3IH0sXG4gICAgeyB4OiAyNTgsIHk6IDMxMCwgcjogOCwgZzogMTA5LCBiOiAyNDcgfSxcbiAgXSxcbiAgeyB4OiA0MDQsIHk6IDMxMCB9LFxuICB7IHg6IDIyNCwgeTogMzEwIH1cbik7XG5cbmNvbnN0IGFkUmV3YXJkUmVkZWVtID0gbmV3IFBhZ2UoXG4gICdhZFJld2FyZFJlZGVlbScsXG4gIFtcbiAgICAvLyBhZCByZXdhcmQgdGl0bGVcbiAgICB7IHg6IDI3NCwgeTogNTEsIHI6IDIyMiwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDMwMiwgeTogNDksIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMzNCwgeTogNTEsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM1NiwgeTogNTIsIHI6IDkwLCBnOiA5NCwgYjogMTAyIH0sXG5cbiAgICAvLyBiZ1xuICAgIHsgeDogMjUsIHk6IDQ2LCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiAzNiwgeTogMzA3LCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiA2MDEsIHk6IDQyLCByOiAxMjMsIGc6IDExOCwgYjogMTIzIH0sXG4gICAgeyB4OiA1OTEsIHk6IDMxOCwgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogMjEsIHk6IDI3MywgcjogMTgxLCBnOiAxODYsIGI6IDE5NyB9LFxuICAgIHsgeDogMTgsIHk6IDgxLCByOiAxODEsIGc6IDE4NiwgYjogMTk3IH0sXG4gICAgeyB4OiA2MTYsIHk6IDg1LCByOiAxODEsIGc6IDE4NiwgYjogMTk3IH0sXG4gICAgeyB4OiA2MDgsIHk6IDI2OSwgcjogMTgxLCBnOiAxODYsIGI6IDE5NyB9LFxuXG4gICAgLy8gb2tcbiAgICB7IHg6IDMwMSwgeTogMzEwLCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogMzE5LCB5OiAzMDcsIHI6IDg2LCBnOiAxNTgsIGI6IDI0NyB9LFxuICAgIHsgeDogMzQ5LCB5OiAzMDcsIHI6IDgsIGc6IDExMywgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogMzAzLCB5OiAzMDQgfSxcbiAgeyB4OiAzMDMsIHk6IDMwNCB9XG4pO1xuIiwiaW1wb3J0IHsgUGFnZSwgR3JvdXBQYWdlLCBVdGlscyB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IHJlcm91dGVyIH0gZnJvbSAnLi4vLi4vbW9kdWxlcyc7XG5pbXBvcnQgeyBzdGF0ZSwgQ29uZmlnIH0gZnJvbSAnLi4vLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza05hbWVzJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2NvbmZpcm1XaXRoWVNHcm91cC5uYW1lfWAsXG4gICAgbWF0Y2g6IGNvbmZpcm1XaXRoWVNHcm91cCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKGFsd2F5c1VzZVRoZUNvbmRpdGlvbkRyaW5rQ29uZmlybSwgaW1hZ2UpKSB7XG4gICAgICAgIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy51c2VEcmluaykge1xuICAgICAgICAgIHJlcm91dGVyLmdvQmFjayhhbHdheXNVc2VUaGVDb25kaXRpb25Ecmlua0NvbmZpcm0pO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRhc2tOYW1lID0gY29udGV4dC50YXNrLm5hbWU7XG4gICAgICAgIGNvbnN0IHVzZURyaW5rSW5MZWFndWUgPSB0YXNrTmFtZSA9PSBUQVNLUy5wbGF5TGVhZ3VlR2FtZSAmJiBzdGF0ZS5sZWFndWVHYW1lLm5lZWRTZXREcmluaztcbiAgICAgICAgY29uc3QgdXNlRHJpbmtJblJhbmsgPSB0YXNrTmFtZSA9PSBUQVNLUy5wbGF5QmF0dGxlR2FtZSAmJiBzdGF0ZS5yYW5rR2FtZS5uZWVkU2V0RHJpbms7XG4gICAgICAgIGlmICghdXNlRHJpbmtJbkxlYWd1ZSAmJiAhdXNlRHJpbmtJblJhbmspIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnbm90IG5lZWQgdG8gc2V0IGRyaW5rLCBnbyBiYWNrJyk7XG4gICAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKGFsd2F5c1VzZVRoZUNvbmRpdGlvbkRyaW5rQ29uZmlybSk7XG4gICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGxldCB1c2VJbk1vZGUgPSAnJztcbiAgICAgICAgaWYgKHVzZURyaW5rSW5MZWFndWUpIHtcbiAgICAgICAgICBzdGF0ZS5sZWFndWVHYW1lLm5lZWRTZXREcmluayA9IGZhbHNlO1xuICAgICAgICAgIHVzZUluTW9kZSA9ICdsZWFndWUgZ2FtZSc7XG4gICAgICAgIH0gZWxzZSBpZiAodXNlRHJpbmtJblJhbmspIHtcbiAgICAgICAgICBzdGF0ZS5yYW5rR2FtZS5uZWVkU2V0RHJpbmsgPSBmYWxzZTtcbiAgICAgICAgICB1c2VJbk1vZGUgPSAncmFuayBnYW1lJztcbiAgICAgICAgfVxuICAgICAgICByZXJvdXRlci5nb05leHQoYWx3YXlzVXNlVGhlQ29uZGl0aW9uRHJpbmtDb25maXJtKTtcbiAgICAgICAgY29uc29sZS5sb2coYGNvbmZpcm0gY29uZGl0aW9uIGRyaW5rIGFsd2F5cyB1c2UgaW4gJHt1c2VJbk1vZGV9YCk7XG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShkb250VXNlVGhlQ29uZGl0aW9uRHJpbmtDb25maXJtLCBpbWFnZSkpIHtcbiAgICAgICAgaWYgKCFDb25maWcuc2NyaXB0Q29uZmlnLnVzZURyaW5rKSB7XG4gICAgICAgICAgLy8gdW5hY2Nlc3NpYmxlIHBhdGhcbiAgICAgICAgICByZXJvdXRlci5nb0JhY2soYWx3YXlzVXNlVGhlQ29uZGl0aW9uRHJpbmtDb25maXJtKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB0YXNrTmFtZSA9IGNvbnRleHQudGFzay5uYW1lO1xuICAgICAgICBjb25zdCB1c2VEcmlua0luTGVhZ3VlID0gdGFza05hbWUgPT0gVEFTS1MucGxheUxlYWd1ZUdhbWUgJiYgc3RhdGUubGVhZ3VlR2FtZS5uZWVkU2V0RHJpbms7XG4gICAgICAgIGNvbnN0IHVzZURyaW5rSW5SYW5rID0gdGFza05hbWUgPT0gVEFTS1MucGxheUJhdHRsZUdhbWUgJiYgc3RhdGUucmFua0dhbWUubmVlZFNldERyaW5rO1xuICAgICAgICBsZXQgdXNlSW5Nb2RlID0gJyc7XG4gICAgICAgIGlmICh1c2VEcmlua0luTGVhZ3VlKSB7XG4gICAgICAgICAgc3RhdGUubGVhZ3VlR2FtZS5uZWVkU2V0RHJpbmsgPSBmYWxzZTtcbiAgICAgICAgICB1c2VJbk1vZGUgPSAnbGVhZ3VlIGdhbWUnO1xuICAgICAgICB9IGVsc2UgaWYgKHVzZURyaW5rSW5SYW5rKSB7XG4gICAgICAgICAgc3RhdGUucmFua0dhbWUubmVlZFNldERyaW5rID0gZmFsc2U7XG4gICAgICAgICAgdXNlSW5Nb2RlID0gJ3JhbmsgZ2FtZSc7XG4gICAgICAgIH1cbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGRvbnRVc2VUaGVDb25kaXRpb25Ecmlua0NvbmZpcm0pO1xuICAgICAgICBjb25zb2xlLmxvZyhgbm90IGVub3VnaCBjb25kaXRpb24gZHJpbmsgaW4gJHt1c2VJbk1vZGV9YCk7XG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGNvbnN0IHAgb2YgW2Rvd25sb2FkRGF0YSwgZG93bmxvYWREYXRhMiwgcXVpdEFwcCwgcXVpdEFwcDEsIHdlZWtseU1pc3Npb25Cb3hDb25maXJtXSkge1xuICAgICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShwLCBpbWFnZSkpIHtcbiAgICAgICAgICByZXJvdXRlci5nb05leHQocCk7XG4gICAgICAgICAgaWYgKHAubmFtZSA9PT0gZG93bmxvYWREYXRhLm5hbWUgfHwgcC5uYW1lID09PSBkb3dubG9hZERhdGEyLm5hbWUpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkb3dubG9hZCBkYXRhICYgd2FpdCcpO1xuICAgICAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTG9uZyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KGNvbmZpcm1XaXRoWVMpO1xuICAgIH0sXG4gIH0pO1xuICBbb2tHcm91cF0uZm9yRWFjaChwID0+IHtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7cC5uYW1lfWAsXG4gICAgICBtYXRjaDogcCxcbiAgICAgIGFjdGlvbjogJ2dvTmV4dCcsXG4gICAgfSk7XG4gIH0pO1xufVxuXG4vLyBwYWdlIGhhcyBvayBidXR0b25cbmNvbnN0IG9rID0gbmV3IFBhZ2UoXG4gICdvaycsXG4gIFtcbiAgICB7IHg6IDI3OSwgeTogMzAwLCByOiAwLCBnOiAxMTMsIGI6IDI0NyB9LFxuICAgIHsgeDogMzEwLCB5OiAzMDEsIHI6IDEzNiwgZzogMTg4LCBiOiAyNTQgfSxcbiAgICB7IHg6IDMyNiwgeTogMzAxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzNjIsIHk6IDMwMCwgcjogMCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDM2OSwgeTogMzEyLCByOiA4LCBnOiAxMDEsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDMxOSwgeTogMzAzIH0sXG4gIHsgeDogMzE5LCB5OiAzMDMgfVxuKTtcblxuY29uc3Qgb2syID0gbmV3IFBhZ2UoXG4gICdvazInLFxuICBbXG4gICAgLy8gYnRuXG4gICAgeyB4OiAyNjcsIHk6IDMwMSwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDMxOCwgeTogMzAyLCByOiAyMDYsIGc6IDIyMSwgYjogMjQzIH0sXG4gICAgeyB4OiAzMjgsIHk6IDMwNSwgcjogOCwgZzogMTAyLCBiOiAyNDAgfSxcbiAgICB7IHg6IDM3NSwgeTogMzAxLCByOiA4LCBnOiAxMTMsIGI6IDI0NyB9LFxuICAgIHsgeDogMzgwLCB5OiAzMTMsIHI6IDEsIGc6IDg5LCBiOiAyMzggfSxcblxuICAgIC8vIGJnXG4gICAgeyB4OiAxMjIsIHk6IDMwNCwgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogNTIwLCB5OiAzMDgsIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcbiAgICB7IHg6IDExMCwgeTogNDIsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDUzNCwgeTogMzgsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcblxuICAgIC8vIHhcbiAgICB7IHg6IDUyMywgeTogNTMsIHI6IDc1LCBnOiA3OCwgYjogODMgfSxcbiAgXSxcbiAgeyB4OiAzMTksIHk6IDMwMCB9LFxuICB7IHg6IDMxOSwgeTogMzAwIH1cbik7XG5cbmNvbnN0IG9rR3JvdXAgPSBuZXcgR3JvdXBQYWdlKCdvaycsIFtvaywgb2syXSwgb2submV4dCwgb2submV4dCk7XG5cbi8vIG5vbi1zcGVjaWZpYyBjb25maXJtIHBhZ2Ugd2l0aCBubyBhbmQgeWVzIGJ0blxuY29uc3QgY29uZmlybVdpdGhZUyA9IG5ldyBQYWdlKFxuICAnY29uZmlybVdpdGhZUycsXG4gIFtcbiAgICAvLyB4IG9uIHJpZ2h0IHRvcFxuICAgIHsgeDogNTEzLCB5OiA0NiwgcjogMTgyLCBnOiAxODYsIGI6IDE4OCB9LFxuICAgIHsgeDogNTIwLCB5OiA1MiwgcjogNzAsIGc6IDY5LCBiOiA3MCB9LFxuICAgIHsgeDogNTI3LCB5OiA0NSwgcjogNjcsIGc6IDY4LCBiOiA3MCB9LFxuICAgIHsgeDogNTMxLCB5OiA1NCwgcjogMTc0LCBnOiAxNzUsIGI6IDE3NiB9LFxuICAgIHsgeDogNTExLCB5OiA1MSwgcjogMTc4LCBnOiAxODAsIGI6IDE4NiB9LFxuXG4gICAgLy8gbm8gYnRuXG4gICAgeyB4OiAyMTIsIHk6IDMwMSwgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDI0OSwgeTogMzAwLCByOiAxMjUsIGc6IDE1MiwgYjogMTg4IH0sXG4gICAgeyB4OiAyNzgsIHk6IDMwNywgcjogNDksIGc6IDgxLCBiOiAxMjMgfSxcblxuICAgIC8vIHllcyBidG5cbiAgICB7IHg6IDM2MywgeTogMjk0LCByOiA4LCBnOiAxMjIsIGI6IDI1NSB9LFxuICAgIHsgeDogMzg0LCB5OiAyOTcsIHI6IDI0NCwgZzogMjQ4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQxOSwgeTogMzA3LCByOiAwLCBnOiAxMDEsIGI6IDI0NyB9LFxuICAgIHsgeDogMzk1LCB5OiAyOTQsIHI6IDgsIGc6IDEyMiwgYjogMjU1IH0sXG5cbiAgICAvLyBmb290ZXIgYmdcbiAgICB7IHg6IDE0MiwgeTogMzA0LCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA1MzAsIHk6IDI5NiwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICBdLFxuICB7IHg6IDUyMCwgeTogNTYgfSwgLy8geCBidG5cbiAgeyB4OiA1MjAsIHk6IDU2IH1cbik7XG5cbmV4cG9ydCBjb25zdCBkb3dubG9hZERhdGEgPSBuZXcgUGFnZShcbiAgJ2Rvd25sb2FkRGF0YScsXG4gIFtcbiAgICAvLyB0aXRsZVxuICAgIHsgeDogMTY2LCB5OiA1OCwgcjogMTQwLCBnOiAxNDYsIGI6IDE1MCB9LFxuICAgIHsgeDogMTgzLCB5OiA1OSwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMjA2LCB5OiA2MSwgcjogNTUsIGc6IDYzLCBiOiA2NiB9LFxuICAgIHsgeDogMjQ0LCB5OiA1OCwgcjogODcsIGc6IDkwLCBiOiA5NiB9LFxuICAgIHsgeDogMjgyLCB5OiA1OCwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzM2LCB5OiA2MywgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzY4LCB5OiA2MywgcjogMTc2LCBnOiAxNzksIGI6IDE4NCB9LFxuICAgIHsgeDogNDA0LCB5OiA2MywgcjogMTMyLCBnOiAxMzcsIGI6IDE0MCB9LFxuICAgIHsgeDogNDMyLCB5OiA2MywgcjogMTMzLCBnOiAxMzgsIGI6IDE0MSB9LFxuICAgIHsgeDogNDU5LCB5OiA2MSwgcjogNDksIGc6IDU2LCBiOiA2NCB9LFxuXG4gICAgLy8gY29udGVudFxuICAgIHsgeDogMTg2LCB5OiAxNTYsIHI6IDEwOSwgZzogMTU2LCBiOiAyMDUgfSxcbiAgICB7IHg6IDIwNywgeTogMTU3LCByOiAxNywgZzogMTIwLCBiOiAyMjYgfSxcbiAgICB7IHg6IDIyNCwgeTogMTYwLCByOiAxMjAsIGc6IDE2MCwgYjogMjAxIH0sXG4gICAgeyB4OiA0MTIsIHk6IDE1OSwgcjogNzQsIGc6IDE0MiwgYjogMjE0IH0sXG4gICAgeyB4OiA0MzgsIHk6IDE1OSwgcjogMCwgZzogMTEzLCBiOiAyMzAgfSxcbiAgICB7IHg6IDQ1MCwgeTogMTU5LCByOiA4MSwgZzogMTQ3LCBiOiAyMTMgfSxcblxuICAgIC8vIG5vXG4gICAgeyB4OiAyMjQsIHk6IDI5NywgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDI1NSwgeTogMjk4LCByOiAxODAsIGc6IDIwMSwgYjogMjI5IH0sXG5cbiAgICAvLyB5ZXNcbiAgICB7IHg6IDM4NywgeTogMjk4LCByOiAyNTMsIGc6IDI1NCwgYjogMjU1IH0sXG4gICAgeyB4OiA0MjksIHk6IDMwMiwgcjogOCwgZzogMTEwLCBiOiAyNDcgfSxcbiAgICB7IHg6IDQ3OCwgeTogMzA0LCByOiAyMTQsIGc6IDIxOSwgYjogMjIyIH0sXG4gIF0sXG4gIHsgeDogNDIxLCB5OiAyOTMgfSxcbiAgeyB4OiA0MjEsIHk6IDI5MyB9XG4pO1xuXG5leHBvcnQgY29uc3QgZG93bmxvYWREYXRhMiA9IG5ldyBQYWdlKFxuICAnZG93bmxvYWREYXRhMicsXG4gIFtcbiAgICAvLyB0aXRsZSwgY2hlY2sgZm9yIGFkZGl0aW9uYWwgZGF0YSBkb3dubG9hZFxuICAgIHsgeDogMTk1LCB5OiA2MSwgcjogMTM2LCBnOiAxNDAsIGI6IDE0NCB9LFxuICAgIHsgeDogMjcxLCB5OiA2MiwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzM1LCB5OiA2MiwgcjogNjAsIGc6IDY1LCBiOiA3MiB9LFxuICAgIHsgeDogNDE3LCB5OiA2MSwgcjogNjYsIGc6IDc0LCBiOiA4MCB9LFxuXG4gICAgLy8gY29udGVudCB3ZSByZWNvbW1lbmQgeW91IHVzaW5nIGEgV2ktRmkgY29ubmVjdGlvblxuICAgIHsgeDogMTg3LCB5OiAxNTcsIHI6IDQwLCBnOiAxMjgsIGI6IDIyMSB9LFxuICAgIHsgeDogMjEzLCB5OiAxNjEsIHI6IDgyLCBnOiAxNDcsIGI6IDIwOSB9LFxuICAgIHsgeDogMjMxLCB5OiAxNjUsIHI6IDExMywgZzogMTYwLCBiOiAyMDEgfSxcbiAgICB7IHg6IDI1NCwgeTogMTY0LCByOiAxMTIsIGc6IDE1OSwgYjogMjAyIH0sXG4gICAgeyB4OiAyNjksIHk6IDE2MywgcjogNTcsIGc6IDEzNywgYjogMjE2IH0sXG4gICAgeyB4OiAyOTUsIHk6IDE2MiwgcjogMCwgZzogMTEzLCBiOiAyMzAgfSxcbiAgICB7IHg6IDMyMCwgeTogMTYzLCByOiAyNSwgZzogMTIzLCBiOiAyMjIgfSxcbiAgICB7IHg6IDM5MiwgeTogMTYyLCByOiAxMDMsIGc6IDE1NCwgYjogMjA3IH0sXG4gICAgeyB4OiA0MzQsIHk6IDE2NSwgcjogOTIsIGc6IDE1MCwgYjogMjA3IH0sXG4gIF0sXG4gIHsgeDogMzg3LCB5OiAzMDUgfSxcbiAgeyB4OiAzODcsIHk6IDMwNSB9XG4pO1xuXG4vLyB3aXRoIG1vcmUgZ2FtZXMgYnV0dG9uXG5jb25zdCBxdWl0QXBwID0gbmV3IFBhZ2UoXG4gICdxdWl0QXBwJyxcbiAgW1xuICAgIC8vIHRpdGxlIHF1aXQgZ2FtZVxuICAgIHsgeDogMjc0LCB5OiA1OSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMjg2LCB5OiA1OSwgcjogMjEsIGc6IDI5LCBiOiAzNyB9LFxuICAgIHsgeDogMzA3LCB5OiA1NywgcjogMTM0LCBnOiAxMzgsIGI6IDE0NiB9LFxuICAgIHsgeDogMzI1LCB5OiA2MCwgcjogNDQsIGc6IDQ5LCBiOiA1NCB9LFxuICAgIHsgeDogMzM0LCB5OiA1OSwgcjogNjEsIGc6IDY3LCBiOiA3NCB9LFxuICAgIHsgeDogMzQ3LCB5OiA1OSwgcjogNjUsIGc6IDcyLCBiOiA3OCB9LFxuICAgIHsgeDogMzU1LCB5OiA1OCwgcjogNjgsIGc6IDcwLCBiOiA3OCB9LFxuXG4gICAgLy8geWVzIGJnXG4gICAgeyB4OiAxNTUsIHk6IDMwMCwgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDIxNSwgeTogMzAxLCByOiA0OSwgZzogODUsIGI6IDEyMyB9LFxuICAgIC8vIG5vIGJnXG4gICAgeyB4OiAyNzQsIHk6IDMwMSwgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDMzNiwgeTogMzA1LCByOiA0OSwgZzogODUsIGI6IDEyMyB9LFxuICAgIC8vIG1vcmUgZ2FtZXMgYmdcbiAgICB7IHg6IDM4NywgeTogMzAzLCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogNDk1LCB5OiAzMDAsIHI6IDgsIGc6IDExNCwgYjogMjQ4IH0sXG4gIF0sXG4gIHsgeDogNTE5LCB5OiA1MiB9LCAvLyB4IGJ0blxuICB7IHg6IDUxOSwgeTogNTIgfVxuKTtcblxuY29uc3QgcXVpdEFwcDEgPSBuZXcgUGFnZShcbiAgJ3F1aXRBcHAxJyxcbiAgW1xuICAgIHsgeDogMjYyLCB5OiA1NiwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMzAwLCB5OiA1NCwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuICAgIHsgeDogMzIzLCB5OiA1NSwgcjogMjQsIGc6IDMwLCBiOiAzMiB9LFxuICAgIHsgeDogNTExLCB5OiA1MCwgcjogMTc4LCBnOiAxODAsIGI6IDE4NiB9LFxuICAgIHsgeDogNTIyLCB5OiA1NCwgcjogMTQxLCBnOiAxMzksIGI6IDE0MSB9LFxuICAgIHsgeDogNTIyLCB5OiA1NCwgcjogMTQxLCBnOiAxMzksIGI6IDE0MSB9LFxuICAgIHsgeDogMTY3LCB5OiAyOTksIHI6IDIyMiwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDI0MywgeTogMjk1LCByOiA0OSwgZzogODUsIGI6IDEyMyB9LFxuICAgIHsgeDogMzE4LCB5OiAyOTgsIHI6IDIyMiwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDM4MiwgeTogMjk3LCByOiA4MywgZzogMTU4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDUwMywgeTogMzAxLCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA0MzMsIHk6IDMxMCwgcjogMCwgZzogOTQsIGI6IDI0NyB9LFxuICAgIHsgeDogNDA0LCB5OiAzMDEsIHI6IDgsIGc6IDExMywgYjogMjU1IH0sXG4gICAgeyB4OiAyMTMsIHk6IDMwNywgcjogNDksIGc6IDgxLCBiOiAxMjMgfSxcbiAgXSxcbiAgeyB4OiAyMTMsIHk6IDMwNyB9LCAvLyBub3QgdG8gcXVpdFxuICB7IHg6IDIxMywgeTogMzA3IH1cbik7XG5cbmNvbnN0IGFsd2F5c1VzZVRoZUNvbmRpdGlvbkRyaW5rQ29uZmlybSA9IG5ldyBQYWdlKFxuICAnYWx3YXlzVXNlVGhlQ29uZGl0aW9uRHJpbmtDb25maXJtJyxcbiAgW1xuICAgIC8vIHRpdGxlIChvbmx5IGNvbmRpdGlvbiBkcmluayBwYXJ0KVxuICAgIHsgeDogMzIwLCB5OiA1NSwgcjogMzksIGc6IDQ0LCBiOiA1MSB9LFxuICAgIHsgeDogMzI1LCB5OiA1NSwgcjogMzIsIGc6IDM5LCBiOiA0NCB9LFxuICAgIHsgeDogMzMwLCB5OiA1NSwgcjogMzUsIGc6IDQzLCBiOiA0OCB9LFxuICAgIHsgeDogMzM1LCB5OiA1NSwgcjogMjAsIGc6IDI4LCBiOiAzNyB9LFxuICAgIHsgeDogMzQwLCB5OiA1NSwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzQ1LCB5OiA1NSwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzUwLCB5OiA1NSwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzU1LCB5OiA1NSwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzYwLCB5OiA1NSwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzY1LCB5OiA1NSwgcjogOTYsIGc6IDk4LCBiOiAxMDcgfSxcbiAgICB7IHg6IDM3MCwgeTogNTUsIHI6IDE0NiwgZzogMTQ5LCBiOiAxNTggfSxcbiAgICB7IHg6IDM3NSwgeTogNTUsIHI6IDc5LCBnOiA4NCwgYjogOTEgfSxcbiAgICB7IHg6IDM4MCwgeTogNTUsIHI6IDMzLCBnOiAzOCwgYjogNDQgfSxcbiAgICB7IHg6IDM4NSwgeTogNTUsIHI6IDIxLCBnOiAyNiwgYjogMzMgfSxcbiAgICB7IHg6IDM5MCwgeTogNTUsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM5NSwgeTogNTUsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDQwMCwgeTogNTUsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDQwNSwgeTogNTUsIHI6IDMyLCBnOiAzNSwgYjogNDMgfSxcbiAgICB7IHg6IDQxMCwgeTogNTUsIHI6IDIxLCBnOiAyNiwgYjogMzMgfSxcbiAgICB7IHg6IDQxNSwgeTogNTUsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDQyMCwgeTogNTUsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDQyNSwgeTogNTUsIHI6IDI4LCBnOiAzNCwgYjogNDEgfSxcbiAgICB7IHg6IDQzMCwgeTogNTUsIHI6IDY1LCBnOiA3MiwgYjogNzkgfSxcbiAgICB7IHg6IDQzNSwgeTogNTUsIHI6IDcyLCBnOiA3NiwgYjogODYgfSxcbiAgICB7IHg6IDQ0MCwgeTogNTUsIHI6IDY1LCBnOiA3MSwgYjogNzkgfSxcbiAgICB7IHg6IDQ0NSwgeTogNTUsIHI6IDI1LCBnOiAzMywgYjogNDEgfSxcblxuICAgIC8vIGNvbnRlbnQgbWlnaHQgY2hhbmdlIGR1ZSB0byBkaWZmZXJlbnQgdGVhbXNcbiAgICAvLyB4XG4gICAgeyB4OiA1MTksIHk6IDUyLCByOiAxMTEsIGc6IDExMiwgYjogMTE4IH0sXG5cbiAgICAvLyBiZ1xuICAgIHsgeDogMTEwLCB5OiA0OCwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMTE3LCB5OiAyNTQsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDUyMiwgeTogMjYxLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiA1MTgsIHk6IDcwLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAxMjEsIHk6IDMwNCwgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogNTAyLCB5OiAzMDgsIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcbiAgXSxcbiAgeyB4OiAzOTUsIHk6IDMwMCB9LCAvLyB5ZXNcbiAgeyB4OiAyMzUsIHk6IDMwMCB9IC8vIG5vXG4pO1xuXG4vLyB3aGVuIGRyaW5rIGlzIG5vdCBlbm91Z2ggdG8gdXNlLCB5ZXMgd2lsbCBsZWFkIHRvIHNob3BcbmNvbnN0IGRvbnRVc2VUaGVDb25kaXRpb25Ecmlua0NvbmZpcm0gPSBuZXcgUGFnZShcbiAgJ2RvbnRVc2VUaGVDb25kaXRpb25Ecmlua0NvbmZpcm0nLFxuICBbXG4gICAgLy8gdGl0bGVcbiAgICB7IHg6IDE5NywgeTogNjEsIHI6IDE5MiwgZzogMTkzLCBiOiAyMDAgfSxcbiAgICB7IHg6IDIyMywgeTogNjEsIHI6IDgwLCBnOiA4OCwgYjogOTUgfSxcbiAgICB7IHg6IDI2NiwgeTogNjEsIHI6IDYzLCBnOiA3MCwgYjogNzUgfSxcbiAgICB7IHg6IDI5OSwgeTogNjEsIHI6IDI4LCBnOiAzNCwgYjogNDEgfSxcbiAgICB7IHg6IDM5NywgeTogNjEsIHI6IDUyLCBnOiA1OSwgYjogNjQgfSxcbiAgICB7IHg6IDQxMSwgeTogNjEsIHI6IDIyLCBnOiAyOSwgYjogMzggfSxcbiAgICB7IHg6IDQyNywgeTogNjIsIHI6IDIzLCBnOiAzMSwgYjogNDAgfSxcbiAgICB7IHg6IDM2MCwgeTogNTksIHI6IDQ5LCBnOiA1NiwgYjogNjUgfSxcbiAgICB7IHg6IDM3NSwgeTogNjAsIHI6IDk2LCBnOiAxMDMsIGI6IDEwOSB9LFxuXG4gICAgLy8gYmdcbiAgICB7IHg6IDE0MiwgeTogMzAyLCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiA1MTQsIHk6IDMwMSwgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogMTI1LCB5OiA1NSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuXG4gICAgLy8gbm9cbiAgICB7IHg6IDI2OCwgeTogMzAzLCByOiA0MSwgZzogNzMsIGI6IDExNiB9LFxuXG4gICAgLy8geWVzXG4gICAgeyB4OiA0MjYsIHk6IDMwNCwgcjogOCwgZzogMTA2LCBiOiAyNDcgfSxcbiAgXSxcbiAgeyB4OiAyNDAsIHk6IDMwMCB9LCAvLyBubywgbm90IHRvIHVzZSBkcmlua1xuICB7IHg6IDI0MCwgeTogMzAwIH0gLy8gbm8sIG5vdCB0byB1c2UgZHJpbmtcbik7XG5cbmNvbnN0IHdlZWtseU1pc3Npb25Cb3hDb25maXJtID0gbmV3IFBhZ2UoXG4gICd3ZWVrbHlNaXNzaW9uQm94Q29uZmlybScsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMTExLCB5OiA0MiwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMTE3LCB5OiAzMDQsIHI6IDIxNCwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDUxNSwgeTogMzAwLCByOiAyMTQsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA1MTksIHk6IDE3NywgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuXG4gICAgLy8gdGl0bGVcbiAgICB7IHg6IDI0MCwgeTogNTgsIHI6IDE1NSwgZzogMTYwLCBiOiAxNjMgfSxcbiAgICB7IHg6IDI2NywgeTogNTgsIHI6IDE0MSwgZzogMTQ3LCBiOiAxNDkgfSxcbiAgICB7IHg6IDMyNSwgeTogNTksIHI6IDE2MSwgZzogMTY3LCBiOiAxNzAgfSxcbiAgICB7IHg6IDM4MywgeTogNTksIHI6IDE3MSwgZzogMTc5LCBiOiAxNzkgfSxcbiAgICB7IHg6IDQwNywgeTogNTksIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcblxuICAgIC8vIHhcbiAgICB7IHg6IDUxNSwgeTogNDksIHI6IDE4NywgZzogMTg1LCBiOiAxODggfSxcbiAgICB7IHg6IDUxOSwgeTogNTUsIHI6IDkxLCBnOiA5MSwgYjogOTIgfSxcblxuICAgIC8vIG5vICYgeWVzIGJ0blxuICAgIHsgeDogMjEwLCB5OiAyOTMsIHI6IDQxLCBnOiA4MSwgYjogMTIzIH0sXG4gICAgeyB4OiAyMzgsIHk6IDI5NiwgcjogNDUsIGc6IDgxLCBiOiAxMjggfSxcbiAgICB7IHg6IDI4NCwgeTogMjk0LCByOiA0MSwgZzogNzgsIGI6IDEyMyB9LFxuXG4gICAgeyB4OiAzOTcsIHk6IDI5OSwgcjogNDAsIGc6IDEzNCwgYjogMjUzIH0sXG4gICAgeyB4OiA0MzMsIHk6IDMwNywgcjogOCwgZzogOTgsIGI6IDI0NyB9LFxuICBdLFxuICB7IHg6IDM4NywgeTogMzAwIH0sIC8vIHllcyBidG5cbiAgeyB4OiAzODcsIHk6IDMwMCB9XG4pO1xuXG5jb25zdCBjb25maXJtV2l0aFlTR3JvdXAgPSBuZXcgR3JvdXBQYWdlKFxuICAnY29uZmlybVdpdGhZU0dyb3VwJyxcbiAgW2NvbmZpcm1XaXRoWVMsIGRvd25sb2FkRGF0YSwgZG93bmxvYWREYXRhMiwgcXVpdEFwcCwgcXVpdEFwcDEsIGFsd2F5c1VzZVRoZUNvbmRpdGlvbkRyaW5rQ29uZmlybSwgZG9udFVzZVRoZUNvbmRpdGlvbkRyaW5rQ29uZmlybSwgd2Vla2x5TWlzc2lvbkJveENvbmZpcm1dLFxuICBjb25maXJtV2l0aFlTLm5leHQsXG4gIGNvbmZpcm1XaXRoWVMuYmFja1xuKTtcbiIsImltcG9ydCB7IFBhZ2UsIFV0aWxzIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyLCBDb25maWcgfSBmcm9tICcuLi8uLi9tb2R1bGVzJztcblxuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuLi90YXNrTmFtZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7IGlzU2FtZUNvbG9yIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICAvLyAqKiBsYXVuY2hpbmcgcGFnZXNcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtsb2dvLm5hbWV9YCxcbiAgICBtYXRjaDogbG9nbyxcbiAgICBhY3Rpb246IGNvbnRleHQgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3dhaXQgYXBwIGxvYWRpbmcgLi4uJyk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuICAgICAgaWYgKCFDb25maWcuc2NyaXB0Q29uZmlnLmhhc0Nvb2xGZWF0dXJlKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHN0YXRlLm9uTGF1bmNoaW5nKCk7XG5cbiAgICAgIC8vIHJlb3BlbiBpZiBzdHVja1xuICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIGlmIChub3cgLSBjb250ZXh0Lm1hdGNoU3RhcnRUUyA+IDMgKiBDT05TVEFOVFMubWludXRlSW5Ncykge1xuICAgICAgICBjb25zb2xlLmxvZygnc3R1Y2sgaW4gbGF1bmNoIHBhZ2UgdG9vIGxvbmcsIHJlc3RhcnQgYXBwJyk7XG4gICAgICAgIHJlcm91dGVyLnJlc3RhcnRBcHAoKTtcbiAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bGFuZGluZ0xvYWRpbmdQcm9ncmVzc0Jhci5uYW1lfWAsXG4gICAgbWF0Y2g6IGxhbmRpbmdMb2FkaW5nUHJvZ3Jlc3NCYXIsXG4gICAgYWN0aW9uOiAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnbGFuZGluZyBsb2FkaW5nIChwcm9ncmVzcyBiYXIpLi4uJyk7XG4gICAgICBzdGF0ZS5vbkxhdW5jaGluZygpO1xuICAgIH0sXG4gICAgYWZ0ZXJBY3Rpb25EZWxheTogQ09OU1RBTlRTLnNsZWVwTWVkaXVtLFxuICB9KTtcbiAgW1RPUywgVE9TOTAsIFRPUzkwdjJdLmZvckVhY2gocCA9PiB7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke3AubmFtZX1gLFxuICAgICAgbWF0Y2g6IHAsXG4gICAgICBhY3Rpb246ICdnb05leHQnLFxuICAgIH0pO1xuICB9KTtcblxuICAvLyAqKiBtYWluXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bWFpbi5uYW1lfWAsXG4gICAgbWF0Y2g6IG1haW4sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBjb25zdCB0YXNrID0gY29udGV4dC50YXNrLm5hbWU7XG4gICAgICBjb25zb2xlLmxvZyh0YXNrKTtcblxuICAgICAgaWYgKCFzdGF0ZS5oYXNTZXNzaW9uKSB7XG4gICAgICAgIHN0YXRlLm9uTG9naW5TdWNjZXNzKCk7XG4gICAgICB9XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcblxuICAgICAgLy8gZXZlcnkgdGltZSBpbiBtYWluIG5lZWQgdG8gY2hlY2sgaWYgY2hhdCBpcyBvblxuICAgICAgY29uc3QgaXNDaGF0T24gPSBpc1NhbWVDb2xvcihpbWFnZSwgeyB4OiA1OTYsIHk6IDMwLCByOiAyNDYsIGc6IDI0MiwgYjogMjQ2IH0pO1xuICAgICAgaWYgKGlzQ2hhdE9uKSB7XG4gICAgICAgIGhhbmRsZVR1cm5PZmZDaGF0KGltYWdlKTtcbiAgICAgIH1cblxuICAgICAgc3dpdGNoICh0YXNrKSB7XG4gICAgICAgIGNhc2UgVEFTS1Muc3RheUluTG9naW46XG4gICAgICAgICAgLy8gc2hvdWxkIGJlIGluYWNjZXNzaWJsZSB1bmxlc3MgY2xlYXIgc2Vzc2lvbiBpcyBmYWlsZWRcbiAgICAgICAgICByZXR1cm47XG5cbiAgICAgICAgY2FzZSBUQVNLUy5zZXR0aW5nRGVmYXVsdDpcbiAgICAgICAgY2FzZSBUQVNLUy5zZXR0aW5nUmVzZXRMZWFndWVQcm9ncmVzczpcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKG1haW5CdG5zLnNldHRpbmdzKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFRBU0tTLnBsYXlMZWFndWVHYW1lOlxuICAgICAgICAgIGlmICghc3RhdGUubGVhZ3VlR2FtZS5uZWVkUmVzZXRQcm9ncmVzcykge1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChtYWluQnRucy5sZWFndWVNb2RlKTtcbiAgICAgICAgICAgIHN0YXRlLmxlYWd1ZUdhbWUudHJ5RW50ZXJHYW1lQ250cysrO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZWVkIHJlc2V0IGxlYWd1ZSBwcm9ncmVzcycpO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgIGNhc2UgVEFTS1MucGxheUJhdHRsZUdhbWU6XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChtYWluQnRucy5iYXR0bGVNb2RlKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIFRBU0tTLmFkUmV3YXJkOlxuICAgICAgICAgIC8vIHNvbWV0aW1lcyB3b24ndCB0cmlnZ2VyIGFueXRoaW5nIGlmIHN0aWxsIG9uIGNkXG4gICAgICAgICAgaWYgKGNvbnRleHQubWF0Y2hUaW1lcyA+IDIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdhZCBpcyBzdGlsbCBvbiBjZCcpO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAobWFpbkJ0bnMuYWRUYWIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBUQVNLUy53ZWVrbHlNaXNzaW9uOlxuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAobWFpbkJ0bnMuYWNoaWV2ZW1lbnQpO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgVEFTS1MucmVjZWl2ZUluYm94OlxuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAobWFpbkJ0bnMuaW5ib3gpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bWFpbkZyZWV6ZWQubmFtZX1gLFxuICAgIG1hdGNoOiBtYWluRnJlZXplZCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLm9uRnJlZXplZEVycm9yKG1haW5GcmVlemVkLm5hbWUpO1xuICAgIH0sXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVUdXJuT2ZmQ2hhdChpbWFnZTogSW1hZ2UpIHtcbiAgY29uc3QgY2hhdE9uQnRuID0geyB4OiA1OTUsIHk6IDMwLCByOiAyNDUsIGc6IDI0MiwgYjogMjQ1IH07XG4gIGNvbnN0IGlzQ2hhdE9uID0gaXNTYW1lQ29sb3IoaW1hZ2UsIGNoYXRPbkJ0bik7XG4gIGlmICghaXNDaGF0T24pIHtcbiAgICBjb25zb2xlLmxvZygnY2hhdCBpcyBvZmYnKTtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc29sZS5sb2coJ3R1cm4gb2ZmIGNoYXQsIG9wZW4gZGlhbG9nJyk7XG4gIHJlcm91dGVyLnNjcmVlbi50YXAoY2hhdE9uQnRuKTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcblxuICAvLyBpbiBkaWFsb2dcbiAgbGV0IGlzRW5hYmxlQ2hhdCA9IHRydWU7XG4gIGZvciAobGV0IHJlbWFpbkNsaWNrID0gMTA7IHJlbWFpbkNsaWNrID4gMCAmJiBpc0VuYWJsZUNoYXQ7IHJlbWFpbkNsaWNrLS0pIHtcbiAgICByZXJvdXRlci5nb05leHQoY2hhdERpYWxvZ0NoYXRPbkJ0bik7XG4gICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xuICAgIGNvbnN0IHNjcmVlbnNob3QgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgaXNFbmFibGVDaGF0ID0gcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShjaGF0RGlhbG9nQ2hhdE9uQnRuLCBzY3JlZW5zaG90KTtcbiAgICByZWxlYXNlSW1hZ2Uoc2NyZWVuc2hvdCk7XG4gIH1cbiAgaWYgKCFpc0VuYWJsZUNoYXQpIHtcbiAgICBjb25zb2xlLmxvZygndHVybiBvZmYgY2hhdCBvaycpO1xuICAgIHJlcm91dGVyLmdvQmFjayhjaGF0RGlhbG9nQ2hhdE9uQnRuKTtcbiAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgIHJldHVybjtcbiAgfVxufVxuXG5jb25zdCBsb2dvID0gbmV3IFBhZ2UoXG4gICdsb2dvJyxcbiAgW1xuICAgIHsgeDogMjI3LCB5OiAxODQsIHI6IDIyOCwgZzogNCwgYjogMzMgfSxcbiAgICB7IHg6IDI1OCwgeTogMTg3LCByOiAyMjgsIGc6IDQsIGI6IDMzIH0sXG4gICAgeyB4OiAyNzgsIHk6IDE5MCwgcjogMjMyLCBnOiA0OCwgYjogNzIgfSxcbiAgICB7IHg6IDI4NSwgeTogMTgzLCByOiAyNTQsIGc6IDI1NCwgYjogMjU0IH0sXG4gICAgeyB4OiAzMDEsIHk6IDE3MiwgcjogMjI5LCBnOiAxOSwgYjogNDYgfSxcbiAgICB7IHg6IDMxNiwgeTogMTg3LCByOiAyNTQsIGc6IDI1NCwgYjogMjU0IH0sXG4gICAgeyB4OiAzMzUsIHk6IDE4OCwgcjogMjI4LCBnOiA0LCBiOiAzMyB9LFxuICAgIHsgeDogMzcyLCB5OiAxODgsIHI6IDI1MiwgZzogMjMzLCBiOiAyMzUgfSxcbiAgICB7IHg6IDM3NSwgeTogMTY5LCByOiAyMjgsIGc6IDQsIGI6IDMzIH0sXG4gICAgeyB4OiAzOTUsIHk6IDE4NCwgcjogMjU0LCBnOiAyNTQsIGI6IDI1NCB9LFxuICAgIHsgeDogMzk4LCB5OiAxNzAsIHI6IDIyOCwgZzogNCwgYjogMzMgfSxcbiAgICB7IHg6IDQwMywgeTogMTg2LCByOiAyNTQsIGc6IDI1NCwgYjogMjU0IH0sXG4gICAgeyB4OiAxMTcsIHk6IDExNCwgcjogMjU0LCBnOiAyNTQsIGI6IDI1NCB9LFxuXG4gICAgLy8gbG9hZGluZyBvbiBsZWZ0IHRvcCBpZiBzdHVja1xuICAgIC8vIHsgeDogMiwgeTogNSwgcjogMTQyLCBnOiAyMDgsIGI6IDIwMiB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5cbi8vIHRlcm0gb2Ygc2VydmljZVxuY29uc3QgVE9TID0gbmV3IFBhZ2UoXG4gICdUT1MnLFxuICBbXG4gICAgLy8gbG9nb1xuICAgIHsgeDogMjg5LCB5OiA0MCwgcjogMjMyLCBnOiA1MiwgYjogNzQgfSxcbiAgICB7IHg6IDI5MywgeTogMzQsIHI6IDIyOSwgZzogMjEsIGI6IDQ2IH0sXG4gICAgeyB4OiAyOTksIHk6IDM4LCByOiAyMjcsIGc6IDYsIGI6IDMzIH0sXG4gICAgeyB4OiAzMDgsIHk6IDM3LCByOiAyNDgsIGc6IDE5MiwgYjogMTk5IH0sXG4gICAgeyB4OiAzMTMsIHk6IDM5LCByOiAyNDgsIGc6IDE5MiwgYjogMTk5IH0sXG4gICAgeyB4OiAzMjEsIHk6IDM3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMjUsIHk6IDQyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMzMsIHk6IDMzLCByOiAyNTIsIGc6IDIyMywgYjogMjI3IH0sXG4gICAgeyB4OiAzMzgsIHk6IDM4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzNDIsIHk6IDM4LCByOiAyNDYsIGc6IDE3NiwgYjogMTg1IH0sXG4gICAgeyB4OiAzNDQsIHk6IDM3LCByOiAyNDYsIGc6IDE3NywgYjogMTg1IH0sXG4gICAgeyB4OiAzNDYsIHk6IDM2LCByOiAyMzQsIGc6IDY4LCBiOiA4OSB9LFxuICAgIHsgeDogMzM1LCB5OiAzNCwgcjogMjM0LCBnOiA2NywgYjogODcgfSxcbiAgICB7IHg6IDMzNSwgeTogMzcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM0NCwgeTogMzUsIHI6IDIyNywgZzogNiwgYjogMzMgfSxcblxuICAgIC8vIGNvcHlyaWdodFxuICAgIHsgeDogMjg5LCB5OiAzMzUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMwMCwgeTogMzM2LCByOiAxOTQsIGc6IDE5NywgYjogMTk1IH0sXG4gICAgeyB4OiAzMDEsIHk6IDMzNiwgcjogMTg3LCBnOiAxOTIsIGI6IDE4OSB9LFxuICAgIHsgeDogMzA3LCB5OiAzMzYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxMCwgeTogMzM2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMjAsIHk6IDMzNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzIzLCB5OiAzMzYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMzMiwgeTogMzM2LCByOiAxODEsIGc6IDE4NiwgYjogMTgzIH0sXG4gICAgeyB4OiAzNDAsIHk6IDMzNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuXG4gICAgLy8gYWdyZWUgYnRuIGJnXG4gICAgeyB4OiAxNywgeTogMjkzLCByOiAyMzIsIGc6IDIzMiwgYjogMjMyIH0sXG4gICAgeyB4OiA1NCwgeTogMzA1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MiwgeTogMzE3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAxMTEsIHk6IDMxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMjQzLCB5OiAyOTcsIHI6IDIzMiwgZzogMjMyLCBiOiAyMzIgfSxcbiAgICB7IHg6IDI1NSwgeTogMjkxLCByOiAyMzIsIGc6IDIzMiwgYjogMjMyIH0sXG4gICAgeyB4OiA1OTksIHk6IDMwNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNjEzLCB5OiAyOTUsIHI6IDIzMiwgZzogMjMyLCBiOiAyMzIgfSxcbiAgICB7IHg6IDYwMywgeTogMzE2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA0MjEsIHk6IDMyMiwgcjogMjMyLCBnOiAyMzIsIGI6IDIzMiB9LFxuXG4gICAgLy8gYmcgY29ybmVyIG91dHNpZGVcbiAgICB7IHg6IDcyLCB5OiAzMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTExLCB5OiA0MCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTg2LCB5OiAzOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTQsIHk6IDM0MCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNjE5LCB5OiAzNDAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcblxuICAgIC8vIGJnIGNvcm5lciBpbnNpZGVcbiAgICB7IHg6IDIyLCB5OiA3NywgcjogMjMyLCBnOiAyMzIsIGI6IDIzMiB9LFxuICAgIHsgeDogMTAwLCB5OiA3NywgcjogMTk3LCBnOiAxOTcsIGI6IDE5NyB9LFxuICAgIHsgeDogMTgsIHk6IDI1MywgcjogMjMyLCBnOiAyMzIsIGI6IDIzMiB9LFxuICAgIHsgeDogNjEzLCB5OiAyODYsIHI6IDIxNiwgZzogMjE2LCBiOiAyMTYgfSxcbiAgICB7IHg6IDYxMywgeTogODAsIHI6IDIxNSwgZzogMjE1LCBiOiAyMTUgfSxcbiAgICB7IHg6IDYwOSwgeTogNzMsIHI6IDIzMiwgZzogMjMyLCBiOiAyMzIgfSxcbiAgICB7IHg6IDMwNSwgeTogNzYsIHI6IDE4MywgZzogMTgzLCBiOiAxODMgfSxcbiAgICB7IHg6IDMwNCwgeTogMjkxLCByOiAyMzIsIGc6IDIzMiwgYjogMjMyIH0sXG4gIF0sXG4gIHsgeDogMzIwLCB5OiAzMDYgfSxcbiAgeyB4OiAzMjAsIHk6IDMwNiB9XG4pO1xuXG4vLyB0ZXJtIG9mIHNlcnZpY2UsIHN1aXQgZGdpOTBcbmNvbnN0IFRPUzkwID0gbmV3IFBhZ2UoXG4gICdUT1M5MCcsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMzIsIHk6IDI4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAxMCwgeTogMzQyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MjIsIHk6IDM0MywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNjIxLCB5OiAzMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuXG4gICAgLy8gbG9nb1xuICAgIHsgeDogMjg4LCB5OiAyNywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzAxLCB5OiAyNywgcjogMjQ2LCBnOiAxNzcsIGI6IDE4NSB9LFxuICAgIHsgeDogMzIxLCB5OiAyNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzIwLCB5OiAyOCwgcjogMjQ1LCBnOiAxNjEsIGI6IDE3MSB9LFxuICAgIHsgeDogMzMwLCB5OiAyOCwgcjogMjMwLCBnOiAzNiwgYjogNjAgfSxcbiAgICB7IHg6IDM0NCwgeTogMjgsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiAzMjEsIHk6IDMyMSB9LFxuICB7IHg6IDMyMSwgeTogMzIxIH1cbik7XG5cbi8vIGZvciBkZ2k5MCBhbmQgbmF2aSBiYXIgaXMgc21hbGxlclxuY29uc3QgVE9TOTB2MiA9IG5ldyBQYWdlKFxuICAnVE9TOTB2MicsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMiwgeTogMjMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDEsIHk6IDQyLCByOiAyMzIsIGc6IDIzMiwgYjogMjMyIH0sXG4gICAgeyB4OiAxLCB5OiAzMjUsIHI6IDIzMiwgZzogMjMyLCBiOiAyMzIgfSxcbiAgICB7IHg6IDcsIHk6IDM0OCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNjMxLCB5OiAzNTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDYyOCwgeTogMzIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MzMsIHk6IDI5MiwgcjogMjEzLCBnOiAyMTMsIGI6IDIxMyB9LFxuICAgIHsgeDogNjMwLCB5OiA0MCwgcjogMjMyLCBnOiAyMzIsIGI6IDIzMiB9LFxuICAgIHsgeDogNjI4LCB5OiAyMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuXG4gICAgLy8gbG9nb1xuICAgIHsgeDogMjk2LCB5OiAyMSwgcjogMjQ4LCBnOiAxOTIsIGI6IDE5OSB9LFxuICAgIHsgeDogMzE2LCB5OiAyNCwgcjogMjI3LCBnOiA2LCBiOiAzMyB9LFxuICAgIHsgeDogMzQwLCB5OiAyMiwgcjogMjM5LCBnOiAxMTUsIGI6IDEzMCB9LFxuICBdLFxuICB7IHg6IDMyMSwgeTogMzIxIH0sXG4gIHsgeDogMzIxLCB5OiAzMjEgfVxuKTtcblxuLy8gbGlrZSBsYW5kaW5nIGJ1dCBoYXMgcHJvZ3Jlc3MgYmFyLCBsb2dvIHBvc2l0aW9uIGlzIGRpZmZcbmNvbnN0IGxhbmRpbmdMb2FkaW5nUHJvZ3Jlc3NCYXIgPSBuZXcgUGFnZShcbiAgJ2xhbmRpbmdMb2FkaW5nUHJvZ3Jlc3NCYXInLFxuICBbXG4gICAgLy8gbG9nbyBpbiBjZW50ZXJcbiAgICAvLyA5aW5uaW5nc1xuICAgIHsgeDogMjE1LCB5OiAyNDMsIHI6IDIwOSwgZzogMTk2LCBiOiAxOTkgfSxcbiAgICB7IHg6IDI2MSwgeTogMjU0LCByOiAxNiwgZzogMzYsIGI6IDY2IH0sXG4gICAgeyB4OiAzMDYsIHk6IDI0OCwgcjogMjUsIGc6IDQ1LCBiOiA3NCB9LFxuICAgIHsgeDogMzQ1LCB5OiAyNTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcblxuICAgIC8vIHllbGxvdyBsb2FkaW5nIGJhclxuICAgIHsgeDogMjQ3LCB5OiAzMjksIHI6IDI1NSwgZzogMjAyLCBiOiAwIH0sXG4gICAgeyB4OiAzNjEsIHk6IDMzMCwgcjogMjU1LCBnOiAyMTAsIGI6IDAgfSxcbiAgICB7IHg6IDQxMCwgeTogMzI5LCByOiAyNTUsIGc6IDIxNCwgYjogMCB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5cbmNvbnN0IG1haW4gPSBuZXcgUGFnZShcbiAgJ21haW4nLFxuICBbXG4gICAgLy8gbmF2aSBiYXIgcmlnaHRcbiAgICB7IHg6IDYyMiwgeTogOSwgcjogMjE0LCBnOiAyMTAsIGI6IDIxNCB9LFxuICAgIHsgeDogNTk4LCB5OiAxMSwgcjogMjE0LCBnOiAyMjYsIGI6IDIzOCB9LFxuICAgIHsgeDogNTkyLCB5OiAxNCwgcjogNzQsIGc6IDkzLCBiOiAxMjMgfSxcbiAgICB7IHg6IDQ5NCwgeTogMTUsIHI6IDIzOSwgZzogMTc5LCBiOiAyOCB9LFxuICAgIHsgeDogNTAzLCB5OiAxNywgcjogNzQsIGc6IDg0LCBiOiA5MCB9LFxuICAgIHsgeDogMzg5LCB5OiAxMiwgcjogMTk3LCBnOiAyMDIsIGI6IDE5NyB9LFxuICAgIHsgeDogMzEzLCB5OiAxMSwgcjogMTc0LCBnOiAxNzgsIGI6IDE3OSB9LFxuICAgIHsgeDogMjk3LCB5OiAxNSwgcjogMjE0LCBnOiAyMTQsIGI6IDIxNCB9LFxuXG4gICAgLy8gYnRuIGxlZnQsIHdpdGggc2V0dGluZ3NcbiAgICB7IHg6IDMxLCB5OiAzMjYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDg3LCB5OiAzMjYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDEzNywgeTogMzI2LCByOiAxNDAsIGc6IDEzOSwgYjogMTMyIH0sXG4gICAgeyB4OiAxODksIHk6IDMyNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMjQzLCB5OiAzMjgsIHI6IDEyNiwgZzogMTI5LCBiOiAxMjYgfSxcbiAgICB7IHg6IDI5OSwgeTogMzI4LCByOiAxMDMsIGc6IDEwNywgYjogOTkgfSxcblxuICAgIC8vIGJ0biByaWdodFxuICAgIHsgeDogNTE0LCB5OiAzMjQsIHI6IDMzLCBnOiA5OCwgYjogMTY0IH0sXG4gICAgeyB4OiA1NzAsIHk6IDMyNywgcjogMTMzLCBnOiAyNywgYjogMzUgfSxcbiAgXSxcbiAgeyB4OiAwLCB5OiAwIH0sXG4gIHsgeDogMCwgeTogMCB9XG4pO1xuXG5jb25zdCBtYWluQnRucyA9IHtcbiAgbGVhZ3VlTW9kZTogeyB4OiAyMDQsIHk6IDE1NCB9LFxuICBiYXR0bGVNb2RlOiB7IHg6IDM1MCwgeTogMTQ1IH0sXG4gIHNwZWNpYWxNb2RlOiB7IHg6IDQzOCwgeTogMTQ1IH0sXG4gIGNsdWJNb2RlOiB7IHg6IDU1NiwgeTogMTQ1IH0sXG4gIHNldHRpbmdzOiB7IHg6IDI5OCwgeTogMzI3IH0sXG4gIGFkVGFiOiB7IHg6IDU5MCwgeTogNzcgfSxcbiAgYWNoaWV2ZW1lbnQ6IHsgeDogMTM5LCB5OiAzMjAgfSxcbiAgaW5ib3g6IHsgeDogNDUsIHk6IDMxOCB9LFxufTtcblxuY29uc3QgY2hhdERpYWxvZ0NoYXRPbkJ0biA9IG5ldyBQYWdlKFxuICAnY2hhdERpYWxvZ0NoYXRPbkJ0bicsXG4gIFtcbiAgICB7IHg6IDUyNiwgeTogMjc2LCByOiAxOTksIGc6IDIwNywgYjogMjE0IH0sXG4gICAgeyB4OiA1NDEsIHk6IDI4NiwgcjogMiwgZzogODYsIGI6IDIzOCB9LFxuICAgIHsgeDogNTY2LCB5OiAyNzMsIHI6IDE4OCwgZzogMjE4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDU4NCwgeTogMjg0LCByOiA4LCBnOiA5MCwgYjogMjM4IH0sXG4gICAgeyB4OiA1OTQsIHk6IDI3OSwgcjogMzMsIGc6IDEwMiwgYjogMjAxIH0sXG4gIF0sXG4gIHsgeDogNTY3LCB5OiAyODAgfSwgLy8gdHVybiBvZmZcbiAgeyB4OiA0MCwgeTogMzEzIH0gLy8gYmFja1xuKTtcblxuLy8gbGlrZSBtYWluIGJ1dCBmcmVlemVcbmNvbnN0IG1haW5GcmVlemVkID0gbmV3IFBhZ2UoJ21haW5GcmVlemVkJywgW1xuICAvLyByaWdodCB0b3AgZGlhbG9nXG4gIHsgeDogMzg4LCB5OiAzMCwgcjogNDEsIGc6IDUzLCBiOiA3NCB9LFxuICB7IHg6IDQ1MSwgeTogNDcsIHI6IDQxLCBnOiA1MywgYjogNzQgfSxcbiAgeyB4OiA0OTcsIHk6IDE2LCByOiA5MCwgZzogMTAxLCBiOiAxMTUgfSxcbiAgeyB4OiA2MTEsIHk6IDU2LCByOiAzMywgZzogNDksIGI6IDY2IH0sXG4gIHsgeDogNDEwLCB5OiAyNywgcjogMTcyLCBnOiAxNTYsIGI6IDEwMiB9LFxuICB7IHg6IDUyMSwgeTogMjgsIHI6IDEwNCwgZzogOTYsIGI6IDcyIH0sXG5cbiAgLy8gZ3Jhc3MgaW4gbWlkZGxlXG4gIHsgeDogMzI3LCB5OiAxNTYsIHI6IDI3LCBnOiAyNywgYjogMjcgfSxcbiAgeyB4OiA2MDIsIHk6IDE2NiwgcjogMjAsIGc6IDI2LCBiOiAzMyB9LFxuXG4gIC8vIGJvdHRvbSBidG4gbGVmdFxuICB7IHg6IDQ3LCB5OiAzNDEsIHI6IDE5MSwgZzogMTk2LCBiOiAxOTEgfSxcbiAgeyB4OiAyOTUsIHk6IDMyOSwgcjogMTI1LCBnOiAxMjcsIGI6IDEyMSB9LFxuICB7IHg6IDM1NiwgeTogMzM0LCByOiA0MSwgZzogNTMsIGI6IDMzIH0sXG5cbiAgLy8gYm90dG9tIGJ0biByaWdodFxuICB7IHg6IDU1MCwgeTogMzM1LCByOiAyNSwgZzogNzMsIGI6IDE0MCB9LFxuICB7IHg6IDYxOCwgeTogMzM2LCByOiAxMDAsIGc6IDI3LCBiOiAyNyB9LFxuXSk7XG4iLCJpbXBvcnQgeyBQYWdlLCBVdGlscyB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IHN0YXRlLCByZXJvdXRlciwgQ29uZmlnIH0gZnJvbSAnLi4vLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza05hbWVzJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3VuZXhwZWN0ZWRFcnJvci5uYW1lfWAsXG4gICAgY3VzdG9tTWF0Y2g6IChjb250ZXh0LCBpbWFnZSkgPT5cbiAgICAgIHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UodW5leHBlY3RlZEVycm9yLCBpbWFnZSkgJiZcbiAgICAgICFyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKGxlYWd1ZU1vZGVVbmV4cGVjdGVkRXJyb3IsIGltYWdlKSAmJlxuICAgICAgIXJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UoYWRSZXdhcmRPbkNELCBpbWFnZSkgJiZcbiAgICAgICFyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHBsYXllclJlc2VydmVFcnJvciwgaW1hZ2UpICYmXG4gICAgICAhcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShpbnZhbGlkR2FtZVN0YXR1czE4MDEsIGltYWdlKSxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHdlZWtseU1pc3Npb25Cb3hSZWNlaXZlZCwgaW1hZ2UpKSB7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dCh3ZWVrbHlNaXNzaW9uQm94UmVjZWl2ZWQpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKG5ldHdvcmtFcnJvcjExMiwgaW1hZ2UpKSB7XG4gICAgICAgIC8vIGNhbiBvbmx5IHJlc29sdmVkIGJ5IHJlc2V0dGluZyBsZWFndWUgbW9kZSBwcm9ncmVzc1xuICAgICAgICBjb25zb2xlLmxvZygndHVybk9uUmVzZXRMZWFndWVNb2RlUHJvZ3Jlc3MnKTtcbiAgICAgICAgc3RhdGUub25OZWVkUmVzZXRMZWFndWVFcnJvcihuZXR3b3JrRXJyb3IxMTIubmFtZSk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChuZXR3b3JrRXJyb3JJbnZhbGlkTWFzdGVyTGVhZ3VlU3RhdHVzKTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gY2hlY2sgY2hpbGQgJiBpdHMgY2hpbGQgcGFnZXNcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKG5ldHdvcmtFcnJvck1vdmVUb0xvYmJ5LCBpbWFnZSkpIHtcbiAgICAgICAgLy8gYSBzcGVjaWFsIGNhc2VcbiAgICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UobmV0d29ya0Vycm9ySW52YWxpZE1hc3RlckxlYWd1ZVN0YXR1cywgaW1hZ2UpKSB7XG4gICAgICAgICAgLy8gY2FuIG9ubHkgcmVzb2x2ZWQgYnkgcmVzZXR0aW5nIGxlYWd1ZSBtb2RlIHByb2dyZXNzXG4gICAgICAgICAgY29uc29sZS5sb2coJ3R1cm5PblJlc2V0TGVhZ3VlTW9kZVByb2dyZXNzJyk7XG4gICAgICAgICAgc3RhdGUub25OZWVkUmVzZXRMZWFndWVFcnJvcihuZXR3b3JrRXJyb3JJbnZhbGlkTWFzdGVyTGVhZ3VlU3RhdHVzLm5hbWUpO1xuICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChuZXR3b3JrRXJyb3JJbnZhbGlkTWFzdGVyTGVhZ3VlU3RhdHVzKTtcbiAgICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICByZXJvdXRlci5nb05leHQobmV0d29ya0Vycm9yTW92ZVRvTG9iYnkpO1xuICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICAgIHN0YXRlLm9uVW5leHBlY3RlZE5ldHdvcmtFcnJvcigpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlcm91dGVyLmdvTmV4dCh1bmV4cGVjdGVkRXJyb3IpO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bmV0d29ya05vdGljZU1vdmVUb0xvYmJ5Lm5hbWV9YCxcbiAgICBtYXRjaDogbmV0d29ya05vdGljZU1vdmVUb0xvYmJ5LFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgcmVyb3V0ZXIuZ29OZXh0KG5ldHdvcmtOb3RpY2VNb3ZlVG9Mb2JieSk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICBzdGF0ZS5vblVuZXhwZWN0ZWROZXR3b3JrRXJyb3IoKTtcbiAgICB9LFxuICAgIGRlYnVnOiB0cnVlLFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2xlYWd1ZU1vZGVVbmV4cGVjdGVkRXJyb3IubmFtZX1gLFxuICAgIG1hdGNoOiBsZWFndWVNb2RlVW5leHBlY3RlZEVycm9yLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3dpdGNoIChjb250ZXh0LnRhc2submFtZSkge1xuICAgICAgICBjYXNlIFRBU0tTLnBsYXlMZWFndWVHYW1lOlxuICAgICAgICAgIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy5oYXNDb29sRmVhdHVyZSkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIHNvbWV0aW1lcyBzb21lIHVua25vd24gcmVhc29uIGNhbm5vdCBlbnRlciBnYW1lXG4gICAgICAgICAgY29uc3QgeyB0cnlFbnRlckdhbWVDbnRzIH0gPSBzdGF0ZS5sZWFndWVHYW1lO1xuICAgICAgICAgIGNvbnNvbGUubG9nKCd0cnkgZW50ZXIgZ2FtZSBjbnRzJywgdHJ5RW50ZXJHYW1lQ250cyk7XG4gICAgICAgICAgaWYgKHRyeUVudGVyR2FtZUNudHMgPT09IDMpIHtcbiAgICAgICAgICAgIHJlcm91dGVyLnJlc3RhcnRBcHAoKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHRyeUVudGVyR2FtZUNudHMgPiAzKSB7XG4gICAgICAgICAgICAvLyBjYW4gb25seSByZXNvbHZlZCBieSByZXNldHRpbmcgbGVhZ3VlIG1vZGUgcHJvZ3Jlc3NcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd0dXJuT25SZXNldExlYWd1ZU1vZGVQcm9ncmVzcycpO1xuICAgICAgICAgICAgc3RhdGUub25OZWVkUmVzZXRMZWFndWVFcnJvcihsZWFndWVNb2RlVW5leHBlY3RlZEVycm9yLm5hbWUpO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICByZXJvdXRlci5nb05leHQobGVhZ3VlTW9kZVVuZXhwZWN0ZWRFcnJvcik7XG4gICAgfSxcbiAgfSk7XG5cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtpbnZhbGlkR2FtZVN0YXR1czE4MDEubmFtZX1gLFxuICAgIG1hdGNoOiBpbnZhbGlkR2FtZVN0YXR1czE4MDEsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygnaW52YWxpZCBnYW1lIHN0YXR1cyAxODAxLCBtdXN0IHJlc2FydCBhcHAgJiByZXNldCBsZWFndWUgcHJvZ3Jlc3MnKTtcbiAgICAgIGNvbnNvbGUubG9nKCd0dXJuT25SZXNldExlYWd1ZU1vZGVQcm9ncmVzcycpO1xuICAgICAgc3RhdGUub25OZWVkUmVzZXRMZWFndWVFcnJvcihpbnZhbGlkR2FtZVN0YXR1czE4MDEubmFtZSk7XG4gICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIHJlcm91dGVyLnJlc3RhcnRBcHAoKTtcbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2FkUmV3YXJkT25DRC5uYW1lfWAsXG4gICAgbWF0Y2g6IGFkUmV3YXJkT25DRCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgY29uc29sZS5sb2coJ2FkIGlzIHN0aWxsIGNkJyk7XG4gICAgICByZXJvdXRlci5nb0JhY2soYWRSZXdhcmRPbkNEKTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSA9PT0gVEFTS1MuYWRSZXdhcmQpIHtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7cGxheWVyUmVzZXJ2ZUVycm9yLm5hbWV9YCxcbiAgICBtYXRjaDogcGxheWVyUmVzZXJ2ZUVycm9yLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ3BsYXllciByZXNlcnZlIGVycm9yJyk7XG4gICAgICByZXJvdXRlci5nb05leHQocGxheWVyUmVzZXJ2ZUVycm9yKTtcbiAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5yZWNlaXZlSW5ib3gpIHtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICB9XG4gICAgfSxcbiAgfSk7XG5cbiAgW2Vycm9yTmV3VXBkYXRlQXZhaWxhYmxlLCBhcHBJc05vdFJlc3BvbmRpbmddLmZvckVhY2gocCA9PiB7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke3AubmFtZX1gLFxuICAgICAgbWF0Y2g6IHAsXG4gICAgICBhY3Rpb246ICdnb05leHQnLFxuICAgICAgYWZ0ZXJBY3Rpb25EZWxheTogQ09OU1RBTlRTLnNsZWVwV2FpdFBhZ2VMb25nLFxuICAgIH0pO1xuICB9KTtcbn1cblxuLy8gZm9yIHNvbWUgc2l0dWF0aW9uLCB1bmV4cGVjdGVkRXJyb3IgaGFwcGVuc1xuLy8gdGhpcyBhbHNvIGluY2x1ZGVzIG5ldHdvcmsgZXJyb3JcbmNvbnN0IHVuZXhwZWN0ZWRFcnJvciA9IG5ldyBQYWdlKFxuICAndW5leHBlY3RlZEVycm9yJyxcbiAgW1xuICAgIHsgeDogMzIzLCB5OiAzOSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIC8vIHggbWlnaHQgYmUgY292ZXJlZCBieSBvdGhlciBlbGVtZW50c1xuICAgIC8vIHsgeDogNTE0LCB5OiA0NCwgcjogODAsIGc6IDgxLCBiOiA4MSB9LFxuICAgIC8vIHsgeDogNTI0LCB5OiA0OCwgcjogNjQsIGc6IDcwLCBiOiA3MSB9LFxuICAgIC8vIHsgeDogNTE4LCB5OiA1NCwgcjogNjUsIGc6IDcxLCBiOiA3MSB9LFxuXG4gICAgeyB4OiAzMTUsIHk6IDI2OSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMzE1LCB5OiAyOTMsIHI6IDgsIGc6IDEyNSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMTYsIHk6IDI5OSwgcjogMjQxLCBnOiAyNDcsIGI6IDI1NSB9LFxuICAgIHsgeDogMzE3LCB5OiAzMTAsIHI6IDAsIGc6IDkyLCBiOiAyNDUgfSxcbiAgICB7IHg6IDMxNywgeTogMzEzLCByOiAwLCBnOiA4NSwgYjogMjQwIH0sXG4gICAgeyB4OiAzMTcsIHk6IDMyMywgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICBdLFxuICB7IHg6IDMxNCwgeTogMjk5IH0sXG4gIHsgeDogMzE0LCB5OiAyOTkgfVxuKTtcblxuLy8gaGFwcGVuIGluIGxlYWd1ZSBtYXN0ZXIgbW9kZSB3aGVuIHVuc3RhYmxlIG5ldHdvcmsgZXJyb3Jcbi8vIG9ubHkgbW92ZSB0byBsb2JieSwgc2hvdWxkIHJlc3RhcnQgYXBwIGZvciBlbnRlcmluZyBnYW1lXG5jb25zdCBuZXR3b3JrRXJyb3JNb3ZlVG9Mb2JieSA9IG5ldyBQYWdlKFxuICAnbmV0d29ya0Vycm9yTW92ZVRvTG9iYnknLFxuICBbXG4gICAgLy8gdGl0bGVcbiAgICB7IHg6IDI1MiwgeTogNTMsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDI2OSwgeTogNTcsIHI6IDM2LCBnOiA0MywgYjogNDkgfSxcbiAgICB7IHg6IDI4MSwgeTogNTcsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDI3OCwgeTogNjMsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDI5MCwgeTogNjEsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMwMSwgeTogNjIsIHI6IDM4LCBnOiA0MywgYjogNTAgfSxcbiAgICB7IHg6IDMwOSwgeTogNjAsIHI6IDM4LCBnOiA0MCwgYjogNDcgfSxcbiAgICB7IHg6IDMxNiwgeTogNjEsIHI6IDE0NCwgZzogMTQ4LCBiOiAxNTIgfSxcbiAgICB7IHg6IDMyOCwgeTogNTksIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDMzNywgeTogNjQsIHI6IDE2MCwgZzogMTY1LCBiOiAxNjkgfSxcbiAgICB7IHg6IDM1MSwgeTogNjQsIHI6IDI0LCBnOiAzMCwgYjogMzcgfSxcbiAgICB7IHg6IDM1NiwgeTogNjAsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM2NiwgeTogNjQsIHI6IDEwMCwgZzogMTA0LCBiOiAxMDkgfSxcbiAgICB7IHg6IDM3MCwgeTogNTksIHI6IDEzMiwgZzogMTM4LCBiOiAxNDQgfSxcbiAgICB7IHg6IDM4MCwgeTogNjUsIHI6IDk4LCBnOiAxMDMsIGI6IDExMCB9LFxuXG4gICAgLy8gY29udGVudFxuICAgIC8vIHsgeDogMTQ3LCB5OiAxNjYsIHI6IDQxLCBnOiA0OSwgYjogNTggfSxcbiAgICAvLyB7IHg6IDE2MCwgeTogMTcxLCByOiA0MSwgZzogNDksIGI6IDU4IH0sXG4gICAgLy8geyB4OiAyMDAsIHk6IDE2NiwgcjogMTI5LCBnOiAxMzYsIGI6IDE0MSB9LFxuICAgIC8vIHsgeDogMjI4LCB5OiAxNzEsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICAvLyB7IHg6IDI2MCwgeTogMTYyLCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgLy8geyB4OiAyNzMsIHk6IDE2OSwgcjogNzgsIGc6IDgzLCBiOiA5MSB9LFxuICAgIC8vIHsgeDogNDA0LCB5OiAxNjcsIHI6IDEwNCwgZzogMTExLCBiOiAxMTggfSxcbiAgICAvLyB7IHg6IDQxNywgeTogMTcyLCByOiA2MCwgZzogNjksIGI6IDc3IH0sXG4gICAgLy8geyB4OiA0MzQsIHk6IDE2NiwgcjogMTMwLCBnOiAxMzgsIGI6IDE0MiB9LFxuICAgIC8vIHsgeDogNDUyLCB5OiAxNzQsIHI6IDE1MSwgZzogMTU3LCBiOiAxNjQgfSxcbiAgICAvLyB7IHg6IDQ2OCwgeTogMTY1LCByOiA0MSwgZzogNTAsIGI6IDYwIH0sXG4gICAgLy8geyB4OiA0ODIsIHk6IDE3NCwgcjogMTU2LCBnOiAxNjAsIGI6IDE2NyB9LFxuICAgIC8vIHsgeDogNDg5LCB5OiAxNzIsIHI6IDc5LCBnOiA4MywgYjogOTUgfSxcbiAgICAvLyB7IHg6IDUwNCwgeTogMTc1LCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gIF0sXG4gIHsgeDogMzE0LCB5OiAyOTkgfSxcbiAgeyB4OiAzMTQsIHk6IDI5OSB9XG4pO1xuXG4vLyBoYXBwZW4gaW4gbGVhZ3VlIG1hc3RlciBtb2RlIHdoZW4gdW5zdGFibGUgbmV0d29yayBlcnJvclxuLy8gbm8gbW92ZSB0byBsb2JieSwgYnV0IHN0aWxsIGNhbm5vdCBwbGF5IG1hc3RlciBnYW1lIChjYW4gZW50ZXIgZ2FtZSwgYnV0IGNhbm5vdCBjb250aW51ZSBhbmltYXRpb24pXG5jb25zdCBuZXR3b3JrRXJyb3JJbnZhbGlkTWFzdGVyTGVhZ3VlU3RhdHVzID0gbmV3IFBhZ2UoXG4gICduZXR3b3JrRXJyb3JJbnZhbGlkTWFzdGVyTGVhZ3VlU3RhdHVzJyxcbiAgW1xuICAgIC8vIGNvbnRlbnQ6IGludmFsaWQgbWFzdGVyIGxlYWd1ZSBzdGF0dXNcbiAgICB7IHg6IDIzMCwgeTogMTczLCByOiA5NCwgZzogMTAxLCBiOiAxMTEgfSxcbiAgICB7IHg6IDI0MSwgeTogMTc1LCByOiAxMzMsIGc6IDEzNywgYjogMTQ0IH0sXG4gICAgeyB4OiAyNTcsIHk6IDE3NCwgcjogNjQsIGc6IDcwLCBiOiA3NyB9LFxuICAgIHsgeDogMjY4LCB5OiAxNzQsIHI6IDU4LCBnOiA2NywgYjogNzQgfSxcbiAgICB7IHg6IDI4NywgeTogMTczLCByOiAxMTAsIGc6IDExNywgYjogMTI2IH0sXG4gICAgeyB4OiAzMDQsIHk6IDE3NCwgcjogMTEwLCBnOiAxMTgsIGI6IDEyNiB9LFxuICAgIHsgeDogMzI1LCB5OiAxNzYsIHI6IDEyOCwgZzogMTM0LCBiOiAxNDEgfSxcbiAgICB7IHg6IDM0MiwgeTogMTc0LCByOiA4MSwgZzogODgsIGI6IDk4IH0sXG4gICAgeyB4OiAzNjIsIHk6IDE3NSwgcjogMTYwLCBnOiAxNjYsIGI6IDE3MCB9LFxuICAgIHsgeDogMzc1LCB5OiAxNzQsIHI6IDQ1LCBnOiA1NCwgYjogNjEgfSxcbiAgICB7IHg6IDM4OSwgeTogMTcwLCByOiA3OSwgZzogODYsIGI6IDk1IH0sXG4gICAgeyB4OiAzOTgsIHk6IDE3NCwgcjogMTMxLCBnOiAxMzksIGI6IDE0MyB9LFxuICAgIHsgeDogNDIyLCB5OiAxNzUsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgXSxcbiAgeyB4OiAzMTQsIHk6IDI5OSB9LCAvLyBva1xuICB7IHg6IDMxNCwgeTogMjk5IH1cbik7XG5cbi8vIHNhbWUgYXMgZXJyb3IsIGRpZmYgbGF5b3V0XG5jb25zdCBuZXR3b3JrTm90aWNlTW92ZVRvTG9iYnkgPSBuZXcgUGFnZShcbiAgJ25ldHdvcmtOb3RpY2VNb3ZlVG9Mb2JieScsXG4gIFtcbiAgICAvLyBjb250ZW50XG4gICAgeyB4OiAyMzIsIHk6IDE0OCwgcjogMTgyLCBnOiAxODUsIGI6IDE5NCB9LFxuICAgIHsgeDogMjEzLCB5OiAxNzQsIHI6IDc1LCBnOiA4MCwgYjogOTAgfSxcbiAgICB7IHg6IDIwMiwgeTogMTkxLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAyMjQsIHk6IDE5MSwgcjogOTEsIGc6IDk5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDM4MiwgeTogMTQ2LCByOiAxOTEsIGc6IDE5MiwgYjogMjAwIH0sXG4gICAgeyB4OiAzOTgsIHk6IDE1MCwgcjogMTE4LCBnOiAxMjMsIGI6IDEyOSB9LFxuICAgIHsgeDogMzkzLCB5OiAxNzIsIHI6IDEzNywgZzogMTQxLCBiOiAxNTAgfSxcbiAgICB7IHg6IDQyMCwgeTogMTcyLCByOiA5MywgZzogMTAwLCBiOiAxMTAgfSxcbiAgICB7IHg6IDQyMiwgeTogMTkwLCByOiA2NywgZzogNzQsIGI6IDgzIH0sXG4gICAgeyB4OiA0NDgsIHk6IDE5OSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogNDQ4LCB5OiAxOTksIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcblxuICAgIC8vIHllc1xuICAgIHsgeDogMzYyLCB5OiAzMDAsIHI6IDgsIGc6IDExNywgYjogMjU1IH0sXG4gICAgeyB4OiA0MDMsIHk6IDMwMywgcjogMjQ3LCBnOiAyNTAsIGI6IDI1MyB9LFxuICAgIHsgeDogNDI3LCB5OiAzMDksIHI6IDgsIGc6IDkzLCBiOiAyNDAgfSxcblxuICAgIC8vIG5vXG4gICAgeyB4OiAyMDYsIHk6IDMwMCwgcjogNDEsIGc6IDc3LCBiOiAxMjMgfSxcbiAgICB7IHg6IDI0MSwgeTogMzAxLCByOiAxNzYsIGc6IDE5NSwgYjogMjI1IH0sXG4gICAgeyB4OiAyNzksIHk6IDMxMCwgcjogMzQsIGc6IDY5LCBiOiAxMTUgfSxcbiAgXSxcbiAgeyB4OiAzNjIsIHk6IDMwMCB9LCAvLyB5ZXMsIGRvbid0IG1vdmUgdG8gbG9iYnlcbiAgeyB4OiAzNjIsIHk6IDMwMCB9XG4pO1xuXG4vLyBzZWVtcyByZWxhdGVkIHRvIGxlYWd1ZSByZXNldFxuY29uc3QgbmV0d29ya0Vycm9yMTEyID0gbmV3IFBhZ2UoXG4gICduZXR3b3JrRXJyb3IxMTInLFxuICBbXG4gICAgLy8gdGl0bGUgbmV0d29yayBlcnJvciAoMTEyKVxuICAgIHsgeDogMjI3LCB5OiA1OCwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMjU3LCB5OiA1NiwgcjogMTQ3LCBnOiAxNTAsIGI6IDE1NSB9LFxuICAgIHsgeDogMjk0LCB5OiA1NiwgcjogMTA4LCBnOiAxMTMsIGI6IDExNiB9LFxuICAgIHsgeDogMzI0LCB5OiA2NiwgcjogNTksIGc6IDYyLCBiOiA2NyB9LFxuICAgIHsgeDogMzQyLCB5OiA1OCwgcjogMTM2LCBnOiAxMzgsIGI6IDE0OCB9LFxuICAgIHsgeDogMzY1LCB5OiA2MywgcjogODAsIGc6IDg3LCBiOiA5MiB9LFxuICAgIHsgeDogMzgwLCB5OiA2MCwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMzk0LCB5OiA2MiwgcjogODAsIGc6IDgzLCBiOiA5MiB9LFxuICAgIHsgeDogNDA2LCB5OiA2MiwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuXG4gICAgLy8gY29udGVudCAoMTEyKVxuICAgIHsgeDogMzEzLCB5OiAxNjksIHI6IDY2LCBnOiA1OSwgYjogNTcgfSxcbiAgICB7IHg6IDMyNiwgeTogMTY5LCByOiAxNjksIGc6IDE2OCwgYjogMTczIH0sXG4gICAgeyB4OiAzNDEsIHk6IDE2OSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICBdLFxuICB7IHg6IDMxMCwgeTogMzA0IH0sXG4gIHsgeDogMzEwLCB5OiAzMDQgfVxuKTtcblxuY29uc3QgaW52YWxpZEdhbWVTdGF0dXMxODAxID0gbmV3IFBhZ2UoXG4gICdpbnZhbGlkR2FtZVN0YXR1czE4MDEnLFxuICBbXG4gICAgLy8gYmdcbiAgICB7IHg6IDE5NywgeTogMjAwLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiA0NzksIHk6IDIwNywgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMTU2LCB5OiAxMzEsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDQ5NiwgeTogMTI5LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAxNDcsIHk6IDMwOCwgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogNDY1LCB5OiAzMTEsIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcbiAgICB7IHg6IDUyMiwgeTogMjkwLCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG5cbiAgICAvLyBubyB0aXRsZVxuICAgIHsgeDogMTYwLCB5OiA1MywgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogNDkzLCB5OiA1MywgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuXG4gICAgLy8gY29udGVudDogaW52YWxpZCBnYW1lIHN0YXR1cyAoMTgwMSlcbiAgICB7IHg6IDIyNCwgeTogMTY5LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAyNTMsIHk6IDE2OSwgcjogMTQ0LCBnOiAxNDIsIGI6IDE0NyB9LFxuICAgIHsgeDogMjc0LCB5OiAxNzAsIHI6IDEzNiwgZzogMTM2LCBiOiAxNDAgfSxcbiAgICB7IHg6IDI5NiwgeTogMTczLCByOiAxMTEsIGc6IDEwNywgYjogMTExIH0sXG4gICAgeyB4OiAzMDgsIHk6IDE3MCwgcjogMTA5LCBnOiAxMDUsIGI6IDEwOSB9LFxuICAgIHsgeDogMzI3LCB5OiAxNzAsIHI6IDE4MCwgZzogMTgxLCBiOiAxODcgfSxcbiAgICB7IHg6IDMzOSwgeTogMTY5LCByOiAxMzUsIGc6IDEzMywgYjogMTM1IH0sXG4gICAgeyB4OiAzNTIsIHk6IDE3MywgcjogNzMsIGc6IDcyLCBiOiA2NyB9LFxuICAgIHsgeDogMzY3LCB5OiAxNzAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM3OSwgeTogMTcwLCByOiA3MCwgZzogNjcsIGI6IDY0IH0sXG4gICAgeyB4OiAzODcsIHk6IDE3MywgcjogMTM0LCBnOiAxMzAsIGI6IDEzMSB9LFxuICAgIHsgeDogMzkyLCB5OiAxNzAsIHI6IDE5NywgZzogMTk2LCBiOiAyMDYgfSxcbiAgICB7IHg6IDQwMCwgeTogMTcyLCByOiAxNTgsIGc6IDE1NywgYjogMTYxIH0sXG4gICAgeyB4OiA0MTgsIHk6IDE3MSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuXG4gICAgLy8gb2sgYnRuXG4gICAgeyB4OiAyNjksIHk6IDI5OCwgcjogOCwgZzogMTE4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxOCwgeTogMjk5LCByOiAxNTUsIGc6IDE5MiwgYjogMjQ2IH0sXG4gICAgeyB4OiAzNTQsIHk6IDI5OSwgcjogOCwgZzogMTE0LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM4MiwgeTogMzA1LCByOiA4LCBnOiAxMDIsIGI6IDI0NyB9LFxuICBdLFxuICB7IHg6IDMxNSwgeTogMjk4IH0sXG4gIHsgeDogMzE1LCB5OiAyOTggfVxuKTtcblxuLy8gY2Fubm90IGdvIHRvIGxlYWd1ZSBtb2RlIGR1ZSB0byB1bmV4cGVjdGVkIGVycm9yXG5jb25zdCBsZWFndWVNb2RlVW5leHBlY3RlZEVycm9yID0gbmV3IFBhZ2UoXG4gICdsZWFndWVNb2RlVW5leHBlY3RlZEVycm9yJyxcbiAgW1xuICAgIC8vIHRpdGxlIG5vdGljZVxuICAgIHsgeDogMjkyLCB5OiA1NCwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMjk3LCB5OiA1NiwgcjogNjAsIGc6IDY3LCBiOiA3NyB9LFxuICAgIHsgeDogMzEyLCB5OiA1NiwgcjogOTYsIGc6IDk5LCBiOiAxMDkgfSxcblxuICAgIC8vIGNvbnRlbnRcbiAgICB7IHg6IDE1OSwgeTogMTQyLCByOiA1MiwgZzogNTksIGI6IDY5IH0sXG4gICAgeyB4OiAxNDEsIHk6IDE2OSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMTkzLCB5OiAxNjcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDE2NCwgeTogMTgyLCByOiA4MSwgZzogODcsIGI6IDk2IH0sXG4gICAgeyB4OiAyMDAsIHk6IDE4NCwgcjogMTk0LCBnOiAxOTUsIGI6IDIwMyB9LFxuICAgIHsgeDogMjczLCB5OiAyMDIsIHI6IDE0MSwgZzogMTQ3LCBiOiAxNTUgfSxcbiAgICB7IHg6IDI5NiwgeTogMjAyLCByOiAxMDMsIGc6IDEwNywgYjogMTE1IH0sXG4gICAgeyB4OiAzMjksIHk6IDIwOSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMzgxLCB5OiAyMDgsIHI6IDEzNiwgZzogMTM5LCBiOiAxNDcgfSxcbiAgICB7IHg6IDQzNSwgeTogMTQwLCByOiA4MywgZzogODksIGI6IDk3IH0sXG4gICAgeyB4OiA0NTYsIHk6IDE0MSwgcjogMTI0LCBnOiAxMjcsIGI6IDEzNCB9LFxuICAgIHsgeDogNDgwLCB5OiAxNTksIHI6IDc5LCBnOiA4NiwgYjogOTcgfSxcbiAgICB7IHg6IDQ4NiwgeTogMTgzLCByOiA0MSwgZzogNDksIGI6IDU4IH0sXG5cbiAgICAvLyBvayAmIGJnXG4gICAgeyB4OiAxNjQsIHk6IDMwNCwgcjogMjM5LCBnOiAyNDIsIGI6IDIzOSB9LFxuICAgIHsgeDogNDg3LCB5OiAzMDMsIHI6IDI0MSwgZzogMjQwLCBiOiAyNDEgfSxcbiAgXSxcbiAgeyB4OiAzMjAsIHk6IDMwMCB9LFxuICB7IHg6IDMyMCwgeTogMzAwIH1cbik7XG5cbmNvbnN0IGFwcElzTm90UmVzcG9uZGluZyA9IG5ldyBQYWdlKFxuICAnYXBwSXNOb3RSZXNwb25kaW5nJyxcbiAgW1xuICAgIHsgeDogMTY0LCB5OiAxNTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDE4OSwgeTogMTU3LCByOiAyMDMsIGc6IDIwMywgYjogMjAzIH0sXG4gICAgeyB4OiAyMjMsIHk6IDE1OCwgcjogMTcxLCBnOiAxNzEsIGI6IDE3MSB9LFxuICAgIHsgeDogMjU0LCB5OiAxNTgsIHI6IDQ4LCBnOiA0OCwgYjogNDggfSxcbiAgICB7IHg6IDI3MywgeTogMTU3LCByOiA5NiwgZzogOTYsIGI6IDk2IH0sXG4gICAgeyB4OiAzMDIsIHk6IDE1NywgcjogNTQsIGc6IDU0LCBiOiA1NCB9LFxuICAgIHsgeDogMTY4LCB5OiAxODUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDIwNSwgeTogMTkwLCByOiAxMTksIGc6IDExOSwgYjogMTE5IH0sXG4gICAgeyB4OiAyMTgsIHk6IDE4NCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMjMwLCB5OiAxODYsIHI6IDg1LCBnOiA4NSwgYjogODUgfSxcbiAgICB7IHg6IDE3MCwgeTogMjExLCByOiAxMjcsIGc6IDIwMiwgYjogMTk1IH0sXG4gICAgeyB4OiAyMTAsIHk6IDIxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTk5LCB5OiAyMTMsIHI6IDExMSwgZzogMTExLCBiOiAxMTEgfSxcbiAgICB7IHg6IDQ2NiwgeTogMTY2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA0NjksIHk6IDIxOCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDIyMCwgeTogMTg2IH0sIC8vIGNsb3NlIGFwcFxuICB7IHg6IDIyMCwgeTogMTg2IH1cbik7XG5cbi8vIG5lZWQgdG8gdXBkYXRlIGFwayB2ZXJcbmNvbnN0IGVycm9yTmV3VXBkYXRlQXZhaWxhYmxlID0gbmV3IFBhZ2UoXG4gICdlcnJvck5ld1VwZGF0ZUF2YWlsYWJsZScsXG4gIFtcbiAgICAvLyB0aXRsZVxuICAgIHsgeDogMjA4LCB5OiA0NSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMjM2LCB5OiA1OCwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuICAgIHsgeDogMjYwLCB5OiA1OCwgcjogMTI1LCBnOiAxMjksIGI6IDEzMyB9LFxuICAgIHsgeDogMjcyLCB5OiA1NywgcjogMTI4LCBnOiAxMzYsIGI6IDE0MCB9LFxuICAgIHsgeDogMzEzLCB5OiA1NiwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMzM1LCB5OiA1NiwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuICAgIHsgeDogMzYzLCB5OiA2MCwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMzgxLCB5OiA2MSwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuICAgIHsgeDogMzg4LCB5OiA2MywgcjogMTI2LCBnOiAxMzEsIGI6IDEzNCB9LFxuICAgIHsgeDogMzk3LCB5OiA2MywgcjogNTcsIGc6IDY0LCBiOiA3MCB9LFxuICAgIHsgeDogNDA3LCB5OiA1NCwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogNDE5LCB5OiA1OSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIC8vIG5ldyB1cGRhdGUgaW4gY29udGVudCAoMTA0KVxuICAgIHsgeDogMjI3LCB5OiAxMzksIHI6IDE3NiwgZzogMTc4LCBiOiAxODQgfSxcbiAgICB7IHg6IDI4OSwgeTogMTQ0LCByOiAxMTcsIGc6IDEyMSwgYjogMTIxIH0sXG4gICAgeyB4OiAyNjAsIHk6IDE0NCwgcjogMTA4LCBnOiAxMTAsIGI6IDEwOCB9LFxuICAgIHsgeDogMzA5LCB5OiAxNDQsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDMyNiwgeTogMTQyLCByOiA4NywgZzogOTEsIGI6IDkwIH0sXG4gICAgeyB4OiAzNDMsIHk6IDE0MywgcjogODMsIGc6IDg4LCBiOiA4OCB9LFxuICAgIHsgeDogMzc2LCB5OiAxNDQsIHI6IDY5LCBnOiA3MSwgYjogNjkgfSxcbiAgICB7IHg6IDM5NSwgeTogMTQ0LCByOiA2OCwgZzogNzIsIGI6IDcxIH0sXG4gICAgeyB4OiA0MDksIHk6IDE0NCwgcjogMTIyLCBnOiAxMjMsIGI6IDEyNSB9LFxuICAgIHsgeDogNDIxLCB5OiAxNDQsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiAyODUsIHk6IDI5NywgcjogOCwgZzogMTE4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxMiwgeTogMjk0LCByOiA4LCBnOiAxMjUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzIwLCB5OiAyOTksIHI6IDEzNSwgZzogMTg4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM2NCwgeTogMzA3LCByOiAwLCBnOiAxMDIsIGI6IDI0NyB9LFxuXG4gICAgLy8gcG9wdXAgYmcgYW5kIHhcbiAgICB7IHg6IDExNywgeTogNDYsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDUxMiwgeTogNDYsIHI6IDE4OCwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDUyNCwgeTogNTcsIHI6IDE4OSwgZzogMTg5LCBiOiAxODkgfSxcbiAgICB7IHg6IDE1NywgeTogMjMyLCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAyMDksIHk6IDI5NiwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogNDIzLCB5OiAzMDQsIHI6IDIyMiwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDQ0MywgeTogMjI3LCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gIF0sXG4gIC8vIFRPRE86IGNoZWNrIHdoZXRoZXIgbmVlZCB0byBwcmVzcyBva1xuICB7IHg6IDMxNCwgeTogMjk5IH0sXG4gIHsgeDogMzE0LCB5OiAyOTkgfVxuKTtcblxuY29uc3QgYWRSZXdhcmRPbkNEID0gbmV3IFBhZ2UoXG4gICdhZFJld2FyZE9uQ0QnLFxuICBbXG4gICAgLy8gdGl0bGUgY29taW5nIHNvb25cbiAgICB7IHg6IDI2NiwgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5OSwgeTogNTksIHI6IDE1NCwgZzogMTU3LCBiOiAxNjIgfSxcbiAgICB7IHg6IDMyOCwgeTogNjEsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM0MCwgeTogNTcsIHI6IDE0MSwgZzogMTQ1LCBiOiAxNDkgfSxcbiAgICB7IHg6IDM2NSwgeTogNTYsIHI6IDU3LCBnOiA2MywgYjogNzAgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiAyODgsIHk6IDMwMSwgcjogOCwgZzogMTE0LCBiOiAyNDggfSxcbiAgICB7IHg6IDMxMywgeTogMzA0LCByOiAxNTksIGc6IDE5MCwgYjogMjM1IH0sXG4gICAgeyB4OiAzNjIsIHk6IDMwNywgcjogOCwgZzogOTgsIGI6IDI0NyB9LFxuICBdLFxuICB7IHg6IDUxNiwgeTogNDggfSwgLy8gY2xvc2VcbiAgeyB4OiA1MTYsIHk6IDQ4IH1cbik7XG5cbmNvbnN0IHBsYXllclJlc2VydmVFcnJvciA9IG5ldyBQYWdlKFxuICAncGxheWVyUmVzZXJ2ZUVycm9yJyxcbiAgW1xuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAyMjgsIHk6IDU0LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAyMzYsIHk6IDYyLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAyNTksIHk6IDU2LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAyNjgsIHk6IDY0LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAyNzYsIHk6IDU3LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAyODMsIHk6IDYzLCByOiAxODksIGc6IDE5MCwgYjogMTk4IH0sXG4gICAgeyB4OiAyOTMsIHk6IDU4LCByOiAxMDksIGc6IDExMCwgYjogMTE4IH0sXG4gICAgeyB4OiAzMDQsIHk6IDYxLCByOiAxMjQsIGc6IDEyOCwgYjogMTM3IH0sXG4gICAgeyB4OiAzMDksIHk6IDYwLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAzMTUsIHk6IDYyLCByOiAyMCwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzMjQsIHk6IDU2LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAzMjksIHk6IDU5LCByOiAyMSwgZzogMjYsIGI6IDMzIH0sXG4gICAgeyB4OiAzMzcsIHk6IDYxLCByOiAxOTcsIGc6IDE5NiwgYjogMjA2IH0sXG4gICAgeyB4OiAzMzcsIHk6IDY0LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAzNDYsIHk6IDYyLCByOiAxNjIsIGc6IDE2MywgYjogMTcwIH0sXG4gICAgeyB4OiAzNTcsIHk6IDU3LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAzNjgsIHk6IDYyLCByOiAyMywgZzogMzEsIGI6IDQwIH0sXG4gICAgeyB4OiAzNzksIHk6IDU1LCByOiAyMywgZzogMzEsIGI6IDQwIH0sXG4gICAgeyB4OiAzODksIHk6IDY4LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAzOTQsIHk6IDU5LCByOiAxNDcsIGc6IDE0NiwgYjogMTU1IH0sXG4gICAgeyB4OiA0MDEsIHk6IDY1LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiA0MDgsIHk6IDU2LCByOiA2NSwgZzogNzEsIGI6IDc2IH0sXG5cbiAgICAvLyBva1xuICAgIHsgeDogMjkzLCB5OiAzMDMsIHI6IDgsIGc6IDEwOSwgYjogMjQ3IH0sXG4gICAgeyB4OiAzMTMsIHk6IDI5OCwgcjogMTk1LCBnOiAyMTYsIGI6IDI0MiB9LFxuICAgIHsgeDogMzIyLCB5OiAyOTgsIHI6IDIzMCwgZzogMjM5LCBiOiAyNTEgfSxcbiAgICB7IHg6IDMzOSwgeTogMzA0LCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogMzY5LCB5OiAyOTEsIHI6IDgsIGc6IDEyNSwgYjogMjU1IH0sXG5cbiAgICAvLyB4XG4gICAgeyB4OiA1MTQsIHk6IDQ1LCByOiA4NSwgZzogODgsIGI6IDkzIH0sXG4gICAgeyB4OiA1MTksIHk6IDUyLCByOiAxMTEsIGc6IDExMiwgYjogMTEyIH0sXG4gICAgeyB4OiA1MjcsIHk6IDQ0LCByOiAxMTEsIGc6IDExMCwgYjogMTEzIH0sXG4gIF0sXG4gIHsgeDogMzE1LCB5OiAzMDAgfSwgLy8gb2tcbiAgeyB4OiAzMTUsIHk6IDMwMCB9XG4pO1xuXG4vLyBTb21laG93IGl0IHVzZSBzYW1lIGxheW91dCBhcyB1bmV4cGVjdGVkRXJyb3JcbmNvbnN0IHdlZWtseU1pc3Npb25Cb3hSZWNlaXZlZCA9IG5ldyBQYWdlKFxuICAnd2Vla2x5TWlzc2lvbkJveFJlY2VpdmVkJyxcbiAgW1xuICAgIC8vIGJnXG4gICAgeyB4OiAxMTMsIHk6IDUzLCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAxMTcsIHk6IDMwNywgcjogMjE0LCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogNDk2LCB5OiAyOTksIHI6IDIxNCwgZzogMjE5LCBiOiAyMjIgfSxcblxuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAyMTcsIHk6IDU1LCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAyNTksIHk6IDU1LCByOiAxNzcsIGc6IDE4MSwgYjogMTg1IH0sXG4gICAgeyB4OiAyOTgsIHk6IDU5LCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAzNDEsIHk6IDYwLCByOiAxMjAsIGc6IDEyNCwgYjogMTI4IH0sXG4gICAgeyB4OiAzODYsIHk6IDU4LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiA0MDcsIHk6IDU4LCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG5cbiAgICAvLyB4XG4gICAgeyB4OiA1MTIsIHk6IDQ3LCByOiAxODEsIGc6IDE4NiwgYjogMTgyIH0sXG4gICAgeyB4OiA1MTksIHk6IDUzLCByOiA3MSwgZzogNzAsIGI6IDcxIH0sXG5cbiAgICAvLyBvayBidG5cbiAgICB7IHg6IDI4OCwgeTogMjk3LCByOiA4LCBnOiAxMjIsIGI6IDI1NSB9LFxuICAgIHsgeDogMzIwLCB5OiAzMDAsIHI6IDEzNiwgZzogMTkwLCBiOiAyNTUgfSxcbiAgICB7IHg6IDM2NCwgeTogMzAxLCByOiA4LCBnOiAxMTQsIGI6IDI0OCB9LFxuICBdLFxuICB7IHg6IDMyMCwgeTogMzAwIH0sIC8vIG9rIGJ0blxuICB7IHg6IDMyMCwgeTogMzAwIH1cbik7XG4iLCJpbXBvcnQgeyBVdGlscywgUGFnZSwgR3JvdXBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyLCBDb25maWcgfSBmcm9tICcuLi8uLi9tb2R1bGVzJztcblxuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuLi90YXNrTmFtZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uLy4uL2NvbnN0YW50cyc7XG5cbmltcG9ydCB7IGlzU2FtZUNvbG9yIH0gZnJvbSAnLi4vLi4vdXRpbHMnO1xuXG4vLyBUT0RPOiBsZXQgdXNlciBzZXQgdXAgYW5kIGhhbmRsZVxuY29uc3QgcGxheWVyRHJpbmtTZXR0aW5nID0ge1xuICBzZWxlY3RQaXRjaGVySW5kZXhlczogWy0xXSxcbiAgc2VsZWN0QmF0dGVySW5kZXhlczogWy0xXSwgLy8gY3VycmVudCBvbmx5IHN1cHBvcnQgc2VsZWN0IGFsbCBwbGF5ZXJcbiAgaXNBbHdheXNVc2U6IHRydWUsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICAvLyBlbnRlciBnYW1lIGluZm9cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtnYW1lTGluZVVwLm5hbWV9YCxcbiAgICBtYXRjaDogZ2FtZUxpbmVVcCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy51c2VEcmluaykge1xuICAgICAgICBjb25zb2xlLmxvZygnbm8gdXNlRHJpbmsgZ28gYmFjaycpO1xuICAgICAgICByZXJvdXRlci5nb0JhY2soZ2FtZUxpbmVVcCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgdGFza05hbWUgPSBjb250ZXh0LnRhc2submFtZTtcbiAgICAgIGNvbnN0IHVzZURyaW5rSW5MZWFndWUgPSB0YXNrTmFtZSA9PSBUQVNLUy5wbGF5TGVhZ3VlR2FtZSAmJiBzdGF0ZS5sZWFndWVHYW1lLm5lZWRTZXREcmluaztcbiAgICAgIGNvbnN0IHVzZURyaW5rSW5SYW5rID0gdGFza05hbWUgPT0gVEFTS1MucGxheUJhdHRsZUdhbWUgJiYgc3RhdGUucmFua0dhbWUubmVlZFNldERyaW5rO1xuICAgICAgaWYgKCF1c2VEcmlua0luTGVhZ3VlICYmICF1c2VEcmlua0luUmFuaykge1xuICAgICAgICBjb25zb2xlLmxvZygnbm90IG5lZWQgdG8gc2V0IGRyaW5rLCBnbyBiYWNrJyk7XG4gICAgICAgIHJlcm91dGVyLmdvQmFjayhnYW1lTGluZVVwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKGdhbWVMaW5lVXBCdG5zLmNvbmRpdGlvbik7XG4gICAgICBjb25zb2xlLmxvZygnZW50ZXIgY29uZGl0aW9uIGRyaW5rJyk7XG4gICAgfSxcbiAgfSk7XG5cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtjb25kaXRpb25Ecmluay5uYW1lfWAsXG4gICAgbWF0Y2g6IGNvbmRpdGlvbkRyaW5rLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgaWYgKCFDb25maWcuc2NyaXB0Q29uZmlnLnVzZURyaW5rKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdubyB1c2VEcmluayBnbyBiYWNrJyk7XG4gICAgICAgIHJlcm91dGVyLmdvQmFjayhnYW1lTGluZVVwKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB0YXNrTmFtZSA9IGNvbnRleHQudGFzay5uYW1lO1xuICAgICAgY29uc3QgdXNlRHJpbmtJbkxlYWd1ZSA9IHRhc2tOYW1lID09IFRBU0tTLnBsYXlMZWFndWVHYW1lICYmIHN0YXRlLmxlYWd1ZUdhbWUubmVlZFNldERyaW5rO1xuICAgICAgY29uc3QgdXNlRHJpbmtJblJhbmsgPSB0YXNrTmFtZSA9PSBUQVNLUy5wbGF5QmF0dGxlR2FtZSAmJiBzdGF0ZS5yYW5rR2FtZS5uZWVkU2V0RHJpbms7XG4gICAgICBpZiAoIXVzZURyaW5rSW5MZWFndWUgJiYgIXVzZURyaW5rSW5SYW5rKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdub3QgbmVlZCB0byBzZXQgZHJpbmssIGdvIGJhY2snKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKGdhbWVMaW5lVXApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIHNlbGVjdCBhbHdheXMgdXNlIG9yIG5vdCAoY3VycmVudCBpcyBzeW5jIGFtb25nIHBpdGNoZXIgJiBiYXR0ZXIgdGFicylcbiAgICAgIGlmIChwbGF5ZXJEcmlua1NldHRpbmcuaXNBbHdheXNVc2UgJiYgaXNTYW1lQ29sb3IoaW1hZ2UsIGNvbmRpdGlvbkRyaW5rQnRucy5hbHdheXNVc2VOb3RUdXJuT24pKSB7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoY29uZGl0aW9uRHJpbmtCdG5zLmFsd2F5c1VzZU5vdFR1cm5Pbik7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0dXJuIG9uIGNvbmRpdGlvbiBkcmluayBhbHdheXMgdXNlJyk7XG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgIH1cblxuICAgICAgZm9yIChjb25zdCB7IGluZGV4ZXMsIGJ0biB9IG9mIFtcbiAgICAgICAgeyBpbmRleGVzOiBwbGF5ZXJEcmlua1NldHRpbmcuc2VsZWN0QmF0dGVySW5kZXhlcywgYnRuOiBjb25kaXRpb25Ecmlua0J0bnMuYmF0dGVyTm90U2VsZWN0IH0sXG4gICAgICAgIHsgaW5kZXhlczogcGxheWVyRHJpbmtTZXR0aW5nLnNlbGVjdFBpdGNoZXJJbmRleGVzLCBidG46IGNvbmRpdGlvbkRyaW5rQnRucy5waXRjaGVyTm90U2VsZWN0IH0sXG4gICAgICBdKSB7XG4gICAgICAgIGlmIChpbmRleGVzLmxlbmd0aCA9PSAwKSB7XG4gICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBzZWxlY3QgdGFiXG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoYnRuKTtcbiAgICAgICAgY29uc29sZS5sb2coJ3NlbGVjdCB0YWIgaW4gY29uZGl0aW9uIGRyaW5rJyk7XG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcblxuICAgICAgICAvLyBzZWxlY3QgdXNlIGluIHRoYXQgdGFiXG4gICAgICAgIGNvbnN0IGltZyA9IGdldFNjcmVlbnNob3QoKTtcbiAgICAgICAgaGFuZGxlU2VsZWN0VXNlRHJpbmtQbGF5ZXJzKGltZywgaW5kZXhlcyk7XG4gICAgICAgIHJlbGVhc2VJbWFnZShpbWcpO1xuICAgICAgfVxuXG4gICAgICAvLyBhcHBseSBjaGFuZ2VzXG4gICAgICBjb25zdCBpbWcgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgICBpZiAoaXNTYW1lQ29sb3IoaW1nLCBjb25kaXRpb25Ecmlua0J0bnMudXNlRHJpbmtPbikpIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChjb25kaXRpb25Ecmlua0J0bnMudXNlRHJpbmtPbik7XG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIG1pZ2h0IGJlIG1pZCBvZiB0aGUgZ2FtZSBvciBubyBkcmluaywgY2Fubm90IGNoYW5nZVxuICAgICAgICBsZXQgdXNlSW5Nb2RlID0gJyc7XG4gICAgICAgIGlmICh1c2VEcmlua0luTGVhZ3VlKSB7XG4gICAgICAgICAgc3RhdGUubGVhZ3VlR2FtZS5uZWVkU2V0RHJpbmsgPSBmYWxzZTtcbiAgICAgICAgICB1c2VJbk1vZGUgPSAnbGVhZ3VlIGdhbWUnO1xuICAgICAgICB9IGVsc2UgaWYgKHVzZURyaW5rSW5SYW5rKSB7XG4gICAgICAgICAgc3RhdGUucmFua0dhbWUubmVlZFNldERyaW5rID0gZmFsc2U7XG4gICAgICAgICAgdXNlSW5Nb2RlID0gJ3JhbmsgZ2FtZSc7XG4gICAgICAgIH1cbiAgICAgICAgY29uc29sZS5sb2coYGNhbm5vdCB1c2UgY29uZGl0aW9uIGRyaW5rIGluICR7dXNlSW5Nb2RlfSwgZ28gYmFja2ApO1xuICAgICAgICByZXJvdXRlci5nb0JhY2soY29uZGl0aW9uRHJpbmspO1xuICAgICAgfVxuXG4gICAgICByZWxlYXNlSW1hZ2UoaW1nKTtcbiAgICB9LFxuICB9KTtcbn1cblxuZnVuY3Rpb24gaGFuZGxlU2VsZWN0VXNlRHJpbmtQbGF5ZXJzKGltYWdlOiBJbWFnZSwgaW5kZXhlczogbnVtYmVyW10pIHtcbiAgLy8gRklYTUU6IGN1cnJlbnQgb25seSBzdXBwb3J0IHNlbGVjdCBhbGxcbiAgaWYgKGlzU2FtZUNvbG9yKGltYWdlLCBjb25kaXRpb25Ecmlua0J0bnMuc2VsZWN0QWxsTm90VHVybk9uKSkge1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoY29uZGl0aW9uRHJpbmtCdG5zLnNlbGVjdEFsbE5vdFR1cm5Pbik7XG4gICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xuICB9XG5cbiAgY29uc29sZS5sb2coJ3NlbGVjdCBhbGwgcGxheWVycyBmb3IgZHJpbmsnKTtcbn1cblxuY29uc3QgZ2FtZUxpbmVVcCA9IG5ldyBQYWdlKFxuICAnZ2FtZUxpbmVVcCcsXG4gIFtcbiAgICAvLyBjb250ZW50IHRvcCBiZ1xuICAgIHsgeDogNTkxLCB5OiA1OSwgcjogNDksIGc6IDczLCBiOiAxMDcgfSxcbiAgICAvLyBwcm9ncmVzcyBiZ1xuICAgIHsgeDogMTksIHk6IDIxMSwgcjogMjQsIGc6IDMyLCBiOiA0OSB9LFxuICAgIC8vIGJhdHRsZSBsaW5ldXAgYnV0dG9uIGluIGJvdHRvbVxuICAgIHsgeDogNTM2LCB5OiAzMjIsIHI6IDQxLCBnOiA4MSwgYjogMTM3IH0sXG4gICAgeyB4OiA1NTMsIHk6IDMyMiwgcjogMTg4LCBnOiAyMDksIGI6IDIyNCB9LFxuICAgIHsgeDogNTY4LCB5OiAzMjIsIHI6IDIwNCwgZzogMjIwLCBiOiAyMzQgfSxcbiAgICB7IHg6IDU4NSwgeTogMzI0LCByOiAxMDcsIGc6IDEzOSwgYjogMTc3IH0sXG4gICAgeyB4OiA2MDQsIHk6IDMyNCwgcjogODAsIGc6IDExNSwgYjogMTU1IH0sXG4gICAgLy8gYmFja1xuICAgIHsgeDogMjYsIHk6IDMxNCwgcjogMjE0LCBnOiAyMTksIGI6IDIxNCB9LFxuICAgIHsgeDogNDMsIHk6IDMyMSwgcjogMjE0LCBnOiAyMTksIGI6IDIxNCB9LFxuICAgIHsgeDogMzYsIHk6IDMyOSwgcjogMjExLCBnOiAyMTYsIGI6IDIxMCB9LFxuICBdLFxuICB7IHg6IDQwLCB5OiAzMjQgfSxcbiAgeyB4OiA0MCwgeTogMzI0IH1cbik7XG5cbmNvbnN0IGdhbWVMaW5lVXBCdG5zID0ge1xuICBhdXRvU3dpdGNoOiB7IHg6IDEyMywgeTogMzI1IH0sXG4gIGNvbmRpdGlvbjogeyB4OiAzMTksIHk6IDMyMCB9LFxuICBvdGhlckxpbmVVcDogeyB4OiA1ODAsIHk6IDMyNSB9LFxufTtcblxuY29uc3QgY29uZGl0aW9uRHJpbmsgPSBuZXcgUGFnZShcbiAgJ2NvbmRpdGlvbkRyaW5rJyxcbiAgW1xuICAgIC8vIGNvbmRpdGlvbiBkcmlua1xuICAgIHsgeDogMTksIHk6IDM5LCByOiAyNTEsIGc6IDI1MSwgYjogMjUxIH0sXG4gICAgeyB4OiA0MSwgeTogMzksIHI6IDIxNywgZzogMjIxLCBiOiAyMjQgfSxcbiAgICB7IHg6IDQ4LCB5OiAzNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTksIHk6IDM4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2NSwgeTogMzQsIHI6IDIxMSwgZzogMjA4LCBiOiAyMTEgfSxcbiAgICB7IHg6IDg0LCB5OiAzNiwgcjogMTAyLCBnOiAxMTIsIGI6IDExOCB9LFxuICAgIHsgeDogMTAwLCB5OiAzNywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTIwLCB5OiAzMSwgcjogODQsIGc6IDkxLCBiOiA5OSB9LFxuICAgIHsgeDogMTMwLCB5OiAzNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTQ2LCB5OiAyOSwgcjogMTAzLCBnOiAxMTIsIGI6IDEyMiB9LFxuICAgIHsgeDogMTU3LCB5OiA0MSwgcjogMzgsIGc6IDQxLCBiOiA0NiB9LFxuICAgIHsgeDogMTcyLCB5OiAzOCwgcjogMTYsIGc6IDE2LCBiOiAxNiB9LFxuICAgIHsgeDogMTY1LCB5OiAzNywgcjogMTk3LCBnOiAyMDAsIGI6IDIwMyB9LFxuICAgIHsgeDogMTY2LCB5OiAyOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTc2LCB5OiAyOSwgcjogMTQsIGc6IDE2LCBiOiAxNiB9LFxuXG4gICAgLy8gYWx3YXlzIHVzZSBidG4gKGV4Y2x1ZGUgY2hlY2tib3gpXG4gICAgeyB4OiAxNjUsIHk6IDIyNywgcjogMTY0LCBnOiAxOTMsIGI6IDIxOCB9LFxuICAgIHsgeDogMTc2LCB5OiAyMjIsIHI6IDEwNCwgZzogMTUwLCBiOiAxOTEgfSxcbiAgICB7IHg6IDE5MiwgeTogMjI5LCByOiAxMDIsIGc6IDE0NCwgYjogMTg3IH0sXG4gICAgeyB4OiAyMDYsIHk6IDIyMSwgcjogNjMsIGc6IDExOSwgYjogMTY4IH0sXG4gICAgeyB4OiAyMjEsIHk6IDIyOCwgcjogMTgyLCBnOiAyMDQsIGI6IDIxNyB9LFxuXG4gICAgLy8gc2VsZWN0IGFsbCBidG4gKGV4Y2x1ZGUgY2hlY2tib3gpXG4gICAgeyB4OiAxMDksIHk6IDMxMywgcjogNTgsIGc6IDExNywgYjogMTY0IH0sXG4gICAgeyB4OiAxMzAsIHk6IDMxMywgcjogMjMwLCBnOiAyNDcsIGI6IDI1NSB9LFxuICAgIHsgeDogMTM2LCB5OiAzMjcsIHI6IDE5MCwgZzogMjE1LCBiOiAyMzIgfSxcbiAgICB7IHg6IDE0NCwgeTogMzE3LCByOiAxMDEsIGc6IDEzOSwgYjogMTcxIH0sXG4gICAgeyB4OiAxNTcsIHk6IDMyNywgcjogNTgsIGc6IDEwOSwgYjogMTU2IH0sXG4gIF0sXG4gIHsgeDogMjQ2LCB5OiAzMjMgfSwgLy8gdXNlXG4gIHsgeDogNDMsIHk6IDMxOCB9IC8vIGJhY2tcbik7XG5cbmNvbnN0IGNvbmRpdGlvbkRyaW5rQnRucyA9IHtcbiAgcGl0Y2hlck5vdFNlbGVjdDogeyB4OiA4MiwgeTogODksIHI6IDQxLCBnOiA3MywgYjogMTE1IH0sXG4gIGJhdHRlck5vdFNlbGVjdDogeyB4OiA5MiwgeTogMTI3LCByOiA0MSwgZzogNzMsIGI6IDExNSB9LFxuICBvcGVuT3RoZXJMaW5lVXA6IHsgeDogNTIsIHk6IDE4MywgcjogNTcsIGc6IDk4LCBiOiAxMzQgfSxcbiAgc2VsZWN0QWxsTm90VHVybk9uOiB7IHg6IDgzLCB5OiAzMjgsIHI6IDE2LCBnOiA0MCwgYjogNjYgfSxcbiAgYWx3YXlzVXNlTm90VHVybk9uOiB7IHg6IDEzOSwgeTogMjMwLCByOiAxNiwgZzogNDAsIGI6IDY2IH0sXG4gIHVzZURyaW5rT246IHsgeDogMjc4LCB5OiAzMjQsIHI6IDIyMiwgZzogMTMwLCBiOiA4IH0sXG59O1xuXG4vLyB3aGVuIGNsaWNrIG90aGVyIGxpbmV1cCBidG4gaW4gY29uZGl0aW9uIGRyaW5rIG9yIGluIGdhbWUgbGluZXVwXG5jb25zdCBvdGhlckxpbmVVcCA9IG5ldyBQYWdlKFxuICAnb3RoZXJMaW5lVXAnLFxuICBbXG4gICAgLy8gYmcgYWxsIHNlbWktdHJhbnNwYXJlbnQgYmxhY2tcbiAgICB7IHg6IDQyLCB5OiAzMTksIHI6IDIwNiwgZzogMjA2LCBiOiAyMDYgfSxcbiAgICB7IHg6IDU4LCB5OiA1NSwgcjogOCwgZzogOCwgYjogOCB9LFxuICAgIHsgeDogNjAsIHk6IDE5MiwgcjogOCwgZzogMTIsIGI6IDE2IH0sXG4gICAgeyB4OiAxNjksIHk6IDMyOSwgcjogOCwgZzogMTIsIGI6IDE2IH0sXG4gICAgeyB4OiAzMzksIHk6IDMyNSwgcjogMCwgZzogNCwgYjogOCB9LFxuICAgIHsgeDogNTUzLCB5OiAzMTgsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDYwNSwgeTogMTA3LCByOiAxNiwgZzogMTIsIGI6IDExIH0sXG4gICAgeyB4OiA1NjEsIHk6IDM5LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiAyODcsIHk6IDM3LCByOiAwLCBnOiAwLCBiOiAwIH0sXG5cbiAgICAvLyBsZWFndWUgbGluZSB1cCBidG5cbiAgICB7IHg6IDI1MiwgeTogMTIwLCByOiA0OSwgZzogODUsIGI6IDEyMyB9LFxuICAgIHsgeDogMjg2LCB5OiAxMTQsIHI6IDE1NCwgZzogMTc5LCBiOiAyMTAgfSxcbiAgICB7IHg6IDMyNCwgeTogMTIyLCByOiAxODEsIGc6IDIwMiwgYjogMjMwIH0sXG4gICAgeyB4OiAzNTcsIHk6IDExMywgcjogMTc1LCBnOiAyMDAsIGI6IDIzMCB9LFxuICAgIHsgeDogMzgxLCB5OiAxMjAsIHI6IDQ5LCBnOiA4NSwgYjogMTIzIH0sXG5cbiAgICAvLyBiYXR0bGUgbGluZSB1cCBidG5cbiAgICB7IHg6IDI0NywgeTogMTc2LCByOiA0OSwgZzogODcsIGI6IDEyMyB9LFxuICAgIHsgeDogMjgwLCB5OiAxNzYsIHI6IDQ5LCBnOiA4NywgYjogMTIzIH0sXG4gICAgeyB4OiAyOTUsIHk6IDE3NCwgcjogMTEyLCBnOiAxMzksIGI6IDE2OSB9LFxuICAgIHsgeDogMzUzLCB5OiAxNzMsIHI6IDYyLCBnOiA5NywgYjogMTMxIH0sXG4gICAgeyB4OiAzNTgsIHk6IDE3NCwgcjogNTAsIGc6IDg4LCBiOiAxMTYgfSxcbiAgICB7IHg6IDM4NiwgeTogMTgxLCByOiA0OSwgZzogODUsIGI6IDEyMyB9LFxuXG4gICAgLy8gY2x1YiBsaW5lIHVwIGJ0blxuICAgIHsgeDogMjQ0LCB5OiAyMzQsIHI6IDQ5LCBnOiA4OSwgYjogMTIzIH0sXG4gICAgeyB4OiAyODAsIHk6IDIzOSwgcjogOTEsIGc6IDEyMCwgYjogMTU2IH0sXG4gICAgeyB4OiAzMDksIHk6IDIzOCwgcjogMTE1LCBnOiAxNDMsIGI6IDE3NSB9LFxuICAgIHsgeDogMzMzLCB5OiAyMzksIHI6IDE4MSwgZzogMjAyLCBiOiAyMzAgfSxcbiAgICB7IHg6IDM1NywgeTogMjM5LCByOiAxNTMsIGc6IDE3NiwgYjogMjA1IH0sXG4gICAgeyB4OiAzODUsIHk6IDIzOSwgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgXSxcbiAgeyB4OiA0MiwgeTogMzE5IH0sIC8vIGJhY2tcbiAgeyB4OiA0MiwgeTogMzE5IH1cbik7XG5cbmNvbnN0IG90aGVyTGluZVVwQnRucyA9IHtcbiAgbGVhZ3VlOiB7IHg6IDI3OCwgeTogMTIwIH0sXG4gIGJhdHRsZTogeyB4OiAyNzgsIHk6IDE4MCB9LFxuICBjbHViOiB7IHg6IDI3OCwgeTogMjQwIH0sXG59O1xuIiwiaW1wb3J0ICogYXMgY29uZmlybVJvdXRlcyBmcm9tICcuL2NvbmZpcm1zJztcbmltcG9ydCAqIGFzIGVudGVyQXBwUm91dGVzIGZyb20gJy4vZW50ZXJBcHAnO1xuaW1wb3J0ICogYXMgZXJyb3JzUm91dGVzIGZyb20gJy4vZXJyb3JzJztcbmltcG9ydCAqIGFzIGdhbWVMaW5lVXBSb3V0ZXMgZnJvbSAnLi9nYW1lTGluZVVwJztcbmltcG9ydCAqIGFzIG5leHRzUm91dGVzIGZyb20gJy4vbmV4dHMnO1xuaW1wb3J0ICogYXMgcGxheVJlbGF0ZWRSb3V0ZXMgZnJvbSAnLi9wbGF5UmVsYXRlZCc7XG5pbXBvcnQgKiBhcyBwb3dlclNhdmluZ3NSb3V0ZXMgZnJvbSAnLi9wb3dlclNhdmluZ3MnO1xuaW1wb3J0ICogYXMgcHJvbW90aW9uc1JvdXRlcyBmcm9tICcuL3Byb21vdGlvbnMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICBbY29uZmlybVJvdXRlcywgZW50ZXJBcHBSb3V0ZXMsIGVycm9yc1JvdXRlcywgZ2FtZUxpbmVVcFJvdXRlcywgbmV4dHNSb3V0ZXMsIHBsYXlSZWxhdGVkUm91dGVzLCBwb3dlclNhdmluZ3NSb3V0ZXMsIHByb21vdGlvbnNSb3V0ZXNdLmZvckVhY2gocm91dGUgPT4ge1xuICAgIHJvdXRlLmFkZFJvdXRlcygpO1xuICB9KTtcbn1cbiIsImltcG9ydCB7IFBhZ2UsIEdyb3VwUGFnZSB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IHN0YXRlLCByZXJvdXRlciwgQ29uZmlnIH0gZnJvbSAnLi4vLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza05hbWVzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFJvdXRlcygpIHtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtuZXh0R3JvdXAubmFtZX1gLFxuICAgIG1hdGNoOiBuZXh0R3JvdXAsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGNvbnN0IHRhc2sgPSBjb250ZXh0LnRhc2submFtZTtcblxuICAgICAgaWYgKHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UoZW5kU2Vhc29uUmVsYXRlZCwgaW1hZ2UpKSB7XG4gICAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKGVuZFBvc3RTZWFzb24sIGltYWdlKSkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdlbmRQb3N0U2Vhc29uIGRldGVjdGVkLCByZXNldCBwcm9ncmVzcycpO1xuICAgICAgICAgIHN0YXRlLmxlYWd1ZUdhbWUubmVlZFJlc2V0UHJvZ3Jlc3MgPSB0cnVlO1xuICAgICAgICAgIHJlcm91dGVyLmdvTmV4dChuZXh0R3JvdXApO1xuICAgICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnNvbGUubG9nKCdlbmRTZWFzb25SZWxhdGVkJyk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChuZXh0R3JvdXApO1xuICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShyZWNoYXJnZUJhbGxHcm91cCwgaW1hZ2UpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBtYXRjaCByZWNoYXJnZUJhbGxHcm91cGApO1xuICAgICAgICBzd2l0Y2ggKGNvbnRleHQudGFzay5uYW1lKSB7XG4gICAgICAgICAgY2FzZSBUQVNLUy5wbGF5TGVhZ3VlR2FtZTpcbiAgICAgICAgICBjYXNlIFRBU0tTLnBsYXlCYXR0bGVHYW1lOlxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Nhbm5vdCBjb250aW51ZTogcmVjaGFyZ2UgYmFsbCBuZWVkZWQnKTtcbiAgICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICByZXJvdXRlci5nb0JhY2socmVjaGFyZ2VCYWxsTGVhZ3VlTW9kZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KG5leHRHcm91cCk7XG4gICAgfSxcbiAgfSk7XG59XG5cbi8vIHBhZ2UgaGFzIG5leHQgYnV0dG9uXG5jb25zdCBuZXh0ID0gbmV3IFBhZ2UoXG4gICduZXh0JyxcbiAgW1xuICAgIHsgeDogMjczLCB5OiAzMDQsIHI6IDgsIGc6IDExNywgYjogMjU1IH0sXG4gICAgeyB4OiAzMDUsIHk6IDMwNywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzE0LCB5OiAzMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMyMSwgeTogMzA1LCByOiAyMjQsIGc6IDIzNiwgYjogMjU1IH0sXG4gICAgeyB4OiAzMjgsIHk6IDMxMCwgcjogMSwgZzogMTA2LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMzMywgeTogMjk5LCByOiA4LCBnOiAxMjUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzc0LCB5OiAzMDUsIHI6IDgsIGc6IDExNywgYjogMjU1IH0sXG4gICAgeyB4OiAzODAsIHk6IDMxOSwgcjogMCwgZzogODksIGI6IDI0NyB9LFxuICAgIHsgeDogMjY1LCB5OiAzMTgsIHI6IDAsIGc6IDg5LCBiOiAyNDcgfSxcbiAgXSxcbiAgeyB4OiAzNDYsIHk6IDMwNyB9LFxuICB7IHg6IDM0NiwgeTogMzA3IH1cbik7XG5cbmNvbnN0IG5leHQyID0gbmV3IFBhZ2UoXG4gICduZXh0JyxcbiAgW1xuICAgIHsgeDogMjI2LCB5OiAyOTYsIHI6IDIyMiwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDI3NSwgeTogMjk2LCByOiA4LCBnOiAxMjEsIGI6IDI1NSB9LFxuICAgIHsgeDogMzA2LCB5OiAyOTksIHI6IDI1NCwgZzogMjU0LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxNCwgeTogMzAzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMjEsIHk6IDI5OSwgcjogMjAxLCBnOiAyMjMsIGI6IDI1NSB9LFxuICAgIHsgeDogMzMxLCB5OiAyOTksIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM2NCwgeTogMzEwLCByOiAwLCBnOiA5NCwgYjogMjQ3IH0sXG4gIF0sXG4gIHsgeDogMzQ2LCB5OiAzMDcgfSxcbiAgeyB4OiAzNDYsIHk6IDMwNyB9XG4pO1xuXG4vLyBpbmNsdWRlIGVuZFNlYXNvbiwgcmV3YXJkIC4uLi5cbmNvbnN0IGVuZFNlYXNvblJlbGF0ZWQgPSBuZXcgUGFnZSgnZW5kU2Vhc29uUmVsYXRlZCcsIFtcbiAgLy8gbG9nbyBtbGJcbiAgeyB4OiAzNTMsIHk6IDE0MywgcjogOCwgZzogMzIsIGI6IDY2IH0sXG4gIHsgeDogMzcyLCB5OiAxNTMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAzODYsIHk6IDE0MywgcjogMjAxLCBnOiAzMSwgYjogNjEgfSxcblxuICAvLyBwbGF5ZXJzIG9uIGxlZnRcbiAgeyB4OiAzMjAsIHk6IDE0NCwgcjogNTQsIGc6IDU2LCBiOiA1OCB9LFxuICB7IHg6IDMwOSwgeTogMTQ1LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gIHsgeDogMzAxLCB5OiAxNTQsIHI6IDE5MSwgZzogMTkyLCBiOiAxOTkgfSxcbiAgeyB4OiAzMTcsIHk6IDE1MSwgcjogNjcsIGc6IDY4LCBiOiA2OSB9LFxuICB7IHg6IDI3NSwgeTogMTQ4LCByOiAxOTUsIGc6IDE5NywgYjogMjA0IH0sXG4gIHsgeDogMjQ4LCB5OiAxNDgsIHI6IDEyNCwgZzogMTI3LCBiOiAxMjkgfSxcblxuICAvLyBkb24ndCBjaG9vc2UgdGhlIGRlc2NyaXB0aW9ucyBiYyBpdCBjaGFuZ2VzIGJ5IGxlYWd1ZSBhbW91bnRcbl0pO1xuXG5jb25zdCBlbmRSZWd1bGFyU2Vhc29uID0gbmV3IFBhZ2UoJ2VuZFJlZ3VsYXJTZWFzb24nLCBbXG4gIC8vIHRpdGxlXG4gIHsgeDogMjI5LCB5OiA1NywgcjogMTM1LCBnOiAxMzcsIGI6IDE0NCB9LFxuICB7IHg6IDIyOSwgeTogNTcsIHI6IDEzNSwgZzogMTM3LCBiOiAxNDQgfSxcbiAgeyB4OiAyMzYsIHk6IDU3LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gIHsgeDogMjQzLCB5OiA1OCwgcjogMjUsIGc6IDMzLCBiOiA0MSB9LFxuICB7IHg6IDI0MywgeTogNTgsIHI6IDI1LCBnOiAzMywgYjogNDEgfSxcbiAgeyB4OiAyNTUsIHk6IDU4LCByOiA3NSwgZzogNzksIGI6IDg5IH0sXG4gIHsgeDogMjU2LCB5OiA1OCwgcjogMTc4LCBnOiAxNzcsIGI6IDE4NiB9LFxuICB7IHg6IDI2NSwgeTogNTUsIHI6IDE1OSwgZzogMTU4LCBiOiAxNjcgfSxcbiAgeyB4OiAyNjgsIHk6IDU3LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gIHsgeDogMjczLCB5OiA2MCwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICB7IHg6IDI4NSwgeTogNjAsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgeyB4OiAyNzgsIHk6IDU5LCByOiAxODIsIGc6IDE4MywgYjogMTkwIH0sXG4gIHsgeDogMjk0LCB5OiA1OSwgcjogMTE4LCBnOiAxMjAsIGI6IDEyNiB9LFxuICB7IHg6IDI5NSwgeTogNTUsIHI6IDIxLCBnOiAyNiwgYjogMzMgfSxcbiAgeyB4OiAzMDQsIHk6IDYwLCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gIHsgeDogMzExLCB5OiA1OCwgcjogMTkwLCBnOiAxODksIGI6IDE5OCB9LFxuICB7IHg6IDMyMCwgeTogNjIsIHI6IDg0LCBnOiA4OSwgYjogOTYgfSxcbiAgeyB4OiAzMjUsIHk6IDU3LCByOiA0NiwgZzogNTEsIGI6IDU4IH0sXG4gIHsgeDogMzM0LCB5OiA2MiwgcjogMzgsIGc6IDQ1LCBiOiA1MyB9LFxuICB7IHg6IDM0MSwgeTogNTYsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgeyB4OiAzNDcsIHk6IDU5LCByOiAxNDAsIGc6IDE0MiwgYjogMTQ4IH0sXG4gIHsgeDogMzUxLCB5OiA1OCwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICB7IHg6IDM1OCwgeTogNTgsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgeyB4OiAzNjgsIHk6IDU4LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gIHsgeDogMzc3LCB5OiA2MCwgcjogMTcsIGc6IDI1LCBiOiAzMyB9LFxuICB7IHg6IDM3NCwgeTogNTUsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgeyB4OiAzODYsIHk6IDU4LCByOiA5OCwgZzogMTAxLCBiOiAxMDcgfSxcbiAgeyB4OiAzODIsIHk6IDYwLCByOiAxOTYsIGc6IDE5NywgYjogMjA0IH0sXG4gIHsgeDogMzkwLCB5OiA2MCwgcjogNzcsIGc6IDg0LCBiOiA5MSB9LFxuICB7IHg6IDM5OCwgeTogNTYsIHI6IDczLCBnOiA3NywgYjogODQgfSxcbiAgeyB4OiA0MDMsIHk6IDYzLCByOiAxMzksIGc6IDE0MywgYjogMTUxIH0sXG5dKTtcblxuY29uc3QgZW5kUG9zdFNlYXNvbiA9IG5ldyBQYWdlKFxuICAnZW5kUG9zdFNlYXNvbicsXG4gIC8vIHRpdGxlXG4gIFtcbiAgICB7IHg6IDI0MywgeTogNTQsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI0MywgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI0MywgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI0MywgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI0MywgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI0NiwgeTogNTQsIHI6IDEzMSwgZzogMTMyLCBiOiAxMzkgfSxcbiAgICB7IHg6IDI0NiwgeTogNTcsIHI6IDEzMSwgZzogMTMyLCBiOiAxMzkgfSxcbiAgICB7IHg6IDI0NiwgeTogNjAsIHI6IDEzMSwgZzogMTMyLCBiOiAxMzkgfSxcbiAgICB7IHg6IDI0NiwgeTogNjMsIHI6IDEzMSwgZzogMTMyLCBiOiAxMzkgfSxcbiAgICB7IHg6IDI0NiwgeTogNjYsIHI6IDE4MiwgZzogMTgzLCBiOiAxOTAgfSxcbiAgICB7IHg6IDI0OSwgeTogNTQsIHI6IDY3LCBnOiA3MiwgYjogODAgfSxcbiAgICB7IHg6IDI0OSwgeTogNTcsIHI6IDY4LCBnOiA3MywgYjogODEgfSxcbiAgICB7IHg6IDI0OSwgeTogNjAsIHI6IDc1LCBnOiA4MCwgYjogODkgfSxcbiAgICB7IHg6IDI0OSwgeTogNjMsIHI6IDcyLCBnOiA3NiwgYjogODUgfSxcbiAgICB7IHg6IDI0OSwgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI1MiwgeTogNTQsIHI6IDE2OSwgZzogMTcxLCBiOiAxODIgfSxcbiAgICB7IHg6IDI1MiwgeTogNTcsIHI6IDE4OSwgZzogMTg4LCBiOiAxOTcgfSxcbiAgICB7IHg6IDI1MiwgeTogNjAsIHI6IDE5MywgZzogMTk0LCBiOiAyMDEgfSxcbiAgICB7IHg6IDI1MiwgeTogNjMsIHI6IDE4MCwgZzogMTgxLCBiOiAxODggfSxcbiAgICB7IHg6IDI1MiwgeTogNjYsIHI6IDE2OCwgZzogMTY5LCBiOiAxNzYgfSxcbiAgICB7IHg6IDI1NSwgeTogNTQsIHI6IDIxLCBnOiAyNywgYjogMzMgfSxcbiAgICB7IHg6IDI1NSwgeTogNTcsIHI6IDIxLCBnOiAyNywgYjogMzMgfSxcbiAgICB7IHg6IDI1NSwgeTogNjAsIHI6IDIxLCBnOiAyNywgYjogMzMgfSxcbiAgICB7IHg6IDI1NSwgeTogNjMsIHI6IDIxLCBnOiAyNywgYjogMzMgfSxcbiAgICB7IHg6IDI1NSwgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI1OCwgeTogNTQsIHI6IDE3NywgZzogMTgwLCBiOiAxODUgfSxcbiAgICB7IHg6IDI1OCwgeTogNTcsIHI6IDYwLCBnOiA2NSwgYjogNzMgfSxcbiAgICB7IHg6IDI1OCwgeTogNjAsIHI6IDQzLCBnOiA0OCwgYjogNTQgfSxcbiAgICB7IHg6IDI1OCwgeTogNjMsIHI6IDE1NCwgZzogMTU1LCBiOiAxNjIgfSxcbiAgICB7IHg6IDI1OCwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI2MSwgeTogNTQsIHI6IDQzLCBnOiA0OSwgYjogNTYgfSxcbiAgICB7IHg6IDI2MSwgeTogNTcsIHI6IDQzLCBnOiA0OSwgYjogNTYgfSxcbiAgICB7IHg6IDI2MSwgeTogNjAsIHI6IDQzLCBnOiA0OSwgYjogNTYgfSxcbiAgICB7IHg6IDI2MSwgeTogNjMsIHI6IDQzLCBnOiA0OSwgYjogNTYgfSxcbiAgICB7IHg6IDI2MSwgeTogNjYsIHI6IDE2MywgZzogMTY0LCBiOiAxNzEgfSxcbiAgICB7IHg6IDI2NCwgeTogNTQsIHI6IDEyNiwgZzogMTI4LCBiOiAxMzQgfSxcbiAgICB7IHg6IDI2NCwgeTogNTcsIHI6IDEyNiwgZzogMTI4LCBiOiAxMzQgfSxcbiAgICB7IHg6IDI2NCwgeTogNjAsIHI6IDEyNiwgZzogMTI4LCBiOiAxMzQgfSxcbiAgICB7IHg6IDI2NCwgeTogNjMsIHI6IDEyNiwgZzogMTI4LCBiOiAxMzQgfSxcbiAgICB7IHg6IDI2NCwgeTogNjYsIHI6IDE4MSwgZzogMTgyLCBiOiAxODkgfSxcbiAgICB7IHg6IDI2NywgeTogNTQsIHI6IDY4LCBnOiA3MywgYjogODEgfSxcbiAgICB7IHg6IDI2NywgeTogNTcsIHI6IDg1LCBnOiA5MCwgYjogOTggfSxcbiAgICB7IHg6IDI2NywgeTogNjAsIHI6IDg1LCBnOiA5MCwgYjogOTggfSxcbiAgICB7IHg6IDI2NywgeTogNjMsIHI6IDc2LCBnOiA4MSwgYjogODkgfSxcbiAgICB7IHg6IDI2NywgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI3MCwgeTogNTQsIHI6IDE4LCBnOiAyNSwgYjogMzQgfSxcbiAgICB7IHg6IDI3MCwgeTogNTcsIHI6IDI2LCBnOiAzNCwgYjogMzggfSxcbiAgICB7IHg6IDI3MCwgeTogNjAsIHI6IDI2LCBnOiAzNCwgYjogMzggfSxcbiAgICB7IHg6IDI3MCwgeTogNjMsIHI6IDIwLCBnOiAyNiwgYjogMzMgfSxcbiAgICB7IHg6IDI3MCwgeTogNjYsIHI6IDE4MiwgZzogMTg0LCBiOiAxOTAgfSxcbiAgICB7IHg6IDI3MywgeTogNTQsIHI6IDE5MSwgZzogMTkyLCBiOiAxOTkgfSxcbiAgICB7IHg6IDI3MywgeTogNTcsIHI6IDE3OCwgZzogMTgyLCBiOiAxODcgfSxcbiAgICB7IHg6IDI3MywgeTogNjAsIHI6IDE3OCwgZzogMTgyLCBiOiAxODcgfSxcbiAgICB7IHg6IDI3MywgeTogNjMsIHI6IDE5MCwgZzogMTkxLCBiOiAxOTggfSxcbiAgICB7IHg6IDI3MywgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3NiwgeTogNTQsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3NiwgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3NiwgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3NiwgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3NiwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3OSwgeTogNTQsIHI6IDY0LCBnOiA2OSwgYjogNzYgfSxcbiAgICB7IHg6IDI3OSwgeTogNTcsIHI6IDQwLCBnOiA0NSwgYjogNTEgfSxcbiAgICB7IHg6IDI3OSwgeTogNjAsIHI6IDQwLCBnOiA0NSwgYjogNTEgfSxcbiAgICB7IHg6IDI3OSwgeTogNjMsIHI6IDU2LCBnOiA2MywgYjogNzMgfSxcbiAgICB7IHg6IDI3OSwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI4MiwgeTogNTQsIHI6IDEwOSwgZzogMTExLCBiOiAxMjEgfSxcbiAgICB7IHg6IDI4MiwgeTogNTcsIHI6IDE1NiwgZzogMTYwLCBiOiAxNjQgfSxcbiAgICB7IHg6IDI4MiwgeTogNjAsIHI6IDE1NiwgZzogMTYwLCBiOiAxNjQgfSxcbiAgICB7IHg6IDI4MiwgeTogNjMsIHI6IDEyNywgZzogMTI5LCBiOiAxMzUgfSxcbiAgICB7IHg6IDI4MiwgeTogNjYsIHI6IDEzOCwgZzogMTQxLCBiOiAxNTAgfSxcbiAgICB7IHg6IDI4NSwgeTogNTQsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDI4NSwgeTogNTcsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDI4NSwgeTogNjAsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDI4NSwgeTogNjMsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDI4NSwgeTogNjYsIHI6IDE4NiwgZzogMTg3LCBiOiAxOTQgfSxcbiAgICB7IHg6IDI4OCwgeTogNTQsIHI6IDE1NywgZzogMTU3LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI4OCwgeTogNTcsIHI6IDE1NywgZzogMTU3LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI4OCwgeTogNjAsIHI6IDE1NywgZzogMTU3LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI4OCwgeTogNjMsIHI6IDE1NywgZzogMTU3LCBiOiAxNjUgfSxcbiAgICB7IHg6IDI4OCwgeTogNjYsIHI6IDE4OCwgZzogMTg4LCBiOiAxOTYgfSxcbiAgICB7IHg6IDI5MSwgeTogNTQsIHI6IDQwLCBnOiA0OCwgYjogNTMgfSxcbiAgICB7IHg6IDI5MSwgeTogNTcsIHI6IDQyLCBnOiA0OSwgYjogNTUgfSxcbiAgICB7IHg6IDI5MSwgeTogNjAsIHI6IDQzLCBnOiA1MSwgYjogNTkgfSxcbiAgICB7IHg6IDI5MSwgeTogNjMsIHI6IDQ3LCBnOiA1NCwgYjogNTkgfSxcbiAgICB7IHg6IDI5MSwgeTogNjYsIHI6IDE2MywgZzogMTY1LCBiOiAxNzEgfSxcbiAgICB7IHg6IDI5NCwgeTogNTQsIHI6IDE2NiwgZzogMTY3LCBiOiAxNzcgfSxcbiAgICB7IHg6IDI5NCwgeTogNTcsIHI6IDE3OSwgZzogMTgwLCBiOiAxODggfSxcbiAgICB7IHg6IDI5NCwgeTogNjAsIHI6IDE4MywgZzogMTg4LCBiOiAxOTEgfSxcbiAgICB7IHg6IDI5NCwgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5NCwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5NywgeTogNTQsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5NywgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5NywgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5NywgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI5NywgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMwMCwgeTogNTQsIHI6IDE1MSwgZzogMTUzLCBiOiAxNTkgfSxcbiAgICB7IHg6IDMwMCwgeTogNTcsIHI6IDE1MSwgZzogMTUzLCBiOiAxNTkgfSxcbiAgICB7IHg6IDMwMCwgeTogNjAsIHI6IDE1MSwgZzogMTUzLCBiOiAxNTkgfSxcbiAgICB7IHg6IDMwMCwgeTogNjMsIHI6IDE1MSwgZzogMTUzLCBiOiAxNTkgfSxcbiAgICB7IHg6IDMwMCwgeTogNjYsIHI6IDE4NSwgZzogMTg3LCBiOiAxOTMgfSxcbiAgICB7IHg6IDMwMywgeTogNTQsIHI6IDQxLCBnOiA0NywgYjogNTQgfSxcbiAgICB7IHg6IDMwMywgeTogNTcsIHI6IDQ0LCBnOiA1MSwgYjogNTYgfSxcbiAgICB7IHg6IDMwMywgeTogNjAsIHI6IDQxLCBnOiA0OCwgYjogNTQgfSxcbiAgICB7IHg6IDMwMywgeTogNjMsIHI6IDQ4LCBnOiA1NSwgYjogNjAgfSxcbiAgICB7IHg6IDMwMywgeTogNjYsIHI6IDE2MywgZzogMTY1LCBiOiAxNzIgfSxcbiAgICB7IHg6IDMwNiwgeTogNTQsIHI6IDU2LCBnOiA2MywgYjogNzEgfSxcbiAgICB7IHg6IDMwNiwgeTogNTcsIHI6IDg2LCBnOiA5MSwgYjogOTggfSxcbiAgICB7IHg6IDMwNiwgeTogNjAsIHI6IDE3MCwgZzogMTY5LCBiOiAxNzggfSxcbiAgICB7IHg6IDMwNiwgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMwNiwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMwOSwgeTogNTQsIHI6IDEyNiwgZzogMTI5LCBiOiAxMzUgfSxcbiAgICB7IHg6IDMwOSwgeTogNTcsIHI6IDExNywgZzogMTIxLCBiOiAxMjkgfSxcbiAgICB7IHg6IDMwOSwgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMwOSwgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMwOSwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMxMiwgeTogNTQsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMxMiwgeTogNTcsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMxMiwgeTogNjAsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMxMiwgeTogNjMsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMxMiwgeTogNjYsIHI6IDE5MSwgZzogMTkwLCBiOiAxOTkgfSxcbiAgICB7IHg6IDMxNSwgeTogNTQsIHI6IDEyNywgZzogMTI3LCBiOiAxMzYgfSxcbiAgICB7IHg6IDMxNSwgeTogNTcsIHI6IDE2OSwgZzogMTcwLCBiOiAxNzcgfSxcbiAgICB7IHg6IDMxNSwgeTogNjAsIHI6IDE2OSwgZzogMTcwLCBiOiAxNzcgfSxcbiAgICB7IHg6IDMxNSwgeTogNjMsIHI6IDEzOSwgZzogMTQxLCBiOiAxNDggfSxcbiAgICB7IHg6IDMxNSwgeTogNjYsIHI6IDEzNywgZzogMTM5LCBiOiAxNDUgfSxcbiAgICB7IHg6IDMxOCwgeTogNTQsIHI6IDUwLCBnOiA1NywgYjogNjYgfSxcbiAgICB7IHg6IDMxOCwgeTogNTcsIHI6IDI5LCBnOiAzMiwgYjogNDEgfSxcbiAgICB7IHg6IDMxOCwgeTogNjAsIHI6IDI5LCBnOiAzMiwgYjogNDEgfSxcbiAgICB7IHg6IDMxOCwgeTogNjMsIHI6IDQ2LCBnOiA1MywgYjogNjIgfSxcbiAgICB7IHg6IDMxOCwgeTogNjYsIHI6IDE5NywgZzogMTk3LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMyMSwgeTogNTQsIHI6IDUxLCBnOiA1OCwgYjogNjcgfSxcbiAgICB7IHg6IDMyMSwgeTogNTcsIHI6IDc5LCBnOiA4NiwgYjogOTUgfSxcbiAgICB7IHg6IDMyMSwgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMyMSwgeTogNjMsIHI6IDU4LCBnOiA2NSwgYjogNzQgfSxcbiAgICB7IHg6IDMyMSwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMyNCwgeTogNTQsIHI6IDExMCwgZzogMTEzLCBiOiAxMjEgfSxcbiAgICB7IHg6IDMyNCwgeTogNTcsIHI6IDYyLCBnOiA2NiwgYjogNzUgfSxcbiAgICB7IHg6IDMyNCwgeTogNjAsIHI6IDcxLCBnOiA3OCwgYjogODcgfSxcbiAgICB7IHg6IDMyNCwgeTogNjMsIHI6IDE0NCwgZzogMTQ1LCBiOiAxNTMgfSxcbiAgICB7IHg6IDMyNCwgeTogNjYsIHI6IDEzNywgZzogMTM3LCBiOiAxNDUgfSxcbiAgICB7IHg6IDMyNywgeTogNTQsIHI6IDUyLCBnOiA1OSwgYjogNjUgfSxcbiAgICB7IHg6IDMyNywgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMyNywgeTogNjAsIHI6IDY4LCBnOiA3NCwgYjogODAgfSxcbiAgICB7IHg6IDMyNywgeTogNjMsIHI6IDI0LCBnOiAzMCwgYjogMzcgfSxcbiAgICB7IHg6IDMyNywgeTogNjYsIHI6IDE5NCwgZzogMTk1LCBiOiAyMDIgfSxcbiAgICB7IHg6IDMzMCwgeTogNTQsIHI6IDExNSwgZzogMTE3LCBiOiAxMjYgfSxcbiAgICB7IHg6IDMzMCwgeTogNTcsIHI6IDE4MCwgZzogMTg0LCBiOiAxODkgfSxcbiAgICB7IHg6IDMzMCwgeTogNjAsIHI6IDE4MCwgZzogMTg0LCBiOiAxODkgfSxcbiAgICB7IHg6IDMzMCwgeTogNjMsIHI6IDE4MCwgZzogMTg0LCBiOiAxODkgfSxcbiAgICB7IHg6IDMzMCwgeTogNjYsIHI6IDE5NCwgZzogMTk1LCBiOiAyMDIgfSxcbiAgICB7IHg6IDMzMywgeTogNTQsIHI6IDE3LCBnOiAyNSwgYjogMzMgfSxcbiAgICB7IHg6IDMzMywgeTogNTcsIHI6IDIxLCBnOiAyNiwgYjogMzMgfSxcbiAgICB7IHg6IDMzMywgeTogNjAsIHI6IDIxLCBnOiAyNiwgYjogMzMgfSxcbiAgICB7IHg6IDMzMywgeTogNjMsIHI6IDIxLCBnOiAyNiwgYjogMzMgfSxcbiAgICB7IHg6IDMzMywgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDMzNiwgeTogNTQsIHI6IDE1NCwgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDMzNiwgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMzNiwgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMzNiwgeTogNjMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMzNiwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDMzOSwgeTogNTQsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMzOSwgeTogNTcsIHI6IDIxLCBnOiAyOSwgYjogMzcgfSxcbiAgICB7IHg6IDMzOSwgeTogNjAsIHI6IDE5NCwgZzogMTkzLCBiOiAyMDMgfSxcbiAgICB7IHg6IDMzOSwgeTogNjMsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMzOSwgeTogNjYsIHI6IDE4NywgZzogMTg4LCBiOiAxOTUgfSxcbiAgICB7IHg6IDM0MiwgeTogNTQsIHI6IDcxLCBnOiA3OCwgYjogODQgfSxcbiAgICB7IHg6IDM0MiwgeTogNTcsIHI6IDE0MywgZzogMTQ1LCBiOiAxNTIgfSxcbiAgICB7IHg6IDM0MiwgeTogNjAsIHI6IDIzLCBnOiAzMCwgYjogMzkgfSxcbiAgICB7IHg6IDM0MiwgeTogNjMsIHI6IDgxLCBnOiA4NiwgYjogOTMgfSxcbiAgICB7IHg6IDM0MiwgeTogNjYsIHI6IDE0NSwgZzogMTQ4LCBiOiAxNTYgfSxcbiAgICB7IHg6IDM0NSwgeTogNTQsIHI6IDE0NiwgZzogMTUwLCBiOiAxNTggfSxcbiAgICB7IHg6IDM0NSwgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM0NSwgeTogNjAsIHI6IDE2MSwgZzogMTYyLCBiOiAxNzAgfSxcbiAgICB7IHg6IDM0NSwgeTogNjMsIHI6IDEyMSwgZzogMTI0LCBiOiAxMzAgfSxcbiAgICB7IHg6IDM0NSwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM0OCwgeTogNTQsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM0OCwgeTogNTcsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM0OCwgeTogNjAsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM0OCwgeTogNjMsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM0OCwgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDM1MSwgeTogNTQsIHI6IDE1NiwgZzogMTYwLCBiOiAxNzEgfSxcbiAgICB7IHg6IDM1MSwgeTogNTcsIHI6IDE2MSwgZzogMTY0LCBiOiAxNzEgfSxcbiAgICB7IHg6IDM1MSwgeTogNjAsIHI6IDE4NCwgZzogMTg1LCBiOiAxOTIgfSxcbiAgICB7IHg6IDM1MSwgeTogNjMsIHI6IDE3MywgZzogMTc0LCBiOiAxODEgfSxcbiAgICB7IHg6IDM1MSwgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDM1NCwgeTogNTQsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM1NCwgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM1NCwgeTogNjAsIHI6IDE5MCwgZzogMTkzLCBiOiAxOTkgfSxcbiAgICB7IHg6IDM1NCwgeTogNjMsIHI6IDEzNSwgZzogMTM5LCBiOiAxNDMgfSxcbiAgICB7IHg6IDM1NCwgeTogNjYsIHI6IDE3MiwgZzogMTc1LCBiOiAxODAgfSxcbiAgICB7IHg6IDM1NywgeTogNTQsIHI6IDI2LCBnOiAzMiwgYjogMzkgfSxcbiAgICB7IHg6IDM1NywgeTogNTcsIHI6IDE3LCBnOiAyNSwgYjogMzMgfSxcbiAgICB7IHg6IDM1NywgeTogNjAsIHI6IDQyLCBnOiA0OCwgYjogNTQgfSxcbiAgICB7IHg6IDM1NywgeTogNjMsIHI6IDczLCBnOiA4MCwgYjogODkgfSxcbiAgICB7IHg6IDM1NywgeTogNjYsIHI6IDE4MCwgZzogMTgyLCBiOiAxOTEgfSxcbiAgICB7IHg6IDM2MCwgeTogNTQsIHI6IDU2LCBnOiA2MywgYjogNzIgfSxcbiAgICB7IHg6IDM2MCwgeTogNTcsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM2MCwgeTogNjAsIHI6IDE3LCBnOiAyNSwgYjogMzMgfSxcbiAgICB7IHg6IDM2MCwgeTogNjMsIHI6IDQ5LCBnOiA1NCwgYjogNjIgfSxcbiAgICB7IHg6IDM2MCwgeTogNjYsIHI6IDE3MiwgZzogMTczLCBiOiAxODAgfSxcbiAgICB7IHg6IDM2MywgeTogNTQsIHI6IDE5MSwgZzogMTkwLCBiOiAxOTkgfSxcbiAgICB7IHg6IDM2MywgeTogNTcsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM2MywgeTogNjAsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM2MywgeTogNjMsIHI6IDE3MywgZzogMTcxLCBiOiAxODEgfSxcbiAgICB7IHg6IDM2MywgeTogNjYsIHI6IDE4MywgZzogMTg0LCBiOiAxOTEgfSxcbiAgICB7IHg6IDM2NiwgeTogNTQsIHI6IDIzLCBnOiAyOCwgYjogMzUgfSxcbiAgICB7IHg6IDM2NiwgeTogNTcsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM2NiwgeTogNjAsIHI6IDE4MiwgZzogMTg1LCBiOiAxOTAgfSxcbiAgICB7IHg6IDM2NiwgeTogNjMsIHI6IDM2LCBnOiA0MCwgYjogNDggfSxcbiAgICB7IHg6IDM2NiwgeTogNjYsIHI6IDE3NSwgZzogMTc2LCBiOiAxODMgfSxcbiAgICB7IHg6IDM2OSwgeTogNTQsIHI6IDM4LCBnOiA0NCwgYjogNTIgfSxcbiAgICB7IHg6IDM2OSwgeTogNTcsIHI6IDE3NywgZzogMTgwLCBiOiAxODYgfSxcbiAgICB7IHg6IDM2OSwgeTogNjAsIHI6IDE3LCBnOiAyNSwgYjogMzMgfSxcbiAgICB7IHg6IDM2OSwgeTogNjMsIHI6IDQ4LCBnOiA1NCwgYjogNjEgfSxcbiAgICB7IHg6IDM2OSwgeTogNjYsIHI6IDE2MCwgZzogMTYzLCBiOiAxNzEgfSxcbiAgICB7IHg6IDM3MiwgeTogNTQsIHI6IDE5MSwgZzogMTkyLCBiOiAxOTkgfSxcbiAgICB7IHg6IDM3MiwgeTogNTcsIHI6IDE4OCwgZzogMTg3LCBiOiAxOTYgfSxcbiAgICB7IHg6IDM3MiwgeTogNjAsIHI6IDE4MywgZzogMTgyLCBiOiAxOTEgfSxcbiAgICB7IHg6IDM3MiwgeTogNjMsIHI6IDE2MCwgZzogMTYyLCBiOiAxNjkgfSxcbiAgICB7IHg6IDM3MiwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM3NSwgeTogNTQsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM3NSwgeTogNTcsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM3NSwgeTogNjAsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM3NSwgeTogNjMsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDM3NSwgeTogNjYsIHI6IDE3OSwgZzogMTgxLCBiOiAxODcgfSxcbiAgICB7IHg6IDM3OCwgeTogNTQsIHI6IDc3LCBnOiA4NCwgYjogOTIgfSxcbiAgICB7IHg6IDM3OCwgeTogNTcsIHI6IDEyMCwgZzogMTIyLCBiOiAxMjggfSxcbiAgICB7IHg6IDM3OCwgeTogNjAsIHI6IDEyMCwgZzogMTIyLCBiOiAxMjggfSxcbiAgICB7IHg6IDM3OCwgeTogNjMsIHI6IDkxLCBnOiA5NSwgYjogMTAxIH0sXG4gICAgeyB4OiAzNzgsIHk6IDY2LCByOiAxNDYsIGc6IDE0OCwgYjogMTU0IH0sXG4gICAgeyB4OiAzODEsIHk6IDU0LCByOiAxMDgsIGc6IDEwOSwgYjogMTE3IH0sXG4gICAgeyB4OiAzODEsIHk6IDU3LCByOiA2NiwgZzogNzAsIGI6IDc3IH0sXG4gICAgeyB4OiAzODEsIHk6IDYwLCByOiA2NiwgZzogNzAsIGI6IDc3IH0sXG4gICAgeyB4OiAzODEsIHk6IDYzLCByOiA5NywgZzogMTAzLCBiOiAxMDggfSxcbiAgICB7IHg6IDM4MSwgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM4NCwgeTogNTQsIHI6IDIwLCBnOiAyOCwgYjogMzYgfSxcbiAgICB7IHg6IDM4NCwgeTogNTcsIHI6IDIwLCBnOiAyOCwgYjogMzYgfSxcbiAgICB7IHg6IDM4NCwgeTogNjAsIHI6IDIwLCBnOiAyOCwgYjogMzYgfSxcbiAgICB7IHg6IDM4NCwgeTogNjMsIHI6IDIwLCBnOiAyOCwgYjogMzYgfSxcbiAgICB7IHg6IDM4NCwgeTogNjYsIHI6IDE1NywgZzogMTU5LCBiOiAxNjUgfSxcbiAgICB7IHg6IDM4NywgeTogNTQsIHI6IDE3MCwgZzogMTcxLCBiOiAxNzggfSxcbiAgICB7IHg6IDM4NywgeTogNTcsIHI6IDQ3LCBnOiA1MiwgYjogNTkgfSxcbiAgICB7IHg6IDM4NywgeTogNjAsIHI6IDUxLCBnOiA1OCwgYjogNjQgfSxcbiAgICB7IHg6IDM4NywgeTogNjMsIHI6IDE2OCwgZzogMTY5LCBiOiAxNzYgfSxcbiAgICB7IHg6IDM4NywgeTogNjYsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM5MCwgeTogNTQsIHI6IDMxLCBnOiAzNywgYjogNDMgfSxcbiAgICB7IHg6IDM5MCwgeTogNTcsIHI6IDMxLCBnOiAzNywgYjogNDMgfSxcbiAgICB7IHg6IDM5MCwgeTogNjAsIHI6IDMxLCBnOiAzNywgYjogNDMgfSxcbiAgICB7IHg6IDM5MCwgeTogNjMsIHI6IDMxLCBnOiAzNywgYjogNDMgfSxcbiAgICB7IHg6IDM5MCwgeTogNjYsIHI6IDE1NywgZzogMTYxLCBiOiAxNjkgfSxcbiAgXVxuKTtcblxuY29uc3QgcmVjaGFyZ2VCYWxsTGVhZ3VlTW9kZSA9IG5ldyBQYWdlKFxuICAncmVjaGFyZ2VCYWxsTGVhZ3VlTW9kZScsXG4gIFtcbiAgICAvLyB0aXRsZVxuICAgIHsgeDogMjI0LCB5OiA1NSwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMjY4LCB5OiA2MCwgcjogMjQsIGc6IDMyLCBiOiAzNyB9LFxuICAgIHsgeDogMzE2LCB5OiA2MiwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMzY4LCB5OiA2MSwgcjogMjMsIGc6IDMxLCBiOiA0MCB9LFxuICAgIHsgeDogNDAxLCB5OiA1NiwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogNDQwLCB5OiA2MCwgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuXG4gICAgLy8gYmdcbiAgICB7IHg6IDExMCwgeTogNTMsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDExNCwgeTogMjk4LCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiAzMTUsIHk6IDMwNywgcjogMjM0LCBnOiAyNDEsIGI6IDIzNCB9LFxuICAgIHsgeDogNTIxLCB5OiAzMDYsIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcbiAgICB7IHg6IDUxOCwgeTogNTEsIHI6IDE5NywgZzogMTk4LCBiOiAxOTggfSxcbiAgXSxcbiAgeyB4OiA1MTgsIHk6IDQ5IH0sIC8vIGNhbmNlbFxuICB7IHg6IDUxOCwgeTogNDkgfVxuKTtcblxuY29uc3QgcmVjaGFyZ2VCYWxsUmFua01vZGUgPSBuZXcgUGFnZShcbiAgJ3JlY2hhcmdlQmFsbFJhbmtNb2RlJyxcbiAgW1xuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAxOTksIHk6IDU2LCByOiAxNDMsIGc6IDE0NSwgYjogMTUyIH0sXG4gICAgeyB4OiAyMzEsIHk6IDUzLCByOiA3MCwgZzogNzYsIGI6IDg0IH0sXG4gICAgeyB4OiAyODMsIHk6IDU0LCByOiAxMjUsIGc6IDEyNSwgYjogMTMzIH0sXG4gICAgeyB4OiAzMTAsIHk6IDUzLCByOiA0NiwgZzogNTMsIGI6IDU4IH0sXG4gICAgeyB4OiAzMzgsIHk6IDU0LCByOiA0OCwgZzogNTUsIGI6IDY0IH0sXG4gICAgeyB4OiAzNTgsIHk6IDU0LCByOiAxNzYsIGc6IDE3NiwgYjogMTg0IH0sXG4gICAgeyB4OiAzNzgsIHk6IDYwLCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzODcsIHk6IDYwLCByOiAxMzYsIGc6IDEzOSwgYjogMTQ0IH0sXG4gICAgeyB4OiA0MDUsIHk6IDU2LCByOiAyNiwgZzogMzAsIGI6IDM5IH0sXG4gICAgeyB4OiA0MTgsIHk6IDYwLCByOiAzNywgZzogNDQsIGI6IDUzIH0sXG4gICAgeyB4OiA0MjcsIHk6IDU4LCByOiAyNywgZzogMzUsIGI6IDM4IH0sXG4gICAgeyB4OiA0NTUsIHk6IDU1LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAxNDcsIHk6IDU1LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG5cbiAgICAvLyByZWNoYXJnZSBidG5zXG4gICAgeyB4OiAxNDEsIHk6IDMwOSwgcjogOCwgZzogOTIsIGI6IDI0MyB9LFxuICAgIHsgeDogMTU2LCB5OiAyOTMsIHI6IDIyNSwgZzogMjM2LCBiOiAyNDcgfSxcbiAgICB7IHg6IDE3NSwgeTogMzA1LCByOiA4LCBnOiAxMDIsIGI6IDI0NyB9LFxuICAgIHsgeDogMjk4LCB5OiAzMDUsIHI6IDAsIGc6IDUzLCBiOiAxMDcgfSxcblxuICAgIHsgeDogMzYyLCB5OiAyOTksIHI6IDI1NCwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM0NCwgeTogMzA4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzNjYsIHk6IDMwOCwgcjogOCwgZzogOTcsIGI6IDI0NyB9LFxuICAgIHsgeDogNTAxLCB5OiAzMDMsIHI6IDAsIGc6IDUzLCBiOiAxMDcgfSxcbiAgXSxcbiAgeyB4OiA1MTgsIHk6IDQ5IH0sIC8vIGNhbmNlbFxuICB7IHg6IDUxOCwgeTogNDkgfVxuKTtcblxuY29uc3QgcmVjaGFyZ2VCYWxsR3JvdXAgPSBuZXcgR3JvdXBQYWdlKFxuICAncmVjaGFyZ2VCYWxsR3JvdXAnLFxuICBbcmVjaGFyZ2VCYWxsTGVhZ3VlTW9kZSwgcmVjaGFyZ2VCYWxsUmFua01vZGVdLFxuICByZWNoYXJnZUJhbGxMZWFndWVNb2RlLm5leHQsXG4gIHJlY2hhcmdlQmFsbExlYWd1ZU1vZGUuYmFja1xuKTtcblxuY29uc3QgbmV4dEdyb3VwID0gbmV3IEdyb3VwUGFnZSgnbmV4dEdyb3VwJywgW25leHQsIG5leHQyLCByZWNoYXJnZUJhbGxMZWFndWVNb2RlLCByZWNoYXJnZUJhbGxSYW5rTW9kZV0sIG5leHQubmV4dCwgbmV4dC5iYWNrKTtcbiIsImltcG9ydCB7IFBhZ2UsIEdyb3VwUGFnZSB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IHN0YXRlLCByZXJvdXRlciB9IGZyb20gJy4uLy4uL21vZHVsZXMnO1xuXG5pbXBvcnQgeyBUQVNLUyB9IGZyb20gJy4uL3Rhc2tOYW1lcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7Z2FtZVJlc3VsdC5uYW1lfWAsXG4gICAgbWF0Y2g6IGdhbWVSZXN1bHQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIHN3aXRjaCAoY29udGV4dC50YXNrLm5hbWUpIHtcbiAgICAgICAgY2FzZSBUQVNLUy5wbGF5QmF0dGxlR2FtZTpcbiAgICAgICAgY2FzZSBUQVNLUy5wbGF5TGVhZ3VlR2FtZTpcbiAgICAgICAgICBjb25zb2xlLmxvZygnY29tcGxldGUgYSBnYW1lJyk7XG4gICAgICAgICAgZmluaXNoUm91bmQoKTtcbiAgICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIHJlcm91dGVyLmdvTmV4dChnYW1lUmVzdWx0KTtcbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke29uUXVpY2tQbGF5Lm5hbWV9YCxcbiAgICBtYXRjaDogb25RdWlja1BsYXksXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdvbiBxdWljayBwbGF5aW5nJyk7XG5cbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSA9PT0gVEFTS1MucGxheUxlYWd1ZUdhbWUpIHtcbiAgICAgICAgLy8gc3VjY2VzcyBlbnRlciBnYW1lXG4gICAgICAgIHN0YXRlLmxlYWd1ZUdhbWUudHJ5RW50ZXJHYW1lQ250cyA9IDA7XG4gICAgICAgIHN0YXRlLmxlYWd1ZUdhbWUubmVlZFNldERyaW5rID0gdHJ1ZTsgLy8gcmVzZXQgZm9yIG5leHQgZHJpbmtcbiAgICAgIH0gZWxzZSBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLnBsYXlCYXR0bGVHYW1lKSB7XG4gICAgICAgIHN0YXRlLnJhbmtHYW1lLm5lZWRTZXREcmluayA9IHRydWU7IC8vIHJlc2V0IGZvciBuZXh0IGRyaW5rXG4gICAgICB9XG5cbiAgICAgIHN0YXRlLm9uUnVubmluZyh0cnVlKTtcbiAgICAgIGlmIChyZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKG9uUXVpY2tQbGF5UGF1c2UsIGltYWdlKSkge1xuICAgICAgICBjb25zb2xlLmxvZygnZ2FtZSBwYXVzZWQsIHJlc3VtZSBpdCcpO1xuICAgICAgICByZXJvdXRlci5nb05leHQob25RdWlja1BsYXlQYXVzZSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJlcm91dGVyLmdvTmV4dChvblF1aWNrUGxheSk7XG4gICAgfSxcbiAgfSk7XG5cbiAgW2dhbWVSZXN1bHRPdGhlciwgZ2FtZVJlc3VsdEFxdWlyZWQsIHNlbGVjdE9uZUl0ZW1PdGhlclRoYW5CYXNpY1Jld2FyZCwgc2VsZWN0T25lSXRlbU90aGVyVGhhbkJhc2ljUmV3YXJkUHJvY2VlZF0uZm9yRWFjaChwID0+IHtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7cC5uYW1lfWAsXG4gICAgICBtYXRjaDogcCxcbiAgICAgIGFjdGlvbjogJ2dvTmV4dCcsXG4gICAgfSk7XG4gIH0pO1xufVxuXG5jb25zdCBnYW1lUmVzdWx0ID0gbmV3IFBhZ2UoXG4gICdnYW1lUmVzdWx0JyxcbiAgW1xuICAgIC8vIHRpdGxlIGJnXG4gICAgeyB4OiA5NywgeTogMjIsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDEzMSwgeTogMjcsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDE4MCwgeTogMjQsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDQyMywgeTogMjMsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDQ3MywgeTogMjMsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDUxMywgeTogMjMsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDE5LCB5OiAyMywgcjogNDEsIGc6IDQ5LCBiOiA1OCB9LFxuICAgIHsgeDogNjE1LCB5OiAyNiwgcjogNDEsIGc6IDQ1LCBiOiA1OCB9LFxuXG4gICAgLy8gdmlldyBhbGwgYnRuXG4gICAgeyB4OiAxMTUsIHk6IDMyNSwgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDEyNCwgeTogMzM3LCByOiA0MSwgZzogNzcsIGI6IDExNSB9LFxuXG4gICAgLy8gYm94IHNjb3JlIGJ0blxuICAgIHsgeDogMjIzLCB5OiAzMjgsIHI6IDE0NCwgZzogMTY2LCBiOiAxOTMgfSxcbiAgICB7IHg6IDI0MCwgeTogMzI0LCByOiA0OSwgZzogODUsIGI6IDEyMyB9LFxuICAgIHsgeDogMjQyLCB5OiAzMzIsIHI6IDQ5LCBnOiA4MSwgYjogMTE2IH0sXG5cbiAgICAvLyBuZXh0IGJ0blxuICAgIHsgeDogNTEwLCB5OiAzMjYsIHI6IDgsIGc6IDExNywgYjogMjQ3IH0sXG4gICAgeyB4OiA1NDAsIHk6IDMyNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTYwLCB5OiAzMjksIHI6IDgsIGc6IDExNCwgYjogMjU0IH0sXG4gICAgeyB4OiA1ODYsIHk6IDMyOSwgcjogOCwgZzogMTIxLCBiOiAyNTUgfSxcblxuICAgIC8vIGJnIGJldHdlZW4gYnRuc1xuICAgIHsgeDogMzE1LCB5OiAzMzEsIHI6IDIzOCwgZzogMjQ3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDM2OSwgeTogMzMxLCByOiAyMzgsIGc6IDI0NywgYjogMjQ3IH0sXG4gICAgeyB4OiA0MTcsIHk6IDMyOSwgcjogMjM4LCBnOiAyNDcsIGI6IDI0NyB9LFxuICBdLFxuICB7IHg6IDYwOSwgeTogMzM1IH0sXG4gIHsgeDogNjA5LCB5OiAzMzUgfVxuKTtcblxuY29uc3QgZ2FtZVJlc3VsdEFxdWlyZWQgPSBuZXcgUGFnZShcbiAgJ2dhbWVSZXN1bHRBcXVpcmVkJyxcbiAgW1xuICAgIHsgeDogNDQ5LCB5OiAyMywgcjogNDEsIGc6IDQ0LCBiOiA0OSB9LCAvLyB0aXRsZVxuICAgIHsgeDogMzksIHk6IDMyOSwgcjogMjEzLCBnOiAyMTgsIGI6IDIxMyB9LCAvLyBiYWNrIGJ0blxuICAgIHsgeDogMTU4LCB5OiAyODcsIHI6IDI0NywgZzogMTI2LCBiOiA1MSB9LCAvLyBwbGF5ZXIgcGFjayBidG5cbiAgICB7IHg6IDYxMiwgeTogMzI4LCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LCAvLyBvayBidG5cbiAgXSxcbiAgeyB4OiA2MTIsIHk6IDMyOCB9LFxuICB7IHg6IDYxMiwgeTogMzI4IH1cbik7XG5cbmNvbnN0IGdhbWVSZXN1bHRPdGhlciA9IG5ldyBQYWdlKFxuICAnZ2FtZVJlc3VsdE90aGVyJyxcbiAgW1xuICAgIHsgeDogNzEsIHk6IDI5LCByOiAwLCBnOiA4NSwgYjogMTU2IH0sXG4gICAgeyB4OiA1NTYsIHk6IDE1LCByOiAyMTIsIGc6IDIyOCwgYjogMjQxIH0sXG4gICAgeyB4OiA1OTUsIHk6IDEzLCByOiAwLCBnOiA5MywgYjogMTgxIH0sXG4gICAgeyB4OiA2MTAsIHk6IDEzLCByOiAwLCBnOiAyOCwgYjogNTcgfSxcbiAgICB7IHg6IDYxOCwgeTogMTMsIHI6IDE3LCBnOiAyNiwgYjogNTggfSxcbiAgICB7IHg6IDYyNCwgeTogOCwgcjogMjQzLCBnOiAyNDQsIGI6IDI0NSB9LFxuICAgIHsgeDogNjI3LCB5OiAyNCwgcjogMTY1LCBnOiAxODYsIGI6IDIwMiB9LFxuICAgIHsgeDogNTc4LCB5OiAyMywgcjogNzAsIGc6IDEzMiwgYjogMTgyIH0sXG4gICAgeyB4OiAyNDksIHk6IDU2LCByOiA4NCwgZzogMTIxLCBiOiAxNjEgfSxcbiAgICB7IHg6IDI2NywgeTogNTYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxOSwgeTogNjAsIHI6IDE2OCwgZzogMTkxLCBiOiAyMDggfSxcbiAgICB7IHg6IDM3NywgeTogNTgsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDI5LCB5OiA5MywgcjogMCwgZzogMzYsIGI6IDY2IH0sXG4gICAgeyB4OiA2MTcsIHk6IDMxNCwgcjogMTYsIGc6IDI0LCBiOiAxNyB9LFxuICAgIHsgeDogMTA4LCB5OiAzMjIsIHI6IDgsIGc6IDIwLCBiOiAxNiB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5cbmNvbnN0IG9uUXVpY2tQbGF5ID0gbmV3IFBhZ2UoXG4gICdvblF1aWNrUGxheScsXG4gIFtcbiAgICAvLyBhd2F5XG4gICAgeyB4OiA0LCB5OiAyMjQsIHI6IDIzOCwgZzogMjI2LCBiOiAyMjIgfSxcbiAgICB7IHg6IDE0LCB5OiAyMjQsIHI6IDE4MiwgZzogNjMsIGI6IDkgfSxcbiAgICB7IHg6IDI2LCB5OiAyMjQsIHI6IDE4NSwgZzogNjQsIGI6IDggfSxcbiAgICB7IHg6IDM0LCB5OiAyMjQsIHI6IDIzOCwgZzogMjI3LCBiOiAyMjIgfSxcblxuICAgIC8vIGhvbWVcbiAgICB7IHg6IDYwNSwgeTogMjI2LCByOiAyMzgsIGc6IDIzMSwgYjogMjIyIH0sXG4gICAgeyB4OiA2MTksIHk6IDIyNiwgcjogMjA0LCBnOiAyMDEsIGI6IDIyMiB9LFxuICAgIHsgeDogNjMxLCB5OiAyMjcsIHI6IDksIGc6IDgxLCBiOiAyMDYgfSxcblxuICAgIC8vIHBsYXktYnktcGxheVxuICAgIHsgeDogMjg3LCB5OiAyNzcsIHI6IDIzMCwgZzogMjI2LCBiOiAyMjIgfSxcbiAgICB7IHg6IDMwMiwgeTogMjc3LCByOiA3NCwgZzogNzQsIGI6IDc0IH0sXG4gICAgeyB4OiAzMzgsIHk6IDI3NiwgcjogMjMwLCBnOiAyMjcsIGI6IDIyMiB9LFxuXG4gICAgLy8gcGxheSBtYW51YWxseVxuICAgIC8vIGluIHJhbmtlZCBiYXR0bGUgbW9kZSwgdGhlcmUncyBubyB0aGlzIGJ0blxuICAgIC8vIHsgeDogNTU1LCB5OiAxODYsIHI6IDIzNiwgZzogMjQ0LCBiOiAyNTUgfSxcbiAgICAvLyB7IHg6IDU3MSwgeTogMTg2LCByOiA5MiwgZzogMTUxLCBiOiAyMjIgfSxcbiAgICAvLyB7IHg6IDU4OCwgeTogMTg3LCByOiA1MCwgZzogMTQ0LCBiOiAyNTIgfSxcbiAgICAvLyB7IHg6IDYwNCwgeTogMTg3LCByOiAyMzgsIGc6IDI0NiwgYjogMjUxIH0sXG4gICAgLy8geyB4OiA2MTUsIHk6IDE4NywgcjogOCwgZzogMTIxLCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiAwLCB5OiAwIH0sXG4gIHsgeDogMCwgeTogMCB9XG4pO1xuXG4vLyBzb21ldGltZXMgdGhlIHF1aWNrIHBsYXkgd2lsbCBiZSBwYXVzZWRcbmNvbnN0IG9uUXVpY2tQbGF5UGF1c2UgPSBuZXcgUGFnZShcbiAgJ29uUXVpY2tQbGF5UGF1c2UnLFxuICBbXG4gICAgLy8gc2V0IGlubmluZ1xuICAgIHsgeDogNTUwLCB5OiAxNjgsIHI6IDAsIGc6IDk1LCBiOiAyNDcgfSxcbiAgICB7IHg6IDU2OCwgeTogMTYzLCByOiAyMTksIGc6IDIzMSwgYjogMjU0IH0sXG4gICAgeyB4OiA1OTIsIHk6IDE2MiwgcjogMjQ1LCBnOiAyNDYsIGI6IDI1NSB9LFxuICAgIHsgeDogNjIwLCB5OiAxNjUsIHI6IDgsIGc6IDEwMSwgYjogMjQ3IH0sXG5cbiAgICAvLyBwbGF5IGJhbGxcbiAgICB7IHg6IDU0NiwgeTogMjA0LCByOiAwLCBnOiA5MywgYjogMjQ3IH0sXG4gICAgeyB4OiA1NjksIHk6IDE5MywgcjogMTg5LCBnOiAyMTgsIGI6IDI1MCB9LFxuICAgIHsgeDogNTkwLCB5OiAxOTgsIHI6IDU5LCBnOiAxMjgsIGI6IDI0MCB9LFxuICAgIHsgeDogNjIzLCB5OiAxOTYsIHI6IDgsIGc6IDEwOSwgYjogMjQ3IH0sXG4gIF0sXG4gIHsgeDogNTkwLCB5OiAxOTggfSwgLy8gcGxheSBiYWxsIC8vIFRPRE86IG1pZ2h0IG5lZWQgdG8gc2V0IGlubmluZ1xuICB7IHg6IDU5MCwgeTogMTk4IH1cbik7XG5cbmNvbnN0IHNlbGVjdE9uZUl0ZW1PdGhlclRoYW5CYXNpY1Jld2FyZCA9IG5ldyBQYWdlKFxuICAnc2VsZWN0T25lSXRlbU90aGVyVGhhbkJhc2ljUmV3YXJkJyxcbiAgW1xuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAxNzQsIHk6IDQ2LCByOiAxMjcsIGc6IDE1OSwgYjogMTkyIH0sXG4gICAgeyB4OiAxOTksIHk6IDQ2LCByOiAxNTEsIGc6IDE4MiwgYjogMjAzIH0sXG4gICAgeyB4OiAyMzEsIHk6IDQ2LCByOiAyMTYsIGc6IDIyNywgYjogMjM3IH0sXG4gICAgeyB4OiAyNjksIHk6IDQ2LCByOiA4LCBnOiA3NywgYjogMTM5IH0sXG4gICAgeyB4OiAzMDgsIHk6IDQ1LCByOiA0NCwgZzogMTA0LCBiOiAxNTcgfSxcbiAgICB7IHg6IDM0NSwgeTogNDQsIHI6IDgsIGc6IDc3LCBiOiAxNDAgfSxcbiAgICB7IHg6IDM4MSwgeTogNDQsIHI6IDIxOSwgZzogMjMwLCBiOiAyMzkgfSxcbiAgICB7IHg6IDQyMCwgeTogNDMsIHI6IDI1NCwgZzogMjU0LCBiOiAyNTQgfSxcbiAgICB7IHg6IDQ1MCwgeTogNDEsIHI6IDEwNywgZzogMTQ3LCBiOiAxODYgfSxcblxuICAgIC8vIHVuc2VsZWN0YWJsZSBva1xuICAgIHsgeDogNTE3LCB5OiAzMTEsIHI6IDAsIGc6IDczLCBiOiAxNDggfSxcbiAgICB7IHg6IDUzNCwgeTogMzI1LCByOiA4LCBnOiA2NSwgYjogMTQ4IH0sXG4gICAgeyB4OiA1NDgsIHk6IDMxOCwgcjogMjksIGc6IDgzLCBiOiAxNDggfSxcbiAgICB7IHg6IDU2NiwgeTogMzE4LCByOiAxNTUsIGc6IDE1MywgYjogMTU2IH0sXG4gICAgeyB4OiA1OTEsIHk6IDMxMCwgcjogMCwgZzogNzMsIGI6IDE0OCB9LFxuICAgIHsgeDogNTk1LCB5OiAzMjUsIHI6IDgsIGc6IDY1LCBiOiAxNDggfSxcblxuICAgIC8vIGJnIG9uIGJvYXJkc1xuICAgIHsgeDogMjYsIHk6IDI4NywgcjogNzQsIGc6IDc3LCBiOiA2NiB9LFxuICAgIHsgeDogMjUsIHk6IDMxOSwgcjogNDEsIGc6IDQ1LCBiOiAzMyB9LFxuICAgIHsgeDogMzAwLCB5OiAyODcsIHI6IDY2LCBnOiA3MywgYjogNTggfSxcbiAgICB7IHg6IDMwMiwgeTogMzIyLCByOiA0MSwgZzogNDgsIGI6IDM3IH0sXG4gICAgeyB4OiA1LCB5OiA4OSwgcjogMTMyLCBnOiAxNDYsIGI6IDgyIH0sXG4gICAgeyB4OiA2MjMsIHk6IDk3LCByOiA0OSwgZzogMTE3LCBiOiAxNTYgfSxcbiAgICB7IHg6IDYyNiwgeTogMjIzLCByOiA0OSwgZzogMTE3LCBiOiAxNTYgfSxcbiAgXSxcbiAgeyB4OiAxNjksIHk6IDk4IH0sIC8vIHNlY29uZCBjYXJkXG4gIHsgeDogMTY5LCB5OiA5OCB9IC8vIHNlY29uZCBjYXJkXG4pO1xuXG4vLyBhZnRlciBzZWxlY3Qgb2tcbmNvbnN0IHNlbGVjdE9uZUl0ZW1PdGhlclRoYW5CYXNpY1Jld2FyZFByb2NlZWQgPSBuZXcgUGFnZShcbiAgJ3NlbGVjdE9uZUl0ZW1PdGhlclRoYW5CYXNpY1Jld2FyZFByb2NlZWQnLFxuICBbXG4gICAgLy8gdGl0bGVcbiAgICB7IHg6IDE3NCwgeTogNDYsIHI6IDEyNywgZzogMTU5LCBiOiAxOTIgfSxcbiAgICB7IHg6IDE5OSwgeTogNDYsIHI6IDE1MSwgZzogMTgyLCBiOiAyMDMgfSxcbiAgICB7IHg6IDIzMSwgeTogNDYsIHI6IDIxNiwgZzogMjI3LCBiOiAyMzcgfSxcbiAgICB7IHg6IDI2OSwgeTogNDYsIHI6IDgsIGc6IDc3LCBiOiAxMzkgfSxcbiAgICB7IHg6IDMwOCwgeTogNDUsIHI6IDQ0LCBnOiAxMDQsIGI6IDE1NyB9LFxuICAgIHsgeDogMzQ1LCB5OiA0NCwgcjogOCwgZzogNzcsIGI6IDE0MCB9LFxuICAgIHsgeDogMzgxLCB5OiA0NCwgcjogMjE5LCBnOiAyMzAsIGI6IDIzOSB9LFxuICAgIHsgeDogNDIwLCB5OiA0MywgcjogMjU0LCBnOiAyNTQsIGI6IDI1NCB9LFxuICAgIHsgeDogNDUwLCB5OiA0MSwgcjogMTA3LCBnOiAxNDcsIGI6IDE4NiB9LFxuXG4gICAgLy8gc2VsZWN0YWJsZSBva1xuICAgIHsgeDogNTIzLCB5OiAzMTksIHI6IDgsIGc6IDExMywgYjogMjQ3IH0sXG4gICAgeyB4OiA1NTMsIHk6IDMxNCwgcjogNjAsIGc6IDE0NCwgYjogMjQ0IH0sXG4gICAgeyB4OiA1ODEsIHk6IDMxNSwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcblxuICAgIC8vIGJnIG9uIGJvYXJkc1xuICAgIHsgeDogMjYsIHk6IDI4NywgcjogNzQsIGc6IDc3LCBiOiA2NiB9LFxuICAgIHsgeDogMjUsIHk6IDMxOSwgcjogNDEsIGc6IDQ1LCBiOiAzMyB9LFxuICAgIHsgeDogMzAwLCB5OiAyODcsIHI6IDY2LCBnOiA3MywgYjogNTggfSxcbiAgICB7IHg6IDMwMiwgeTogMzIyLCByOiA0MSwgZzogNDgsIGI6IDM3IH0sXG4gICAgeyB4OiA1LCB5OiA4OSwgcjogMTMyLCBnOiAxNDYsIGI6IDgyIH0sXG4gICAgeyB4OiA2MjMsIHk6IDk3LCByOiA0OSwgZzogMTE3LCBiOiAxNTYgfSxcbiAgICB7IHg6IDYyNiwgeTogMjIzLCByOiA0OSwgZzogMTE3LCBiOiAxNTYgfSxcbiAgXSxcbiAgeyB4OiA1MjMsIHk6IDMxOSB9LCAvLyBva1xuICB7IHg6IDUyMywgeTogMzE5IH0gLy8gb2tcbik7XG4iLCJpbXBvcnQgeyBVdGlscywgUGFnZSB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IHN0YXRlLCByZXJvdXRlciwgQ29uZmlnIH0gZnJvbSAnLi4vLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi4vdGFza05hbWVzJztcbmltcG9ydCAqIGFzIENPTlNUQU5UUyBmcm9tICcuLi8uLi9jb25zdGFudHMnO1xuaW1wb3J0IHsgZ2V0Q29sb3JDb3VudEluUmFuZ2UsIGlzU2FtZUNvbG9yQ291bnQgfSBmcm9tICcuLi8uLi91dGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bGVhZ3VlT25QbGF5UG93ZXJTYXZlT24ubmFtZX1gLFxuICAgIG1hdGNoOiBsZWFndWVPblBsYXlQb3dlclNhdmVPbixcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgY29uc3QgaXNPblBsYXlUYXNrID0gY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLnBsYXlMZWFndWVHYW1lO1xuXG4gICAgICBpZiAoIUNvbmZpZy5zY3JpcHRDb25maWcuaGFzQ29vbEZlYXR1cmUgfHwgIWlzT25QbGF5VGFzayB8fCByZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHBvd2VyU2F2aW5nLCBpbWFnZSkpIHtcbiAgICAgICAgaGFuZGxlUG93ZXJTYXZpbmdQYWdlKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIGNvbnN0IHsgbGFzdENoZWNrUG93ZXJTYXZlQXQ6IGxhc3RDaGVja1RpbWVBdCwgcG93ZXJTYXZlQ29sb3JDb3VudDogY29sb3JDb3VudCB9ID0gc3RhdGUubGVhZ3VlR2FtZTtcbiAgICAgIGlmIChub3cgLSBsYXN0Q2hlY2tUaW1lQXQgPCBDT05TVEFOVFMuc2VuZFJ1bm5pbmdFdmVudEludGVydmFsKSB7XG4gICAgICAgIFV0aWxzLnNsZWVwKDEwXzAwMCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gdXNlIHRpbWUgdG8gY2hlY2sgd2hldGhlciBnYW1lIGlzIHN0aWxsIHBsYXlpbmdcbiAgICAgIGNvbnN0IGNvbG9yQ250Tm93ID0gZ2V0Q29sb3JDb3VudEluUmFuZ2UoaW1hZ2UsIHsgeDogMzMxLCB5OiAzMTAgfSwgeyB4OiA0MDMsIHk6IDMxMSB9KTtcbiAgICAgIGNvbnN0IGlzU2FtZSA9IGlzU2FtZUNvbG9yQ291bnQoY29sb3JDbnROb3csIGNvbG9yQ291bnQpO1xuXG4gICAgICBzdGF0ZS5sZWFndWVHYW1lLmxhc3RDaGVja1Bvd2VyU2F2ZUF0ID0gbm93O1xuICAgICAgc3RhdGUubGVhZ3VlR2FtZS5wb3dlclNhdmVDb2xvckNvdW50ID0gY29sb3JDbnROb3c7XG5cbiAgICAgIGlmICghaXNTYW1lKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdnYW1lIGlzIHN0aWxsIHBsYXlpbmcgd2l0aCBwb3dlciBzYXZlIG9uJyk7XG4gICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICBVdGlscy5zbGVlcCgxMF8wMDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKCdnYW1lIGlzIHN0dWNrJyk7XG4gICAgfSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVQb3dlclNhdmluZ1BhZ2UoKSB7XG4gIGNvbnNvbGUubG9nKCdoYW5kbGVQb3dlclNhdmluZ1BhZ2UnKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLnRhcERvd24oeyB4OiAxMDAsIHk6IDE4MCB9KTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgcmVyb3V0ZXIuc2NyZWVuLm1vdmVUbyh7IHg6IDUwMCwgeTogMTgwIH0pO1xuICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuICByZXJvdXRlci5zY3JlZW4udGFwVXAoeyB4OiA1MDAsIHk6IDE4MCB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IHBvd2VyU2F2aW5nID0gbmV3IFBhZ2UoXG4gICdwb3dlclNhdmluZycsXG4gIFtcbiAgICB7IHg6IDMwNCwgeTogMTM2LCByOiAxNTYsIGc6IDE2MCwgYjogMTY1IH0sXG4gICAgeyB4OiAzMDUsIHk6IDEzNiwgcjogMTU2LCBnOiAxNjAsIGI6IDE2NSB9LFxuICAgIHsgeDogMzA2LCB5OiAxMzYsIHI6IDE1NiwgZzogMTYwLCBiOiAxNjUgfSxcbiAgICB7IHg6IDMwNywgeTogMTM2LCByOiAxNTYsIGc6IDE2MCwgYjogMTY1IH0sXG4gICAgeyB4OiAzMDgsIHk6IDEzNiwgcjogMTU2LCBnOiAxNjAsIGI6IDE2NSB9LFxuXG4gICAgeyB4OiAzMDEsIHk6IDEzMywgcjogMTY1LCBnOiAxNjIsIGI6IDE2NSB9LFxuICAgIHsgeDogMzAyLCB5OiAxMzMsIHI6IDE2NSwgZzogMTYyLCBiOiAxNjUgfSxcbiAgICB7IHg6IDMwMywgeTogMTMzLCByOiAxNjUsIGc6IDE2MiwgYjogMTY1IH0sXG4gICAgeyB4OiAzMDQsIHk6IDEzMywgcjogMTY1LCBnOiAxNjIsIGI6IDE2NSB9LFxuICAgIHsgeDogMzA1LCB5OiAxMzMsIHI6IDE2NSwgZzogMTYyLCBiOiAxNjUgfSxcbiAgICB7IHg6IDEzNywgeTogMTU1LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1MjEsIHk6IDE2MCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogMjk4LCB5OiA1MCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNjE4LCB5OiAxMCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIC8vIHRvIGRpZmYgZnJvbSBwb3dlciBzYXZpbmcgZHVyaW5nIHBsYXlpbmdcbiAgICB7IHg6IDQ5NywgeTogMzAwLCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA0OTgsIHk6IDMwMCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNDk5LCB5OiAzMDAsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDUwMCwgeTogMzAwLCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1MDEsIHk6IDMwMCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNTAyLCB5OiAzMDAsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDUwMywgeTogMzAwLCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1NTUsIHk6IDI4MiwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNTU1LCB5OiAyOTIsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDU0NSwgeTogMjkxLCByOiAwLCBnOiAwLCBiOiAwIH0sXG5cbiAgICAvLyBzY29yZVxuICAgIHsgeDogNTIwLCB5OiAyODAsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDUyNSwgeTogMjgwLCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1MzAsIHk6IDI4MCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNTM1LCB5OiAyODAsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDU0MCwgeTogMjgwLCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1NDUsIHk6IDI4MCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNTUwLCB5OiAyODAsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDUyMCwgeTogMjk1LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1MjUsIHk6IDI5NSwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNTMwLCB5OiAyOTUsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDUzNSwgeTogMjk1LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA1NDAsIHk6IDI5NSwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNTQ1LCB5OiAyOTUsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDU1MCwgeTogMjk1LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gIF0sXG4gIHsgeDogMCwgeTogMCB9LFxuICB7IHg6IDAsIHk6IDAgfVxuKTtcblxuY29uc3QgbGVhZ3VlT25QbGF5UG93ZXJTYXZlT24gPSBuZXcgUGFnZShcbiAgJ2xlYWd1ZU9uUGxheVBvd2VyU2F2ZU9uJyxcbiAgW1xuICAgIHsgeDogMzA0LCB5OiAxMzYsIHI6IDE1NiwgZzogMTYwLCBiOiAxNjUgfSxcbiAgICB7IHg6IDMwNSwgeTogMTM2LCByOiAxNTYsIGc6IDE2MCwgYjogMTY1IH0sXG4gICAgeyB4OiAzMDYsIHk6IDEzNiwgcjogMTU2LCBnOiAxNjAsIGI6IDE2NSB9LFxuICAgIHsgeDogMzA3LCB5OiAxMzYsIHI6IDE1NiwgZzogMTYwLCBiOiAxNjUgfSxcbiAgICB7IHg6IDMwOCwgeTogMTM2LCByOiAxNTYsIGc6IDE2MCwgYjogMTY1IH0sXG5cbiAgICB7IHg6IDMwMSwgeTogMTMzLCByOiAxNjUsIGc6IDE2MiwgYjogMTY1IH0sXG4gICAgeyB4OiAzMDIsIHk6IDEzMywgcjogMTY1LCBnOiAxNjIsIGI6IDE2NSB9LFxuICAgIHsgeDogMzAzLCB5OiAxMzMsIHI6IDE2NSwgZzogMTYyLCBiOiAxNjUgfSxcbiAgICB7IHg6IDMwNCwgeTogMTMzLCByOiAxNjUsIGc6IDE2MiwgYjogMTY1IH0sXG4gICAgeyB4OiAzMDUsIHk6IDEzMywgcjogMTY1LCBnOiAxNjIsIGI6IDE2NSB9LFxuICAgIHsgeDogMzYsIHk6IDI2LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiAzNiwgeTogMzI2LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgeyB4OiA2MTMsIHk6IDMzMCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNjE4LCB5OiAxMCwgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogNjAyLCB5OiAyNywgcjogMCwgZzogMCwgYjogMCB9LFxuICAgIHsgeDogMTc0LCB5OiAxNjIsIHI6IDAsIGc6IDAsIGI6IDAgfSxcbiAgICB7IHg6IDQ3NiwgeTogMTU4LCByOiAwLCBnOiAwLCBiOiAwIH0sXG4gICAgLy8gc2NvcmUgYmdcbiAgICB7IHg6IDQ5NywgeTogMzAwLCByOiAxNiwgZzogMjAsIGI6IDE2IH0sXG4gICAgeyB4OiA0OTgsIHk6IDMwMCwgcjogMTYsIGc6IDIwLCBiOiAxNiB9LFxuICAgIHsgeDogNDk5LCB5OiAzMDAsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcbiAgICB7IHg6IDUwMCwgeTogMzAwLCByOiAxNiwgZzogMjAsIGI6IDE2IH0sXG4gICAgeyB4OiA1MDEsIHk6IDMwMCwgcjogMTYsIGc6IDIwLCBiOiAxNiB9LFxuICAgIHsgeDogNTAyLCB5OiAzMDAsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcbiAgICB7IHg6IDUwMywgeTogMzAwLCByOiAxNiwgZzogMjAsIGI6IDE2IH0sXG4gIF0sXG4gIHsgeDogMCwgeTogMCB9LFxuICB7IHg6IDAsIHk6IDAgfVxuKTtcbiIsImltcG9ydCB7IFBhZ2UgfSBmcm9tICdSZXJvdXRlcic7XG5pbXBvcnQgeyByZXJvdXRlciB9IGZyb20gJy4uLy4uL21vZHVsZXMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICBbXG4gICAgcmV2aWV3QXBwLFxuICAgIGRhaWx5UHJvbW90aW9uLFxuICAgIHByb21vdGlvbjEsXG4gICAgcHJvbW90aW9uMixcbiAgICAvLyBwcm9tb3Rpb24zLFxuICAgIHRlYW1TdXBwb3J0UGFja2FnZVByb21vdGlvbixcbiAgICBlbnRlckdhbWVQcm9tb3Rpb24sXG4gICAgZXZlbnQsXG4gIF0uZm9yRWFjaChwID0+IHtcbiAgICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgICBwYXRoOiBgLyR7cC5uYW1lfWAsXG4gICAgICBtYXRjaDogcCxcbiAgICAgIGFjdGlvbjogJ2dvTmV4dCcsXG4gICAgfSk7XG4gIH0pO1xufVxuXG5jb25zdCBkYWlseVByb21vdGlvbiA9IG5ldyBQYWdlKFxuICAnZGFpbHlQcm9tb3Rpb24nLFxuICBbXG4gICAgLy8gYmxhY2sgYmdcbiAgICB7IHg6IDQ1LCB5OiAxNDgsIHI6IDEwLCBnOiAyLCBiOiAzIH0sXG4gICAgeyB4OiA2MDAsIHk6IDE0NSwgcjogMTAsIGc6IDksIGI6IDEwIH0sXG4gICAgeyB4OiAzMjgsIHk6IDMzNiwgcjogMywgZzogMywgYjogMyB9LFxuXG4gICAgLy8gZG9uJ3Qgc2hvdyB0aGlzIGFnYWluIHRvZGF5ICh1bnNlbGN0ZWQpXG4gICAgeyB4OiAxNzYsIHk6IDI3OSwgcjogMTExLCBnOiAxMjIsIGI6IDE0NiB9LFxuICAgIHsgeDogMjA1LCB5OiAyODAsIHI6IDIsIGc6IDIsIGI6IDIgfSxcbiAgICB7IHg6IDI0MSwgeTogMjgwLCByOiAxMCwgZzogNiwgYjogNyB9LFxuICAgIHsgeDogMjcyLCB5OiAyODIsIHI6IDksIGc6IDgsIGI6IDggfSxcblxuICAgIC8vIHhcbiAgICB7IHg6IDQ4MCwgeTogMjc1LCByOiAxMTUsIGc6IDExNSwgYjogMTE1IH0sXG4gICAgeyB4OiA0ODQsIHk6IDI3OCwgcjogMTI5LCBnOiAxMjksIGI6IDEyOSB9LFxuICAgIHsgeDogNDc5LCB5OiAyODAsIHI6IDIwNCwgZzogMjA0LCBiOiAyMDUgfSxcbiAgICB7IHg6IDQ4NiwgeTogMjgxLCByOiAxNDgsIGc6IDE0OCwgYjogMTQ4IH0sXG4gIF0sXG4gIHsgeDogNDgzLCB5OiAyODAgfSwgLy8geFxuICB7IHg6IDQ4MywgeTogMjgwIH1cbik7XG5cbmNvbnN0IHByb21vdGlvbjEgPSBuZXcgUGFnZShcbiAgJ3Byb21vdGlvbjEnLFxuICBbXG4gICAgLy8geFxuICAgIHsgeDogNjEyLCB5OiAzMywgcjogNjAsIGc6IDYwLCBiOiA2MCB9LFxuICAgIHsgeDogNjA1LCB5OiA0MCwgcjogMTc0LCBnOiAxNzgsIGI6IDE4MSB9LFxuICAgIHsgeDogNjA1LCB5OiAzNSwgcjogMTgxLCBnOiAxNzgsIGI6IDE4MSB9LFxuICAgIHsgeDogNjEyLCB5OiAzOSwgcjogMTgxLCBnOiAxNzgsIGI6IDE4MSB9LFxuICAgIHsgeDogNjE2LCB5OiAzOSwgcjogMTgxLCBnOiAxNzgsIGI6IDE4MSB9LFxuICAgIHsgeDogNjE1LCB5OiAyOSwgcjogMTQyLCBnOiAxNDQsIGI6IDE0MiB9LFxuXG4gICAgLy8gdGl0bGUgYmcgcmlnaHRcbiAgICB7IHg6IDU3NywgeTogMzgsIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcbiAgICB7IHg6IDU4MiwgeTogMjksIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcbiAgICB7IHg6IDU4MywgeTogNDEsIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcbiAgICB7IHg6IDU5MCwgeTogMjcsIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcbiAgICB7IHg6IDU5MSwgeTogMzgsIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcbiAgICB7IHg6IDU5MiwgeTogMjgsIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcbiAgICB7IHg6IDU5MiwgeTogNDEsIHI6IDEzMiwgZzogMTMzLCBiOiAxNDAgfSxcblxuICAgIC8vIHRpdGxlIGJnIGxlZnRcbiAgICB7IHg6IDE0LCB5OiAyOSwgcjogMTMyLCBnOiAxMzMsIGI6IDE0MCB9LFxuICAgIHsgeDogMTQsIHk6IDM4LCByOiAxMzIsIGc6IDEzMywgYjogMTQwIH0sXG4gIF0sXG4gIHsgeDogNjExLCB5OiAzNiB9LFxuICB7IHg6IDYxMSwgeTogMzYgfVxuKTtcblxuY29uc3QgcHJvbW90aW9uMiA9IG5ldyBQYWdlKFxuICAncHJvbW90aW9uMicsXG4gIFtcbiAgICB7IHg6IDQzLCB5OiAzMSwgcjogMjA2LCBnOiAyMTEsIGI6IDIyMiB9LFxuICAgIHsgeDogMzA2LCB5OiAyOSwgcjogMjA2LCBnOiAyMTEsIGI6IDIyMiB9LFxuICAgIHsgeDogNTQ2LCB5OiAzMiwgcjogMjA2LCBnOiAyMTEsIGI6IDIyMiB9LFxuICAgIHsgeDogNTc2LCB5OiAzNiwgcjogMTczLCBnOiAxNzQsIGI6IDE4MCB9LFxuICAgIHsgeDogNTgwLCB5OiA0MCwgcjogMTc0LCBnOiAxNzIsIGI6IDE3NSB9LFxuICAgIHsgeDogNTg3LCB5OiAzNiwgcjogMjA2LCBnOiAyMDcsIGI6IDIxMyB9LFxuICAgIHsgeDogNTc2LCB5OiA0NiwgcjogMjEzLCBnOiAyMTEsIGI6IDIxNSB9LFxuICAgIHsgeDogNTg0LCB5OiA0NSwgcjogMjEyLCBnOiAyMTAsIGI6IDIxMyB9LFxuICAgIHsgeDogNTk1LCB5OiA1NSwgcjogMjA2LCBnOiAyMTEsIGI6IDIyMiB9LFxuICBdLFxuICB7IHg6IDU3OCwgeTogMzkgfSxcbiAgeyB4OiA1NzgsIHk6IDM5IH1cbik7XG5cbmNvbnN0IHByb21vdGlvbjMgPSBuZXcgUGFnZShcbiAgJ3Byb21vdGlvbjMnLFxuICBbXG4gICAgeyB4OiA1OTgsIHk6IDM3LCByOiAxMDEsIGc6IDEwMywgYjogMTAyIH0sXG4gICAgeyB4OiA2MDQsIHk6IDQ1LCByOiA3MSwgZzogNzMsIGI6IDcxIH0sXG4gICAgeyB4OiA2MTIsIHk6IDUzLCByOiAxNzQsIGc6IDE3NSwgYjogMTc2IH0sXG4gICAgeyB4OiA2MTcsIHk6IDMzLCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gIF0sXG4gIHsgeDogNjAxLCB5OiA0MyB9LFxuICB7IHg6IDYwMSwgeTogNDMgfVxuKTtcblxuY29uc3QgdGVhbVN1cHBvcnRQYWNrYWdlUHJvbW90aW9uID0gbmV3IFBhZ2UoXG4gICd0ZWFtU3VwcG9ydFBhY2thZ2VQcm9tb3Rpb24nLFxuICBbXG4gICAgLy8gaGVhZGVyIGJnIGFuZCB4XG4gICAgeyB4OiA1NTgsIHk6IDM3LCByOiA5MCwgZzogMTkwLCBiOiAxNDggfSxcbiAgICB7IHg6IDU3NiwgeTogNDIsIHI6IDE0OCwgZzogMjAzLCBiOiAxNzMgfSxcbiAgICB7IHg6IDU5MCwgeTogNDUsIHI6IDE0NSwgZzogMjAzLCBiOiAxNzEgfSxcblxuICAgIC8vIHB1cmNoYXNlIGJ1dHRvblxuICAgIHsgeDogNTc2LCB5OiAyNzcsIHI6IDI1NSwgZzogMjIzLCBiOiAwIH0sXG4gICAgeyB4OiA0ODAsIHk6IDI3OCwgcjogMjU1LCBnOiAyMTAsIGI6IDAgfSxcbiAgICB7IHg6IDUwNiwgeTogMjc4LCByOiAxMjAsIGc6IDc2LCBiOiA4IH0sXG4gICAgeyB4OiA1MjIsIHk6IDI3NCwgcjogMjQ5LCBnOiAyNDUsIGI6IDAgfSxcbiAgICB7IHg6IDUzOCwgeTogMjc3LCByOiAxMjgsIGc6IDgxLCBiOiA3IH0sXG4gIF0sXG4gIHsgeDogNTgzLCB5OiA0NSB9LFxuICB7IHg6IDU4MywgeTogNDUgfVxuKTtcblxuY29uc3QgZW50ZXJHYW1lUHJvbW90aW9uID0gbmV3IFBhZ2UoXG4gICdlbnRlckdhbWVQcm9tb3Rpb24nLFxuICBbXG4gICAgLy8geFxuICAgIHsgeDogMjc3LCB5OiAyODAsIHI6IDExMywgZzogMTI0LCBiOiAxNDcgfSxcblxuICAgIC8vIGRvbnQgc2hvdyB0aGlzIGFnYWluIHRvZGF5XG4gICAgeyB4OiAyNDAsIHk6IDI4MCwgcjogMTAsIGc6IDcsIGI6IDMgfSxcbiAgICB7IHg6IDIwNywgeTogMjgxLCByOiAzNiwgZzogMzksIGI6IDQ3IH0sXG5cbiAgICAvLyBiZ1xuICAgIHsgeDogMjc5LCB5OiAzNiwgcjogMywgZzogMywgYjogMyB9LFxuICAgIHsgeDogNzYsIHk6IDE2OSwgcjogMCwgZzogMiwgYjogNSB9LFxuICAgIHsgeDogMzI2LCB5OiAzMzcsIHI6IDMsIGc6IDMsIGI6IDIgfSxcbiAgICB7IHg6IDU3MSwgeTogMjExLCByOiAyLCBnOiAyLCBiOiA1IH0sXG4gIF0sXG4gIHsgeDogNDg1LCB5OiAyODEgfSxcbiAgeyB4OiA0ODUsIHk6IDI4MSB9XG4pO1xuXG4vLyBhIHBhZ2Ugd2l0aCBhIGNsb3NlIGJ0biBidXQgdGFsbGVyIHRoYW4gcHJvbW90aW9uIHBhZ2VcbmNvbnN0IGV2ZW50ID0gbmV3IFBhZ2UoXG4gICdldmVudCcsXG4gIFtcbiAgICB7IHg6IDIwLCB5OiAyMSwgcjogMjUzLCBnOiAyNTQsIGI6IDI1NCB9LFxuICAgIHsgeDogNDcsIHk6IDMyLCByOiAxMzIsIGc6IDEzNCwgYjogMTQwIH0sXG4gICAgeyB4OiA0OCwgeTogMjMsIHI6IDI0NiwgZzogMjQ3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDYwMywgeTogMTksIHI6IDE2MiwgZzogMTYwLCBiOiAxNzEgfSxcbiAgICB7IHg6IDYxMiwgeTogMjIsIHI6IDQ5LCBnOiA1MiwgYjogNDkgfSxcbiAgICB7IHg6IDYyMiwgeTogMjYsIHI6IDE4MSwgZzogMTc4LCBiOiAxODEgfSxcbiAgXSxcbiAgeyB4OiA2MTEsIHk6IDIzIH0sXG4gIHsgeDogNjExLCB5OiAyMyB9XG4pO1xuXG5jb25zdCByZXZpZXdBcHAgPSBuZXcgUGFnZShcbiAgJ3Jldmlld0FwcCcsXG4gIFtcbiAgICB7IHg6IDEwNiwgeTogNDIsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDMxNiwgeTogNTgsIHI6IDg0LCBnOiA5MCwgYjogOTMgfSxcbiAgICB7IHg6IDUxMCwgeTogNDMsIHI6IDE2OCwgZzogMTc2LCBiOiAxNzYgfSxcbiAgICB7IHg6IDUyNSwgeTogNTcsIHI6IDE0MywgZzogMTQ0LCBiOiAxNDQgfSxcbiAgICB7IHg6IDMwNSwgeTogNjEsIHI6IDE2LCBnOiAyNCwgYjogMjQgfSxcbiAgICB7IHg6IDMzOCwgeTogNjEsIHI6IDE2LCBnOiAyNCwgYjogMjQgfSxcbiAgICB7IHg6IDExNCwgeTogMzAxLCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiAxNTMsIHk6IDI5NywgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDE3OCwgeTogMjk5LCByOiAxNjgsIGc6IDE5MCwgYjogMjI0IH0sXG4gICAgeyB4OiAyNDEsIHk6IDI5OCwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogMjg1LCB5OiAzMDUsIHI6IDQ5LCBnOiA4NSwgYjogMTIzIH0sXG4gICAgeyB4OiAzMDgsIHk6IDMwMiwgcjogNzksIGc6IDEwOCwgYjogMTQ1IH0sXG4gICAgeyB4OiAzNjUsIHk6IDMwMiwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogNDIxLCB5OiAyOTksIHI6IDgsIGc6IDExNCwgYjogMjU1IH0sXG4gICAgeyB4OiA0MzgsIHk6IDI5OSwgcjogNDcsIGc6IDEzOCwgYjogMjU0IH0sXG4gICAgeyB4OiA0ODksIHk6IDMwMSwgcjogOCwgZzogMTEzLCBiOiAyNTUgfSxcbiAgICB7IHg6IDUyOCwgeTogMzA1LCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gIF0sXG4gIHsgeDogMTYxLCB5OiAyOTIgfSxcbiAgeyB4OiAxNjEsIHk6IDI5MiB9XG4pO1xuIiwiaW1wb3J0IHsgUGFnZSB9IGZyb20gJ1Jlcm91dGVyJztcblxuZXhwb3J0IGNsYXNzIEN1c3RvbVBhZ2UgZXh0ZW5kcyBQYWdlIHtcbiAgcHVibGljIGN1c3RvbU1hdGNoOiAodGFza05hbWU6IHN0cmluZywgaW1hZ2U6IEltYWdlKSA9PiBib29sZWFuO1xuICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcsIGN1c3RvbU1hdGNoOiAodGFza05hbWU6IHN0cmluZywgaW1hZ2U6IEltYWdlKSA9PiBib29sZWFuLCBuZXh0PzogUGFnZVsnbmV4dCddLCBiYWNrPzogUGFnZVsnYmFjayddLCB0aHJlcz86IFBhZ2VbJ3RocmVzJ10pIHtcbiAgICBzdXBlcihuYW1lLCBbXSwgbmV4dCwgYmFjaywgdGhyZXMpO1xuICAgIHRoaXMuY3VzdG9tTWF0Y2ggPSBjdXN0b21NYXRjaDtcbiAgfVxufVxuIiwiZXhwb3J0ICogZnJvbSAnLi90YXNrTmFtZXMnO1xuZXhwb3J0ICogYXMgY29tbW9ucyBmcm9tICcuL2NvbW1vbnMnO1xuZXhwb3J0ICogYXMgc3RheUluTG9naW4gZnJvbSAnLi9zdGF5SW5Mb2dpbic7XG5leHBvcnQgKiBhcyB3ZWVrbHlNaXNzaW9uIGZyb20gJy4vd2Vla2x5TWlzc2lvbic7XG5leHBvcnQgKiBhcyByZWNlaXZlSW5ib3ggZnJvbSAnLi9yZWNlaXZlSW5ib3gnO1xuZXhwb3J0ICogYXMgc2V0dGluZyBmcm9tICcuL3NldHRpbmcnO1xuZXhwb3J0ICogYXMgYWRSZXdhcmQgZnJvbSAnLi9hZFJld2FyZCc7XG5leHBvcnQgKiBhcyBwbGF5TGVhZ3VlR2FtZSBmcm9tICcuL3BsYXlMZWFndWVHYW1lJztcbmV4cG9ydCAqIGFzIHBsYXlCYXR0bGVHYW1lIGZyb20gJy4vcGxheUJhdHRsZUdhbWUnO1xuIiwiaW1wb3J0IHsgVXRpbHMsIFBhZ2UgfSBmcm9tICdSZXJvdXRlcic7XG5pbXBvcnQgeyBzdGF0ZSwgcmVyb3V0ZXIsIENvbmZpZyB9IGZyb20gJy4uL21vZHVsZXMnO1xuXG5pbXBvcnQgeyBUQVNLUyB9IGZyb20gJy4vdGFza05hbWVzJztcblxuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBpc1NhbWVDb2xvciB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLnBsYXlCYXR0bGVHYW1lLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IDIwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgbWF4VGFza0R1cmluZzogMjAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBtYXhUYXNrUnVuVGltZXM6IDE1LCAvLyBtYXggYmFsbCBjb3VudFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7YmF0dGxlTW9kZVBhbmVsLm5hbWV9YCxcbiAgICBtYXRjaDogYmF0dGxlTW9kZVBhbmVsLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnBsYXlCYXR0bGVHYW1lKSB7XG4gICAgICAgIHJlcm91dGVyLmdvQmFjayhiYXR0bGVNb2RlUGFuZWwpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyBUT0RPOiBjaGVjayBpZiBwbGF5IG90aGVyIG1vZGUgdG9vXG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKGJhdHRsZU1vZGVQYW5lbEJ0bnMucmFua2VkQmF0dGxlKTtcbiAgICAgIGNvbnNvbGUubG9nKCdwbGF5IHJhbmtlZCBiYXR0bGUnKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyYW5rZWRCYXR0bGVQYW5lbC5uYW1lfWAsXG4gICAgbWF0Y2g6IHJhbmtlZEJhdHRsZVBhbmVsLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnBsYXlCYXR0bGVHYW1lKSB7XG4gICAgICAgIHJlcm91dGVyLmdvQmFjayhyYW5rZWRCYXR0bGVQYW5lbCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gY2Fubm90IHBsYXlcbiAgICAgIGlmIChjb250ZXh0Lm1hdGNoVGltZXMgPiA1KSB7XG4gICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBjaGVjayBpZiBwbGF5IGlzIGF2YWlsYWJsZVxuICAgICAgY29uc3QgaXNQbGF5RGlzYWJsZWQgPSBpc1NhbWVDb2xvcihpbWFnZSwgcmFua2VkQmF0dGxlUGFuZWxCdG5zLmRpc2FibGVkUGxheUJ0bik7XG4gICAgICBpZiAoaXNQbGF5RGlzYWJsZWQpIHtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICBjb25zb2xlLmxvZygncmFua2VkIGJhdHRsZSBwbGF5IGRpc2FibGVkJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gY2hlY2sgaWYgZW5lcmd5IGlzIGVub3VnaFxuICAgICAgY29uc3QgaGFzRW5lcmd5TGVzc1RoYW4xMCA9IGlzU2FtZUNvbG9yKGltYWdlLCByYW5rZWRCYXR0bGVQYW5lbEJ0bnMuaGFzRW5lcmd5TGVzc1RoYW4xMCk7XG4gICAgICBpZiAoaGFzRW5lcmd5TGVzc1RoYW4xMCkge1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgc3RhdGUub25SdW5uaW5nKCk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzdG9wIGJhdHRsZSBiYyBlbmVyZ3kgaXMgbGVzcyB0aGFuIDEwJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gZHJpbmsgc2V0dGluZ1xuICAgICAgaWYgKENvbmZpZy5zY3JpcHRDb25maWcudXNlRHJpbmsgJiYgc3RhdGUucmFua0dhbWUubmVlZFNldERyaW5rKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCduZWVkIHRvIHNldCBkcmluayBiZWZvcmUgcGxheSBnYW1lJyk7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAocmFua2VkQmF0dGxlUGFuZWxCdG5zLmxpbmVVcCk7XG4gICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJlcm91dGVyLmdvTmV4dChyYW5rZWRCYXR0bGVQYW5lbCk7XG4gICAgICBjb25zb2xlLmxvZygncGxheSByYW5rZWQgYmF0dGxlIChzaW5nbGUpJyk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBMb25nKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtyYW5rZWRCYXR0bGVXYWl0VG9SZWZyZXNoLm5hbWV9YCxcbiAgICBtYXRjaDogcmFua2VkQmF0dGxlV2FpdFRvUmVmcmVzaCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5wbGF5QmF0dGxlR2FtZSkge1xuICAgICAgICBjb25zb2xlLmxvZygncGxheSByYW5rIGdhbWUgZGlzYWJsZWQnKTtcbiAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuZ29CYWNrKHJhbmtlZEJhdHRsZVdhaXRUb1JlZnJlc2gpO1xuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3JhbmtlZEJhdHRsZUdhbWVJbmZvLm5hbWV9YCxcbiAgICBtYXRjaDogcmFua2VkQmF0dGxlR2FtZUluZm8sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MucGxheUJhdHRsZUdhbWUpIHtcbiAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKHJhbmtlZEJhdHRsZUdhbWVJbmZvKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHJhbmtlZEJhdHRsZUdhbWVJbmZvKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHthdXRvR2FtZUNvbmZpcm0ubmFtZX1gLFxuICAgIG1hdGNoOiBhdXRvR2FtZUNvbmZpcm0sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MucGxheUJhdHRsZUdhbWUpIHtcbiAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKGF1dG9HYW1lQ29uZmlybSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJlcm91dGVyLmdvTmV4dChhdXRvR2FtZUNvbmZpcm0pO1xuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2F1dG9HYW1lQ29uZmlybUVuZC5uYW1lfWAsXG4gICAgbWF0Y2g6IGF1dG9HYW1lQ29uZmlybUVuZCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5wbGF5QmF0dGxlR2FtZSkge1xuICAgICAgICByZXJvdXRlci5nb0JhY2soYXV0b0dhbWVDb25maXJtRW5kKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KGF1dG9HYW1lQ29uZmlybUVuZCk7XG4gICAgfSxcbiAgfSk7XG5cbiAgW3JhbmtlZEJhdHRsZVJlc3VsdCwgcmFua2VkQmF0dGxlV2Vla2x5UmFua2tpbmddLmZvckVhY2gocCA9PiB7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke3AubmFtZX1gLFxuICAgICAgbWF0Y2g6IHAsXG4gICAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICAgIHJlcm91dGVyLmdvTmV4dChwKTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xufVxuXG5jb25zdCBiYXR0bGVNb2RlUGFuZWwgPSBuZXcgUGFnZShcbiAgJ2JhdHRsZU1vZGVQYW5lbCcsXG4gIFtcbiAgICAvLyBuYXYgYmFyIHJpZ2h0XG4gICAgeyB4OiAzMDEsIHk6IDUsIHI6IDIwNiwgZzogMjE0LCBiOiAyMjIgfSxcbiAgICB7IHg6IDMxMywgeTogMTAsIHI6IDIyOSwgZzogMjI1LCBiOiAyMjkgfSxcbiAgICB7IHg6IDMyNCwgeTogNywgcjogNTgsIGc6IDk3LCBiOiAxMzIgfSxcbiAgICB7IHg6IDM4OCwgeTogMTAsIHI6IDIzOCwgZzogMjM0LCBiOiAyMzggfSxcbiAgICB7IHg6IDQ5MiwgeTogMTAsIHI6IDI0NiwgZzogMjA4LCBiOiA0NSB9LFxuICAgIHsgeDogNDg2LCB5OiA0LCByOiAyMDYsIGc6IDIxNCwgYjogMjIyIH0sXG4gICAgeyB4OiA1OTgsIHk6IDEzLCByOiAxMDQsIGc6IDEyNiwgYjogMTUzIH0sXG4gICAgeyB4OiA2MTYsIHk6IDEyLCByOiAyMDYsIGc6IDIxNCwgYjogMjIyIH0sXG5cbiAgICAvLyBiZyBpbiByaWdodCBwYXJ0XG4gICAgeyB4OiA1OTUsIHk6IDEwNywgcjogMzksIGc6IDE5LCBiOiAyMiB9LFxuICAgIHsgeDogNjI5LCB5OiAxNzYsIHI6IDE2LCBnOiAxMiwgYjogMTYgfSxcbiAgICB7IHg6IDYyOSwgeTogMjI3LCByOiAzNiwgZzogMjIsIGI6IDE5IH0sXG4gICAgeyB4OiA2MjUsIHk6IDMxNywgcjogMjYsIGc6IDEyLCBiOiAxNiB9LFxuXG4gICAgLy8gcGxheWVyIGFuZ2VscyAyN1xuICAgIHsgeDogMTEwLCB5OiA4OSwgcjogMTk2LCBnOiA1OCwgYjogNTkgfSxcbiAgICB7IHg6IDEzLCB5OiAxODMsIHI6IDQsIGc6IDYsIGI6IDQgfSxcblxuICAgIC8vIGJhY2tcbiAgICB7IHg6IDI1LCB5OiAzMTMsIHI6IDIwNiwgZzogMjEwLCBiOiAyMTQgfSxcbiAgICB7IHg6IDQyLCB5OiAzMjAsIHI6IDIwNiwgZzogMjEwLCBiOiAyMTQgfSxcbiAgICB7IHg6IDMxLCB5OiAzMzMsIHI6IDIwNiwgZzogMjEwLCBiOiAyMTQgfSxcbiAgXSxcbiAgeyB4OiA0MSwgeTogMzIwIH0sIC8vIGJhY2tcbiAgeyB4OiA0MSwgeTogMzIwIH1cbik7XG5jb25zdCBiYXR0bGVNb2RlUGFuZWxCdG5zID0ge1xuICByYW5rZWRCYXR0bGU6IHsgeDogMjg3LCB5OiAxNjAgfSxcbiAgZnJpZW5kQmF0dGxlOiB7IHg6IDI4NywgeTogMjQ1IH0sXG4gIHBvd2VyUmFua2luZzogeyB4OiA1MjYsIHk6IDE2MCB9LCAvLyB1bnN1cmUgd2hhdCBpc1xuICBwdnA6IHsgeDogNTI1LCB5OiAyNDUgfSxcbn07XG5cbmNvbnN0IHJhbmtlZEJhdHRsZVBhbmVsID0gbmV3IFBhZ2UoXG4gICdyYW5rZWRCYXR0bGVQYW5lbCcsXG4gIFtcbiAgICAvLyBzb21ldGltZXMgbmF2IGJhciB3aWxsIGRpc2FwcGVhclxuICAgIC8vIGJnIGluIGxlZnQgd2lsbCBjaGFuZ2UgYnkgdGVhbVxuXG4gICAgLy8gdG9wIHJpZ2h0IHJhbmtpbmcgYmdcbiAgICB7IHg6IDQ5MSwgeTogNjAsIHI6IDQxLCBnOiA0MCwgYjogNDkgfSxcbiAgICB7IHg6IDQ5NiwgeTogODEsIHI6IDI0NywgZzogMjQzLCBiOiAyNDcgfSxcblxuICAgIC8vIHRlYW0gcmVjb3JkIGJnXG4gICAgeyB4OiA0ODcsIHk6IDg2LCByOiAyNDcsIGc6IDI0MywgYjogMjQ3IH0sXG4gICAgeyB4OiA2MTQsIHk6IDk1LCByOiAyNDcsIGc6IDI0MywgYjogMjQ3IH0sXG5cbiAgICAvLyBiZyBvZiB3aW4vbG9zZSByYXRpbyBpbiBib3R0b20gbGVmdFxuICAgIHsgeDogMTQ0LCB5OiAyODYsIHI6IDY2LCBnOiA2MSwgYjogNjYgfSxcbiAgICB7IHg6IDM1NCwgeTogMjg2LCByOiA2NiwgZzogNjksIGI6IDY2IH0sXG5cbiAgICAvLyAvLyBlbmVyZ3kgKGJhbGwpIGluIGJvdHRvbVxuICAgIC8vIHsgeDogNDI0LCB5OiAzMjUsIHI6IDUxLCBnOiA1OCwgYjogNTEgfSxcbiAgICAvLyB7IHg6IDQyOCwgeTogMzI2LCByOiAyNTMsIGc6IDI1MSwgYjogMjUzIH0sXG5cbiAgICAvLyBsaW5lIHVwICwgc3RhdHMsIHBvd2VyIHJhbmtpbmcgYnRuIGJnXG4gICAgeyB4OiA3MCwgeTogMzI0LCByOiAxMDAsIGc6IDEzMCwgYjogMTY1IH0sXG4gICAgeyB4OiA4MywgeTogMzI0LCByOiAyNSwgZzogNzMsIGI6IDEzMiB9LFxuICAgIHsgeDogMTU5LCB5OiAzMjYsIHI6IDE1NSwgZzogMTY1LCBiOiAxODEgfSxcbiAgICB7IHg6IDIwMSwgeTogMzI0LCByOiAyNSwgZzogNzMsIGI6IDEzMiB9LFxuICAgIHsgeDogMjM3LCB5OiAzMjQsIHI6IDIwMywgZzogMjA4LCBiOiAyMTYgfSxcbiAgICB7IHg6IDI0MSwgeTogMzI3LCByOiAyNSwgZzogNjksIGI6IDEyMyB9LFxuXG4gICAgLy8gYmFja1xuICAgIHsgeDogNDIsIHk6IDMyMywgcjogMTgzLCBnOiAxODUsIGI6IDE3NiB9LFxuICBdLFxuICB7IHg6IDU1NywgeTogMzMyIH0sIC8vIHBsYXkgYmFsbFxuICB7IHg6IDQxLCB5OiAzMjAgfVxuKTtcblxuY29uc3QgcmFua2VkQmF0dGxlUGFuZWxCdG5zID0ge1xuICBhd2F5R2FtZTogeyB4OiAxODUsIHk6IDY1IH0sXG4gIGhvbWVHYW1lOiB7IHg6IDI5MywgeTogNjUgfSxcbiAgbGluZVVwOiB7IHg6IDk1LCB5OiAzMjMgfSxcblxuICAvLyBCQUNLTE9HOiB0aGUgcGFuZWwgaXMgdGV4dC1hbGlnbjogbGVmdCwgc28gd2UgY2hlY2sgdGhlIHJpZ2h0LW1vc3QgcGFydCBvZiBwYW5lbFxuICBoYXNFbmVyZ3lMZXNzVGhhbjEwOiB7IHg6IDQ3NiwgeTogMzI4LCByOiA0OSwgZzogNTMsIGI6IDMzIH0sXG5cbiAgZGlzYWJsZWRQbGF5QnRuOiB7IHg6IDUwMiwgeTogMzE3LCByOiA5MCwgZzogNzMsIGI6IDQ5IH0sXG59O1xuXG4vLyBjbGljayByZWZyZXNoIGJ0biBpbiByYW5rZWRCYXR0bGVQYW5lbFxuY29uc3QgcmFua2VkQmF0dGxlV2FpdFRvUmVmcmVzaCA9IG5ldyBQYWdlKFxuICAncmFua2VkQmF0dGxlV2FpdFRvUmVmcmVzaCcsXG4gIFtcbiAgICAvLyB0aXRsZSBhbmQgeFxuICAgIHsgeDogMjA3LCB5OiA1MiwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMjg2LCB5OiA1MywgcjogMTI3LCBnOiAxMzEsIGI6IDEzNSB9LFxuICAgIHsgeDogMzYyLCB5OiA1NywgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMzk2LCB5OiA1MSwgcjogMzYsIGc6IDQ0LCBiOiA1MiB9LFxuICAgIHsgeDogNTE4LCB5OiA1MCwgcjogMTQ1LCBnOiAxNDYsIGI6IDE0NSB9LFxuXG4gICAgLy8gY291bnQgZG93biBiZ1xuICAgIHsgeDogMTE0LCB5OiAxNTEsIHI6IDI1LCBnOiA4NSwgYjogODIgfSxcbiAgICB7IHg6IDUyMCwgeTogMTU1LCByOiAyNSwgZzogNTMsIGI6IDQ5IH0sXG5cbiAgICAvLyBvdGhlciBiZ1xuICAgIHsgeDogMTA2LCB5OiA5MSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMTA2LCB5OiAzMTEsIHI6IDIxNCwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDUyNywgeTogMzAwLCByOiAyMTQsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA1MjgsIHk6IDI1NSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogNTIzLCB5OiA5OSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICBdLFxuICB7IHg6IDUyMCwgeTogNTAgfSwgLy8geFxuICB7IHg6IDUyMCwgeTogNTAgfVxuKTtcblxuLy8gc2FtZSB0eXBlIGFzIHNjcmVlblxuY29uc3QgcmFua2VkQmF0dGxlV2Vla2x5UmFua2tpbmcgPSBuZXcgUGFnZShcbiAgJ3JhbmtlZEJhdHRsZVdlZWtseVJhbmtraW5nJyxcbiAgW1xuICAgIC8vIHdlZWtseSByYW5ra2luZ1xuICAgIHsgeDogMzA5LCB5OiA0NCwgcjogNTQsIGc6IDYxLCBiOiA2OSB9LFxuICAgIHsgeDogMzQ0LCB5OiA1NCwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuICAgIHsgeDogMzc0LCB5OiA1NCwgcjogMTYsIGc6IDI0LCBiOiAzMyB9LFxuXG4gICAgLy8gYmdcbiAgICB7IHg6IDUxLCB5OiA0OCwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogNTEsIHk6IDMxMywgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogNjA2LCB5OiAzMDQsIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcblxuICAgIC8vIHhcbiAgICB7IHg6IDYwMywgeTogNDIsIHI6IDkwLCBnOiA4NSwgYjogOTAgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiAyOTYsIHk6IDMwNywgcjogOCwgZzogMTE0LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxNSwgeTogMzEwLCByOiAxNjMsIGc6IDIwMiwgYjogMjUxIH0sXG4gICAgeyB4OiAzNjQsIHk6IDMwOCwgcjogOCwgZzogMTEzLCBiOiAyNDggfSxcbiAgXSxcbiAgeyB4OiAzMTYsIHk6IDMwMSB9LCAvLyBva1xuICB7IHg6IDMxNiwgeTogMzAxIH1cbik7XG5cbmNvbnN0IHJhbmtlZEJhdHRsZVJlc3VsdCA9IG5ldyBQYWdlKFxuICAncmFua2VkQmF0dGxlUmVzdWx0JyxcbiAgW1xuICAgIC8vIGJnIGluIG1pZFxuICAgIHsgeDogMTAsIHk6IDk0LCByOiA1OCwgZzogOTMsIGI6IDE0MCB9LFxuICAgIHsgeDogOCwgeTogMjQ4LCByOiAxNDAsIGc6IDE1OCwgYjogMTgxIH0sXG4gICAgeyB4OiA2MjQsIHk6IDk1LCByOiA1OCwgZzogOTQsIGI6IDE0MCB9LFxuICAgIHsgeDogNjIxLCB5OiAyNDYsIHI6IDE0MCwgZzogMTU4LCBiOiAxODEgfSxcbiAgICB7IHg6IDMzNiwgeTogOTgsIHI6IDU4LCBnOiA5NywgYjogMTQwIH0sXG4gICAgeyB4OiAzNDUsIHk6IDI1NSwgcjogMTQ4LCBnOiAxNjIsIGI6IDE4MSB9LFxuXG4gICAgLy8gdGllci8gc2NvcmUgLyByYW5rXG4gICAgeyB4OiA0OSwgeTogMTI3LCByOiAxOTgsIGc6IDIwMywgYjogMjE0IH0sXG4gICAgeyB4OiA1OSwgeTogMTMwLCByOiAxOTYsIGc6IDIwNSwgYjogMjEyIH0sXG4gICAgeyB4OiA3NCwgeTogMTMzLCByOiAyMTYsIGc6IDIyMSwgYjogMjI4IH0sXG4gICAgeyB4OiAxMDEsIHk6IDEzMCwgcjogODUsIGc6IDExNywgYjogMTUzIH0sXG4gICAgeyB4OiAxMjYsIHk6IDEyNiwgcjogMjA3LCBnOiAyMTYsIGI6IDIyNyB9LFxuICAgIHsgeDogMTY4LCB5OiAxMjksIHI6IDIzMywgZzogMjM1LCBiOiAyMzggfSxcbiAgICB7IHg6IDE4OCwgeTogMTMyLCByOiAyMjIsIGc6IDIyOSwgYjogMjMwIH0sXG5cbiAgICAvLyBva1xuICAgIHsgeDogMjg0LCB5OiAyOTYsIHI6IDgsIGc6IDExOCwgYjogMjU1IH0sXG4gICAgeyB4OiAzMzAsIHk6IDI5NywgcjogOCwgZzogMTE3LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM2NCwgeTogMzA2LCByOiA4LCBnOiAxMDEsIGI6IDI0NyB9LFxuICAgIHsgeDogMzE3LCB5OiAyOTcsIHI6IDIyOSwgZzogMjM3LCBiOiAyNTAgfSxcbiAgXSxcbiAgeyB4OiAzMTYsIHk6IDMxMCB9LCAvLyBva1xuICB7IHg6IDMxNiwgeTogMzEwIH1cbik7XG5cbmNvbnN0IHJhbmtlZEJhdHRsZUdhbWVJbmZvID0gbmV3IFBhZ2UoXG4gICdyYW5rZWRCYXR0bGVHYW1lSW5mbycsXG4gIFtcbiAgICAvLyByaWdodCBwYXJ0IG9mIG5hdiBiYXJcbiAgICB7IHg6IDYxNiwgeTogMTAsIHI6IDIxNCwgZzogMjEwLCBiOiAyMTQgfSxcbiAgICB7IHg6IDU5NSwgeTogMTMsIHI6IDc0LCBnOiA5MywgYjogMTIzIH0sXG4gICAgeyB4OiA1ODksIHk6IDE1LCByOiA3NSwgZzogOTQsIGI6IDEyMyB9LFxuICAgIHsgeDogNTY3LCB5OiAxNCwgcjogNzQsIGc6IDg1LCBiOiA5MCB9LFxuICAgIHsgeDogNTczLCB5OiAxNSwgcjogNzQsIGc6IDg1LCBiOiA5MCB9LFxuICAgIHsgeDogNDc4LCB5OiAyMCwgcjogMjE0LCBnOiAyMTAsIGI6IDIxNCB9LFxuICAgIHsgeDogNDcxLCB5OiAxMSwgcjogMjA1LCBnOiAyMTgsIGI6IDIzMCB9LFxuICAgIHsgeDogNDczLCB5OiAxMCwgcjogMjA2LCBnOiAyMTksIGI6IDIzMCB9LFxuICAgIHsgeDogMzkzLCB5OiA4LCByOiAxMjksIGc6IDEyNywgYjogMTI5IH0sXG4gICAgeyB4OiAzMTksIHk6IDE0LCByOiAxOTcsIGc6IDE5OCwgYjogMTk3IH0sXG5cbiAgICAvLyBnYW1lIGluZm8gdGl0bGVcbiAgICB7IHg6IDI4NCwgeTogNTgsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDI5OCwgeTogNjIsIHI6IDExMCwgZzogMTExLCBiOiAxMjEgfSxcbiAgICB7IHg6IDMwNywgeTogNjMsIHI6IDE2MywgZzogMTY2LCBiOiAxNzEgfSxcbiAgICB7IHg6IDMyMCwgeTogNjIsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDMzMiwgeTogNjMsIHI6IDIyMSwgZzogMjIxLCBiOiAyMjUgfSxcbiAgICB7IHg6IDM0OCwgeTogNjAsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDIwNSwgeTogNjIsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDQ3MywgeTogNjYsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDE0OCwgeTogNjEsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcblxuICAgIC8vIHBsYXliYWxsLyBwbGF5aW5nIGJ0blxuICAgIHsgeDogNDg3LCB5OiAzMjgsIHI6IDIxMiwgZzogMTg4LCBiOiAzMiB9LFxuICAgIHsgeDogNjEwLCB5OiAzMjUsIHI6IDIxNCwgZzogMTc5LCBiOiAwIH0sXG4gICAgeyB4OiA1NTIsIHk6IDMzOSwgcjogMTgxLCBnOiAxNDIsIGI6IDAgfSxcblxuICAgIC8vIGJhY2tcbiAgICB7IHg6IDI2LCB5OiAzMTYsIHI6IDIxNCwgZzogMjE4LCBiOiAyMTQgfSxcbiAgICB7IHg6IDQwLCB5OiAzMTYsIHI6IDIxNCwgZzogMjE5LCBiOiAyMTQgfSxcbiAgICB7IHg6IDMzLCB5OiAzMjksIHI6IDIxMSwgZzogMjE1LCBiOiAyMTAgfSxcblxuICAgIC8vIGJnIGJldHdlZW4gYmFjayBhbmQgcGxheVxuICAgIHsgeDogMTM4LCB5OiAzMjUsIHI6IDU4LCBnOiA2OSwgYjogNDkgfSxcbiAgICB7IHg6IDIwMCwgeTogMzI5LCByOiA0OSwgZzogNjEsIGI6IDQxIH0sXG4gICAgeyB4OiAyNjUsIHk6IDMzMCwgcjogNTIsIGc6IDYyLCBiOiA0NCB9LFxuICAgIHsgeDogMzQ1LCB5OiAzMzMsIHI6IDY2LCBnOiA3NSwgYjogNTggfSxcbiAgICB7IHg6IDQwMiwgeTogMzM0LCByOiA0OSwgZzogNTMsIGI6IDMzIH0sXG4gIF0sXG4gIHsgeDogNTE4LCB5OiAzMjkgfSxcbiAgeyB4OiAyNiwgeTogMzE2IH1cbik7XG5cbi8vIGEgcGFnZSB0byBzdGFydCBhdXRvIGdhbWVcbmNvbnN0IGF1dG9HYW1lQ29uZmlybSA9IG5ldyBQYWdlKFxuICAnYXV0b0dhbWVDb25maXJtJyxcbiAgW1xuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAyNzcsIHk6IDYwLCByOiAxODAsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAyOTUsIHk6IDU4LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzMDgsIHk6IDYxLCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzMjgsIHk6IDU4LCByOiAxNzcsIGc6IDE4MywgYjogMTg1IH0sXG4gICAgeyB4OiAzNTMsIHk6IDYxLCByOiAxNzcsIGc6IDE4MiwgYjogMTg1IH0sXG5cbiAgICAvLyBiZ1xuICAgIHsgeDogMTA4LCB5OiA0OSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMTA3LCB5OiAzMTQsIHI6IDIxNCwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDUxNiwgeTogMzAyLCByOiAyMTQsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA0OTEsIHk6IDE3MSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuXG4gICAgLy8geFxuICAgIHsgeDogNTEwLCB5OiA0OCwgcjogMTY4LCBnOiAxNzMsIGI6IDE3NiB9LFxuICAgIHsgeDogNTE2LCB5OiA1NSwgcjogMTAzLCBnOiAxMDUsIGI6IDEwOSB9LFxuICAgIHsgeDogNTI0LCB5OiA0OCwgcjogNzEsIGc6IDcwLCBiOiA3MSB9LFxuXG4gICAgLy8gbm8gYW5kIHllc1xuICAgIHsgeDogMjIzLCB5OiAyOTgsIHI6IDQxLCBnOiA3NywgYjogMTIzIH0sXG4gICAgeyB4OiAyNDgsIHk6IDI5OCwgcjogMTU4LCBnOiAxODMsIGI6IDIxNCB9LFxuICAgIHsgeDogMzg4LCB5OiAyOTksIHI6IDE5NiwgZzogMjIzLCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzMCwgeTogMzAyLCByOiA4LCBnOiAxMTMsIGI6IDI0NyB9LFxuXG4gICAgLy8gY29udGVudCB0byBkaWZmIHdpdGggY29uZmlybSBlbmQgKHlvdSBzZWxlY3RlZClcbiAgICB7IHg6IDI4NiwgeTogMTgwLCByOiA4MiwgZzogODYsIGI6IDk0IH0sXG4gICAgeyB4OiAzMDQsIHk6IDE3OCwgcjogMTIwLCBnOiAxMjgsIGI6IDEzNiB9LFxuICAgIHsgeDogMzI0LCB5OiAxNzgsIHI6IDk1LCBnOiAxMDMsIGI6IDExMiB9LFxuICBdLFxuICB7IHg6IDM5MCwgeTogMzA0IH0sIC8vIHllcywgc3RhcnQgYXV0byBwbGF5XG4gIHsgeDogMjM3LCB5OiAzMDQgfSAvLyBubywgbm90IHN0YXJ0IGF1dG8gcGxheVxuKTtcblxuLy8gYSBwYWdlIHRvIGVuZCBhdXRvIGdhbWVcbmNvbnN0IGF1dG9HYW1lQ29uZmlybUVuZCA9IG5ldyBQYWdlKFxuICAnYXV0b0dhbWVDb25maXJtRW5kJyxcbiAgW1xuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAyNzcsIHk6IDYwLCByOiAxODAsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAyOTUsIHk6IDU4LCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzMDgsIHk6IDYxLCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzMjgsIHk6IDU4LCByOiAxNzcsIGc6IDE4MywgYjogMTg1IH0sXG4gICAgeyB4OiAzNTMsIHk6IDYxLCByOiAxNzcsIGc6IDE4MiwgYjogMTg1IH0sXG5cbiAgICAvLyBiZ1xuICAgIHsgeDogMTA4LCB5OiA0OSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMTA3LCB5OiAzMTQsIHI6IDIxNCwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDUxNiwgeTogMzAyLCByOiAyMTQsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA0OTEsIHk6IDE3MSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuXG4gICAgLy8geFxuICAgIHsgeDogNTEwLCB5OiA0OCwgcjogMTY4LCBnOiAxNzMsIGI6IDE3NiB9LFxuICAgIHsgeDogNTE2LCB5OiA1NSwgcjogMTAzLCBnOiAxMDUsIGI6IDEwOSB9LFxuICAgIHsgeDogNTI0LCB5OiA0OCwgcjogNzEsIGc6IDcwLCBiOiA3MSB9LFxuXG4gICAgLy8gbm8gYW5kIHllc1xuICAgIHsgeDogMjIzLCB5OiAyOTgsIHI6IDQxLCBnOiA3NywgYjogMTIzIH0sXG4gICAgeyB4OiAyNDgsIHk6IDI5OCwgcjogMTU4LCBnOiAxODMsIGI6IDIxNCB9LFxuICAgIHsgeDogMzg4LCB5OiAyOTksIHI6IDE5NiwgZzogMjIzLCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzMCwgeTogMzAyLCByOiA4LCBnOiAxMTMsIGI6IDI0NyB9LFxuXG4gICAgLy8gVE9ETzogdXNlIGVuZCBnYW1lIGNvbnRlbnRcbiAgXSxcbiAgeyB4OiAyMzcsIHk6IDMwNCB9LCAvLyBubywgY29udGludWUgYXV0byBwbGF5XG4gIHsgeDogMzkwLCB5OiAzMDQgfSAvLyB5ZXMsIGVuZCBhdXRvIHBsYXlcbik7XG4iLCJpbXBvcnQgeyBVdGlscywgUGFnZSwgR3JvdXBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyLCBDb25maWcgfSBmcm9tICcuLi9tb2R1bGVzJztcblxuaW1wb3J0IHsgQ3VzdG9tUGFnZSB9IGZyb20gJy4vY3VzdG9tUGFnZSc7XG5pbXBvcnQgeyBUQVNLUyB9IGZyb20gJy4vdGFza05hbWVzJztcblxuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBpc1NhbWVDb2xvciwgaXNJbWFnZU1hdGNoQ29sb3JDbnQgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRUYXNrKCkge1xuICBjb25zb2xlLmxvZygnYWRkVGFzayBwbGF5TGVhZ3VlR2FtZScpO1xuICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICBuYW1lOiBUQVNLUy5wbGF5TGVhZ3VlR2FtZSxcbiAgICAvLyBtYXhUYXNrUnVuVGltZXM6IDIsXG4gICAgbWF4VGFza0R1cmluZzogMyAqIENPTlNUQU5UUy5ob3VySW5NcyxcbiAgICBiZWZvcmVSb3V0ZTogdGFzayA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgbmVlZFJlc2V0UHJvZ3Jlc3MgYmVmb3JlIHBsYXk6ICR7c3RhdGUubGVhZ3VlR2FtZS5uZWVkUmVzZXRQcm9ncmVzc31gKTtcbiAgICAgIGlmIChzdGF0ZS5sZWFndWVHYW1lLm5lZWRSZXNldFByb2dyZXNzKSB7XG4gICAgICAgIHJldHVybiAnc2tpcFJvdXRlTG9vcCc7XG4gICAgICB9XG4gICAgfSxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gIH0pO1xuXG4gIC8vIEZJWE1FOiB0aGlzIHNob3VsZCBvbmx5IHJ1biB3aGVuIG5lZWRlZFxuICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICBuYW1lOiBUQVNLUy5zZXR0aW5nUmVzZXRMZWFndWVQcm9ncmVzcyxcbiAgICBtaW5Sb3VuZEludGVydmFsOiAxICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgbWF4VGFza0R1cmluZzogMTAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBiZWZvcmVSb3V0ZTogdGFzayA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhgbmVlZFJlc2V0UHJvZ3Jlc3M6ICR7c3RhdGUubGVhZ3VlR2FtZS5uZWVkUmVzZXRQcm9ncmVzc31gKTtcbiAgICAgIGlmICghc3RhdGUubGVhZ3VlR2FtZS5uZWVkUmVzZXRQcm9ncmVzcykge1xuICAgICAgICByZXR1cm4gJ3NraXBSb3V0ZUxvb3AnO1xuICAgICAgfVxuICAgIH0sXG4gICAgZm9yY2VTdG9wOiB0cnVlLFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFJvdXRlcygpIHtcbiAgLy8gZW50ZXIgZ2FtZSBpbmZvXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bGVhZ3VlTW9kZVBhbmVsLm5hbWV9YCxcbiAgICBtYXRjaDogbGVhZ3VlTW9kZVBhbmVsLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBjb25zdCB0YXNrID0gY29udGV4dC50YXNrLm5hbWU7XG5cbiAgICAgIHN3aXRjaCAodGFzaykge1xuICAgICAgICBjYXNlIFRBU0tTLnBsYXlMZWFndWVHYW1lOlxuICAgICAgICAgIC8vIGRvbid0IHBsYXkgbmV3IHNlYXNvbnMgdW5sZXNzIHJlc2V0IHByb2dyZXNzXG4gICAgICAgICAgaWYgKHN0YXRlLmxlYWd1ZUdhbWUubmVlZFJlc2V0UHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCduZWVkIHRvIHJlc2V0IGxlYWd1ZSBwcm9ncmVzcyBiZWZvcmUgcGxheSBnYW1lJyk7XG4gICAgICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGRyaW5rIHNldHRpbmdcbiAgICAgICAgICBlbHNlIGlmIChDb25maWcuc2NyaXB0Q29uZmlnLnVzZURyaW5rICYmIHN0YXRlLmxlYWd1ZUdhbWUubmVlZFNldERyaW5rKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnbmVlZCB0byBzZXQgZHJpbmsgYmVmb3JlIHBsYXkgZ2FtZScpO1xuICAgICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChsZWFndWVNb2RlUGFuZWxCdG4ubGluZVVwKTtcbiAgICAgICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGNoZWNrIGlmIGNhbiBwbGF5IGxlYWd1ZSBtb2RlXG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBjYW4gcGxheSBsZWFndWUgbW9kZVxuICAgICAgICAgICAgc3RhdGUubGVhZ3VlR2FtZS50cnlFbnRlckdhbWVDbnRzKys7XG5cbiAgICAgICAgICAgIC8vIGF2b2lkIHRvIGNsaWNrIGJ0biB0b28gbWFueSB0aW1lIGZvciB0cmlnZ2VyIG5leHQgcGFnZSBpbW1lZGlhdGVseVxuICAgICAgICAgICAgaWYgKGNvbnRleHQubWF0Y2hUaW1lcyA8IDIpIHtcbiAgICAgICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxlYWd1ZU1vZGVQYW5lbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgVEFTS1Muc2V0dGluZ1Jlc2V0TGVhZ3VlUHJvZ3Jlc3M6XG4gICAgICAgICAgaWYgKHN0YXRlLmxlYWd1ZUdhbWUubmVlZFJlc2V0UHJvZ3Jlc3MpIHtcbiAgICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAobGVhZ3VlTW9kZVBhbmVsQnRuLmxlYWd1ZVJlc2V0KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnbyB0byBsZWFndWVSZXNldERpYWxvZycpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnbm8gbmVlZCB0byByZXNldCBsZWFndWUgcHJvZ3Jlc3MnKTtcbiAgICAgICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHJlcm91dGVyLmdvQmFjayhsZWFndWVNb2RlUGFuZWwpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2xlYWd1ZU1vZGVHYW1lSW5mby5uYW1lfWAsXG4gICAgbWF0Y2g6IGxlYWd1ZU1vZGVHYW1lSW5mbyxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5wbGF5TGVhZ3VlR2FtZSkge1xuICAgICAgICByZXJvdXRlci5nb0JhY2sobGVhZ3VlTW9kZUdhbWVJbmZvKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBjb25zb2xlLmxvZygnY2hlY2sgZW5lcmd5Jyk7XG4gICAgICBjb25zdCBlbXB0eUVuZXJneSA9IHsgeDogNTUxLCB5OiAyODEsIHI6IDMsIGc6IDEyNCwgYjogMjEzIH07XG4gICAgICBjb25zdCBoYXNFbmVyZ3kwID0gaXNTYW1lQ29sb3IoaW1hZ2UsIGVtcHR5RW5lcmd5LCAwLjkpO1xuICAgICAgaWYgKGhhc0VuZXJneTApIHtcbiAgICAgICAgY29uc29sZS5sb2coJ25vIGVuZXJneScpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgICAgc3RhdGUub25SdW5uaW5nKCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgZGlnaXQxID0geyB4OiA1NjEsIHk6IDI3OCwgcjogMTY5LCBnOiAxNzIsIGI6IDE3OSB9O1xuICAgICAgY29uc3QgaGFzRW5lcmd5MTAgPSBpc1NhbWVDb2xvcihpbWFnZSwgZGlnaXQxKTtcbiAgICAgIGNvbnNvbGUubG9nKCdoYXMxMEVuZXJneTonLCBoYXNFbmVyZ3kxMCk7XG5cbiAgICAgIC8vIHVzZSBxdWljayBwbGF5IHdoZW4gaGFzIDEwKyBlbmVyZ3ksXG4gICAgICAvLyBhbmQgc2xvdyBwbGF5IHdoZW4gaGFzIDEwLSBlbmVyZ3lcbiAgICAgIGNvbnN0IHF1aWNrUGxheU9uQnRuID0geyB4OiAzNywgeTogMjg0LCByOiAzMywgZzogMjU1LCBiOiAxNDAgfTtcbiAgICAgIGNvbnN0IGlzUXVpY2tQbGF5T24gPSBpc1NhbWVDb2xvcihpbWFnZSwgcXVpY2tQbGF5T25CdG4pO1xuXG4gICAgICBpZiAoaGFzRW5lcmd5MTAgJiYgIWlzUXVpY2tQbGF5T24pIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChxdWlja1BsYXlPbkJ0bik7IC8vIHNlbGVjdCBxdWljayBwbGF5XG4gICAgICAgIGNvbnNvbGUubG9nKCd0dXJuIG9uIHF1aWNrIHBsYXknKTtcbiAgICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTG9uZyk7XG4gICAgICB9XG4gICAgICBpZiAoIWhhc0VuZXJneTEwICYmIGlzUXVpY2tQbGF5T24pIHtcbiAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChxdWlja1BsYXlPbkJ0bik7IC8vIGNhbmNlbCBxdWljayBwbGF5XG4gICAgICAgIGNvbnNvbGUubG9nKCd0dXJuIG9mZiBxdWljayBwbGF5Jyk7XG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcExvbmcpO1xuICAgICAgfVxuXG4gICAgICByZXJvdXRlci5nb05leHQobGVhZ3VlTW9kZUdhbWVJbmZvKTsgLy8gcGxheSBiYWxsXG4gICAgICBjb25zb2xlLmxvZyhgcGxheSBsZWFndWUgbW9kZSBnYW1lICR7aGFzRW5lcmd5MTAgPyAnKHF1aWNrIG1vZGUpJyA6ICcnfWApO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTG9uZyk7XG4gICAgfSxcbiAgfSk7XG5cbiAgLy8gc2VsZWN0IHRoaW5nc1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3NlbGVjdFBsYXlSb2xlR3JvdXBzLm5hbWV9YCxcbiAgICBtYXRjaDogc2VsZWN0UGxheVJvbGVHcm91cHMsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdoYW5kbGUgc2VsZWN0IHBsYXkgcm9sZScpO1xuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHNlbGVjdFBsYXlSb2xlR3JvdXBzKTtcbiAgICB9LFxuICB9KTtcblxuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3NlbGVjdFllYXIubmFtZX1gLFxuICAgIG1hdGNoOiBzZWxlY3RZZWFyLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBjb25zb2xlLmxvZygnaGFuZGxlIHNlbGVjdCB5ZWFyIHBhZ2UnKTtcbiAgICAgIGhhbmRsZVNlbGVjdFllYXIoKTtcbiAgICAgIC8vIHdpbGwgZ28gdG8gbGVhZ3VlUmVzZXRDb25maXJtIGlmIGl0J3Mgbm90IHRyaWdnZXJlZCBieSBub3JtYWwgc2Vhc29uIGVuZFxuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7c2VsZWN0U2Vhc29uTW9kZS5uYW1lfWAsXG4gICAgbWF0Y2g6IHNlbGVjdFNlYXNvbk1vZGUsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdoYW5kbGUgc2VsZWN0IHNlYXNvbiBwYWdlJyk7XG4gICAgICByZXJvdXRlci5nb05leHQoc2VsZWN0U2Vhc29uTW9kZSk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU2OCwgeTogMzMzIH0pOyAvLyBub3JtYWwgbW9kZVxuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xuICAgICAgLy8gVE9ETyBzcGxpdCBwYWdlXG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzMyLCB5OiAzMDEgfSk7IC8vIG5leHQgc2Vhc29uXG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBMb25nKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtzZWxlY3RMZWFndWVHYW1lQW1vdW50Lm5hbWV9YCxcbiAgICBtYXRjaDogc2VsZWN0TGVhZ3VlR2FtZUFtb3VudCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuXG4gICAgICBjb25zb2xlLmxvZygnaGFuZGxlIHNlbGVjdCBsZWFndWUgZ2FtZSBhbW91bnQgcGFnZScpO1xuICAgICAgLy8gdXNlIGNvbmZpZyB1c2VyIHNldHRlZCB0byBzZWxlY3Qgd2hpY2ggdGhleSB3YW50IHRvIHBsYXlcbiAgICAgIC8vIFRPRE86IGhhbmRsZSB0aGUgaGFsZiwgcXVhcnRlciwgZnVsbCBoYXMgMiBuZXh0IHBhZ2VcbiAgICAgIHN3aXRjaCAoQ29uZmlnLnNjcmlwdENvbmZpZy5sZWFndWVTZWFzb25Nb2RlKSB7XG4gICAgICAgIGNhc2UgJ2Z1bGwnOlxuICAgICAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3QgZnVsbCBsZWFndWUnKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNlbGVjdExlYWd1ZUdhbWVBbW91bnRCdG5zLmZ1bGwpO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTY0LCB5OiAzMjggfSk7IC8vIGdvIG5leHRcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnaGFsZic6XG4gICAgICAgICAgY29uc29sZS5sb2coJ3NlbGVjdCAxLzIgbGVhZ3VlJyk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChzZWxlY3RMZWFndWVHYW1lQW1vdW50QnRucy5oYWxmKTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDU2NCwgeTogMzI4IH0pOyAvLyBnbyBuZXh0XG4gICAgICAgICAgLy8gPyB3aWxsIGdvIHRvIG9rIC8gbmV4dCBwYWdlc1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdxdWFydGVyJzpcbiAgICAgICAgICBjb25zb2xlLmxvZygnc2VsZWN0IDEvNCBsZWFndWUnKTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNlbGVjdExlYWd1ZUdhbWVBbW91bnRCdG5zLnF1YXJ0ZXIpO1xuICAgICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogNTY0LCB5OiAzMjggfSk7IC8vIGdvIG5leHRcbiAgICAgICAgICAvLyA/IHdpbGwgZ28gdG8gb2sgLyBuZXh0IHBhZ2VzXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3Bvc3RTZWFzb24nOlxuICAgICAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3QgcG9zdFNlYXNvbicpO1xuICAgICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoc2VsZWN0TGVhZ3VlR2FtZUFtb3VudEJ0bnMucG9zdCk7XG4gICAgICAgICAgLy8gPyB3aWxsIGdvIHRvIG9rIC8gbmV4dCBwYWdlc1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiA1NjQsIHk6IDMyOCB9KTsgLy8gZ28gbmV4dFxuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTG9uZyk7XG4gICAgfSxcbiAgfSk7XG5cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtzZWxlY3ROb3JtYWxNYXN0ZXJMZWFndWVNb2RlLm5hbWV9YCxcbiAgICBtYXRjaDogc2VsZWN0Tm9ybWFsTWFzdGVyTGVhZ3VlTW9kZSxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgY29uc29sZS5sb2coJ2hhbmRsZSBzZWxlY3Qgbm9ybWFsIC8gbWFzdGVyIG1vZGUnKTtcblxuICAgICAgLy8gaWYgY2Fubm90IHNlbGVjdCBtYXN0ZXIgbW9kZSwgYXQgbGVhc3Qgc2VsZWN0IG5vcm1hbCBtb2RlXG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNlbGVjdE5vcm1hbE1hc3RlckxlYWd1ZU1vZGVCdG5zLm5vcm1hbCk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNlbGVjdE5vcm1hbE1hc3RlckxlYWd1ZU1vZGVCdG5zLm1hc3Rlcik7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgICAvLyB3aGV0aGVyIGNob29zZSBhbnkgbW9kZSwgd2lsbCBqdW1wIHRvIHByb2NlZWQgcGFnZVxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KHNlbGVjdE5vcm1hbE1hc3RlckxlYWd1ZU1vZGUpO1xuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke2xlYWd1ZVJlc2V0Q29uZmlybS5uYW1lfWAsXG4gICAgbWF0Y2g6IGxlYWd1ZVJlc2V0Q29uZmlybSxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5zZXR0aW5nUmVzZXRMZWFndWVQcm9ncmVzcykge1xuICAgICAgICAvLyBub3QgcmVzZXRcbiAgICAgICAgY29uc29sZS5sb2coJ25vdCByZXNldCBsZWFndWUgcHJvZ3Jlc3MnKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKGxlYWd1ZVJlc2V0Q29uZmlybSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ3Jlc2V0IGxlYWd1ZSBwcm9ncmVzcycpO1xuICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxlYWd1ZVJlc2V0Q29uZmlybSk7XG4gICAgICBzdGF0ZS5vbkZpbmlzaFJlc2V0TGVhZ3VlUHJvZ3Jlc3MoKTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgcmV0dXJuO1xuICAgIH0sXG4gIH0pO1xuXG4gIC8vIG9uIHBsYXkgKHF1aWNrIHBsYXkgaXMgaW4gZ2VuZXJhbClcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtsZWFndWVPblBsYXlBdXRvT2ZmLm5hbWV9YCxcbiAgICBjdXN0b21NYXRjaDogbGVhZ3VlT25QbGF5QXV0b09mZi5jdXN0b21NYXRjaCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5wbGF5TGVhZ3VlR2FtZSkge1xuICAgICAgICAvLyBvcGVuIHBhdXNlIHBhbmVsXG4gICAgICAgIGtleWNvZGUoJ0tFWUNPREVfQkFDSycsIDEwMCk7XG4gICAgICAgIC8vIHJlcm91dGVyLmdvQmFjayhsZWFndWVPblBsYXlBdXRvT2ZmKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBzdWNjZXNzIGVudGVyIGdhbWVcbiAgICAgIHN0YXRlLmxlYWd1ZUdhbWUudHJ5RW50ZXJHYW1lQ250cyA9IDA7XG4gICAgICBzdGF0ZS5sZWFndWVHYW1lLm5lZWRTZXREcmluayA9IHRydWU7IC8vIHJlc2V0IGZvciBuZXh0IGRyaW5rXG5cbiAgICAgIGNvbnNvbGUubG9nKCdzdGFydCB0dXJuIG9uIGF1dG8gcGxheScpO1xuICAgICAgbGV0IGlzQXV0b09uID0gZmFsc2U7XG4gICAgICBmb3IgKGxldCByZW1haW5DbGljayA9IDY7IHJlbWFpbkNsaWNrID4gMCAmJiAhaXNBdXRvT247IHJlbWFpbkNsaWNrLS0pIHtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxlYWd1ZU9uUGxheUF1dG9PZmYpO1xuICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCAvIDIpO1xuICAgICAgICBjb25zdCBzY3JlZW5zaG90ID0gZ2V0U2NyZWVuc2hvdCgpO1xuICAgICAgICBpc0F1dG9PbiA9IHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UobGVhZ3VlT25QbGF5QXV0b09uLCBzY3JlZW5zaG90KTtcbiAgICAgICAgcmVsZWFzZUltYWdlKHNjcmVlbnNob3QpO1xuICAgICAgfVxuICAgICAgaWYgKGlzQXV0b09uKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0dXJuIG9uIGF1dG8gcGxheSBkb25lJyk7XG4gICAgICAgIGlmIChDb25maWcuc2NyaXB0Q29uZmlnLmhhc0Nvb2xGZWF0dXJlKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ3R1cm4gb24gcG93ZXIgc2F2ZSBwbGF5Jyk7XG4gICAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxlYWd1ZU9uUGxheUF1dG9Pbik7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCd0dXJuIG9uIGF1dG8gcGxheSBmYWlsZWQ7IHJldHJ5IGluIG5leHQgbWF0Y2gnKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGRlYnVnOiB0cnVlLFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtsZWFndWVPblBsYXlBdXRvT24ubmFtZX1gLFxuICAgIGN1c3RvbU1hdGNoOiBsZWFndWVPblBsYXlBdXRvT24uY3VzdG9tTWF0Y2gsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcblxuICAgICAgLy8gcGFnZSB3aWxsIGJlIHN0b3BwZWQgaGVyZSBpbiBhbnkgdGFza3NcbiAgICAgIC8vIG5lZWQgdG8gaGFuZGxlIGltbWVkaWF0ZWx5IGlmIG1hdGNoXG4gICAgICBpZiAocmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShsZWFndWVPblBsYXlQb3dlclNhdmVPZmZTdG9wcGVkLCBpbWFnZSkpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2hhbmRsZSBhdXRvIG9uIGJ1dCBzdG9wcGVkIHBhZ2UnKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxlYWd1ZU9uUGxheVBvd2VyU2F2ZU9mZlN0b3BwZWQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgIT09IFRBU0tTLnBsYXlMZWFndWVHYW1lKSB7XG4gICAgICAgIC8vIHR1cm4gb2ZmIGF1dG9wbGF5IHRvIHJldHVyblxuICAgICAgICBrZXljb2RlKCdLRVlDT0RFX0JBQ0snLCAxMDApO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIC8vIHN1Y2Nlc3MgZW50ZXIgZ2FtZVxuICAgICAgc3RhdGUubGVhZ3VlR2FtZS50cnlFbnRlckdhbWVDbnRzID0gMDtcblxuICAgICAgLy8gVE9ETzogaGFuZGxlIHF1aWNrIHN3aXRjaCB0byBhdXRvIHBsYXkgb2ZmIGlmIHdhcyBzdG9wcGVkXG4gICAgICBpZiAoQ29uZmlnLnNjcmlwdENvbmZpZy5oYXNDb29sRmVhdHVyZSkge1xuICAgICAgICBjb25zb2xlLmxvZygndHVybiBvbiBwb3dlciBzYXZlIHBsYXknKTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxlYWd1ZU9uUGxheUF1dG9Pbik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoeyB4OiAwLCB5OiAwIH0pO1xuICAgICAgY29uc29sZS5sb2coJ3RhcCcpO1xuICAgICAgc3RhdGUub25SdW5uaW5nKCk7XG4gICAgfSxcbiAgICBkZWJ1ZzogdHJ1ZSxcbiAgfSk7XG5cbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtsZWFndWVPblBsYXlQYXVzZS5uYW1lfWAsXG4gICAgbWF0Y2g6IGxlYWd1ZU9uUGxheVBhdXNlLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBjb25zb2xlLmxvZygnaGFuZGxlIG9uIHBsYXkgcGF1c2UgcGFuZWwnKTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1MucGxheUxlYWd1ZUdhbWUpIHtcbiAgICAgICAgLy8gb3BlbiBwYXVzZSBwYW5lbFxuICAgICAgICByZXJvdXRlci5nb0JhY2sobGVhZ3VlT25QbGF5UGF1c2UpO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyBjb250aW51ZSBwbGF5XG4gICAgICBrZXljb2RlKCdLRVlDT0RFX0JBQ0snLCAxMDApO1xuICAgICAgY29uc29sZS5sb2coJ3RhcCBiYWNrIHRvIHN0YXkgaW4gZ2FtZScpO1xuICAgIH0sXG4gIH0pO1xuXG4gIC8vIGdhbWUgcmV3YXJkIHBhZ2VzXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7c2VsZWN0UmV3YXJkUGxheWVyLm5hbWV9YCxcbiAgICBtYXRjaDogc2VsZWN0UmV3YXJkUGxheWVyLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBjb25zb2xlLmxvZygnaGFuZGxlU2VsZWN0UmV3YXJkUGxheWVyJyk7XG4gICAgICBpZiAoQ29uZmlnLnNjcmlwdENvbmZpZy5pc0Nsb3VkKSB7XG4gICAgICAgIC8vIHRlbXBvcmFyeSBzYXZlIGltYWdlIGZvciBkZWJ1Z1xuICAgICAgICBjb25zdCBzYXZlVG1wSW1hZ2VQYXRoID0gYCR7Q09OU1RBTlRTLnNhdmVJbWFnZVJvb3R9L3NlbGVjdFJld2FyZFBsYXllcl8ke0NvbmZpZy5zY3JpcHRDb25maWcubGljZW5zZUlkfS5wbmdgO1xuICAgICAgICBzYXZlSW1hZ2UoaW1hZ2UsIHNhdmVUbXBJbWFnZVBhdGgpO1xuICAgICAgICBjb25zb2xlLmxvZygnc2F2ZSBzZWxlY3RSZXdhcmRQbGF5ZXInLCBzYXZlVG1wSW1hZ2VQYXRoKTtcbiAgICAgIH1cblxuICAgICAgLy8gcHJldiBzZWxlY3QgbWVjaFxuICAgICAgbGV0IGJlc3RDYXJkUmFuayA9IC0xO1xuICAgICAgbGV0IGJlc3RDYXJkUG9zID0gc2VsZWN0UmV3YXJkUGxheWVyQnRuc1swXTtcbiAgICAgIGZvciAoY29uc3QgcG9zIG9mIHNlbGVjdFJld2FyZFBsYXllckJ0bnMpIHtcbiAgICAgICAgY29uc3QgcmdiID0gZ2V0SW1hZ2VDb2xvcihpbWFnZSwgcG9zLngsIHBvcy55KTtcbiAgICAgICAgY29uc3QgayA9IHJnYi5yICsgJy0nICsgcmdiLmcgKyAnLScgKyByZ2IuYjtcbiAgICAgICAgY29uc29sZS5sb2cocG9zLngsIHBvcy55LCBrKTtcbiAgICAgICAgLy8gc2VsZWN0IGlmIG5vdCBpbiBiYXNpYyB0eXBlXG4gICAgICAgIGNvbnN0IHJhbmsgPSBwbGF5ZXJDYXJkQ29sb3JUb1Jhbmtba10gPz8gNTtcbiAgICAgICAgaWYgKHJhbmsgPiBiZXN0Q2FyZFJhbmspIHtcbiAgICAgICAgICBiZXN0Q2FyZFJhbmsgPSByYW5rO1xuICAgICAgICAgIGJlc3RDYXJkUG9zID0gcG9zO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIG5ldyBzZWxlY3QgbWVjaFxuICAgICAgZm9yIChsZXQgcCA9IDA7IHAgPCAzOyBwKyspIHtcbiAgICAgICAgY29uc3QgcG9zID0gc2VsZWN0UmV3YXJkUGxheWVyQnRuc1twXTtcbiAgICAgICAgY29uc3QgcmdiID0gZ2V0SW1hZ2VDb2xvcihpbWFnZSwgcG9zLngsIHBvcy55KTtcbiAgICAgICAgY29uc3QgayA9IHJnYi5yICsgJy0nICsgcmdiLmcgKyAnLScgKyByZ2IuYjtcbiAgICAgICAgZm9yIChsZXQgcmFuayA9IDE7IHJhbmsgPD0gNTsgcmFuaysrKSB7XG4gICAgICAgICAgY29uc3QgY2FuZGlkYXRlcyA9IHBsYXllckNhcmRDb2xvclRvUmFua1YyW3JhbmtdO1xuICAgICAgICAgIGZvciAoY29uc3QgYyBvZiBjYW5kaWRhdGVzKSB7XG4gICAgICAgICAgICBpZiAoaXNTYW1lQ29sb3IoaW1hZ2UsIHsgLi4ucG9zLCAuLi5jIH0sIDAuOSkpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ25ldyBzZWxlY3QgbWVjaCcsIHAsIGssIHJhbmspO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKGJlc3RDYXJkUG9zKTtcbiAgICAgIGNvbnNvbGUubG9nKCdzZWxlY3QnLCBiZXN0Q2FyZFBvcy54LCBiZXN0Q2FyZFBvcy55KTtcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgIHJlcm91dGVyLmdvTmV4dChzZWxlY3RSZXdhcmRQbGF5ZXIpO1xuICAgICAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwTWVkaXVtKTtcbiAgICB9LFxuICB9KTtcblxuICAvLyBvdGhlclxuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7ZW5kU2Vhc29uUHJvY2VlZC5uYW1lfWAsXG4gICAgbWF0Y2g6IGVuZFNlYXNvblByb2NlZWQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGNvbnNvbGUubG9nKCdoYW5kbGUgZW5kIHNlYXNvbiBwcm9jZWVkJyk7XG4gICAgICBpZiAoQ29uZmlnLnNjcmlwdENvbmZpZy5pc0Rldikge1xuICAgICAgICBjb25zb2xlLmxvZygnZGV2IG5vdCBkbyB0aGluZyBmb3IgZGVidWcnKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHg6IDE4MiwgeTogMTc4IH0pOyAvLyB0YXAgbmV3IHNlYXNvbiBvZiBsZWZ0XG4gICAgICAvLyB3aWxsIGdvIHRvIGVuZFNlYXNvblByb2NlZWRTZWxlY3RlZFxuICAgIH0sXG4gIH0pO1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke212cC5uYW1lfWAsXG4gICAgbWF0Y2g6IG12cCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgY29uc29sZS5sb2coJ2hhbmRsZU12cFBhZ2UnKTtcbiAgICAgIGNvbnN0IG9rQnRuID0geyB4OiA1NjgsIHk6IDMyMCwgcjogNTIsIGc6IDEyMCwgYjogMjEwIH07XG4gICAgICBsZXQgaXNPa0J0bk9uU2NyZWVuID0gcmVyb3V0ZXIuc2NyZWVuLmlzU2FtZUNvbG9yKG9rQnRuKTtcblxuICAgICAgLy8gb2sgYnV0dG9uIHN0aWxsIG9uIHRoZSBzY3JlZW5cbiAgICAgIGZvciAodmFyIG1heE9rQnV0dG9uUmVtYWluID0gMTA7IGlzT2tCdG5PblNjcmVlbiAmJiBtYXhPa0J1dHRvblJlbWFpbiA+IDA7IG1heE9rQnV0dG9uUmVtYWluLS0pIHtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KG12cCk7IC8vIG9rXG4gICAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgICAgIGlzT2tCdG5PblNjcmVlbiA9IHJlcm91dGVyLnNjcmVlbi5pc1NhbWVDb2xvcihva0J0bik7XG4gICAgICB9XG5cbiAgICAgIC8vIHJld2FyZCBib251cyBwbGF5ZXIgcG9wdXBcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogMzIyLCB5OiAzMDkgfSk7IC8vIGNsaWNrIG5leHRcbiAgICAgIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcE1lZGl1bSk7XG4gICAgfSxcbiAgfSk7XG5cbiAgW1xuICAgIHBsYXllclJlY29tbWVuZGF0aW9uLFxuICAgIG5ld1NlYXNvbixcbiAgICBlbmRTZWFzb25Qcm9jZWVkU2VsZWN0ZWQsXG4gICAgc2VsZWN0Tm9ybWFsTWFzdGVyTGVhZ3VlTW9kZVByb2NlZWQsXG4gICAgcGxheWVyR3Jvd3RoQ29tcGxldGUsXG4gICAgcGl0Y2hlck9mVGhlTW9udGgsXG4gICAgZ2FtZVJlc3VsdFdvcmxkQ2hhbXBpb24sXG4gICAgZ2FtZVJld2FyZCxcbiAgICBsZWFndWVSZXdhcmRBY2hpZXZlbWVudEdyYWRlLFxuICAgIGJlc3RQb3NpdGlvbkF3YXJkQm9udXNHcm91cCxcbiAgICBib251c0dyYW50ZWRCeVRlYW1SZWNvcmRPbGQsXG4gICAgcG9zdFNlYXNvbkF3YXJkQm9udXMsXG4gICAgbGVhZ3VlT25QbGF5TmV4dEJhdHRlcixcbiAgICBtdnBEaXNwbGF5LFxuICAgIGJvbnVzR3JhbnRlZEJ5VGVhbVJlY29yZCxcbiAgXS5mb3JFYWNoKHAgPT4ge1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtwLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBwLFxuICAgICAgYWN0aW9uOiAnZ29OZXh0JyxcbiAgICB9KTtcbiAgfSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZVNlbGVjdFllYXIoKSB7XG4gIGNvbnN0IHsgbGVhZ3VlWWVhcjogdGFyZ2V0WWVhciwgbGVhZ3VlTW9kZSB9ID0gQ29uZmlnLnNjcmlwdENvbmZpZztcblxuICBjb25zb2xlLmxvZyhgaGFuZGxlU2VsZWN0WWVhciBzdGFydCAoeWVhcjogJHt0YXJnZXRZZWFyfSBsZWFndWVNb2RlOiAke2xlYWd1ZU1vZGV9KWApO1xuXG4gIGlmICghQ29uZmlnLnNjcmlwdENvbmZpZy5pc1Byb2R1Y3Rpb24pIHtcbiAgICBjb25zb2xlLmxvZygnZGV2IG1vZGUgdGVzdCBzZWxlY3Qgb3B0aW9uJyk7XG5cbiAgICAvLyBtb3ZlICYgc2VsZWN0IGZpcnN0IG9wdGlvblxuICAgIGNvbnN0IHRvdGFsWWVhckNudCA9IE9iamVjdC5rZXlzKHNlbGVjdFllYXJNb3ZlU3RlcE1hcFRvVGFyZ2V0KS5sZW5ndGg7XG4gICAgY29uc3Qgb3B0aW9uUGVyUGFnZSA9IDU7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSBNYXRoLmNlaWwodG90YWxZZWFyQ250IC8gb3B0aW9uUGVyUGFnZSk7IGkrKykge1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnN3aXBlKHNlbGVjdFllYXJCdG5zLmdvVXBTdGFydCwgc2VsZWN0WWVhckJ0bnMuZ29VcEVuZCwgNik7XG4gICAgICBzbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gICAgfVxuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoc2VsZWN0WWVhck9wdGlvbnNbMV0pO1xuICAgIHNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcblxuICAgIGNvbnN0IG1vdmVEb3duU3RlcHMgPSBzZWxlY3RZZWFyVGFyZ2V0VG9Nb3ZlU3RlcE1hcFtsZWFndWVNb2RlXVt0YXJnZXRZZWFyXTtcbiAgICBjb25zb2xlLmxvZygnbW92ZURvd25TdGVwcycsIHNlbGVjdFllYXJUYXJnZXRUb01vdmVTdGVwTWFwLCBtb3ZlRG93blN0ZXBzKTtcblxuICAgIGNvbnN0IGNhblNlbGVjdE9wdGlvbiA9IChvcHRpb25JZHg6IG51bWJlcikgPT4ge1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChzZWxlY3RZZWFyT3B0aW9uc1tvcHRpb25JZHhdKTtcbiAgICAgIHNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgICAgIGNvbnN0IHNjcmVlbnNob3QgPSBnZXRTY3JlZW5zaG90KCk7XG4gICAgICBjb25zdCBpc0VuYWJsZWQgPSBpc1NhbWVDb2xvcihzY3JlZW5zaG90LCBzZWxlY3RZZWFyQnRucy5lbmFibGVkU3VibWl0KTtcbiAgICAgIHJlbGVhc2VJbWFnZShzY3JlZW5zaG90KTtcbiAgICAgIHJldHVybiBpc0VuYWJsZWQ7XG4gICAgfTtcblxuICAgIC8vIGdvIHRvIHRhcmdldCBvcHRpb24gYnkgc3dpcGUgdXAgKHBhZ2UgZ28gZG93bilcbiAgICBsZXQgY3VyTW92ZVN0ZXBzID0gMDtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1vdmVEb3duU3RlcHM7IGkrKykge1xuICAgICAgLy8gY2hlY2sgaWYgc3RpbGwgY2FuIGdvIGRvd25cbiAgICAgIGlmICghY2FuU2VsZWN0T3B0aW9uKDIpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdjYW5ub3QgZ28gZG93biBhbnltb3JlJyk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnN3aXBlKHNlbGVjdFllYXJCdG5zLmdvRG93blN0YXJ0LCBzZWxlY3RZZWFyQnRucy5nb0Rvd25FbmQsIDYpO1xuICAgICAgY3VyTW92ZVN0ZXBzKys7XG4gICAgfVxuXG4gICAgcmVyb3V0ZXIuc2NyZWVuLnRhcChzZWxlY3RZZWFyT3B0aW9uc1sxXSk7XG4gICAgc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xuICAgIGNvbnN0IHsgbW9kZTogc2VsZWN0ZWRNb2RlLCB5ZWFyOiBzZWxlY3RlZFllYXIgfSA9IHNlbGVjdFllYXJNb3ZlU3RlcE1hcFRvVGFyZ2V0W2N1ck1vdmVTdGVwc107XG4gICAgY29uc29sZS5sb2coYHRhcmdldDogJHtsZWFndWVNb2RlfSAke3RhcmdldFllYXJ9LCBzZWxlY3Q6ICR7c2VsZWN0ZWRNb2RlfSAke3NlbGVjdGVkWWVhcn1gKTtcbiAgfVxuXG4gIC8vIHN1Ym1pdCBjaGFuZ2VzXG4gIHJlcm91dGVyLnNjcmVlbi50YXAoc2VsZWN0WWVhckJ0bnMuZW5hYmxlZFN1Ym1pdCk7XG4gIFV0aWxzLnNsZWVwKENPTlNUQU5UUy5zbGVlcFNob3J0KTtcbiAgY29uc29sZS5sb2coYGhhbmRsZVNlbGVjdFllYXIgZG9uZWApO1xufVxuXG4vLyAqIExlYWd1ZU1vZGVzXG5jb25zdCBsZWFndWVNb2RlUGFuZWwgPSBuZXcgUGFnZShcbiAgJ2xlYWd1ZU1vZGVQYW5lbCcsXG4gIFtcbiAgICAvLyBuYXZpIGJhclxuICAgIHsgeDogMzAwLCB5OiAxMiwgcjogMjE0LCBnOiAyMTQsIGI6IDIxNCB9LFxuICAgIHsgeDogMzE2LCB5OiA5LCByOiAyMzgsIGc6IDIzNCwgYjogMjM4IH0sXG4gICAgeyB4OiAzMjAsIHk6IDE1LCByOiAxNDQsIGc6IDE0OCwgYjogMTQ5IH0sXG4gICAgeyB4OiAzODgsIHk6IDEwLCByOiAyMzgsIGc6IDIzNCwgYjogMjM4IH0sXG4gICAgeyB4OiA0OTMsIHk6IDExLCByOiAyNDQsIGc6IDIwNCwgYjogMzkgfSxcbiAgICB7IHg6IDYwNiwgeTogMTQsIHI6IDc0LCBnOiA5MywgYjogMTIzIH0sXG4gICAgeyB4OiA2MzEsIHk6IDE1LCByOiAyMTQsIGc6IDIxOSwgYjogMjE0IH0sXG5cbiAgICAvLyBzb21lIHBlb3BsZSBpcyArIHNvbWUgaXMg8J+UjSwgdGhlIFwicFwiIGljb24gaGFzIHNsaWdodGx5ICBkaWZmZXJlbnQgY29sb3JcbiAgICAvLyB7IHg6IDU3MSwgeTogMTQsIHI6IDE0NywgZzogMTYxLCBiOiAxNzEgfSxcbiAgICAvLyB7IHg6IDM4NSwgeTogOSwgcjogNjQsIGc6IDY3LCBiOiA3MSB9LFxuXG4gICAgLy8gbGluZSB1cCBidG5cbiAgICB7IHg6IDc3LCB5OiAzMjAsIHI6IDI1MiwgZzogMjUzLCBiOiAyNTMgfSxcbiAgICB7IHg6IDEwOSwgeTogMzIxLCByOiAxMDYsIGc6IDEzNywgYjogMTY2IH0sXG4gICAgeyB4OiAxMjcsIHk6IDMyMSwgcjogMTc2LCBnOiAxOTksIGI6IDIxNiB9LFxuXG4gICAgLy8gc3RhdHMgYnRuXG4gICAgeyB4OiAxNjksIHk6IDMyNCwgcjogMTE2LCBnOiAxMzcsIGI6IDE2MyB9LFxuICAgIHsgeDogMjAxLCB5OiAzMjQsIHI6IDEwNiwgZzogMTM2LCBiOiAxNjYgfSxcbiAgICB7IHg6IDIxOCwgeTogMzI1LCByOiAyMDcsIGc6IDIyNCwgYjogMjM3IH0sXG5cbiAgICAvLyBsZWFndWUgcmVzZXQgYnRuXG4gICAgeyB4OiAyNTQsIHk6IDMyMCwgcjogMjQ4LCBnOiAyNDgsIGI6IDI0OCB9LFxuICAgIHsgeDogMjg0LCB5OiAzMTcsIHI6IDE5NywgZzogMTY3LCBiOiAxNTYgfSxcbiAgICB7IHg6IDI5NSwgeTogMzI5LCByOiAxNzksIGc6IDE1MywgYjogMTQ1IH0sXG4gICAgeyB4OiAzMDksIHk6IDMyNSwgcjogOTksIGc6IDU3LCBiOiA0MSB9LFxuICBdLFxuICB7IHg6IDYxNiwgeTogMzM2IH0sXG4gIHsgeDogNDEsIHk6IDMyMCB9XG4pO1xuXG5jb25zdCBsZWFndWVNb2RlUGFuZWxCdG4gPSB7XG4gIGxlYWd1ZVJlc2V0OiB7IHg6IDI1NCwgeTogMzIwIH0sXG4gIGxpbmVVcDogeyB4OiAxMTEsIHk6IDMyMSB9LFxufTtcblxuY29uc3QgbGVhZ3VlTW9kZUdhbWVJbmZvID0gbmV3IFBhZ2UoXG4gICdsZWFndWVNb2RlR2FtZUluZm8nLFxuICBbXG4gICAgLy8gZ2FtZSBpbmZvIHRpdGxlXG4gICAgeyB4OiAyODAsIHk6IDU2LCByOiA0MSwgZzogNDksIGI6IDU4IH0sXG4gICAgeyB4OiAyOTMsIHk6IDYyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMDUsIHk6IDYyLCByOiA3NSwgZzogNzksIGI6IDkwIH0sXG4gICAgeyB4OiAzMDksIHk6IDYyLCByOiAyMTEsIGc6IDIxMiwgYjogMjE1IH0sXG4gICAgeyB4OiAzMTcsIHk6IDYyLCByOiAyMDMsIGc6IDIwNCwgYjogMjA1IH0sXG4gICAgeyB4OiAzMjUsIHk6IDYzLCByOiAyMDUsIGc6IDIwNiwgYjogMjA5IH0sXG4gICAgeyB4OiAzMzQsIHk6IDYzLCByOiAxNDAsIGc6IDE0MiwgYjogMTQ4IH0sXG4gICAgeyB4OiAzNDEsIHk6IDY1LCByOiAyMjIsIGc6IDIyNCwgYjogMjI1IH0sXG4gICAgeyB4OiAzNTQsIHk6IDYzLCByOiA0MSwgZzogNDUsIGI6IDU4IH0sXG5cbiAgICAvLyBncmF5IGNvbG9yIGJlc2lkZXMgXCJURUFNIFJBTktJTkdcIlxuICAgIHsgeDogMjQ0LCB5OiAxODUsIHI6IDIxNCwgZzogMjIzLCBiOiAyMzAgfSxcblxuICAgIC8vIGdyZWVuIHJld2FyZCBpdGVtIGJ0biBub3Qgc2hpbmluZyBwYXJ0XG4gICAgLy8geyB4OiA0NDIsIHk6IDI3MSwgcjogNDksIGc6IDE2NiwgYjogOTAgfSxcbiAgICAvLyB7IHg6IDQzMywgeTogMjg1LCByOiA0OSwgZzogMTQ2LCBiOiA4MiB9LFxuICAgIC8vIHsgeDogMzI2LCB5OiAyNzAsIHI6IDQ5LCBnOiAxNzAsIGI6IDkwIH0sXG4gICAgLy8geyB4OiAzMjcsIHk6IDI4MywgcjogNDksIGc6IDE2MSwgYjogOTAgfSxcblxuICAgIC8vIGVuZXJneSBiYWxsXG4gICAgeyB4OiA1MjcsIHk6IDI3NywgcjogMjUwLCBnOiAyMzMsIGI6IDIzMiB9LFxuICAgIHsgeDogNTMwLCB5OiAyNzksIHI6IDI0MSwgZzogMjQyLCBiOiAyNDAgfSxcbiAgXSxcbiAgeyB4OiA1NDYsIHk6IDMyNSB9LCAvLyBwbGF5QmFsbFxuICB7IHg6IDQxLCB5OiAzMjAgfVxuKTtcblxuY29uc3QgcGxheWVyUmVjb21tZW5kYXRpb24gPSBuZXcgUGFnZShcbiAgJ3BsYXllclJlY29tbWVuZGF0aW9uJyxcbiAgW1xuICAgIHsgeDogODAsIHk6IDIxLCByOiA4LCBnOiA4OSwgYjogMTY0IH0sXG4gICAgeyB4OiAzMTEsIHk6IDUzLCByOiA5NCwgZzogMTM1LCBiOiAxNzMgfSxcbiAgICB7IHg6IDM4MiwgeTogNTIsIHI6IDE1MiwgZzogMTc3LCBiOiAyMDAgfSxcbiAgICB7IHg6IDU1NSwgeTogMTIsIHI6IDEzNSwgZzogMTc5LCBiOiAyMjAgfSxcbiAgICB7IHg6IDYwOSwgeTogMTMsIHI6IDAsIGc6IDI4LCBiOiA2NiB9LFxuICAgIHsgeDogNjE2LCB5OiAxNSwgcjogMjQ3LCBnOiAyNDgsIGI6IDI0OSB9LFxuICAgIHsgeDogNjI5LCB5OiA5LCByOiAxODksIGc6IDEyLCBiOiA1OCB9LFxuICAgIHsgeDogMzk1LCB5OiA1MiwgcjogMTgwLCBnOiAyMDAsIGI6IDIxOSB9LFxuICAgIHsgeDogMzUwLCB5OiA1MSwgcjogMTU1LCBnOiAxODIsIGI6IDIwMSB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5cbi8vIG5vcm1hbCBnYW1lIHBsYXkgc3RhcnRcbmNvbnN0IHNlbGVjdFBsYXlSb2xlQnRucyA9IHtcbiAgcGxheU9mZmVuc2VPbmx5OiB7IHg6IDEyOCwgeTogMjc5IH0sXG4gIHBsYXlBbGw6IHsgeDogMzE3LCB5OiAyODIgfSxcbiAgcGxheURlZmZlbnNlT25seTogeyB4OiA1MDYsIHk6IDI4MSB9LFxufTtcblxuY29uc3Qgc2VsZWN0UGxheVJvbGVDb21tb246IFBhZ2VbJ3BvaW50cyddID0gW1xuICAvLyBwbGF5IG9mZmVuc2Ugb25seSBpY29uXG4gIHsgeDogNzAsIHk6IDI5OCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuXG4gIC8vIHBsYXkgb2ZmZW5zZSBvbmx5IHRleHRcbiAgeyB4OiAxMTcsIHk6IDMwNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDEzNywgeTogMzAwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMTM3LCB5OiAzMDEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxMzcsIHk6IDMwMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDEzNywgeTogMzAzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMTM3LCB5OiAzMDQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxNjEsIHk6IDMwMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDE4NywgeTogMzAwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMTg3LCB5OiAzMDEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxODcsIHk6IDMwMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDE4NywgeTogMzAzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMTg3LCB5OiAzMDQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxODcsIHk6IDMwNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDE5NiwgeTogMzAwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMTk2LCB5OiAzMDEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAxOTksIHk6IDMwMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDE5OSwgeTogMzAzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMTk5LCB5OiAzMDQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcblxuICAvLyBwbGF5IGRlZmVuc2Ugb25seSBpY29uXG4gIHsgeDogNTEyLCB5OiAzMDIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MTksIHk6IDMwMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyMiwgeTogMzAzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTIyLCB5OiAzMDQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1NTQsIHk6IDMwMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDU1NywgeTogMzAzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTU3LCB5OiAzMDQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbl07XG5cbmNvbnN0IHNlbGVjdFBsYXlSb2xlU2FuZHMgPSBuZXcgUGFnZSgnc2VsZWN0UGxheVJvbGVTYW5kcycsIFtcbiAgLi4uc2VsZWN0UGxheVJvbGVDb21tb24sXG4gIC8vIHNhbmRzIGluIGxlZnRcbiAgeyB4OiAyOCwgeTogMzM0LCByOiAxNjUsIGc6IDExOCwgYjogOTEgfSxcblxuICAvLyBzYW5kcyBpbiByaWdodFxuICB7IHg6IDYxOCwgeTogMjk5LCByOiAxNjUsIGc6IDExOCwgYjogOTEgfSxcbl0pO1xuXG5jb25zdCBzZWxlY3RQbGF5Um9sZUdyYXNzID0gbmV3IFBhZ2UoJ3NlbGVjdFBsYXlSb2xlR3Jhc3MnLCBbXG4gIC4uLnNlbGVjdFBsYXlSb2xlQ29tbW9uLFxuICAvLyBncmFzcyBpbiBsZWZ0XG4gIHsgeDogMjUsIHk6IDMyMSwgcjogMTA5LCBnOiAxMzIsIGI6IDgzIH0sXG5cbiAgLy8gZ3Jhc3MgaW4gcmlnaHRcbiAgeyB4OiA2MTEsIHk6IDMxMSwgcjogMTA5LCBnOiAxMzIsIGI6IDgzIH0sXG5dKTtcblxuY29uc3Qgc2VsZWN0UGxheVJvbGVHcm91cHMgPSBuZXcgR3JvdXBQYWdlKFxuICAnc2VsZWN0UGxheVJvbGVHcm91cHMnLFxuICBbc2VsZWN0UGxheVJvbGVTYW5kcywgc2VsZWN0UGxheVJvbGVHcmFzc10sXG4gIHNlbGVjdFBsYXlSb2xlQnRucy5wbGF5QWxsLFxuICBzZWxlY3RQbGF5Um9sZUJ0bnMucGxheUFsbFxuKTtcblxuLy8gc29tZXRpbWVzIGhhcHBlbmVkIHdoZW4gcmVzdGFydGluZyBhIGNvbnRpbnVlZCBnYW1lXG4vLyBvciBjYW5jZWwgYXV0byBwbGF5IGR1cmluZyBwbGF5aW5nXG5jb25zdCBsZWFndWVPblBsYXlOZXh0QmF0dGVyID0gbmV3IFBhZ2UoXG4gICdsZWFndWVPblBsYXlOZXh0QmF0dGVyJyxcbiAgW1xuICAgIC8vIG5leHQgYmF0dGVyIGJnXG4gICAgeyB4OiAxLCB5OiAzMDQsIHI6IDI0NywgZzogMjQ2LCBiOiAyNDcgfSxcbiAgICB7IHg6IDEsIHk6IDM0OSwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICAgIHsgeDogMTAwLCB5OiAzNDYsIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDk4LCB5OiAzMDQsIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcblxuICAgIC8vIGZhc3QgcHJvY2Vzc2luZyBidG5cbiAgICB7IHg6IDUxNSwgeTogMzA4LCByOiAxNSwgZzogMTIxLCBiOiAyNDggfSxcbiAgICB7IHg6IDUzOSwgeTogMzEwLCByOiAyNTQsIGc6IDI1NCwgYjogMjU1IH0sXG4gICAgeyB4OiA1NjIsIHk6IDMxMCwgcjogMTg1LCBnOiAyMDgsIGI6IDI0MiB9LFxuICAgIHsgeDogNTgwLCB5OiAzMTMsIHI6IDI2LCBnOiAxMTEsIGI6IDIyOSB9LFxuICAgIHsgeDogNTk3LCB5OiAzMTMsIHI6IDExLCBnOiAxMTAsIGI6IDI0NCB9LFxuICAgIHsgeDogNjExLCB5OiAzMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDYyMSwgeTogMzE0LCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuXG4gICAgLy8gY29udGludWUgcGxheWluZyBidG5cbiAgICB7IHg6IDUxMywgeTogMzQxLCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogNTI3LCB5OiAzNDMsIHI6IDExMSwgZzogMTY0LCBiOiAyNDcgfSxcbiAgICB7IHg6IDU2NSwgeTogMzM1LCByOiA4LCBnOiAxMjUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTg0LCB5OiAzMzksIHI6IDgsIGc6IDExNywgYjogMjU1IH0sXG4gICAgeyB4OiA2MDMsIHk6IDMzNywgcjogMjAsIGc6IDEyNywgYjogMjU1IH0sXG4gICAgeyB4OiA2MjAsIHk6IDM0MCwgcjogOCwgZzogMTE0LCBiOiAyNDcgfSxcbiAgXSxcbiAgeyB4OiA2MjAsIHk6IDMzOCB9LCAvLyBjb250aW51ZSBwbGF5aW5nXG4gIHsgeDogNjIwLCB5OiAzMzggfVxuKTtcblxuLy8gYXV0byBwbGF5IG9uLCBwb3dlciBzYXZlIG9mZlxuY29uc3QgbGVhZ3VlT25QbGF5UG93ZXJTYXZlT2ZmID0gbmV3IFBhZ2UoXG4gICdsZWFndWVPblBsYXlQb3dlclNhdmVPZmYnLFxuICBbXG4gICAgLy8gYmF0dGVyeVxuICAgIHsgeDogNDg2LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNDkyLCB5OiAxNiwgcjogMTAxLCBnOiAxMDMsIGI6IDEwMSB9LFxuICAgIHsgeDogNDg4LCB5OiAyMiwgcjogMjEwLCBnOiAyMDgsIGI6IDIxMCB9LFxuICAgIHsgeDogNDgxLCB5OiAyNywgcjogMTAyLCBnOiAxMDEsIGI6IDEwMSB9LFxuICAgIHsgeDogNDg5LCB5OiAyOSwgcjogMTk3LCBnOiAxOTcsIGI6IDE5NyB9LFxuICBdLFxuICB7IHg6IDQ4NSwgeTogMjEgfSwgLy8gdHVybiBvbiBwb3dlciBzYXZlXG4gIHsgeDogNTUyLCB5OiAyMSB9IC8vIHR1cm4gb2ZmIGF1dG8gcGxheVxuKTtcblxuLy8gc2FtZSBhcyBnTGVhZ3VlT25QbGF5UG93ZXJTYXZlT2ZmLCBidXQgaXMgc3RvcHBlZFxuLy8gbmVlZCB0byB0dXJuIG9uIGF1dG9wbGF5XG5jb25zdCBsZWFndWVPblBsYXlQb3dlclNhdmVPZmZTdG9wcGVkID0gbmV3IFBhZ2UoXG4gICdsZWFndWVPblBsYXlQb3dlclNhdmVPZmYnLFxuICBbXG4gICAgLy8gYmF0dGVyeVxuICAgIHsgeDogNDg2LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNDkyLCB5OiAxNiwgcjogMTAxLCBnOiAxMDMsIGI6IDEwMSB9LFxuICAgIHsgeDogNDg4LCB5OiAyMiwgcjogMjEwLCBnOiAyMDgsIGI6IDIxMCB9LFxuICAgIHsgeDogNDgxLCB5OiAyNywgcjogMTAyLCBnOiAxMDEsIGI6IDEwMSB9LFxuICAgIHsgeDogNDg5LCB5OiAyOSwgcjogMTk3LCBnOiAxOTcsIGI6IDE5NyB9LFxuXG4gICAgLy8gZGlzYWJsZWQgYXV0b3BsYXkgdGV4dFxuICAgIHsgeDogNTI0LCB5OiAyMywgcjogOTEsIGc6IDExMCwgYjogMTU4IH0sXG4gICAgeyB4OiA1MzAsIHk6IDIwLCByOiAxNDAsIGc6IDE0NiwgYjogMTUyIH0sXG4gICAgeyB4OiA1MzMsIHk6IDI0LCByOiA5MywgZzogMTA2LCBiOiAxNDMgfSxcbiAgICB7IHg6IDU1MCwgeTogMjUsIHI6IDg1LCBnOiAxMDUsIGI6IDE1MyB9LFxuICAgIHsgeDogNTUyLCB5OiAyMSwgcjogMTQ3LCBnOiAxNTMsIGI6IDE1NiB9LFxuICAgIHsgeDogNTU3LCB5OiAyMCwgcjogMTQ4LCBnOiAxNTQsIGI6IDE1NiB9LFxuICAgIHsgeDogNTY2LCB5OiAyNCwgcjogOTksIGc6IDEyMSwgYjogMTczIH0sXG4gICAgeyB4OiA1NzUsIHk6IDE4LCByOiAxMDcsIGc6IDEyMSwgYjogMTczIH0sXG4gICAgeyB4OiA1ODQsIHk6IDE5LCByOiA5NywgZzogMTIyLCBiOiAxNjkgfSxcbiAgICB7IHg6IDU4OSwgeTogMjIsIHI6IDExOCwgZzogMTI3LCBiOiAxNDkgfSxcbiAgICB7IHg6IDU5NSwgeTogMTgsIHI6IDE0MSwgZzogMTUwLCBiOiAxNTYgfSxcbiAgICB7IHg6IDYwNiwgeTogMjMsIHI6IDc0LCBnOiA5MywgYjogMTMyIH0sXG4gIF0sXG4gIHsgeDogMCwgeTogMCB9LCAvLyB0dXJuIG9uIGF1dG8gcGxheVxuICB7IHg6IDAsIHk6IDAgfSAvLyB0dXJuIG9uIGF1dG8gcGxheVxuKTtcblxuLy8gZG9uJ3QgZG8gYW55IHRoaW5nLCBqdXN0IGF2b2lkIHRvIGVudGVyIHVua25vd25cbmNvbnN0IGxlYWd1ZU9uUGxheVBvd2VyU2F2ZU9mZk1pZCA9IG5ldyBQYWdlKFxuICAnbGVhZ3VlT25QbGF5UG93ZXJTYXZlT2ZmJyxcbiAgW1xuICAgIC8vIGJhdHRlcnlcbiAgICB7IHg6IDQ4NiwgeTogMTMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcblxuICAgIC8vIGRpYWxvZyBvblxuICAgIHsgeDogNjA0LCB5OiA0NywgcjogMTcwLCBnOiAxNzEsIGI6IDE3MCB9LFxuICAgIHsgeDogNjA3LCB5OiA0OSwgcjogMjQ2LCBnOiAyNDYsIGI6IDI0NiB9LFxuICAgIHsgeDogNjExLCB5OiA1NCwgcjogMjEzLCBnOiAyMTAsIGI6IDIxMyB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5jb25zdCBsZWFndWVPblBsYXlQb3dlclNhdmVPZmZNaWQxID0gbmV3IFBhZ2UoXG4gICdsZWFndWVPblBsYXlQb3dlclNhdmVPZmYnLFxuICBbXG4gICAgLy8gYmF0dGVyeVxuICAgIHsgeDogNDg2LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuXG4gICAgLy8gZGlhbG9nIG9mZlxuICAgIHsgeDogNjA1LCB5OiA1MCwgcjogOTUsIGc6IDk5LCBiOiA5NyB9LFxuICAgIHsgeDogNjAyLCB5OiA1MSwgcjogMTA5LCBnOiAxMTQsIGI6IDExNiB9LFxuICAgIHsgeDogNjAzLCB5OiA0OSwgcjogMTMxLCBnOiAxMzMsIGI6IDEzMSB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5cbmNvbnN0IGxlYWd1ZU9uUGxheVBvd2VyU2F2ZU9mZkdyb3VwcyA9IG5ldyBHcm91cFBhZ2UoJ2xlYWd1ZU9uUGxheVBvd2VyU2F2ZU9mZkdyb3VwJywgW1xuICBsZWFndWVPblBsYXlQb3dlclNhdmVPZmYsXG4gIGxlYWd1ZU9uUGxheVBvd2VyU2F2ZU9mZlN0b3BwZWQsXG4gIGxlYWd1ZU9uUGxheVBvd2VyU2F2ZU9mZk1pZCxcbiAgbGVhZ3VlT25QbGF5UG93ZXJTYXZlT2ZmTWlkMSxcbl0pO1xuXG4vLyB3aGVuIHBsYXlpbmcsIHByZXNzIGJhY2tcbi8vIFRPRE86IHVwZGF0ZSBwaG90byBpbiBjaGFydFxuY29uc3QgbGVhZ3VlT25QbGF5UGF1c2UgPSBuZXcgUGFnZShcbiAgJ2xlYWd1ZU9uUGxheVBhdXNlJyxcbiAgW1xuICAgIC8vIGNvbnRpbnVlIGJ1dHRvblxuICAgIHsgeDogODUsIHk6IDE0NiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMTAwLCB5OiAxNjQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDk2LCB5OiAxMzgsIHI6IDgyLCBnOiA5MywgYjogMTA3IH0sXG5cbiAgICAvLyBtbGIgbG9nb1xuICAgIHsgeDogNTY5LCB5OiAyODcsIHI6IDIxNSwgZzogMTQyLCBiOiAxNjAgfSxcbiAgICB7IHg6IDU2MywgeTogMjkyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NTMsIHk6IDI5MSwgcjogMiwgZzogMjgsIGI6IDY2IH0sXG5cbiAgICAvLyBwIGJnXG4gICAgeyB4OiA1NjMsIHk6IDMzNiwgcjogMjUsIGc6IDQ1LCBiOiA1OCB9LFxuICBdLFxuICB7IHg6IDkyLCB5OiAxNTUgfSwgLy8gY29udGludWUgZ2FtZVxuICB7IHg6IDUzMSwgeTogMTU1IH0gLy8gbGVhdmVcbik7XG5cbmNvbnN0IGdhbWVSZXN1bHRXb3JsZENoYW1waW9uID0gbmV3IFBhZ2UoXG4gICdnYW1lUmVzdWx0V29ybGRDaGFtcGlvbicsXG4gIFtcbiAgICB7IHg6IDI1MiwgeTogMjIsIHI6IDU3LCBnOiA2NywgYjogNzQgfSxcbiAgICB7IHg6IDMyMywgeTogNDIsIHI6IDExNiwgZzogMTA5LCBiOiA4MyB9LFxuICAgIHsgeDogMzUwLCB5OiA3MywgcjogNjYsIGc6IDkxLCBiOiA5NiB9LFxuICAgIHsgeDogNDksIHk6IDMzMSwgcjogMTYsIGc6IDMyLCBiOiA0MSB9LFxuICAgIHsgeDogMjA5LCB5OiAzMjIsIHI6IDgsIGc6IDIwLCBiOiAyNCB9LFxuICAgIHsgeDogMjk0LCB5OiAzMjYsIHI6IDIwOCwgZzogMjA4LCBiOiAyMTIgfSxcbiAgICB7IHg6IDQwMCwgeTogMzIzLCByOiAxOTIsIGc6IDE5MCwgYjogMTkyIH0sXG4gICAgeyB4OiA0MzksIHk6IDMyMywgcjogODUsIGc6IDk4LCBiOiAxMDAgfSxcbiAgICB7IHg6IDU3OCwgeTogMTk1LCByOiAxNiwgZzogMzYsIGI6IDQxIH0sXG4gICAgeyB4OiAzMTYsIHk6IDE2NywgcjogMjEyLCBnOiAyMTAsIGI6IDIxMiB9LFxuICAgIHsgeDogMzM4LCB5OiAxNzMsIHI6IDY1LCBnOiA3MSwgYjogNzEgfSxcbiAgXSxcbiAgeyB4OiAwLCB5OiAwIH0sXG4gIHsgeDogMCwgeTogMCB9XG4pO1xuXG4vLyBUT0RPIHVwZGF0ZSBwaG90b1xuY29uc3QgZ2FtZVJld2FyZCA9IG5ldyBQYWdlKFxuICAnZ2FtZVJld2FyZCcsXG4gIFtcbiAgICB7IHg6IDI0LCB5OiAzMzYsIHI6IDE2LCBnOiAzMiwgYjogNDEgfSxcbiAgICB7IHg6IDU3NywgeTogMjYsIHI6IDAsIGc6IDQsIGI6IDAgfSxcbiAgICB7IHg6IDYwMSwgeTogMzM1LCByOiAxNiwgZzogMzIsIGI6IDQxIH0sXG4gICAgeyB4OiA0MTEsIHk6IDI2OCwgcjogOCwgZzogMTE0LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzNCwgeTogMjcwLCByOiA2NiwgZzogMTQ0LCBiOiAyNTIgfSxcbiAgICB7IHg6IDQ4NywgeTogMjc0LCByOiAwLCBnOiAxMDIsIGI6IDI0NyB9LFxuICAgIHsgeDogNDk3LCB5OiAxMjIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ2MSwgeTogMTkzLCByOiA0MiwgZzogNTgsIGI6IDU4IH0sXG4gIF0sXG4gIHsgeDogNDEyLCB5OiAyNzEgfSxcbiAgeyB4OiA0MTIsIHk6IDI3MSB9XG4pO1xuXG5jb25zdCBiZXN0UG9zaXRpb25Bd2FyZEJvbnVzID0gbmV3IFBhZ2UoXG4gICdiZXN0UG9zaXRpb25Bd2FyZEJvbnVzJyxcbiAgW1xuICAgIC8vIGJnXG4gICAgeyB4OiAxNDEsIHk6IDIxLCByOiAwLCBnOiA4MSwgYjogMTQ4IH0sXG4gICAgeyB4OiA2MDksIHk6IDI2LCByOiAwLCBnOiA4MSwgYjogMTQ4IH0sXG4gICAgeyB4OiAyNiwgeTogMzM1LCByOiAxNiwgZzogMjQsIGI6IDI0IH0sXG4gICAgeyB4OiA2MjYsIHk6IDMzOSwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuICAgIHsgeDogNCwgeTogMTQ4LCByOiA4LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDYyOCwgeTogMTQwLCByOiAxNiwgZzogMzIsIGI6IDQ5IH0sXG5cbiAgICAvLyB0ZWFtIDEgYmVpbmcgc2VsZWN0ZWRcbiAgICB7IHg6IDE3MywgeTogMTgsIHI6IDAsIGc6IDExNywgYjogMjU1IH0sXG4gICAgeyB4OiAxNzYsIHk6IDMwLCByOiAxNTgsIGc6IDE3MywgYjogMTk5IH0sXG4gICAgeyB4OiAxODQsIHk6IDM2LCByOiA4LCBnOiAxMDUsIGI6IDI1NSB9LFxuXG4gICAgLy8gdGVhbSAyIG5vdCBiZWluZyBzZWxlY3RlZFxuICAgIHsgeDogMzI4LCB5OiAyNywgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDMzNywgeTogMzEsIHI6IDE2LCBnOiA0OCwgYjogODIgfSxcbiAgICB7IHg6IDM0MywgeTogMzcsIHI6IDQxLCBnOiA3NywgYjogMTE1IH0sXG5cbiAgICAvLyBva1xuICAgIHsgeDogNTQ3LCB5OiAzMjAsIHI6IDAsIGc6IDExMywgYjogMjQ4IH0sXG4gICAgeyB4OiA1NjYsIHk6IDMyMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTc3LCB5OiAzMjQsIHI6IDIyOCwgZzogMjM5LCBiOiAyNDggfSxcbiAgICB7IHg6IDYwNSwgeTogMzI1LCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogNjExLCB5OiAzMTYsIHI6IDAsIGc6IDExNywgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogNTcwLCB5OiAzMjUgfSxcbiAgeyB4OiA1NzAsIHk6IDMyNSB9XG4pO1xuXG5jb25zdCBiZXN0UG9zaXRpb25Bd2FyZEJvbnVzMiA9IG5ldyBQYWdlKFxuICAnYmVzdFBvc2l0aW9uQXdhcmRCb251cycsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMTQxLCB5OiAyMSwgcjogMCwgZzogODEsIGI6IDE0OCB9LFxuICAgIHsgeDogNjA5LCB5OiAyNiwgcjogMCwgZzogODEsIGI6IDE0OCB9LFxuICAgIHsgeDogMjYsIHk6IDMzNSwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuICAgIHsgeDogNjI2LCB5OiAzMzksIHI6IDE2LCBnOiAyNCwgYjogMjQgfSxcbiAgICB7IHg6IDQsIHk6IDE0OCwgcjogOCwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiA2MjgsIHk6IDE0MCwgcjogMTYsIGc6IDMyLCBiOiA0OSB9LFxuXG4gICAgLy8gdGVhbSAxIG5vdCBiZWluZyBzZWxlY3RlZFxuICAgIHsgeDogMTg5LCB5OiAyMiwgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDE3OCwgeTogMzQsIHI6IDgsIGc6IDQ4LCBiOiA4MiB9LFxuICAgIHsgeDogMTY5LCB5OiAzOSwgcjogNDEsIGc6IDc3LCBiOiAxMTUgfSxcblxuICAgIC8vIHRlYW0gMiBiZWluZyBzZWxlY3RlZFxuICAgIHsgeDogMzQzLCB5OiAyMSwgcjogMiwgZzogMTE3LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMzNywgeTogMzEsIHI6IDE2MywgZzogMTcwLCBiOiAxOTcgfSxcbiAgICB7IHg6IDMzMSwgeTogNDAsIHI6IDgsIGc6IDk3LCBiOiAyNTUgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiA1NDcsIHk6IDMyMCwgcjogMCwgZzogMTEzLCBiOiAyNDggfSxcbiAgICB7IHg6IDU2NiwgeTogMzIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NzcsIHk6IDMyNCwgcjogMjI4LCBnOiAyMzksIGI6IDI0OCB9LFxuICAgIHsgeDogNjA1LCB5OiAzMjUsIHI6IDgsIGc6IDEwOSwgYjogMjQ3IH0sXG4gICAgeyB4OiA2MTEsIHk6IDMxNiwgcjogMCwgZzogMTE3LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiA1NzAsIHk6IDMyNSB9LFxuICB7IHg6IDU3MCwgeTogMzI1IH1cbik7XG5cbi8vIHNlZW1zIG5vdCB1c2VkIGFueW1vcmVcbmNvbnN0IGJlc3RQb3NpdGlvbkF3YXJkQm9udXNHcm91cCA9IG5ldyBHcm91cFBhZ2UoXG4gICdiZXN0UG9zaXRpb25Bd2FyZEJvbnVzJyxcbiAgW2Jlc3RQb3NpdGlvbkF3YXJkQm9udXMsIGJlc3RQb3NpdGlvbkF3YXJkQm9udXMyXSxcbiAgYmVzdFBvc2l0aW9uQXdhcmRCb251cy5uZXh0IC8qIG5leHQgKi9cbik7XG5cbi8vIHNlZW1zIG5vdCB1c2VkIGFueW1vcmVcbi8vIG5leHQgcGFnZSBvZiBnQmVzdFBvc2l0aW9uQXdhcmRCb251c1xuY29uc3QgYm9udXNHcmFudGVkQnlUZWFtUmVjb3JkT2xkID0gbmV3IFBhZ2UoXG4gICdib251c0dyYW50ZWRCeVRlYW1SZWNvcmRPbGQnLFxuICBbXG4gICAgLy8gdGFibGUgYmdcbiAgICB7IHg6IDM4LCB5OiA3NSwgcjogNDksIGc6IDY5LCBiOiAxMDcgfSxcbiAgICB7IHg6IDYwMCwgeTogNzMsIHI6IDQ5LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiA2MDEsIHk6IDI4OSwgcjogMCwgZzogOCwgYjogMTYgfSxcbiAgICB7IHg6IDI4LCB5OiAyODUsIHI6IDgsIGc6IDEyLCBiOiAxNiB9LFxuXG4gICAgLy8gdGl0bGVcbiAgICB7IHg6IDE3NiwgeTogNzYsIHI6IDQ5LCBnOiA2OCwgYjogMTA3IH0sXG4gICAgeyB4OiAyMTcsIHk6IDc3LCByOiAxMjgsIGc6IDEzNiwgYjogMTU5IH0sXG4gICAgeyB4OiAyNTUsIHk6IDc2LCByOiAxMzEsIGc6IDEzNywgYjogMTU3IH0sXG4gICAgeyB4OiAyNzgsIHk6IDc2LCByOiA3OCwgZzogOTUsIGI6IDEyOCB9LFxuICAgIHsgeDogMzI0LCB5OiA3NywgcjogMTEzLCBnOiAxMjIsIGI6IDE1MCB9LFxuICAgIHsgeDogMzYyLCB5OiA3NSwgcjogNDYsIGc6IDY2LCBiOiAxMDQgfSxcbiAgICB7IHg6IDQwNSwgeTogNzcsIHI6IDE3OCwgZzogMTg1LCBiOiAyMDYgfSxcbiAgICB7IHg6IDQyNSwgeTogNzIsIHI6IDE4NCwgZzogMTg3LCBiOiAyMDYgfSxcbiAgICB7IHg6IDQzOSwgeTogNzcsIHI6IDUzLCBnOiA3MCwgYjogMTEwIH0sXG5cbiAgICAvLyBva1xuICAgIHsgeDogNTQ3LCB5OiAzMjAsIHI6IDAsIGc6IDExMywgYjogMjQ4IH0sXG4gICAgeyB4OiA1NjYsIHk6IDMyMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNTc3LCB5OiAzMjQsIHI6IDIyOCwgZzogMjM5LCBiOiAyNDggfSxcbiAgICB7IHg6IDYwNSwgeTogMzI1LCByOiA4LCBnOiAxMDksIGI6IDI0NyB9LFxuICAgIHsgeDogNjExLCB5OiAzMTYsIHI6IDAsIGc6IDExNywgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogNTcwLCB5OiAzMjUgfSxcbiAgeyB4OiA1NzAsIHk6IDMyNSB9XG4pO1xuXG5jb25zdCBwb3N0U2Vhc29uQXdhcmRCb251cyA9IG5ldyBQYWdlKFxuICAncG9zdFNlYXNvbkF3YXJkQm9udXMnLFxuICBbXG4gICAgLy8gYmdcbiAgICB7IHg6IDM5LCB5OiAyNCwgcjogMCwgZzogODEsIGI6IDE0OCB9LFxuICAgIHsgeDogMzIwLCB5OiAxNSwgcjogMCwgZzogODUsIGI6IDE2NSB9LFxuICAgIHsgeDogNjE1LCB5OiAyMywgcjogMCwgZzogODEsIGI6IDE0OCB9LFxuICAgIHsgeDogMTEsIHk6IDI2OCwgcjogMTYsIGc6IDI4LCBiOiAzMyB9LFxuICAgIHsgeDogNjIxLCB5OiAyNTgsIHI6IDE2LCBnOiAyOCwgYjogMzMgfSxcbiAgICB7IHg6IDYyNCwgeTogMzUxLCByOiAxNiwgZzogMjQsIGI6IDI0IH0sXG4gICAgeyB4OiAxNywgeTogMzM4LCByOiAxNiwgZzogMjQsIGI6IDI0IH0sXG4gICAgeyB4OiAzMTYsIHk6IDM0MiwgcjogMTYsIGc6IDI0LCBiOiAyNCB9LFxuXG4gICAgLy8gb2tcbiAgICB7IHg6IDUzMSwgeTogMzE4LCByOiAwLCBnOiAxMTcsIGI6IDI1NSB9LFxuICAgIHsgeDogNTY0LCB5OiAzMjMsIHI6IDIxOCwgZzogMjM0LCBiOiAyNTQgfSxcbiAgICB7IHg6IDU3NywgeTogMzIzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MDgsIHk6IDMxOCwgcjogMCwgZzogMTE3LCBiOiAyNTUgfSxcbiAgICB7IHg6IDYwNiwgeTogMzMxLCByOiA4LCBnOiAxMDUsIGI6IDI1NSB9LFxuICBdLFxuICB7IHg6IDU3MCwgeTogMzI1IH0sXG4gIHsgeDogNTcwLCB5OiAzMjUgfVxuKTtcblxuY29uc3QgcGxheWVyR3Jvd3RoQ29tcGxldGUgPSBuZXcgUGFnZShcbiAgJ3BsYXllckdyb3d0aENvbXBsZXRlJyxcbiAgW1xuICAgIC8vIGJnXG4gICAgeyB4OiAxMTUsIHk6IDQ3LCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG4gICAgeyB4OiAxMTQsIHk6IDMwMCwgcjogMjE0LCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogNTE0LCB5OiAzMDEsIHI6IDIxNCwgZzogMjE5LCBiOiAyMjIgfSxcbiAgICB7IHg6IDUyMiwgeTogNzQsIHI6IDE4MSwgZzogMTg2LCBiOiAxODkgfSxcbiAgICB7IHg6IDExMCwgeTogMTY5LCByOiAyMDYsIGc6IDIxMCwgYjogMjE0IH0sXG4gICAgeyB4OiAxMTAsIHk6IDIzMCwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogNTIyLCB5OiAxNTYsIHI6IDIwNiwgZzogMjEwLCBiOiAyMTQgfSxcbiAgICB7IHg6IDUxMywgeTogMjMwLCByOiAxODEsIGc6IDE4NiwgYjogMTg5IH0sXG5cbiAgICAvLyBjb250aW51ZVxuICAgIHsgeDogMjQwLCB5OiAzMDAsIHI6IDgsIGc6IDExNCwgYjogMjQ4IH0sXG4gICAgeyB4OiAzMTIsIHk6IDMwMSwgcjogMjIzLCBnOiAyMzMsIGI6IDI0NyB9LFxuICAgIHsgeDogMzM3LCB5OiAzMDYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM5OSwgeTogMzAyLCByOiA4LCBnOiAxMTAsIGI6IDI0NyB9LFxuICBdLFxuICB7IHg6IDMyNSwgeTogMzA0IH0sXG4gIHsgeDogMzI1LCB5OiAzMDQgfVxuKTtcblxuY29uc3QgbGVhZ3VlUmV3YXJkQWNoaWV2ZW1lbnRHcmFkZSA9IG5ldyBQYWdlKFxuICAnbGVhZ3VlUmV3YXJkQWNoaWV2ZW1lbnRHcmFkZScsXG4gIFtcbiAgICAvLyB0aXRsZSBiZyAmIHhcbiAgICB7IHg6IDIwLCB5OiAzNCwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogMjAsIHk6IDYzLCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG4gICAgeyB4OiA2MDAsIHk6IDM2LCByOiAyMTIsIGc6IDIwOSwgYjogMjEyIH0sXG4gICAgeyB4OiA2MTEsIHk6IDU2LCByOiAyMjIsIGc6IDIxOCwgYjogMjIyIH0sXG4gICAgeyB4OiA0NDIsIHk6IDY3LCByOiAyMjIsIGc6IDIxOSwgYjogMjIyIH0sXG5cbiAgICAvLyBwcm9ncmVzcyBiYXIgYmdcbiAgICB7IHg6IDE2LCB5OiA3OSwgcjogMCwgZzogNDksIGI6IDkwIH0sXG4gICAgeyB4OiAxOCwgeTogMTkzLCByOiAwLCBnOiA0OSwgYjogOTAgfSxcbiAgICB7IHg6IDYxNiwgeTogMTk5LCByOiAxNiwgZzogNjUsIGI6IDExNSB9LFxuXG4gICAgLy8gYmcgaW4gYm90dG9tXG4gICAgeyB4OiA2MTMsIHk6IDMyNiwgcjogNDEsIGc6IDQ1LCBiOiA0OSB9LFxuICBdLFxuICB7IHg6IDYwMCwgeTogNDUgfSxcbiAgeyB4OiA2MDAsIHk6IDQ1IH1cbik7XG4vLyByXG5cbmNvbnN0IHBpdGNoZXJPZlRoZU1vbnRoID0gbmV3IFBhZ2UoXG4gICdwaXRjaGVyT2ZUaGVNb250aCcsXG4gIFtcbiAgICB7IHg6IDI3LCB5OiAzOCwgcjogMjIyLCBnOiAyMTksIGI6IDIyMiB9LFxuICAgIHsgeDogNjAyLCB5OiA0NiwgcjogMTAwLCBnOiAxMDIsIGI6IDEwMCB9LFxuICAgIHsgeDogNTM1LCB5OiAzMDksIHI6IDEyOCwgZzogMTgyLCBiOiAyNTIgfSxcbiAgICB7IHg6IDYwNSwgeTogMzE2LCByOiA4LCBnOiA5NywgYjogMjQ3IH0sXG4gICAgeyB4OiAzOTEsIHk6IDMwOSwgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICBdLFxuICB7IHg6IDU0NSwgeTogMzEwIH0sXG4gIHsgeDogNTQ1LCB5OiAzMTAgfVxuKTtcblxuLy8gbGlrZSBtdnAsIGJ1dCBubyBuZWVkIHRvIGRvIGFueXRoaW5nXG5jb25zdCBtdnBEaXNwbGF5MSA9IG5ldyBQYWdlKFxuICAnbXZwRGlzcGxheTEnLFxuICBbXG4gICAgLy8gYmdcbiAgICB7IHg6IDU0MSwgeTogMjQsIHI6IDIsIGc6IDg5LCBiOiAxNjQgfSxcbiAgICB7IHg6IDYxMCwgeTogMjIsIHI6IDgsIGc6IDg5LCBiOiAxNjQgfSxcbiAgICB7IHg6IDQzLCB5OiAzMTEsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcbiAgICB7IHg6IDI2MiwgeTogMzMxLCByOiAxNiwgZzogMTYsIGI6IDggfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiA1NDQsIHk6IDMxOSwgcjogMCwgZzogMTE3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDU3MiwgeTogMzI2LCByOiAxMCwgZzogMTA5LCBiOiAyNDMgfSxcbiAgICB7IHg6IDU4MCwgeTogMzI0LCByOiAyNSwgZzogMTE5LCBiOiAyMzkgfSxcbiAgICB7IHg6IDYwMCwgeTogMzI5LCByOiA4LCBnOiAxMDUsIGI6IDI0NyB9LFxuXG4gICAgLy8gYmx1ZSBidG4gbGVmdCxcbiAgICB7IHg6IDE3MSwgeTogMjMsIHI6IDAsIGc6IDExNywgYjogMjQ3IH0sXG4gICAgeyB4OiAxNzgsIHk6IDI5LCByOiAxNzIsIGc6IDE4MiwgYjogMjA1IH0sXG5cbiAgICAvLyBncmV5IGJ0biByaWdodFxuICAgIHsgeDogMzI5LCB5OiAyMywgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDMzOSwgeTogMzEsIHI6IDE2LCBnOiA0OSwgYjogOTAgfSxcbiAgXSxcbiAgeyB4OiA1NzEsIHk6IDMyMyB9LCAvLyBva1xuICB7IHg6IDU3MSwgeTogMzIzIH1cbik7XG5cbmNvbnN0IG12cERpc3BsYXkyID0gbmV3IFBhZ2UoXG4gICdtdnBEaXNwbGF5MicsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogNTQxLCB5OiAyNCwgcjogMiwgZzogODksIGI6IDE2NCB9LFxuICAgIHsgeDogNjEwLCB5OiAyMiwgcjogOCwgZzogODksIGI6IDE2NCB9LFxuICAgIHsgeDogNDMsIHk6IDMxMSwgcjogMTYsIGc6IDIwLCBiOiAxNiB9LFxuICAgIHsgeDogMjYyLCB5OiAzMzEsIHI6IDE2LCBnOiAxNiwgYjogOCB9LFxuXG4gICAgLy8gb2tcbiAgICB7IHg6IDU0NCwgeTogMzE5LCByOiAwLCBnOiAxMTcsIGI6IDI0NyB9LFxuICAgIHsgeDogNTcyLCB5OiAzMjYsIHI6IDEwLCBnOiAxMDksIGI6IDI0MyB9LFxuICAgIHsgeDogNTgwLCB5OiAzMjQsIHI6IDI1LCBnOiAxMTksIGI6IDIzOSB9LFxuICAgIHsgeDogNjAwLCB5OiAzMjksIHI6IDgsIGc6IDEwNSwgYjogMjQ3IH0sXG5cbiAgICAvLyBibHVlIGJ0biByaWdodFxuICAgIHsgeDogMzM4LCB5OiAxOCwgcjogMCwgZzogMTE3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDMzOCwgeTogMzMsIHI6IDc4LCBnOiA5NywgYjogMTQ0IH0sXG5cbiAgICAvLyBncmV5IGJ0biBsZWZ0LFxuICAgIHsgeDogMTc0LCB5OiAyMCwgcjogNDksIGc6IDg5LCBiOiAxMjMgfSxcbiAgICB7IHg6IDE4MiwgeTogMjksIHI6IDE2LCBnOiA1MywgYjogOTAgfSxcbiAgXSxcbiAgeyB4OiA1NzEsIHk6IDMyMyB9LCAvLyBva1xuICB7IHg6IDU3MSwgeTogMzIzIH1cbik7XG5cbmNvbnN0IG12cERpc3BsYXkgPSBuZXcgR3JvdXBQYWdlKCdtdnBEaXNwbGF5JywgW212cERpc3BsYXkxLCBtdnBEaXNwbGF5Ml0sIG12cERpc3BsYXkxLm5leHQpO1xuXG5jb25zdCBib251c0dyYW50ZWRCeVRlYW1SZWNvcmQgPSBuZXcgUGFnZShcbiAgJ2JvbnVzR3JhbnRlZEJ5VGVhbVJlY29yZCcsXG4gIFtcbiAgICAvLyB0YWJsZSBiZ1xuICAgIHsgeDogNDMsIHk6IDcyLCByOiA0OSwgZzogNjksIGI6IDEwNyB9LFxuICAgIHsgeDogMzAsIHk6IDI4OCwgcjogOCwgZzogMTIsIGI6IDE2IH0sXG4gICAgeyB4OiA1OTcsIHk6IDI4OSwgcjogOCwgZzogMTIsIGI6IDE2IH0sXG4gICAgeyB4OiA1OTMsIHk6IDczLCByOiA0OSwgZzogNjksIGI6IDEwNyB9LFxuXG4gICAgLy8gdGl0bGVcbiAgICB7IHg6IDE4MywgeTogNzMsIHI6IDQ5LCBnOiA2OSwgYjogMTA3IH0sXG4gICAgeyB4OiAyMTUsIHk6IDczLCByOiAxMzcsIGc6IDE0NiwgYjogMTY3IH0sXG4gICAgeyB4OiAyNjEsIHk6IDczLCByOiAxNjAsIGc6IDE2NSwgYjogMTg1IH0sXG4gICAgeyB4OiA0MTYsIHk6IDczLCByOiAxNDEsIGc6IDE0OSwgYjogMTY4IH0sXG4gICAgeyB4OiA0NjMsIHk6IDcwLCByOiA0OSwgZzogNjksIGI6IDEwNyB9LFxuXG4gICAgeyB4OiA1NDYsIHk6IDMyNCwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDU3MSwgeTogMzIwLCByOiA0NywgZzogMTMxLCBiOiAyMjcgfSxcbiAgICB7IHg6IDU5OCwgeTogMzI5LCByOiA4LCBnOiAxMDYsIGI6IDI0NyB9LFxuICBdLFxuICB7IHg6IDU3MCwgeTogMzIwIH0sIC8vIG9rXG4gIHsgeDogNTcwLCB5OiAzMjAgfVxuKTtcblxuY29uc3QgbXZwID0gbmV3IFBhZ2UoXG4gICdtdnAnLFxuICBbXG4gICAgeyB4OiAyNzMsIHk6IDIzLCByOiAwLCBnOiA4OSwgYjogMTY1IH0sXG4gICAgeyB4OiAyOTcsIHk6IDI1LCByOiA5MCwgZzogMTQ1LCBiOiAyMDAgfSxcbiAgICB7IHg6IDMyMCwgeTogMjUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMzMiwgeTogMjksIHI6IDEyNiwgZzogMTY5LCBiOiAyMDQgfSxcbiAgICB7IHg6IDM4MCwgeTogNTMsIHI6IDAsIGc6IDY1LCBiOiAxMjIgfSxcbiAgICB7IHg6IDQ5MywgeTogMzIyLCByOiAxNiwgZzogMjAsIGI6IDggfSxcbiAgICB7IHg6IDU2OCwgeTogMzIwLCByOiAzOCwgZzogMTIwLCBiOiAyMTggfSxcbiAgICB7IHg6IDYzNSwgeTogMzQxLCByOiA4LCBnOiAxNiwgYjogOCB9LFxuICAgIHsgeDogNjIwLCB5OiAxNjQsIHI6IDAsIGc6IDgsIGI6IDggfSxcbiAgICB7IHg6IDksIHk6IDE3NiwgcjogMTIsIGc6IDI0LCBiOiAyNCB9LFxuICBdLFxuICB7IHg6IDU2OCwgeTogMzIwIH0sXG4gIHsgeDogNTY4LCB5OiAzMjAgfVxuKTtcblxuY29uc3Qgc2VsZWN0UmV3YXJkUGxheWVyID0gbmV3IFBhZ2UoXG4gICdzZWxlY3RSZXdhcmRQbGF5ZXInLFxuICBbXG4gICAgLy8gYmdcbiAgICB7IHg6IDQsIHk6IDYsIHI6IDAsIGc6IDk3LCBiOiAxODkgfSxcbiAgICB7IHg6IDExLCB5OiAzNDYsIHI6IDE2LCBnOiAxNiwgYjogOCB9LFxuICAgIHsgeDogNywgeTogMzUwLCByOiAxNiwgZzogMjAsIGI6IDE2IH0sXG5cbiAgICAvLyBmb3JtIGJnIGluIGJvdHRvbVxuICAgIHsgeDogNjUsIHk6IDMwMSwgcjogNjYsIGc6IDc3LCBiOiA2NiB9LFxuICAgIHsgeDogNjUsIHk6IDMyNiwgcjogNDAsIGc6IDQ1LCBiOiAzMyB9LFxuICAgIHsgeDogMTc1LCB5OiAzMDMsIHI6IDY2LCBnOiA3NywgYjogNTggfSxcbiAgICB7IHg6IDE3NCwgeTogMzI4LCByOiA0MSwgZzogNDUsIGI6IDMzIH0sXG4gICAgeyB4OiAyNzUsIHk6IDMwNCwgcjogNjYsIGc6IDczLCBiOiA1OCB9LFxuICAgIHsgeDogMjc1LCB5OiAzMjQsIHI6IDQxLCBnOiA0OCwgYjogMzMgfSxcbiAgICB7IHg6IDM4NCwgeTogMzAxLCByOiA2NiwgZzogNzMsIGI6IDU4IH0sXG4gICAgeyB4OiAzODQsIHk6IDMyMSwgcjogNDEsIGc6IDQ1LCBiOiAzMyB9LFxuICBdLFxuICB7IHg6IDU2OCwgeTogMzIwIH0sXG4gIHsgeDogNTY4LCB5OiAzMjAgfVxuKTtcblxuY29uc3Qgc2VsZWN0U2Vhc29uTW9kZSA9IG5ldyBQYWdlKFxuICAnc2VsZWN0U2Vhc29uTW9kZScsXG4gIFtcbiAgICB7IHg6IDEwNCwgeTogMTYsIHI6IDAsIGc6IDkzLCBiOiAxNzMgfSxcbiAgICB7IHg6IDIzNSwgeTogMzcsIHI6IDE0MywgZzogMTgxLCBiOiAyMDcgfSxcbiAgICB7IHg6IDMwOSwgeTogMzYsIHI6IDE0NSwgZzogMTgyLCBiOiAyMDkgfSxcbiAgICB7IHg6IDMzNywgeTogMzgsIHI6IDEwMywgZzogMTQ5LCBiOiAxOTEgfSxcbiAgICB7IHg6IDM3NiwgeTogMzIsIHI6IDI0NSwgZzogMjQ3LCBiOiAyNTMgfSxcbiAgICB7IHg6IDQyMiwgeTogMzYsIHI6IDE0NSwgZzogMTc3LCBiOiAyMDkgfSxcbiAgICB7IHg6IDQwLCB5OiA3NSwgcjogMTgxLCBnOiAxODYsIGI6IDE4OSB9LFxuICAgIHsgeDogMzE0LCB5OiAxODMsIHI6IDMzLCBnOiAzNiwgYjogMzMgfSxcbiAgICB7IHg6IDM0MSwgeTogOTMsIHI6IDQxLCBnOiA0OCwgYjogNDkgfSxcbiAgICB7IHg6IDUzOSwgeTogMzIzLCByOiAwLCBnOiA2OSwgYjogMTQ5IH0sXG4gICAgeyB4OiA1NTMsIHk6IDMyOCwgcjogMCwgZzogNjUsIGI6IDE0OCB9LFxuICBdLFxuICB7IHg6IDE3OCwgeTogMTgzIH0sXG4gIHsgeDogMTc4LCB5OiAxODMgfVxuKTtcblxuY29uc3Qgc2VsZWN0TGVhZ3VlR2FtZUFtb3VudCA9IG5ldyBQYWdlKFxuICAnc2VsZWN0TGVhZ3VlR2FtZUFtb3VudCcsXG4gIFtcbiAgICAvLyB0aXRsZTogc2VsZWN0IHRoZSBsZWFndWUgeW91IHdvdWxkIGxpa2UgdG8gcGxheVxuICAgIHsgeDogMTg2LCB5OiA1MywgcjogMjI2LCBnOiAyMzMsIGI6IDI0MCB9LFxuICAgIHsgeDogMjc5LCB5OiA1NSwgcjogMjI0LCBnOiAyMzEsIGI6IDI0MCB9LFxuICAgIHsgeDogMzIwLCB5OiA1OSwgcjogNzgsIGc6IDEyMSwgYjogMTYwIH0sXG4gICAgeyB4OiAzNjIsIHk6IDU5LCByOiAxNDIsIGc6IDE2OCwgYjogMTkxIH0sXG4gICAgeyB4OiA0NDEsIHk6IDU3LCByOiAyMzIsIGc6IDIzNiwgYjogMjQ0IH0sXG5cbiAgICAvLyB0aXRsZSBiZ1xuICAgIHsgeDogMTQyLCB5OiA1NSwgcjogOCwgZzogNjgsIGI6IDEyMyB9LFxuICAgIHsgeDogNDczLCB5OiA2MCwgcjogMCwgZzogNjEsIGI6IDExNSB9LFxuXG4gICAgLy8gYW1vdW50IGJ0biB0aXRsZSAmIGJnXG4gICAgLy8gZnVsbCBsZWFndWVcbiAgICB7IHg6IDU0LCB5OiA5NCwgcjogMjMwLCBnOiAyMzEsIGI6IDIzMCB9LFxuICAgIHsgeDogMTAxLCB5OiA5NywgcjogMjA2LCBnOiAyMDcsIGI6IDIwNiB9LFxuICAgIHsgeDogMTM4LCB5OiAxMDEsIHI6IDIzMCwgZzogMjMxLCBiOiAyMzAgfSxcblxuICAgIC8vIDEgLzIgbGVhZ3VlXG4gICAgeyB4OiAxOTEsIHk6IDEwMiwgcjogMjMwLCBnOiAyMzEsIGI6IDIzMCB9LFxuICAgIHsgeDogMjM1LCB5OiAxMDAsIHI6IDEyNiwgZzogMTI4LCBiOiAxMzcgfSxcbiAgICB7IHg6IDIxOSwgeTogMTA0LCByOiAyMzAsIGc6IDIyNywgYjogMjMwIH0sXG5cbiAgICAvLyAxIC80IGxlYWd1ZVxuICAgIHsgeDogMzUwLCB5OiAxMDEsIHI6IDIzMCwgZzogMjMxLCBiOiAyMzAgfSxcbiAgICB7IHg6IDM3NiwgeTogMTAxLCByOiA4NCwgZzogODksIGI6IDk4IH0sXG4gICAgeyB4OiA0MDcsIHk6IDEwMCwgcjogMjIwLCBnOiAyMTksIGI6IDIyMSB9LFxuXG4gICAgLy8gcG9zdCBzZWFzb25cbiAgICB7IHg6IDQ5OCwgeTogOTksIHI6IDIzMCwgZzogMjMxLCBiOiAyMzAgfSxcbiAgICB7IHg6IDU0MSwgeTogOTksIHI6IDIwNiwgZzogMjA0LCBiOiAyMDYgfSxcbiAgICB7IHg6IDU2OSwgeTogMTA1LCByOiAxMzUsIGc6IDEzOSwgYjogMTQ4IH0sXG4gICAgeyB4OiA2MDEsIHk6IDk5LCByOiAyMzAsIGc6IDIzMSwgYjogMjMwIH0sXG4gIF0sXG4gIHsgeDogMzksIHk6IDMxNCB9LFxuICB7IHg6IDM5LCB5OiAzMTQgfVxuKTtcbmNvbnN0IHNlbGVjdExlYWd1ZUdhbWVBbW91bnRCdG5zID0ge1xuICBmdWxsOiB7IHg6IDI1LCB5OiAyODUgfSxcbiAgaGFsZjogeyB4OiAyNDUsIHk6IDI4NSB9LFxuICBxdWFydGVyOiB7IHg6IDQwMCwgeTogMTEyIH0sXG4gIHBvc3Q6IHsgeDogNjAwLCB5OiAxMTIgfSxcbn07XG5cbi8vIEJBQ0tMT0c6IHRoZSBwYWdlIGhhcyBzbGlnaHRseSBkaWZmZXJlbnQgbGF5b3V0IHdoZW4gc2Vhc29uIGVuZHMgbmF0dXJhbGx5IG9yIG9wZW4gcmVzZXQgbGVhZ3VlXG5jb25zdCBzZWxlY3RZZWFyID0gbmV3IFBhZ2UoXG4gICdzZWxlY3RZZWFyJyxcbiAgW1xuICAgIC8vIGJnXG4gICAgeyB4OiAxNiwgeTogMTgsIHI6IDAsIGc6IDkzLCBiOiAxNzMgfSxcbiAgICB7IHg6IDEyLCB5OiAzNDEsIHI6IDE2LCBnOiAxNiwgYjogOCB9LFxuICAgIHsgeDogNjI1LCB5OiAyMiwgcjogMCwgZzogODksIGI6IDE2NCB9LFxuICAgIHsgeDogNjA2LCB5OiAzMTcsIHI6IDAsIGc6IDExNywgYjogMjQ3IH0sXG5cbiAgICAvLyBlbmFibGVkIG9rIGJ0blxuICAgIHsgeDogNTE1LCB5OiAzMjQsIHI6IDgsIGc6IDExMCwgYjogMjQ3IH0sXG4gICAgeyB4OiA1NDYsIHk6IDMyNCwgcjogOCwgZzogMTEwLCBiOiAyNDcgfSxcblxuICAgIC8vIHJpZ2h0IHNpZGUgZW1wdHkgdGl0bGUgYmdcbiAgICB7IHg6IDI5OCwgeTogNTQsIHI6IDE2LCBnOiA0NSwgYjogODIgfSxcbiAgICB7IHg6IDYwMSwgeTogNjUsIHI6IDE2LCBnOiA0NSwgYjogODIgfSxcbiAgICB7IHg6IDI5OSwgeTogMjEwLCByOiAxNiwgZzogNDUsIGI6IDgyIH0sXG4gICAgeyB4OiA2MjAsIHk6IDIyMywgcjogMTcsIGc6IDQ0LCBiOiA4MiB9LFxuXG4gICAgLy8gcmlnaHQgc2lkZSB0aXRsZSBzZWFzb24gbWFpbiByZXdhcmRzXG4gICAgeyB4OiAzMDIsIHk6IDIyMCwgcjogMTYsIGc6IDQ1LCBiOiA4MiB9LFxuICAgIHsgeDogMzE3LCB5OiAyMTUsIHI6IDE1NCwgZzogMTY3LCBiOiAxODIgfSxcbiAgICB7IHg6IDM0MSwgeTogMjE2LCByOiAyMTksIGc6IDIyNCwgYjogMjMwIH0sXG4gICAgeyB4OiAzNzUsIHk6IDIxOCwgcjogMTI3LCBnOiAxNDAsIGI6IDE2MiB9LFxuICAgIHsgeDogMzkzLCB5OiAyMTcsIHI6IDE1OSwgZzogMTcxLCBiOiAxODYgfSxcbiAgXSxcbiAgeyB4OiA0OTYsIHk6IDMyMyB9LCAvL29rXG4gIHsgeDogNDk2LCB5OiAzMjMgfVxuKTtcblxuY29uc3Qgc2VsZWN0WWVhckJ0bnMgPSB7XG4gIGdvRG93blN0YXJ0OiB7IHg6IDUwLCB5OiAxMzggfSxcbiAgZ29Eb3duRW5kOiB7IHg6IDUwLCB5OiA4NSB9LFxuICBnb1VwU3RhcnQ6IHsgeDogNTAsIHk6IDc1IH0sXG4gIGdvVXBFbmQ6IHsgeDogNTAsIHk6IDI3NSB9LFxuICBlbmFibGVkU3VibWl0OiB7IHg6IDUwOSwgeTogMzE2LCByOiAwLCBnOiAxMTcsIGI6IDI0NyB9LFxufTtcblxuY29uc3Qgc2VsZWN0WWVhck9wdGlvbnM6IFJlY29yZDxudW1iZXIsIFhZUkdCPiA9IHtcbiAgMTogeyB4OiAyMywgeTogNzUsIHI6IDIzMCwgZzogMjM1LCBiOiAyMzggfSxcbiAgMjogeyB4OiAyMywgeTogMTI1LCByOiAyMzAsIGc6IDIzNSwgYjogMjM4IH0sXG4gIDM6IHsgeDogMjMsIHk6IDE3NSwgcjogMjMwLCBnOiAyMzUsIGI6IDIzOCB9LFxuICA0OiB7IHg6IDIzLCB5OiAyMjUsIHI6IDIzMCwgZzogMjM1LCBiOiAyMzggfSxcbiAgNTogeyB4OiAyMywgeTogMjc1LCByOiAyMzAsIGc6IDIzNSwgYjogMjM4IH0sXG59O1xuXG5jb25zdCBzZWxlY3RZZWFyVGFyZ2V0VG9Nb3ZlU3RlcE1hcCA9IFsuLi5uZXcgQXJyYXkoQ09OU1RBTlRTLmxlYWd1ZVllYXJNYXggLSBDT05TVEFOVFMubGVhZ3VlWWVhck1pbiArIDEpXVxuICAubWFwKChfLCBpKSA9PiBpKVxuICAucmVkdWNlKFxuICAgIChhY2MsIGkpID0+IHtcbiAgICAgIGNvbnN0IHllYXIgPSBpICsgQ09OU1RBTlRTLmxlYWd1ZVllYXJNaW47XG4gICAgICBhY2NbJ25vcm1hbCddW3llYXJdID0gaTtcbiAgICAgIGFjY1snbWFzdGVyJ11beWVhcl0gPSBpICsgQ09OU1RBTlRTLmxlYWd1ZVllYXJNYXggLSBDT05TVEFOVFMubGVhZ3VlWWVhck1pbiArIDE7XG4gICAgICByZXR1cm4gYWNjO1xuICAgIH0sXG4gICAgeyBub3JtYWw6IDxSZWNvcmQ8bnVtYmVyLCBudW1iZXI+Pnt9LCBtYXN0ZXI6IDxSZWNvcmQ8bnVtYmVyLCBudW1iZXI+Pnt9IH1cbiAgKTtcblxuY29uc3Qgc2VsZWN0WWVhck1vdmVTdGVwTWFwVG9UYXJnZXQgPSBbLi4ubmV3IEFycmF5KENPTlNUQU5UUy5sZWFndWVZZWFyTWF4IC0gQ09OU1RBTlRTLmxlYWd1ZVllYXJNaW4gKyAxKV1cbiAgLm1hcCgoXywgaSkgPT4gaSlcbiAgLnJlZHVjZSgoYWNjLCBpKSA9PiB7XG4gICAgY29uc3QgeWVhciA9IGkgKyBDT05TVEFOVFMubGVhZ3VlWWVhck1pbjtcbiAgICBhY2NbaV0gPSB7XG4gICAgICBtb2RlOiAnbm9ybWFsJyxcbiAgICAgIHllYXIsXG4gICAgfTtcbiAgICBhY2NbaSArIENPTlNUQU5UUy5sZWFndWVZZWFyTWF4IC0gQ09OU1RBTlRTLmxlYWd1ZVllYXJNaW4gKyAxXSA9IHtcbiAgICAgIG1vZGU6ICdtYXN0ZXInLFxuICAgICAgeWVhcixcbiAgICB9O1xuICAgIHJldHVybiBhY2M7XG4gIH0sIDxSZWNvcmQ8bnVtYmVyLCB7IG1vZGU6ICdtYXN0ZXInIHwgJ25vcm1hbCc7IHllYXI6IG51bWJlciB9Pj57fSk7XG5cbi8vIHRlbGwgdXNlciB0aGUgc2Vhc29uIHN0YXJ0XG5jb25zdCBuZXdTZWFzb24gPSBuZXcgUGFnZShcbiAgJ25ld1NlYXNvbicsXG4gIFtcbiAgICAvLyBiZyBib3R0b21cbiAgICB7IHg6IDUzLCB5OiAzMzQsIHI6IDE2LCBnOiAxNiwgYjogOCB9LFxuICAgIHsgeDogNjEzLCB5OiAzMzQsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcblxuICAgIC8vIG5leHQgb3Igb2sgYnRuIGJnXG4gICAgeyB4OiAyNTQsIHk6IDI5MiwgcjogMCwgZzogMTE3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDI1NSwgeTogMzExLCByOiA4LCBnOiAxMDIsIGI6IDI0NyB9LFxuICAgIHsgeDogMzc2LCB5OiAyOTIsIHI6IDAsIGc6IDExNywgYjogMjQ3IH0sXG4gICAgeyB4OiAzNzYsIHk6IDMxMywgcjogMTYsIGc6IDEwMSwgYjogMjU0IH0sXG5cbiAgICAvLyBsb2dvIGluIGNlbnRlciByaWdodFxuICAgIHsgeDogMzU0LCB5OiAxNDcsIHI6IDAsIGc6IDI4LCBiOiA2NiB9LFxuICAgIHsgeDogMzc0LCB5OiAxNTgsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDM4NiwgeTogMTQ5LCByOiAxOTIsIGc6IDIwLCBiOiA2NSB9LFxuICBdLFxuICB7IHg6IDMyNCwgeTogMzA1IH0sXG4gIHsgeDogMzI0LCB5OiAzMDUgfVxuKTtcblxuLy8gYWZ0ZXIgZW5kU2Vhc29uLCB4eCBzZWFzb24gaXMgb3ZlclxuLy8gZW5kU2Vhc29uIGlzIGluIG5leHRzLnRzXG5jb25zdCBlbmRTZWFzb25Qcm9jZWVkID0gbmV3IFBhZ2UoXG4gICdlbmRTZWFzb25Qcm9jZWVkJyxcbiAgW1xuICAgIC8vIGhvdyB3b3VsZCB5b3UgbGlrZSB0byBwcm9jZWVkIHdpdGggbmV4dCBzZWFzb24gP1xuICAgIHsgeDogNDUyLCB5OiAzOCwgcjogMTk1LCBnOiAyMTMsIGI6IDIyOSB9LFxuICAgIHsgeDogNTA4LCB5OiAzNiwgcjogOCwgZzogODUsIGI6IDE0OCB9LFxuICAgIHsgeDogNTQ1LCB5OiAzNCwgcjogMjUzLCBnOiAyNTMsIGI6IDI1NCB9LFxuICAgIHsgeDogNTY2LCB5OiAzNCwgcjogNDMsIGc6IDEwNywgYjogMTY3IH0sXG4gICAgeyB4OiAyNzcsIHk6IDM0LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NjgsIHk6IDMxLCByOiAyMTksIGc6IDIzMiwgYjogMjM3IH0sXG4gICAgeyB4OiA1NjgsIHk6IDM4LCByOiA0NSwgZzogMTA3LCBiOiAxNjUgfSxcbiAgICB7IHg6IDU1MywgeTogMzgsIHI6IDMwLCBnOiA5OCwgYjogMTYwIH0sXG5cbiAgICAvLyBiZyBjb3JuZXJcbiAgICB7IHg6IDgsIHk6IDEzLCByOiAwLCBnOiA5NywgYjogMTgxIH0sXG4gICAgeyB4OiA4LCB5OiAzNDMsIHI6IDE2LCBnOiAxNiwgYjogOCB9LFxuICAgIHsgeDogNjI1LCB5OiAyMiwgcjogMCwgZzogODksIGI6IDE2NCB9LFxuICAgIHsgeDogNjI4LCB5OiAzNTAsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiA1MzksIHk6IDMyNSwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDU1OCwgeTogMzI1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NzEsIHk6IDMyNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNjA2LCB5OiAzMjUsIHI6IDgsIGc6IDExMywgYjogMjQ3IH0sXG4gIF0sXG4gIHsgeDogNTcwLCB5OiAzMjUgfSxcbiAgeyB4OiA1NzAsIHk6IDMyNSB9XG4pO1xuXG5jb25zdCBlbmRTZWFzb25Qcm9jZWVkU2VsZWN0ZWQgPSBuZXcgUGFnZShcbiAgJ2VuZFNlYXNvblByb2NlZWRTZWxlY3RlZCcsXG4gIFtcbiAgICAvLyBiZyBjb3JuZXJcbiAgICB7IHg6IDgsIHk6IDEzLCByOiAwLCBnOiA5NywgYjogMTgxIH0sXG4gICAgeyB4OiA4LCB5OiAzNDMsIHI6IDE2LCBnOiAxNiwgYjogOCB9LFxuICAgIHsgeDogNjI1LCB5OiAyMiwgcjogMCwgZzogODksIGI6IDE2NCB9LFxuICAgIHsgeDogNjI4LCB5OiAzNTAsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiA1MzksIHk6IDMyNSwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDU1OCwgeTogMzI1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA1NzEsIHk6IDMyNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogNjA2LCB5OiAzMjUsIHI6IDgsIGc6IDExMywgYjogMjQ3IH0sXG4gIF0sXG4gIHsgeDogNTcwLCB5OiAzMjUgfSxcbiAgeyB4OiA1NzAsIHk6IDMyNSB9XG4pO1xuXG4vKiogQGRlcHJlY2F0ZWQgYnkgVjIgKi9cbmNvbnN0IHNlbGVjdE5vcm1hbE1hc3RlckxlYWd1ZU1vZGUgPSBuZXcgUGFnZShcbiAgJ3NlbGVjdE5vcm1hbE1hc3RlckxlYWd1ZU1vZGUnLFxuICBbXG4gICAgLy8gYmdcbiAgICB7IHg6IDE0LCB5OiAyMCwgcjogOCwgZzogOTMsIGI6IDE3MyB9LFxuICAgIHsgeDogMTcsIHk6IDMyOCwgcjogMTYsIGc6IDIwLCBiOiAxNiB9LFxuICAgIHsgeDogNjIyLCB5OiAyMCwgcjogOCwgZzogOTMsIGI6IDE3MiB9LFxuICAgIHsgeDogNjI1LCB5OiAyNzIsIHI6IDE2LCBnOiAyMCwgYjogMTYgfSxcblxuICAgIC8vIE5PUk1BTCBMRUFHVUUgaW4gbWlkZGxlXG4gICAgeyB4OiAxMjUsIHk6IDE2OCwgcjogMTU4LCBnOiAxODMsIGI6IDE1OSB9LFxuICAgIHsgeDogMjQ4LCB5OiAxNjYsIHI6IDQxLCBnOiAxMDUsIGI6IDI1IH0sXG5cbiAgICAvLyBsZWZ0IGJnXG4gICAgeyB4OiA1NywgeTogOTAsIHI6IDIzMCwgZzogMjMxLCBiOiAyMzggfSxcbiAgICB7IHg6IDU1LCB5OiAyODMsIHI6IDIzMCwgZzogMjMxLCBiOiAyMzAgfSxcbiAgICB7IHg6IDI5OCwgeTogMjgzLCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG4gICAgeyB4OiAyOTQsIHk6IDgxLCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG5cbiAgICAvLyBsZWZ0IHJld2FyZCBpbmZvIGJnXG4gICAgeyB4OiAxMjgsIHk6IDI2NSwgcjogOCwgZzogMTI1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDIyNywgeTogMjgxLCByOiAwLCBnOiA4OSwgYjogMjQ3IH0sXG4gIF0sXG4gIHsgeDogNTY1LCB5OiAzMjggfSxcbiAgeyB4OiA1NjUsIHk6IDMyOCB9XG4pO1xuXG4vKiogQGRlcHJlY2F0ZWQgYnkgVjIgKi9cbmNvbnN0IHNlbGVjdE5vcm1hbE1hc3RlckxlYWd1ZU1vZGVCdG5zID0ge1xuICBub3JtYWw6IHtcbiAgICB4OiAxNzAsXG4gICAgeTogMTYwLFxuICB9LFxuICBtYXN0ZXI6IHtcbiAgICB4OiA0NzAsXG4gICAgeTogMTYwLFxuICB9LFxufTtcblxuLyoqIEBkZXByZWNhdGVkIGJ5IFYyICovXG5jb25zdCBzZWxlY3ROb3JtYWxNYXN0ZXJMZWFndWVNb2RlUHJvY2VlZCA9IG5ldyBQYWdlKFxuICAnc2VsZWN0Tm9ybWFsTWFzdGVyTGVhZ3VlTW9kZVByb2NlZWQnLFxuICBbXG4gICAgLy8gYmdcbiAgICB7IHg6IDE2LCB5OiAxOSwgcjogMCwgZzogOTMsIGI6IDE3MyB9LFxuICAgIHsgeDogMTksIHk6IDMzNywgcjogMTYsIGc6IDIwLCBiOiAxNiB9LFxuICAgIHsgeDogNjIzLCB5OiAyMiwgcjogMCwgZzogODksIGI6IDE2NCB9LFxuICAgIHsgeDogNjE5LCB5OiAyMzIsIHI6IDE2LCBnOiAyNCwgYjogMTYgfSxcblxuICAgIC8vIG9rXG4gICAgeyB4OiA1MzUsIHk6IDMyNiwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgICB7IHg6IDU3MCwgeTogMzMwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2MDUsIHk6IDMyOCwgcjogOCwgZzogMTEzLCBiOiAyNDcgfSxcbiAgXSxcbiAgeyB4OiA1NjUsIHk6IDMyOCB9LFxuICB7IHg6IDU2NSwgeTogMzI4IH1cbik7XG5cbi8vIGEgZGlhbG9nIHRvIGNvbmZpcm0gbGVhZ3VlIHJlc2V0XG5jb25zdCBsZWFndWVSZXNldENvbmZpcm0gPSBuZXcgUGFnZShcbiAgJ2xlYWd1ZVJlc2V0Q29uZmlybScsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMTA2LCB5OiA0MywgcjogMTk3LCBnOiAxOTgsIGI6IDIwNiB9LFxuICAgIHsgeDogMTA1LCB5OiAyNjgsIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDUyOSwgeTogMjY0LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAxMjIsIHk6IDMwNywgcjogMjM4LCBnOiAyNDMsIGI6IDIzOCB9LFxuICAgIHsgeDogNTE4LCB5OiAzMDcsIHI6IDIzOCwgZzogMjQzLCBiOiAyMzggfSxcbiAgICB7IHg6IDMxNiwgeTogMzA0LCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG5cbiAgICAvLyB0aXRsZSBMRUFHVUUgUkVTRVRcbiAgICB7IHg6IDI1MSwgeTogNTksIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDI3OSwgeTogNTgsIHI6IDY3LCBnOiA3MiwgYjogODAgfSxcbiAgICB7IHg6IDI5MCwgeTogNTgsIHI6IDY3LCBnOiA3MywgYjogODAgfSxcbiAgICB7IHg6IDMwNSwgeTogNTgsIHI6IDE2LCBnOiAyNCwgYjogMzMgfSxcbiAgICB7IHg6IDMxNCwgeTogNTgsIHI6IDE1NywgZzogMTU4LCBiOiAxNjUgfSxcbiAgICB7IHg6IDMzMSwgeTogNTgsIHI6IDEyOSwgZzogMTMyLCBiOiAxMzkgfSxcbiAgICB7IHg6IDM0NiwgeTogNTksIHI6IDE5MCwgZzogMTg5LCBiOiAxOTggfSxcbiAgICB7IHg6IDM1NCwgeTogNTksIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcbiAgICB7IHg6IDM2NSwgeTogNTksIHI6IDEwMSwgZzogMTA2LCBiOiAxMTQgfSxcbiAgICB7IHg6IDM5NiwgeTogNTksIHI6IDE5NywgZzogMTk4LCBiOiAyMDYgfSxcblxuICAgIC8vIHllcyBhbmQgbm8gYnV0dG9uXG4gICAgeyB4OiAzNTUsIHk6IDMwOCwgcjogOCwgZzogOTgsIGI6IDI0NyB9LFxuICAgIHsgeDogMzk2LCB5OiAyOTYsIHI6IDEwMywgZzogMTc1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ0NSwgeTogMzA2LCByOiA4LCBnOiAxMDEsIGI6IDI0NyB9LFxuXG4gICAgeyB4OiAyMDYsIHk6IDI5OSwgcjogNDEsIGc6IDc3LCBiOiAxMjMgfSxcbiAgICB7IHg6IDI0NCwgeTogMjk1LCByOiA0MSwgZzogNzcsIGI6IDEyMyB9LFxuICAgIHsgeDogMjc0LCB5OiAzMDksIHI6IDM0LCBnOiA2OSwgYjogMTE1IH0sXG4gIF0sXG4gIHsgeDogMzk1LCB5OiAzMDAgfSwgLy8geWVzLCByZXNldFxuICB7IHg6IDIzNSwgeTogMzAwIH0gLy8gbm8sIG5vIHJlc2V0XG4pO1xuXG4vLyBUT0RPOiBjaGVjayB0aGUgcG9zaXRpb24sIG11c3QgYmUgYmcgb2YgJ2RpYW1vbmQnLCAnb2xkJyAuLi5cbi8vIGJnIG9mIHRoZSB3b3JkXG4vLyByZWY6IGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9tbGI5aW5uaW5ncy9waG90b3MvMTM2NjU5NjEwMzc0ODU3MFxuLy8gbGVmdCwgbWlkIGFuZCByaWdodCByZXNwZWN0aXZlbHlcbmNvbnN0IHNlbGVjdFJld2FyZFBsYXllckJ0bnMgPSBbXG4gIHsgeDogNjYsIHk6IDIxNyB9LFxuICB7IHg6IDIyMSwgeTogMjE3IH0sXG4gIHsgeDogMzc2LCB5OiAyMTcgfSxcbl07XG4vLyBvbmx5IGluY2x1ZGUgYmFzaWMgdHlwZXNcbi8vIHtyfS17Z30te2J9OiBwcmlvcml0eVxuLy8gdHJ5IHggMjMsIHkgMjYwIGluIHBsYXllciBpbmZvXG5jb25zdCBwbGF5ZXJDYXJkQ29sb3JUb1Jhbms6IHsgW2s6IHN0cmluZ106IG51bWJlciB9ID0ge1xuICAnNjYtNzQtNzQnOiAxLCAvLyBub3JtYWwgVE9ETzogdW5rbm93biBjb2xvclxuICAnOTktNjUtNDEnOiAyLCAvLyBicm93blxuICAnOTktNjUtNDknOiAyLCAvLyBicm93blxuICAnMTMyLTEyOS0xNDgnOiAzLCAvLyBzaWx2ZXJcbiAgJzEyMy0xMjktMTQwJzogMywgLy8gc2lsdmVyXG4gICcxODktMTY2LTQ5JzogNCwgLy8gZ29sZFxuICAnMTg5LTE2Ni01OCc6IDQsIC8vIGdvbGRcbiAgJzE5OC0xNzAtNTcnOiA0LCAvLyBnb2xkXG4gICcxNDgtMTAxLTI1JzogNCwgLy8gZ29sZFxuICAnMTY1LTE2Ni05MCc6IDQsIC8vIGdvbGRcbiAgJzQxLTY5LTEwNyc6IDUsIC8vIGRpYW1vbmQgVE9ETzogdW5rbm93biBjb2xvclxufTtcblxuY29uc3QgcGxheWVyQ2FyZENvbG9yVG9SYW5rVjI6IHsgW3Jhbms6IG51bWJlcl06IHsgcjogbnVtYmVyOyBnOiBudW1iZXI7IGI6IG51bWJlciB9W10gfSA9IHtcbiAgMTogW1xuICAgIC8vIG5vcm1hbCBUT0RPOiB1bmtub3duIGNvbG9yXG4gICAgeyByOiA2NiwgZzogNzQsIGI6IDc0IH0sXG4gIF0sXG4gIDI6IFtcbiAgICAvLyBicm93blxuICAgIHsgcjogOTksIGc6IDY1LCBiOiA0MSB9LFxuICAgIHsgcjogOTksIGc6IDY1LCBiOiA0OSB9LFxuICAgIHsgcjogNzUsIGc6IDUxLCBiOiAzNCB9LFxuICBdLFxuICAzOiBbXG4gICAgLy8gc2lsdmVyXG4gICAgeyByOiAxMzIsIGc6IDEyOSwgYjogMTQ4IH0sXG4gICAgeyByOiAxMjMsIGc6IDEyOSwgYjogMTQwIH0sXG4gICAgeyByOiAxMjcsIGc6IDEzMSwgYjogMTQwIH0sXG4gIF0sXG4gIDQ6IFtcbiAgICAvLyBnb2xkXG4gICAgeyByOiAxODksIGc6IDE2NiwgYjogNDkgfSxcbiAgICB7IHI6IDE4OSwgZzogMTY2LCBiOiA1OCB9LFxuICAgIHsgcjogMTk4LCBnOiAxNzAsIGI6IDU3IH0sXG4gICAgeyByOiAxNDgsIGc6IDEwMSwgYjogMjUgfSxcbiAgICB7IHI6IDE2NSwgZzogMTY2LCBiOiA5MCB9LFxuICBdLFxuICA1OiBbXG4gICAgLy8gZGlhbW9uZCBUT0RPOiB1bmtub3duIGNvbG9yXG4gICAgeyByOiA0MSwgZzogNjksIGI6IDEwNyB9LFxuICBdLFxufTtcblxuY29uc3QgbGVhZ3VlT25QbGF5QXV0b09mZiA9IG5ldyBDdXN0b21QYWdlKFxuICAnbGVhZ3VlT25QbGF5QXV0b09mZicsXG4gICh0YXNrTmFtZTogc3RyaW5nLCBpbWFnZTogSW1hZ2UpOiBib29sZWFuID0+IHtcbiAgICAvLyBtYXRjaCBzY29yZVBhbmVsQmcgJiYgKGFueSBhcnJvdykgJiYgKGF1dG9DYW1lcmFQYXVzZSBvciBzd2luZ0J0bilcbiAgICBjb25zdCBpc01hdGNoU2NvcmVQYW5lbEJnID0gcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShzY29yZVBhbmVsQmcsIGltYWdlKTtcbiAgICBpZiAoIWlzTWF0Y2hTY29yZVBhbmVsQmcpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBpc01hdGNoU2NvcmVBcnJvdyA9IHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2Uoc2NvcmVBcnJvd0dyb3VwLCBpbWFnZSk7XG4gICAgaWYgKCFpc01hdGNoU2NvcmVBcnJvdykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGlzTWF0Y2hBdXRvQ2FtZXJhUGF1c2UgPSByZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKGF1dG9DYW1lcmFQYXVzZSwgaW1hZ2UpO1xuICAgIGlmIChpc01hdGNoQXV0b0NhbWVyYVBhdXNlKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBpc01hdGNoUGl0Y2hlckJ0biA9IHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UocGl0Y2hlckJ0biwgaW1hZ2UpO1xuICAgIGlmIChpc01hdGNoUGl0Y2hlckJ0bikge1xuICAgICAgY29uc29sZS5sb2coJ2VlZScpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgY29uc3QgaXNNYXRjaFN3aW5nQnRuID0gcmVyb3V0ZXIuaXNQYWdlTWF0Y2hJbWFnZShzd2luZ0J0biwgaW1hZ2UpO1xuICAgIHJldHVybiBpc01hdGNoU3dpbmdCdG47XG4gIH0sXG4gIHsgeDogNTExLCB5OiAyMCB9LCAvLyBzd2l0Y2ggdG8gYXV0byBtb2RlXG4gIHsgeDogNjExLCB5OiAyMCB9IC8vIHBhdXNlIGJ1dHRvblxuKTtcblxuY29uc3QgbGVhZ3VlT25QbGF5QXV0b09uID0gbmV3IEN1c3RvbVBhZ2UoXG4gICdsZWFndWVPblBsYXlBdXRvT24nLFxuICAodGFza05hbWU6IHN0cmluZywgaW1hZ2U6IEltYWdlKTogYm9vbGVhbiA9PiB7XG4gICAgLy8gbWF0Y2ggKGFueSBhcnJvdykgJiYgYmF0dGVyeSAmIHNjcm9lUGFuZWxCZ1xuICAgIGNvbnN0IGlzTWF0Y2hTY29yZVBhbmVsQmcgPSByZXJvdXRlci5pc1BhZ2VNYXRjaEltYWdlKHNjb3JlUGFuZWxCZywgaW1hZ2UpO1xuICAgIGlmICghaXNNYXRjaFNjb3JlUGFuZWxCZykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBpc01hdGNoQmF0dGVyeSA9IHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2UoYmF0dGVyeSwgaW1hZ2UpO1xuICAgIGlmICghaXNNYXRjaEJhdHRlcnkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBpc01hdGNoU2NvcmVBcnJvdyA9IHJlcm91dGVyLmlzUGFnZU1hdGNoSW1hZ2Uoc2NvcmVBcnJvd0dyb3VwLCBpbWFnZSk7XG4gICAgcmV0dXJuIGlzTWF0Y2hTY29yZUFycm93O1xuICB9LFxuICB7IHg6IDQ4NSwgeTogMjEgfSwgLy8gdHVybiBvbiBwb3dlciBzYXZlXG4gIHsgeDogNTUyLCB5OiAyMSB9IC8vIHR1cm4gb2ZmIGF1dG8gcGxheVxuKTtcblxuY29uc3Qgc2NvcmVQYW5lbEJnID0gbmV3IFBhZ2UoJ3Njb3JlUGFuZWxCZycsIFtcbiAgeyB4OiAyNjEsIHk6IDMzOCwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICB7IHg6IDI1OSwgeTogMzQ5LCByOiAyNDcsIGc6IDI0NywgYjogMjQ3IH0sXG4gIHsgeDogMzczLCB5OiAzMzgsIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcbiAgeyB4OiAzNzMsIHk6IDM0OCwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuXSk7XG5cbi8vIHJlZCBhcnJvdyBvbiB0b3BcbmNvbnN0IHJlZEFuZEdyZXlBcnJvdzEgPSBuZXcgUGFnZSgncmVkQW5kR3JleUFycm93MScsIFtcbiAgeyB4OiAzMjksIHk6IDM0MiwgcjogMjM4LCBnOiAyMSwgYjogMTkgfSxcbiAgeyB4OiAzMjksIHk6IDM0MCwgcjogMjM5LCBnOiAyMjYsIGI6IDIyMyB9LFxuICB7IHg6IDMyOSwgeTogMzQ5LCByOiAxODEsIGc6IDE4NiwgYjogMTgxIH0sXG4gIHsgeDogMzI5LCB5OiAzNTcsIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcbl0pO1xuXG4vLyBncmV5IGFycm93IG9uIHRvcFxuY29uc3QgcmVkQW5kR3JleUFycm93MiA9IG5ldyBQYWdlKCdyZWRBbmRHcmV5QXJyb3cyJywgW1xuICB7IHg6IDMyOSwgeTogMzQyLCByOiAxODYsIGc6IDE4NywgYjogMTg2IH0sXG4gIHsgeDogMzI4LCB5OiAzMzksIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcbiAgeyB4OiAzMjcsIHk6IDM0MSwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICB7IHg6IDMyOSwgeTogMzQ5LCByOiAyMzgsIGc6IDE2LCBiOiAxNiB9LFxuXSk7XG5cbi8vIEZJWE1FOiBub3QgZmluZCB0aGlzIG5vd1xuLy8gdG9wIGFuZCBib3R0b20gYXJlIGFsbCByZWQgYXJyb3dzXG5jb25zdCByZWRBcnJvd3MgPSBuZXcgUGFnZSgncmVkQXJyb3cnLCBbXG4gIHsgeDogMzMwLCB5OiAzNDMsIHI6IDIzOCwgZzogMTYsIGI6IDE3IH0sXG4gIHsgeDogMzI2LCB5OiAzNDgsIHI6IDI0NywgZzogMjQ3LCBiOiAyNDcgfSxcbiAgeyB4OiAzMjUsIHk6IDM0NiwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICB7IHg6IDMyOSwgeTogMzQ5LCByOiAyMzgsIGc6IDE2LCBiOiAxNiB9LFxuXSk7XG5cbmNvbnN0IHNjb3JlQXJyb3dHcm91cCA9IG5ldyBHcm91cFBhZ2UoJ3Njb3JlQXJyb3dHcm91cCcsIFtyZWRBbmRHcmV5QXJyb3cxLCByZWRBbmRHcmV5QXJyb3cyLCByZWRBcnJvd3NdKTtcblxuY29uc3QgYXV0b0NhbWVyYVBhdXNlID0gbmV3IFBhZ2UoJ2F1dG9DYW1lcmFQYXVzZScsIFtcbiAgeyB4OiA1MDEsIHk6IDIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTAyLCB5OiAxNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUwMywgeTogMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MDMsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTA1LCB5OiAyMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUwOSwgeTogMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MDksIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTA5LCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUwOSwgeTogMTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MDksIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTA5LCB5OiAxOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUwOSwgeTogMjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MDksIHk6IDIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTA5LCB5OiAyMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUxMCwgeTogMjQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MTQsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTE0LCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUxNCwgeTogMTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MTQsIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTE0LCB5OiAxOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUxNCwgeTogMjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MTQsIHk6IDIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTE0LCB5OiAyMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyMCwgeTogMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MjAsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTIwLCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyMCwgeTogMTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MjAsIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTIwLCB5OiAxOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyMCwgeTogMjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MjAsIHk6IDIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTIwLCB5OiAyMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyMCwgeTogMjMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MjUsIHk6IDE3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTI1LCB5OiAxOCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyNSwgeTogMTksIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MjUsIHk6IDIwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTI1LCB5OiAyMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUyNSwgeTogMjIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MzAsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTMwLCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUzMCwgeTogMTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MzAsIHk6IDE4LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTMwLCB5OiAxOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUzMCwgeTogMjAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MzAsIHk6IDIxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNTMwLCB5OiAyMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDUzMCwgeTogMjMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1NjgsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNjEyLCB5OiAxMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDYxMiwgeTogMTMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbl0pO1xuXG4vLyB3aGVuIHBsYXkgYXdheSBnYW1lXG5jb25zdCBzd2luZ0J0biA9IG5ldyBQYWdlKCdzd2luZ0J0bicsIFtcbiAgeyB4OiA1MTksIHk6IDI0OCwgcjogNDEsIGc6IDQ1LCBiOiA0MSB9LFxuICB7IHg6IDUzNiwgeTogMjY4LCByOiAxNiwgZzogMjAsIGI6IDE2IH0sXG4gIHsgeDogNTMxLCB5OiAyNTMsIHI6IDE0MywgZzogMTQxLCBiOiAxNDMgfSxcbl0pO1xuXG4vLyB3aGVuIHBsYXkgYXdheSBnYW1lXG5jb25zdCBwaXRjaGVyQnRuID0gbmV3IFBhZ2UoJ3BpdGNoZXJCdG4nLCBbXG4gIHsgeDogMjksIHk6IDE0NiwgcjogMTcwLCBnOiAxNjgsIGI6IDE2MSB9LFxuICB7IHg6IDI4LCB5OiAxODUsIHI6IDE2MiwgZzogMTU5LCBiOiAxNTggfSxcbiAgeyB4OiAyOSwgeTogMjI1LCByOiAxMjQsIGc6IDEzMywgYjogMTI5IH0sXG4gIHsgeDogMjksIHk6IDI2NywgcjogMjE2LCBnOiAyMTcsIGI6IDIzMCB9LFxuICB7IHg6IDI1LCB5OiAyNzUsIHI6IDMzLCBnOiA0NSwgYjogMzMgfSxcbiAgeyB4OiAyNCwgeTogMjM1LCByOiA0MSwgZzogNTAsIGI6IDMzIH0sXG4gIHsgeDogMjYsIHk6IDE5NiwgcjogNDEsIGc6IDQ5LCBiOiAzNyB9LFxuICB7IHg6IDM0LCB5OiAxNTYsIHI6IDQxLCBnOiAzNiwgYjogMzMgfSxcbl0pO1xuXG5jb25zdCBiYXR0ZXJ5ID0gbmV3IFBhZ2UoJ2JhdHRlcnknLCBbXG4gIHsgeDogNDg0LCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NCwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODQsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg0LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NCwgeTogMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODQsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg0LCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NCwgeTogMTcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODUsIHk6IDEwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg1LCB5OiAxMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NSwgeTogMTIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODUsIHk6IDEzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg1LCB5OiAxNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NSwgeTogMTUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODUsIHk6IDE2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg2LCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NiwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODYsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg2LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NiwgeTogMTQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODYsIHk6IDE1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg2LCB5OiAxNiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NywgeTogMTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODcsIHk6IDExLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg3LCB5OiAxMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4NywgeTogMTMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODcsIHk6IDE0LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg4LCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4OCwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODgsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg5LCB5OiA5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDg5LCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ4OSwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0ODksIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkwLCB5OiA5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkwLCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5MCwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTAsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkxLCB5OiA5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkxLCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5MSwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTEsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkyLCB5OiA5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkyLCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5MiwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTIsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkzLCB5OiA5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDkzLCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5MywgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTMsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk0LCB5OiAxMCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NCwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTQsIHk6IDEyLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk0LCB5OiAxMywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NSwgeTogMTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTUsIHk6IDExLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk1LCB5OiAxMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NSwgeTogMTMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTYsIHk6IDEwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk2LCB5OiAxMSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NiwgeTogMTIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTYsIHk6IDEzLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk2LCB5OiAxNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NiwgeTogMTUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTYsIHk6IDE2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk2LCB5OiAxNywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NywgeTogMTAsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTcsIHk6IDExLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk3LCB5OiAxMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NywgeTogMTMsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTcsIHk6IDE0LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogNDk3LCB5OiAxNSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5NywgeTogMTYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA0OTcsIHk6IDE3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG5dKTtcbiIsImltcG9ydCB7IFBhZ2UsIFV0aWxzIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyLCBDb25maWcgfSBmcm9tICcuLi9tb2R1bGVzJztcblxuaW1wb3J0IHsgVEFTS1MgfSBmcm9tICcuL3Rhc2tOYW1lcyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcblxuaW1wb3J0IHsgaXNTYW1lQ29sb3IgfSBmcm9tICcuLi91dGlscyc7XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRUYXNrKCkge1xuICByZXJvdXRlci5hZGRUYXNrKHtcbiAgICBuYW1lOiBUQVNLUy5yZWNlaXZlSW5ib3gsXG4gICAgbWluUm91bmRJbnRlcnZhbDogQ09OU1RBTlRTLmRheUluTXMsXG4gICAgbWF4VGFza0R1cmluZzogNSAqIENPTlNUQU5UUy5taW51dGVJbk1zLFxuICAgIGZvcmNlU3RvcDogdHJ1ZSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7aW5ib3gubmFtZX1gLFxuICAgIG1hdGNoOiBpbmJveCxcbiAgICBhY3Rpb246IChjb250ZXh0LCBpbWFnZSwgbWF0Y2hlZCwgZmluaXNoUm91bmQpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy5yZWNlaXZlSW5ib3gpIHtcbiAgICAgICAgcmVyb3V0ZXIuZ29CYWNrKGluYm94KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAvLyBjb2xsZWN0IGFsbFxuICAgICAgY29uc3QgY2FuQ29sbGVjdEFsbCA9IGlzU2FtZUNvbG9yKGltYWdlLCBpbmJveEJ0bnMuY29sbGVjdEFsbCkgJiYgIShjb250ZXh0Lm1hdGNoVGltZXMgPiAxKTtcbiAgICAgIGlmIChjYW5Db2xsZWN0QWxsKSB7XG4gICAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAoaW5ib3hCdG5zLmNvbGxlY3RBbGwpO1xuICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGNvbnNvbGUubG9nKCdubyBtYWlsIHRvIGNvbGxlY3QnKTtcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7aW5ib3hQcm9jZWVkLm5hbWV9YCxcbiAgICBtYXRjaDogaW5ib3hQcm9jZWVkLFxuICAgIGFjdGlvbjogKGNvbnRleHQsIGltYWdlLCBtYXRjaGVkLCBmaW5pc2hSb3VuZCkgPT4ge1xuICAgICAgc3RhdGUuY2hlY2tVcGxvYWRTZXNzaW9uKCk7XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLnJlY2VpdmVJbmJveCkge1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cbiAgICAgIHJlcm91dGVyLmdvTmV4dChpbmJveFByb2NlZWQpO1xuICAgIH0sXG4gIH0pO1xufVxuXG4vLyBUT0RPOiB0aGlzIGNoYW5nZWQgc2luY2UgMjAyNC0wOS0wMlxuY29uc3QgaW5ib3ggPSBuZXcgUGFnZShcbiAgJ2luYm94JyxcbiAgW1xuICAgIC8vIEV4cGlyZWQgbWFpbHMgd2lsbCBiZSBkZWxldGVkIGF1dG9tYXRpY2FsbHlcbiAgICB7IHg6IDI0LCB5OiAyNzksIHI6IDkxLCBnOiA5MCwgYjogOTEgfSxcbiAgICB7IHg6IDQ2LCB5OiAyNzYsIHI6IDIzOCwgZzogMjM1LCBiOiAyMzAgfSxcbiAgICB7IHg6IDY0LCB5OiAyNzYsIHI6IDIzOCwgZzogMjM1LCBiOiAyMzAgfSxcbiAgICB7IHg6IDkwLCB5OiAyNzQsIHI6IDIzOCwgZzogMjM1LCBiOiAyMzAgfSxcbiAgICB7IHg6IDEwOCwgeTogMjc2LCByOiAyMzgsIGc6IDIzNSwgYjogMjMwIH0sXG4gICAgeyB4OiAxMzEsIHk6IDI3NiwgcjogMjM4LCBnOiAyMzUsIGI6IDIzMCB9LFxuICAgIHsgeDogMTQ0LCB5OiAyNzYsIHI6IDIzOCwgZzogMjM1LCBiOiAyMzAgfSxcbiAgICB7IHg6IDE3MiwgeTogMjc3LCByOiAyMzgsIGc6IDIzNSwgYjogMjMwIH0sXG4gICAgeyB4OiAyMDEsIHk6IDI3NywgcjogMjIwLCBnOiAyMTgsIGI6IDIxMSB9LFxuICAgIHsgeDogMjE0LCB5OiAyNzcsIHI6IDIyNiwgZzogMjI0LCBiOiAyMjIgfSxcblxuICAgIC8vIG1lc3NhZ2UgJiBpdGVtIGluZm9cbiAgICB7IHg6IDM3MywgeTogNjUsIHI6IDE4NywgZzogMTk2LCBiOiAyMTEgfSxcbiAgICB7IHg6IDM4NywgeTogNjUsIHI6IDIwNCwgZzogMjExLCBiOiAyMjggfSxcbiAgICB7IHg6IDQxMCwgeTogNjQsIHI6IDEyMCwgZzogMTI2LCBiOiAxNDIgfSxcbiAgICB7IHg6IDQzNiwgeTogNjQsIHI6IDYyLCBnOiA3MCwgYjogODEgfSxcbiAgICB7IHg6IDQ2NCwgeTogNjQsIHI6IDg1LCBnOiA5MSwgYjogMTAxIH0sXG5cbiAgICAvLyBzaG9wIGJ0blxuICAgIHsgeDogMjE1LCB5OiAzMjAsIHI6IDI0NCwgZzogMjQ3LCBiOiAyNTUgfSxcbiAgICB7IHg6IDE3MSwgeTogMzI0LCByOiA0MywgZzogOTAsIGI6IDE2NiB9LFxuICBdLFxuICB7IHg6IDM1LCB5OiAzMTQgfSwgLy8gYmFjayBidG5cbiAgeyB4OiAzNSwgeTogMzE0IH1cbik7XG5cbi8vIHBhZ2UgYWZ0ZXIgY29sbGVjdCBhbGxcbmNvbnN0IGluYm94UHJvY2VlZCA9IG5ldyBQYWdlKFxuICAnaW5ib3hQcm9jZWVkJyxcbiAgW1xuICAgIC8vIGRpYWxvZyBiZ1xuICAgIHsgeDogMjEsIHk6IDc0LCByOiA1OCwgZzogOTgsIGI6IDE0OCB9LFxuICAgIHsgeDogMTYsIHk6IDE2NiwgcjogMTczLCBnOiAyMDYsIGI6IDI1NSB9LFxuICAgIHsgeDogMTcsIHk6IDIzOCwgcjogMTQwLCBnOiAxNjIsIGI6IDE4OSB9LFxuICAgIHsgeDogNjE3LCB5OiA3MCwgcjogNTgsIGc6IDk3LCBiOiAxNDAgfSxcbiAgICB7IHg6IDYyMCwgeTogMTc1LCByOiAxMzIsIGc6IDE5NiwgYjogMjU1IH0sXG4gICAgeyB4OiA2MjAsIHk6IDIzNSwgcjogMTQwLCBnOiAxNjIsIGI6IDE4OSB9LFxuXG4gICAgLy8gY2xvc2UgYnRuXG4gICAgeyB4OiAyNjYsIHk6IDI4OSwgcjogOCwgZzogMTIyLCBiOiAyNTUgfSxcbiAgICB7IHg6IDI5OSwgeTogMzAxLCByOiA4MywgZzogMTQ3LCBiOiAyNDcgfSxcbiAgICB7IHg6IDMxNSwgeTogMjkzLCByOiA2MywgZzogMTQ4LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMzMywgeTogMjk2LCByOiAxNDAsIGc6IDE5MSwgYjogMjUxIH0sXG4gICAgeyB4OiAzNTIsIHk6IDMwNCwgcjogOCwgZzogOTcsIGI6IDI0NyB9LFxuICAgIHsgeDogMzc1LCB5OiAyOTIsIHI6IDgsIGc6IDExOCwgYjogMjU1IH0sXG5cbiAgICAvLyBpbmJveFxuICAgIHsgeDogMjkzLCB5OiA2NSwgcjogNTgsIGc6IDk3LCBiOiAxNDAgfSxcbiAgICB7IHg6IDMwMCwgeTogNzQsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMwNiwgeTogNzEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMxMiwgeTogODIsIHI6IDY2LCBnOiAxMDUsIGI6IDE0OCB9LFxuICAgIHsgeDogMzE5LCB5OiA3MywgcjogMjU0LCBnOiAyNTUsIGI6IDI1NSB9LFxuICAgIHsgeDogMzI3LCB5OiA3OSwgcjogMjM2LCBnOiAyMzksIGI6IDI0MiB9LFxuICAgIHsgeDogMzM4LCB5OiA3MCwgcjogMjU1LCBnOiAyNTMsIGI6IDI1NSB9LFxuXG4gICAgLy8gYm90dG9tIGRhcmsgYmdcbiAgICB7IHg6IDQ0NSwgeTogMzAzLCByOiA4LCBnOiAyMCwgYjogMjUgfSxcbiAgICB7IHg6IDE1NywgeTogMzEwLCByOiA4LCBnOiAxNywgYjogMjcgfSxcbiAgXSxcbiAgeyB4OiAzMTcsIHk6IDI5NiB9LCAvLyBjbG9zZSBidG5cbiAgeyB4OiAzMTcsIHk6IDI5NiB9XG4pO1xuXG5jb25zdCBpbmJveEJ0bnMgPSB7XG4gIGNvbGxlY3RBbGw6IHsgeDogMzAzLCB5OiAyNzksIHI6IDQ1LCBnOiAxMjUsIGI6IDIzNCB9LFxufTtcbiIsImltcG9ydCB7IFV0aWxzLCBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyIH0gZnJvbSAnLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi90YXNrTmFtZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBpc1NhbWVDb2xvciwgYXJyYXlGaW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkVGFzaygpIHtcbiAgY29uc29sZS5sb2coJ2FkZFRhc2sgc2V0dGluZycpO1xuICAvLyBvbmx5IHJ1biBvbmNlXG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLnNldHRpbmdEZWZhdWx0LFxuICAgIC8vIG1heFRhc2tSdW5UaW1lczogMSxcbiAgICBtaW5Sb3VuZEludGVydmFsOiBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksXG4gICAgbWF4VGFza0R1cmluZzogMTAgKiBDT05TVEFOVFMubWludXRlSW5NcyxcbiAgICBmb3JjZVN0b3A6IHRydWUsXG4gIH0pO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYWRkUm91dGVzKCkge1xuICByZXJvdXRlci5hZGRSb3V0ZSh7XG4gICAgcGF0aDogYC8ke3NldHRpbmdzLm5hbWV9YCxcbiAgICBtYXRjaDogc2V0dGluZ3MsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGNvbnN0IGluYWN0aXZlVGFiQ29sb3IgPSB7IHI6IDU4LCBnOiA2NSwgYjogNzQgfTtcbiAgICAgIGNvbnN0IHRhYiA9IGFycmF5RmluZChPYmplY3Qua2V5cyhzZXR0aW5nc1RhYnMpLCB0ID0+IHtcbiAgICAgICAgY29uc3QgeyB4LCB5IH0gPSBzZXR0aW5nc1RhYnNbdCBhcyBrZXlvZiB0eXBlb2Ygc2V0dGluZ3NUYWJzXTtcbiAgICAgICAgcmV0dXJuICFpc1NhbWVDb2xvcihpbWFnZSwgeyB4LCB5LCAuLi5pbmFjdGl2ZVRhYkNvbG9yIH0pO1xuICAgICAgfSk7XG5cbiAgICAgIHN3aXRjaCAoY29udGV4dC50YXNrLm5hbWUpIHtcbiAgICAgICAgY2FzZSBUQVNLUy5zZXR0aW5nRGVmYXVsdDpcbiAgICAgICAgICBzd2l0Y2ggKHRhYikge1xuICAgICAgICAgICAgY2FzZSB1bmRlZmluZWQ6XG4gICAgICAgICAgICAgIC8vIG5vdCBkbyBhbnl0aGluZ1xuICAgICAgICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZ3JhcGhpY1RhYic6XG4gICAgICAgICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICAgICAgICBoYW5kbGVHcmFwaGljVGFiKCk7XG4gICAgICAgICAgICAgIC8vIGdvIHRvIGdhbWVTZXR0aW5nc1RhYlxuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNldHRpbmdzVGFicy5nYW1lU2V0dGluZ3NUYWIpO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2dhbWVTZXR0aW5nc1RhYic6XG4gICAgICAgICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICAgICAgICBoYW5kbGVHYW1lU2V0dGluZ3NUYWIoKTtcbiAgICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnbm90aWZpY2F0aW9uVGFiJzpcbiAgICAgICAgICAgICAgLy8gZG9uJ3QgbmVlZCB0byBoYW5kbGUgbm90aWZpY2F0aW9uVGFiXG4gICAgICAgICAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgICAgICAgICAgICAvLyBoYW5kbGVOb3RpZmljYXRpb25UYWIoKTtcbiAgICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgLy8gZ28gdG8gZ3JhcGhpY1RhYlxuICAgICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNldHRpbmdzVGFicy5ncmFwaGljVGFiKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFRBU0tTLnNldHRpbmdSZXNldExlYWd1ZVByb2dyZXNzOlxuICAgICAgICAgIGlmIChzdGF0ZS5sZWFndWVHYW1lLm5lZWRSZXNldFByb2dyZXNzKSB7XG4gICAgICAgICAgICByZXJvdXRlci5zY3JlZW4udGFwKHNldHRpbmdzQnRucy5sZWFndWVSZXNldCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnZ28gdG8gbGVhZ3VlUmVzZXQnKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ25vIG5lZWQgdG8gcmVzZXQgbGVhZ3VlIHByb2dyZXNzJyk7XG4gICAgICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXJvdXRlci5nb0JhY2soc2V0dGluZ3MpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0sXG4gIH0pO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVHcmFwaGljVGFiKCkge1xuICByZXJvdXRlci5zY3JlZW4udGFwKHNldHRpbmdzR3JhcGhUYWJCdG5zLnBvd2VyU2F2ZU9uKTtcbiAgVXRpbHMuc2xlZXAoQ09OU1RBTlRTLnNsZWVwU2hvcnQpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVHYW1lU2V0dGluZ3NUYWIoKSB7XG4gIGNvbnN0IGJ0bnMgPSBbXG4gICAgc2V0dGluZ3NHYW1lU2V0dGluZ3NUYWJCdG5zLnBpdGNoaW5nQXV0byxcbiAgICBzZXR0aW5nc0dhbWVTZXR0aW5nc1RhYkJ0bnMuZmllbGRpbmdBdXRvLFxuICAgIHNldHRpbmdzR2FtZVNldHRpbmdzVGFiQnRucy5iYXNlUnVubmluZ0F1dG8sXG4gICAgc2V0dGluZ3NHYW1lU2V0dGluZ3NUYWJCdG5zLmJhdHRlclBsYXlUeXBlQSxcbiAgICBzZXR0aW5nc0dhbWVTZXR0aW5nc1RhYkJ0bnMuZHluYW1pY0NhbWVyYU9mZixcbiAgXTtcbiAgZm9yIChjb25zdCBidG4gb2YgYnRucykge1xuICAgIHJlcm91dGVyLnNjcmVlbi50YXAoYnRuKTtcbiAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlTm90aWZpY2F0aW9uVGFiKCkge1xuICByZXJvdXRlci5zY3JlZW4udGFwKHNldHRpbmdzTm90aWZpY2F0aW9uVGFiQnRucy5hbGxOb3RpZmljYXRpb25PZmYpO1xuICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBTaG9ydCk7XG59XG5cbmNvbnN0IHNldHRpbmdzID0gbmV3IFBhZ2UoXG4gICdzZXR0aW5ncycsXG4gIFtcbiAgICAvLyBuYXZpIGluIHJpZ2h0XG4gICAgLy8geyB4OiA2MjUsIHk6IDcsIHI6IDIxNCwgZzogMjEwLCBiOiAyMTQgfSxcbiAgICAvLyB7IHg6IDU5MywgeTogMTQsIHI6IDc0LCBnOiA5MywgYjogMTIzIH0sXG4gICAgLy8geyB4OiA1OTAsIHk6IDE0LCByOiA3NCwgZzogOTMsIGI6IDEyMyB9LFxuICAgIC8vIHsgeDogNDg3LCB5OiAxNSwgcjogMjE0LCBnOiAyMTAsIGI6IDIxNCB9LFxuICAgIC8vIHsgeDogNDgxLCB5OiAxNSwgcjogNzcsIGc6IDg2LCBiOiA5MyB9LFxuICAgIC8vIHsgeDogMzkxLCB5OiAxMSwgcjogNzksIGc6IDgwLCBiOiA3OSB9LFxuICAgIC8vIHsgeDogMzc4LCB5OiAxNiwgcjogMTMzLCBnOiAxNTAsIGI6IDE2OSB9LFxuICAgIC8vIHsgeDogMzEzLCB5OiAxMSwgcjogMTc4LCBnOiAxNzgsIGI6IDE3OSB9LFxuXG4gICAgLy8gYmcgb2YgcmlnaHQgc2VjdGlvblxuICAgIHsgeDogNDc4LCB5OiAxMTksIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDQ3NiwgeTogMTc1LCByOiAzNiwgZzogNDAsIGI6IDQ0IH0sXG4gICAgeyB4OiA0NzYsIHk6IDIyOCwgcjogMTA3LCBnOiA5NywgYjogOTAgfSxcbiAgICB7IHg6IDQ3NCwgeTogMjgzLCByOiA2NiwgZzogNzcsIGI6IDU4IH0sXG4gICAgeyB4OiA2MDksIHk6IDI5MywgcjogNDEsIGc6IDQ1LCBiOiA1OCB9LFxuICAgIHsgeDogNjA4LCB5OiAyMzQsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDYwNSwgeTogMTc4LCByOiA0MSwgZzogNDUsIGI6IDU4IH0sXG4gICAgeyB4OiA2MDgsIHk6IDEyMiwgcjogNDEsIGc6IDQ1LCBiOiA1OCB9LFxuXG4gICAgLy8gZ29vZ2xlIHBsYXkgZ2FtZSBpY29uIGluIHJpZ2h0IHNlY3Rpb25cbiAgICB7IHg6IDQ5MCwgeTogMTE1LCByOiAzNSwgZzogMzgsIGI6IDUxIH0sXG5cbiAgICAvLyBiYWNrXG4gICAgeyB4OiAyNSwgeTogMzEyLCByOiAxOTMsIGc6IDE5OCwgYjogMTkxIH0sXG4gICAgeyB4OiAzOSwgeTogMzIyLCByOiA1OCwgZzogNjksIGI6IDQ5IH0sXG4gIF0sXG4gIHsgeDogNDEsIHk6IDMyMCB9LFxuICB7IHg6IDQxLCB5OiAzMjAgfVxuKTtcbmNvbnN0IHNldHRpbmdzVGFicyA9IHtcbiAgc291bmRBbmRMYW5UYWI6IHsgeDogMjIsIHk6IDU1IH0sXG4gIGdyYXBoaWNUYWI6IHsgeDogMTExLCB5OiA1NSB9LFxuICBnYW1lU2V0dGluZ3NUYWI6IHsgeDogMjc5LCB5OiA3MCB9LFxuICBub3RpZmljYXRpb25UYWI6IHsgeDogMzgwLCB5OiA3MSB9LFxufTtcbmNvbnN0IHNldHRpbmdzQnRucyA9IHtcbiAgbGVhZ3VlUmVzZXQ6IHsgeDogNTYyLCB5OiAyMTcgfSxcbn07XG5cbi8vIEZJWE1FOiBhZGQgbGFuIGNoYW5nZSBwYWdlc1xuY29uc3Qgc2V0dGluZ3NTb3VuZFRhYiA9IG5ldyBQYWdlKFxuICAnc2V0dGluZ3Mvc291bmQnLFxuICBbXG4gICAgLy8gbmF2IGJhciByaWdodFxuICAgIHsgeDogNjIxLCB5OiA4LCByOiAyMTQsIGc6IDIxMCwgYjogMjE0IH0sXG4gICAgeyB4OiA1OTUsIHk6IDEwLCByOiA3NCwgZzogOTcsIGI6IDEzMSB9LFxuICAgIHsgeDogNTAzLCB5OiAxNSwgcjogNzQsIGc6IDg1LCBiOiA5MCB9LFxuICAgIHsgeDogMzkyLCB5OiAxMiwgcjogMTc2LCBnOiAxNzMsIGI6IDE3NiB9LFxuICAgIHsgeDogMzE1LCB5OiA4LCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiAzMDIsIHk6IDE3LCByOiAyMTQsIGc6IDIxNCwgYjogMjE0IH0sXG5cbiAgICAvLyBoaWdobGlnaHRlZCBzb3VuZCB0YWJcbiAgICB7IHg6IDE5LCB5OiA2MCwgcjogMCwgZzogMTAxLCBiOiAyNDcgfSxcbiAgICB7IHg6IDIwLCB5OiA3MSwgcjogMCwgZzogODksIGI6IDIyMiB9LFxuICAgIHsgeDogOTUsIHk6IDY5LCByOiAwLCBnOiA5MiwgYjogMjMwIH0sXG5cbiAgICAvLyBvdGhlciB0YWJzXG4gICAgeyB4OiAxMTcsIHk6IDU2LCByOiA1OCwgZzogNjUsIGI6IDc0IH0sXG4gICAgeyB4OiAyMDUsIHk6IDU0LCByOiA1OCwgZzogNjUsIGI6IDc0IH0sXG4gICAgeyB4OiAzMDAsIHk6IDUyLCByOiA1OCwgZzogNjUsIGI6IDc0IH0sXG4gICAgeyB4OiAzOTQsIHk6IDU1LCByOiA1OCwgZzogNjUsIGI6IDc0IH0sXG5cbiAgICAvLyBiZyB0YWJsZVxuICAgIHsgeDogMjAsIHk6IDg1LCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG4gICAgeyB4OiAyMCwgeTogMjkyLCByOiAyMDYsIGc6IDIxMCwgYjogMjE0IH0sXG4gICAgeyB4OiA0NTksIHk6IDg1LCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG4gICAgeyB4OiA0NjAsIHk6IDI4OSwgcjogMjA2LCBnOiAyMTAsIGI6IDIxNCB9LFxuXG4gICAgLy8gcmlnaHQgc2lkZWJhciBiZ1xuICAgIHsgeDogNDgwLCB5OiAxMjAsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDQ4MywgeTogMTc5LCByOiA0MSwgZzogNDUsIGI6IDU4IH0sXG4gICAgeyB4OiA0ODUsIHk6IDIzMiwgcjogNDEsIGc6IDQ1LCBiOiA1OCB9LFxuICAgIHsgeDogNDg2LCB5OiAyODYsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDYxMiwgeTogMTE5LCByOiA0MSwgZzogNDUsIGI6IDU4IH0sXG4gICAgeyB4OiA2MTAsIHk6IDE4MCwgcjogNDEsIGc6IDQ1LCBiOiA1OCB9LFxuICAgIHsgeDogNjA4LCB5OiAyMzQsIHI6IDQxLCBnOiA0NSwgYjogNTggfSxcbiAgICB7IHg6IDYxMCwgeTogMjg3LCByOiA0MSwgZzogNDUsIGI6IDU4IH0sXG4gIF0sXG4gIHsgeDogNDEsIHk6IDMyMCB9LFxuICB7IHg6IDQxLCB5OiAzMjAgfVxuKTtcbmNvbnN0IHNldHRpbmdzU291bmRUYWJCdG5zID0ge1xuICBsYW5nOiB7IHg6IDQwMSwgeTogMTkwIH0sXG4gIC8vIGFkZCBtb3JlIGlmIG5lZWQgbW9yZSBzZXR0aW5nXG59O1xuY29uc3Qgc2V0dGluZ3NTb3VuZFRhYkxhblNlbGVjdCA9IG5ldyBQYWdlKFxuICAnc2V0dGluZ3Mvc291bmQvbGFuU2VsZWN0JyxcbiAgW1xuICAgIC8vIGJnXG4gICAgeyB4OiAyOTMsIHk6IDE4LCByOiAyNSwgZzogMjAsIGI6IDI1IH0sXG4gICAgeyB4OiA0MywgeTogMzQzLCByOiA4LCBnOiA0LCBiOiAwIH0sXG4gICAgeyB4OiA2MjIsIHk6IDM0NSwgcjogOCwgZzogOCwgYjogOCB9LFxuXG4gICAgLy8gbGFuZyBlbmdsaXNoIGJ0blxuICAgIHsgeDogMTYwLCB5OiAxMjcsIHI6IDQ5LCBnOiA4OSwgYjogMTIzIH0sXG4gICAgeyB4OiAxOTAsIHk6IDEzMiwgcjogNTgsIGc6IDkyLCBiOiAxMjkgfSxcbiAgICB7IHg6IDIxMywgeTogMTMzLCByOiA4MCwgZzogMTEzLCBiOiAxNTEgfSxcbiAgICB7IHg6IDIyOSwgeTogMTMzLCByOiAxNjYsIGc6IDE4OSwgYjogMjE4IH0sXG4gICAgeyB4OiAyNDEsIHk6IDEzMywgcjogNDksIGc6IDg1LCBiOiAxMjMgfSxcbiAgICB7IHg6IDI2NiwgeTogMTQyLCByOiA0OSwgZzogODEsIGI6IDExNSB9LFxuICAgIHsgeDogMjgyLCB5OiAxMjksIHI6IDQ5LCBnOiA4OSwgYjogMTIzIH0sXG4gICAgeyB4OiAxNjYsIHk6IDE0NSwgcjogNDEsIGc6IDc3LCBiOiAxMTUgfSxcblxuICAgIC8vIGJhY2tcbiAgICB7IHg6IDI2LCB5OiAzMTYsIHI6IDIwNiwgZzogMjEwLCBiOiAyMDYgfSxcbiAgICB7IHg6IDQzLCB5OiAzMjEsIHI6IDIwNiwgZzogMjEwLCBiOiAyMDYgfSxcbiAgICB7IHg6IDM0LCB5OiAzMjksIHI6IDIwMSwgZzogMjA2LCBiOiAyMDEgfSxcbiAgXSxcbiAgeyB4OiAyMDAsIHk6IDEzMSB9LCAvLyBlbmdsaXNoIGJ0blxuICB7IHg6IDIwMCwgeTogMTMxIH0gLy8gZW5nbGlzaCBidG5cbik7XG5jb25zdCBzZXR0aW5nc1NvdW5kVGFiTGFuU2VsZWN0UHJvY2VlZEJ0bnMgPSB7XG4gIHllczogeyB4OiA0MDcsIHk6IDMwNyB9LFxufTtcblxuY29uc3Qgc2V0dGluZ3NHcmFwaFRhYiA9IG5ldyBQYWdlKFxuICAnc2V0dGluZ3MvZ3JhcGgnLFxuICBbXG4gICAgLy8gbmF2IGJhciByaWdodFxuICAgIHsgeDogNjIxLCB5OiA4LCByOiAyMTQsIGc6IDIxMCwgYjogMjE0IH0sXG4gICAgeyB4OiA1OTUsIHk6IDEwLCByOiA3NCwgZzogOTcsIGI6IDEzMSB9LFxuICAgIHsgeDogNTAzLCB5OiAxNSwgcjogNzQsIGc6IDg1LCBiOiA5MCB9LFxuICAgIHsgeDogMzkyLCB5OiAxMiwgcjogMTc2LCBnOiAxNzMsIGI6IDE3NiB9LFxuICAgIHsgeDogMzE1LCB5OiA4LCByOiAyMzgsIGc6IDI0MywgYjogMjM4IH0sXG4gICAgeyB4OiAzMDIsIHk6IDE3LCByOiAyMTQsIGc6IDIxNCwgYjogMjE0IH0sXG5cbiAgICAvLyBoaWdobGlnaHRlZCBncmFwaCB0YWJcbiAgICB7IHg6IDEyMywgeTogNTksIHI6IDAsIGc6IDEwMSwgYjogMjU0IH0sXG4gICAgeyB4OiAxNDksIHk6IDU5LCByOiAyOCwgZzogMTE5LCBiOiAyNTQgfSxcbiAgICB7IHg6IDE3NywgeTogNjQsIHI6IDAsIGc6IDk3LCBiOiAyMzggfSxcblxuICAgIC8vIG90aGVyIHRhYnNcbiAgICB7IHg6IDM3LCB5OiA2MywgcjogNTgsIGc6IDY1LCBiOiA3NCB9LFxuICAgIHsgeDogNjIsIHk6IDYyLCByOiAxMzQsIGc6IDE0MywgYjogMTU4IH0sXG4gICAgeyB4OiAyMzIsIHk6IDU3LCByOiA1OCwgZzogNjUsIGI6IDc0IH0sXG4gICAgeyB4OiAyNjcsIHk6IDYzLCByOiAxNTYsIGc6IDE2NywgYjogMTgwIH0sXG4gICAgeyB4OiAzMjIsIHk6IDYzLCByOiAxNjAsIGc6IDE2NSwgYjogMTgwIH0sXG4gICAgeyB4OiAzNTMsIHk6IDYzLCByOiA1OCwgZzogNjUsIGI6IDc0IH0sXG4gICAgeyB4OiA0MDEsIHk6IDY0LCByOiAxNzEsIGc6IDE3OSwgYjogMTkyIH0sXG4gICAgeyB4OiA0NDAsIHk6IDYxLCByOiAxNTUsIGc6IDE1OSwgYjogMTc3IH0sXG5cbiAgICAvLyBiZyB0YWJsZVxuICAgIHsgeDogMTksIHk6IDkwLCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG4gICAgeyB4OiAyMywgeTogMjkxLCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG4gICAgeyB4OiA0NTksIHk6IDg0LCByOiAyMzAsIGc6IDIzMSwgYjogMjM4IH0sXG4gICAgeyB4OiA0NTgsIHk6IDI4NywgcjogMjMwLCBnOiAyMzEsIGI6IDIzOCB9LFxuICBdLFxuICB7IHg6IDQxLCB5OiAzMjAgfSxcbiAgeyB4OiA0MSwgeTogMzIwIH1cbik7XG5jb25zdCBzZXR0aW5nc0dyYXBoVGFiQnRucyA9IHtcbiAgcXVhbGl0eU5vcm1hbDogeyB4OiAyMTIsIHk6IDEyMCB9LFxuICBtYXhGUFMzMDogeyB4OiA4MywgeTogMTc1IH0sXG4gIHBvd2VyU2F2ZU9uOiB7IHg6IDIyMiwgeTogMjIyIH0sXG4gIGJpZ0hlYWRNb2RlT2ZmOiB7IHg6IDg2LCB5OiAyODMgfSxcbiAgLy8gYWRkIG1vcmUgaWYgbmVlZCBtb3JlIHNldHRpbmdcbn07XG5cbmNvbnN0IHNldHRpbmdzR2FtZVNldHRpbmdzVGFiQnRucyA9IHtcbiAgcGl0Y2hpbmdBdXRvOiB7IHg6IDEwMCwgeTogMTA3IH0sXG4gIGZpZWxkaW5nQXV0bzogeyB4OiAxMDAsIHk6IDE1MCB9LFxuICBiYXNlUnVubmluZ0F1dG86IHsgeDogMTAwLCB5OiAxOTIgfSxcbiAgYmF0dGVyUGxheVR5cGVBOiB7IHg6IDEwMCwgeTogMjQzIH0sXG4gIGR5bmFtaWNDYW1lcmFPZmY6IHsgeDogMTAwLCB5OiAyODUgfSxcbn07XG5cbmNvbnN0IHNldHRpbmdzTm90aWZpY2F0aW9uVGFiQnRucyA9IHtcbiAgYWxsTm90aWZpY2F0aW9uT2ZmOiB7IHg6IDI5NiwgeTogOTYgfSxcbn07XG4iLCJpbXBvcnQgeyBQYWdlLCBVdGlscyB9IGZyb20gJ1Jlcm91dGVyJztcbmltcG9ydCB7IHN0YXRlLCByZXJvdXRlciwgQ29uZmlnIH0gZnJvbSAnLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi90YXNrTmFtZXMnO1xuXG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vY29uc3RhbnRzJztcblxubGV0IGlzR29IaXZlTG9naW4gPSB0cnVlO1xuXG5leHBvcnQgZnVuY3Rpb24gYWRkVGFzaygpIHtcbiAgY29uc29sZS5sb2coJ2FkZFRhc2sgc3RheUluTG9naW4nKTtcbiAgcmVyb3V0ZXIuYWRkVGFzayh7XG4gICAgbmFtZTogVEFTS1Muc3RheUluTG9naW4sXG4gICAgZm9yY2VTdG9wOiBmYWxzZSxcbiAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRSb3V0ZXMoKSB7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bGFuZGluZy5uYW1lfWAsXG4gICAgbWF0Y2g6IGxhbmRpbmcsXG4gICAgYWN0aW9uOiBjb250ZXh0ID0+IHtcbiAgICAgIGlzR29IaXZlTG9naW4gPSB0cnVlO1xuICAgICAgc3RhdGUub25Mb2dpblBhZ2UoKTtcbiAgICAgIGNvbnNvbGUubG9nKCdsYW5kaW5nJyk7XG4gICAgICByZXJvdXRlci5nb05leHQobGFuZGluZyk7XG4gICAgfSxcbiAgfSk7XG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bGFuZGluZ0xvYWRpbmdUZXh0Lm5hbWV9YCxcbiAgICBtYXRjaDogbGFuZGluZ0xvYWRpbmdUZXh0LFxuICAgIGFjdGlvbjogKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coJ2xhbmRpbmcgbG9hZGluZyAodGV4dCApLi4uJyk7XG4gICAgICBzdGF0ZS5vbkxvYWRpbmcoKTtcbiAgICB9LFxuICB9KTtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHtsb2dpblNlbGVjdFdheS5uYW1lfWAsXG4gICAgbWF0Y2g6IGxvZ2luU2VsZWN0V2F5LFxuICAgIGFjdGlvbjogY29udGV4dCA9PiB7XG4gICAgICBpZiAoIUNvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoY29udGV4dC50YXNrLm5hbWUgPT09IFRBU0tTLnN0YXlJbkxvZ2luKSB7XG4gICAgICAgIC8vIGNoZWNrIHRoZSBkaXJlY3Rpb24gdG8gZ28gYnkgcHJldmlvdXMgcGFnZVxuICAgICAgICBpZiAoIWlzR29IaXZlTG9naW4pIHtcbiAgICAgICAgICBrZXljb2RlKCdCQUNLJywgMTAwKTtcbiAgICAgICAgICBjb25zb2xlLmxvZygna2V5Y29kZSBiYWNrJyk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlzR29IaXZlTG9naW4gPSBmYWxzZTtcbiAgICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxvZ2luU2VsZWN0V2F5KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgcmVyb3V0ZXIuZ29OZXh0KGxvZ2luU2VsZWN0V2F5KTtcbiAgICB9LFxuICB9KTtcbiAgW2xvZ0luSGl2ZSwgbG9nSW5IaXZlOTBdLmZvckVhY2gocCA9PiB7XG4gICAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgICAgcGF0aDogYC8ke3AubmFtZX1gLFxuICAgICAgbWF0Y2g6IHAsXG4gICAgICBhY3Rpb246IGNvbnRleHQgPT4ge1xuICAgICAgICBpZiAoIUNvbmZpZy5zY3JpcHRDb25maWcuaXNDbG91ZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFphY2sgY29kZXMgaW4gdGhpcyB3YXkgKG5vbi1tYWluIGxvZ2ljIHJldHVybiBlYXJseSBBU0FQKVxuICAgICAgICBpZiAoY29udGV4dC5tYXRjaER1cmluZyA+PSBDT05TVEFOVFMuc3dpdGNoV2FpdGluZ0xvZ2luUGFnZXNJbnRlcnZhbCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdjbGljayBiYWNrIGZvciBhdm9pZCBzZXNzaW9uIGV4cGlyZWQnKTtcbiAgICAgICAgICBrZXljb2RlKCdCQUNLJywgMTAwKTtcbiAgICAgICAgICBjb25zb2xlLmxvZygna2V5Y29kZSBiYWNrJyk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lID09PSBUQVNLUy5zdGF5SW5Mb2dpbikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdzdGF5IGluIGxvZ2luIGFuZCBzbGVlcCAxMCBzZWNzJyk7XG4gICAgICAgICAgc3RhdGUub25Mb2dpblBhZ2UoKTtcbiAgICAgICAgICBVdGlscy5zbGVlcCgxMF8wMDApO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIG1haW4gbG9naWNcbiAgICAgICAgY29uc29sZS5sb2coJ25lZWQgdXNlciBpbnB1dCcpO1xuICAgICAgICBzdGF0ZS5vbkxvZ2luUGFnZSh0cnVlKTtcbiAgICAgIH0sXG4gICAgfSk7XG4gIH0pO1xuICBbZmJMb2dJbjkwLCBnb29nbGVMb2dJbjkwXS5mb3JFYWNoKHAgPT4ge1xuICAgIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICAgIHBhdGg6IGAvJHtwLm5hbWV9YCxcbiAgICAgIG1hdGNoOiBwLFxuICAgICAgYWN0aW9uOiAna2V5Y29kZUJhY2snLFxuICAgIH0pO1xuICB9KTtcbn1cblxuY29uc3QgbGFuZGluZyA9IG5ldyBQYWdlKFxuICAnbGFuZGluZycsXG4gIFtcbiAgICAvLyBsb2dvIGluIGNlbnRlclxuICAgIHsgeDogMjg5LCB5OiAyNDksIHI6IDAsIGc6IDI4LCBiOiA2NiB9LFxuICAgIHsgeDogMzA2LCB5OiAyNDcsIHI6IDE4OSwgZzogMCwgYjogMzMgfSxcbiAgICB7IHg6IDI5OSwgeTogMjU0LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG5cbiAgICAvLyA5aW5uaW5nc1xuICAgIHsgeDogMjM3LCB5OiAyNzEsIHI6IDE0MywgZzogMTQ4LCBiOiAxNjAgfSxcbiAgICB7IHg6IDI1NSwgeTogMjc2LCByOiA4NiwgZzogOTcsIGI6IDEyMSB9LFxuICAgIHsgeDogMjc5LCB5OiAyNzYsIHI6IDI1LCBnOiAzNywgYjogNzAgfSxcbiAgICB7IHg6IDMxMSwgeTogMjczLCByOiAyNSwgZzogNDUsIGI6IDc1IH0sXG4gICAgeyB4OiAzMjQsIHk6IDI3MywgcjogMjgsIGc6IDQ0LCBiOiA3MiB9LFxuICAgIHsgeDogMzQxLCB5OiAyNzMsIHI6IDI1LCBnOiA0NSwgYjogNzYgfSxcbiAgXSxcbiAgeyB4OiAyNTQsIHk6IDIwMCB9LCAvLyB0byBoaXZlIGxvZ2luXG4gIHsgeDogMjU0LCB5OiAyMDAgfVxuKTtcblxuLy8gbGlrZSBsYW5kaW5nIGJ1dCBoYXMgbG9hZGluZyB0ZXh0LCBhbmQgaXQncyBkYXJrZXJcbmNvbnN0IGxhbmRpbmdMb2FkaW5nVGV4dCA9IG5ldyBQYWdlKFxuICAnbGFuZGluZ0xvYWRpbmdUZXh0JyxcbiAgW1xuICAgIC8vIGxvZ28gaW4gY2VudGVyXG4gICAgeyB4OiAyODksIHk6IDI0OSwgcjogMCwgZzogOCwgYjogMTYgfSxcbiAgICB7IHg6IDMwNiwgeTogMjQ3LCByOiA0MSwgZzogMCwgYjogOCB9LFxuICAgIHsgeDogMjk5LCB5OiAyNTQsIHI6IDU4LCBnOiA1NywgYjogNTggfSxcblxuICAgIC8vIDlpbm5pbmdzXG4gICAgeyB4OiAyMzcsIHk6IDI3MSwgcjogMzMsIGc6IDMwLCBiOiAzNiB9LFxuICAgIHsgeDogMjU1LCB5OiAyNzYsIHI6IDE5LCBnOiAyMiwgYjogMjUgfSxcbiAgICB7IHg6IDI3OSwgeTogMjc2LCByOiA4LCBnOiA4LCBiOiAxNiB9LFxuICAgIHsgeDogMzExLCB5OiAyNzMsIHI6IDgsIGc6IDksIGI6IDE2IH0sXG4gICAgeyB4OiAzMjQsIHk6IDI3MywgcjogNywgZzogOSwgYjogMTYgfSxcbiAgICB7IHg6IDM0MSwgeTogMjczLCByOiA4LCBnOiA5LCBiOiAxNiB9LFxuXG4gICAgLy8gYmFja2dyb3VuZCBvbiB0b3AgdG8gYXZvaWQgY29uZmxpY3Qgd2l0aCBuZXdTZWFzb25cbiAgICB7IHg6IDEyLCB5OiAxMSwgcjogOCwgZzogNCwgYjogMCB9LFxuICAgIHsgeDogNjI4LCB5OiAxMiwgcjogMCwgZzogNCwgYjogMCB9LFxuICBdLFxuICB7IHg6IDAsIHk6IDAgfSxcbiAgeyB4OiAwLCB5OiAwIH1cbik7XG5cbmNvbnN0IGxvZ2luU2VsZWN0V2F5ID0gbmV3IFBhZ2UoXG4gICdsb2dpblNlbGVjdFdheScsXG4gIFtcbiAgICAvLyBiZ1xuICAgIHsgeDogMzksIHk6IDQwLCByOiAyLCBnOiAxLCBiOiAwIH0sXG4gICAgeyB4OiA1OSwgeTogMzMxLCByOiAyLCBnOiAxLCBiOiAwIH0sXG4gICAgeyB4OiA1ODMsIHk6IDMwOSwgcjogMSwgZzogMiwgYjogMyB9LFxuICAgIHsgeDogNTg0LCB5OiA2NywgcjogMCwgZzogMSwgYjogMCB9LFxuICAgIHsgeDogMzU5LCB5OiAyMjgsIHI6IDMsIGc6IDMsIGI6IDMgfSxcblxuICAgIC8vIGdvb2dsZSBidG5cbiAgICB7IHg6IDE4MiwgeTogMTkxLCByOiAyNDAsIGc6IDEzMCwgYjogMTIxIH0sXG4gICAgeyB4OiAxODUsIHk6IDE5MywgcjogOTQsIGc6IDE1MSwgYjogMjQ2IH0sXG4gICAgeyB4OiAxODAsIHk6IDE5NywgcjogMTk3LCBnOiAyMzAsIGI6IDIwNiB9LFxuICAgIHsgeDogMzAzLCB5OiAxOTIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcblxuICAgIC8vIGZiIGJ0blxuICAgIHsgeDogMzM2LCB5OiAxOTYsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDMzOCwgeTogMTkxLCByOiAxNDEsIGc6IDE4OCwgYjogMjQ5IH0sXG4gICAgeyB4OiAzMzEsIHk6IDE5MiwgcjogMTMxLCBnOiAxODIsIGI6IDI0OCB9LFxuICAgIHsgeDogNDU1LCB5OiAxOTIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcblxuICAgIC8vIGhpdmUgYnRuIGJnXG4gICAgeyB4OiAxNzcsIHk6IDIxOSwgcjogMTgsIGc6IDExOSwgYjogMjU1IH0sXG4gICAgeyB4OiAxNzUsIHk6IDIzMSwgcjogMTgsIGc6IDExOSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMDYsIHk6IDIyMCwgcjogMTgsIGc6IDExOSwgYjogMjU1IH0sXG4gICAgeyB4OiAzMDcsIHk6IDIzMSwgcjogMTgsIGc6IDExOSwgYjogMjU1IH0sXG4gIF0sXG4gIHsgeDogMjQzLCB5OiAyMzIgfSwgLy8gbG9naW4gaGl2ZVxuICB7IHg6IDI0MywgeTogMjMyIH0gLy8gbG9naW4gaGl2ZVxuKTtcblxuY29uc3QgbG9nSW5IaXZlID0gbmV3IFBhZ2UoXG4gICdsb2dJbkhpdmUnLFxuICBbXG4gICAgeyB4OiAyMjYsIHk6IDc2LCByOiA0OCwgZzogNDgsIGI6IDQ4IH0sXG4gICAgeyB4OiAzMjIsIHk6IDc4LCByOiA0OCwgZzogNDgsIGI6IDQ4IH0sXG4gICAgeyB4OiA1MzUsIHk6IDQyLCByOiA0OCwgZzogNDgsIGI6IDQ4IH0sXG4gICAgeyB4OiA2MjQsIHk6IDQwLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gICAgeyB4OiA2NiwgeTogMzMzLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiA0NCwgeTogMjM1LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAxMzYsIHk6IDIzNiwgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogMjU4LCB5OiAyMzIsIHI6IDE0MywgZzogMTg2LCBiOiAyMjcgfSxcbiAgICB7IHg6IDU0OCwgeTogMTY5LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgICB7IHg6IDU4MywgeTogMTk1LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgICB7IHg6IDQzLCB5OiAxNDIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQzLCB5OiAxOTUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgXSxcbiAgeyB4OiA1NTQsIHk6IDE3NyB9LCAvLyBsb2dpblxuICB7IHg6IDU3NCwgeTogNDAgfSAvLyBiYWNrIHRvIGdhbWVcbik7XG5cbi8vIHN1aXQgZm9yIGRwaSA5MFxuY29uc3QgbG9nSW5IaXZlOTAgPSBuZXcgUGFnZShcbiAgJ2xvZ0luSGl2ZTkwJyxcbiAgW1xuICAgIC8vIGJnXG4gICAgeyB4OiAxMSwgeTogMTcxLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAxMCwgeTogMzI2LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiA2MjgsIHk6IDEwNywgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogNjI3LCB5OiAzMjYsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcblxuICAgIC8vIHRpdGxlXG4gICAgeyB4OiAyOTUsIHk6IDU4LCByOiA0OCwgZzogNDgsIGI6IDQ4IH0sXG4gICAgeyB4OiAzMTUsIHk6IDU4LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAzMzAsIHk6IDYxLCByOiAyMDMsIGc6IDIwMywgYjogMjAzIH0sXG4gICAgeyB4OiAzNDQsIHk6IDU2LCByOiAyMDEsIGc6IDIwMSwgYjogMjAxIH0sXG5cbiAgICAvLyBpbnB1dFxuICAgIHsgeDogNDgwLCB5OiAxNTUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgICB7IHg6IDQ4MCwgeTogMTk5LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG5cbiAgICAvLyBsb2dpbiBidG5cbiAgICB7IHg6IDU1OCwgeTogMTYwLCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgICB7IHg6IDU4OSwgeTogMTc1LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgICB7IHg6IDUzMiwgeTogMTYyLCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgXSxcbiAgeyB4OiA1NTQsIHk6IDE3NyB9LCAvLyBsb2dpblxuICB7IHg6IDU3NCwgeTogNDAgfSAvLyBiYWNrIHRvIGdhbWVcbik7XG5cbi8vIEJBQ0tMT0c6IGZiIGxvZ2luIGFuZCBnb29nbGUgbG9naW4gaGFzIGJlZW4gYmxvY2sgb24gcmVkcm9pZCBub3dcbmNvbnN0IGZiTG9nSW45MCA9IG5ldyBQYWdlKCdmYkxvZ0luOTAnLCBbXG4gIC8vIGZiIGxvZ29cbiAgeyB4OiAzMDQsIHk6IDE0LCByOiAyNCwgZzogMTE5LCBiOiAyNDIgfSxcbiAgeyB4OiAzMTYsIHk6IDE3LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzA5LCB5OiAzMSwgcjogMjQsIGc6IDExOSwgYjogMjQyIH0sXG4gIHsgeDogMzI1LCB5OiAzMiwgcjogMjQsIGc6IDExOSwgYjogMjQyIH0sXG4gIHsgeDogMzMxLCB5OiAxNSwgcjogMjQsIGc6IDExOSwgYjogMjQyIH0sXG4gIHsgeDogMzI0LCB5OiAxMiwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDM0NSwgeTogMTEsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAzMjMsIHk6IDE5LCByOiAyNCwgZzogMTE5LCBiOiAyNDIgfSxcbiAgeyB4OiAzMzAsIHk6IDIzLCByOiAyNCwgZzogMTE5LCBiOiAyNDIgfSxcblxuICAvLyBiZ1xuICB7IHg6IDczLCB5OiAxMDIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1MiwgeTogMjYxLCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG4gIHsgeDogMzEyLCB5OiAzMTUsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiA1OTEsIHk6IDE5NywgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDQ5MiwgeTogNjIsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAzMTgsIHk6IDg2LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG5cbiAgLy8gbG9naW4gYnRuIGJnXG4gIHsgeDogMjAzLCB5OiAxOTQsIHI6IDI0LCBnOiAxMTksIGI6IDI0MiB9LFxuICB7IHg6IDQzMywgeTogMTk3LCByOiAyNCwgZzogMTE5LCBiOiAyNDIgfSxcbl0pO1xuXG5jb25zdCBnb29nbGVMb2dJbjkwID0gbmV3IFBhZ2UoJ2dvb2dsZUxvZ0luOTAnLCBbXG4gIC8vIGdvb2dsZSBsb2dvXG4gIHsgeDogMjk1LCB5OiA2NCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDMwNiwgeTogNjcsIHI6IDI1NSwgZzogMjU1LCBiOiAyNTUgfSxcbiAgeyB4OiAzMTgsIHk6IDY4LCByOiAyNTEsIGc6IDE4OCwgYjogNSB9LFxuICB7IHg6IDMyMSwgeTogNjgsIHI6IDI1MywgZzogMjIxLCBiOiAxMzAgfSxcbiAgeyB4OiAzMjksIHk6IDY4LCByOiA2NiwgZzogMTMzLCBiOiAyNDQgfSxcbiAgeyB4OiAzMzUsIHk6IDY4LCByOiAyMzQsIGc6IDY3LCBiOiA1MyB9LFxuXG4gIC8vIGJnXG4gIHsgeDogOTQsIHk6IDMzLCByOiA3NSwgZzogMTI5LCBiOiAyMTggfSxcbiAgeyB4OiA2NywgeTogMjI3LCByOiA3OSwgZzogMTMyLCBiOiAyMjEgfSxcbiAgeyB4OiAxNDIsIHk6IDMyOSwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuICB7IHg6IDU1OSwgeTogMzM4LCByOiA2MSwgZzogMTE0LCBiOiAyMDMgfSxcbiAgeyB4OiA1MzksIHk6IDgwLCByOiA2MywgZzogMTE3LCBiOiAyMDUgfSxcbiAgeyB4OiAzNTAsIHk6IDMzNCwgcjogMjU1LCBnOiAyNTUsIGI6IDI1NSB9LFxuXG4gIC8vIGxvZ2luIGJ0biBiZ1xuICB7IHg6IDQ3OCwgeTogMjI0LCByOiAyNiwgZzogMTE1LCBiOiAyMzIgfSxcbl0pO1xuXG4vLyBUT0RPXG4vLyBjYXB0Y2hhXG5jb25zdCBsb2dJbkNhcHRjaGFJbU5vdFJvYm90ID0gbmV3IFBhZ2UoXG4gICdsb2dJbkNhcHRjaGFJbU5vdFJvYm90JyxcbiAgW1xuICAgIC8vIGNhcHRjaGEgbG9nb1xuICAgIHsgeDogMzg0LCB5OiAxOTMsIHI6IDI0OSwgZzogMjQ5LCBiOiAyNDkgfSxcbiAgICB7IHg6IDM3NCwgeTogMjAyLCByOiAyMTYsIGc6IDIyNiwgYjogMjQyIH0sXG4gICAgeyB4OiAzODIsIHk6IDIwNCwgcjogMjQ5LCBnOiAyNDksIGI6IDI0OSB9LFxuXG4gICAgLy8gbm90IGNoZWNrZWRcbiAgICB7IHg6IDI0NiwgeTogMjA1LCByOiAyNTUsIGc6IDI1NSwgYjogMjU1IH0sXG5cbiAgICAvLyBiZyBuZXh0XG4gICAgeyB4OiA1OSwgeTogMjc0LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgICB7IHg6IDU3NCwgeTogMjc5LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcblxuICAgIC8vIGJnXG4gICAgeyB4OiA0NCwgeTogMzMxLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiA2MTUsIHk6IDMzNywgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICBdLFxuICB7IHg6IDI0NywgeTogMjA1IH0sIC8vIGNoZWNrXG4gIHsgeDogMjQ3LCB5OiAyMDUgfSAvLyBjaGVja1xuKTtcbmNvbnN0IGxvZ0luQ2FwdGNoYUltTm90Um9ib3RDaGVja2VkID0gbmV3IFBhZ2UoXG4gICdsb2dJbkNhcHRjaGFJbU5vdFJvYm90Q2hlY2tlZCcsXG4gIFtcbiAgICAvLyBjYXB0Y2hhIGxvZ29cbiAgICB7IHg6IDM3NCwgeTogMTk4LCByOiAyNDksIGc6IDI0OSwgYjogMjQ5IH0sXG4gICAgeyB4OiAzODQsIHk6IDIwMywgcjogMjM5LCBnOiAyMzksIGI6IDIzOSB9LFxuICAgIHsgeDogMzg0LCB5OiAxOTcsIHI6IDM1LCBnOiA2NSwgYjogMTYxIH0sXG5cbiAgICAvLyBiZyBjYXB0Y2hhIGJsb2NrXG4gICAgeyB4OiAyNzAsIHk6IDE5MSwgcjogMjQ5LCBnOiAyNDksIGI6IDI0OSB9LFxuICAgIHsgeDogMzM1LCB5OiAyMTgsIHI6IDI0OSwgZzogMjQ5LCBiOiAyNDkgfSxcbiAgICB7IHg6IDIwOSwgeTogMjA3LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiAyOTEsIHk6IDE3MCwgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICAgIHsgeDogMzI4LCB5OiAyMzMsIHI6IDIzOCwgZzogMjM4LCBiOiAyMzggfSxcbiAgICB7IHg6IDQ0NywgeTogMTk2LCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG5cbiAgICAvLyBiZyBuZXh0XG4gICAgeyB4OiA1OSwgeTogMjc0LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcbiAgICB7IHg6IDU3NCwgeTogMjc5LCByOiA0MywgZzogMTMyLCBiOiAyMTYgfSxcblxuICAgIC8vIGJnXG4gICAgeyB4OiA0NCwgeTogMzMxLCByOiAyMzgsIGc6IDIzOCwgYjogMjM4IH0sXG4gICAgeyB4OiA2MTUsIHk6IDMzNywgcjogMjM4LCBnOiAyMzgsIGI6IDIzOCB9LFxuICBdLFxuICB7IHg6IDMzMCwgeTogMjcwIH0sIC8vIG5leHRcbiAgeyB4OiAzMzAsIHk6IDI3MCB9IC8vIG5leHRcbik7XG4iLCJleHBvcnQgZW51bSBUQVNLUyB7XG4gIHJlc3RhcnRBcHBQZXJEYXkgPSAncmVzdGFydEFwcFBlckRheScsXG4gIHNldHRpbmdEZWZhdWx0ID0gJ3NldHRpbmdEZWZhdWx0JyxcbiAgc2V0dGluZ1Jlc2V0TGVhZ3VlUHJvZ3Jlc3MgPSAnc2V0dGluZ1Jlc2V0TGVhZ3VlUHJvZ3Jlc3MnLFxuICBwbGF5TGVhZ3VlR2FtZSA9ICdwbGF5TGVhZ3VlR2FtZScsXG4gIHBsYXlCYXR0bGVHYW1lID0gJ3BsYXlCYXR0bGVHYW1lJyxcbiAgYWRSZXdhcmQgPSAnYWRSZXdhcmQnLFxuICB3ZWVrbHlNaXNzaW9uID0gJ3dlZWtseU1pc3Npb24nLFxuICByZWNlaXZlSW5ib3ggPSAncmVjZWl2ZUluYm94JyxcbiAgc3RheUluTG9naW4gPSAnc3RheUluTG9naW4nLFxuICB1cGxvYWRDYWNoZSA9ICd1cGxvYWRDYWNoZScsXG4gIHNlbmRBbGl2ZUV2ZW50ID0gJ3NlbmRBbGl2ZUV2ZW50JyxcbiAgc2VuZFdhaXRFdmVudCA9ICdzZW5kV2FpdEV2ZW50Jyxcbn1cbiIsImltcG9ydCB7IFV0aWxzLCBQYWdlIH0gZnJvbSAnUmVyb3V0ZXInO1xuaW1wb3J0IHsgc3RhdGUsIHJlcm91dGVyIH0gZnJvbSAnLi4vbW9kdWxlcyc7XG5cbmltcG9ydCB7IFRBU0tTIH0gZnJvbSAnLi90YXNrTmFtZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBpc1NhbWVDb2xvciB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFRhc2soKSB7XG4gIHJlcm91dGVyLmFkZFRhc2soe1xuICAgIG5hbWU6IFRBU0tTLndlZWtseU1pc3Npb24sXG4gICAgLy8gbWF4VGFza1J1blRpbWVzOiAxLFxuICAgIG1pblJvdW5kSW50ZXJ2YWw6IENPTlNUQU5UUy5kYXlJbk1zLFxuICAgIG1heFRhc2tEdXJpbmc6IDMwICogQ09OU1RBTlRTLm1pbnV0ZUluTXMsXG4gICAgZm9yY2VTdG9wOiB0cnVlLFxuICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFkZFJvdXRlcygpIHtcbiAgcmVyb3V0ZXIuYWRkUm91dGUoe1xuICAgIHBhdGg6IGAvJHthY2hpZXZlbWVudE1pc3Npb24ubmFtZX1gLFxuICAgIG1hdGNoOiBhY2hpZXZlbWVudE1pc3Npb24sXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UpID0+IHtcbiAgICAgIHN0YXRlLmNoZWNrVXBsb2FkU2Vzc2lvbigpO1xuICAgICAgaWYgKGNvbnRleHQudGFzay5uYW1lICE9PSBUQVNLUy53ZWVrbHlNaXNzaW9uKSB7XG4gICAgICAgIHJlcm91dGVyLmdvQmFjayhhY2hpZXZlbWVudE1pc3Npb24pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICAvLyBjb2xsZWN0IGRhaWx5IG9uZSBpZiBhdmFpbGFibGVcbiAgICAgIGNvbnN0IHggPSA2MTM7XG4gICAgICBjb25zdCBjYW5Db2xsZWN0Q29sb3IgPSB7IHI6IDgsIGc6IDEyNSwgYjogMjU1IH07XG4gICAgICBmb3IgKGxldCB5ID0gMTI4OyB5IDwgMjYwOyB5ICs9IDQ0KSB7XG4gICAgICAgIGNvbnN0IGNhbkNvbGxlY3QgPSBpc1NhbWVDb2xvcihpbWFnZSwgeyB4LCB5LCAuLi5jYW5Db2xsZWN0Q29sb3IgfSk7XG4gICAgICAgIGlmIChjYW5Db2xsZWN0KSB7XG4gICAgICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh7IHgsIHkgfSk7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2NvbGxlY3QnKTtcbiAgICAgICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHJlcm91dGVyLmdvTmV4dChhY2hpZXZlbWVudE1pc3Npb24pO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7bWF4Q3VycmVuY3lBbGVydC5uYW1lfWAsXG4gICAgbWF0Y2g6IG1heEN1cnJlbmN5QWxlcnQsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSA9PT0gVEFTS1Mud2Vla2x5TWlzc2lvbikge1xuICAgICAgICBjb25zb2xlLmxvZygnY2Fubm90IGNvbGxlY3QgbW9yZSBjdXJyZW5jeSwgc2tpcCB3ZWVrbHkgbWlzc2lvbicpO1xuICAgICAgICBmaW5pc2hSb3VuZCh0cnVlKTtcbiAgICAgIH1cbiAgICAgIHJlcm91dGVyLmdvQmFjayhtYXhDdXJyZW5jeUFsZXJ0KTtcbiAgICAgIHN0YXRlLm9uUnVubmluZygpO1xuICAgIH0sXG4gIH0pO1xuXG4gIHJlcm91dGVyLmFkZFJvdXRlKHtcbiAgICBwYXRoOiBgLyR7d2Vla2x5TWlzc2lvbkJveC5uYW1lfWAsXG4gICAgbWF0Y2g6IHdlZWtseU1pc3Npb25Cb3gsXG4gICAgYWN0aW9uOiAoY29udGV4dCwgaW1hZ2UsIG1hdGNoZWQsIGZpbmlzaFJvdW5kKSA9PiB7XG4gICAgICBzdGF0ZS5jaGVja1VwbG9hZFNlc3Npb24oKTtcbiAgICAgIGlmIChjb250ZXh0LnRhc2submFtZSAhPT0gVEFTS1Mud2Vla2x5TWlzc2lvbikge1xuICAgICAgICByZXJvdXRlci5nb0JhY2sod2Vla2x5TWlzc2lvbkJveCk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgY29uc3QgY2FuQ29sbGVjdENvbG9yID0geyByOiAxODksIGc6IDE5NCwgYjogMTk3IH07XG4gICAgICBjb25zdCBbeCwgeV0gPSBbMjcsIDExNV07XG4gICAgICBjb25zdCBbdywgaF0gPSBbMTk4LCA3NV07XG4gICAgICAvLyBjbGljayBvcGVuQm94IG9ubHkgd2hlbiBhbGwgbWlzc2lvbiBpcyBjb21wbGV0ZVxuICAgICAgLy8gYmMgaXQgaXMgYWJsZWQgb25jZSBhIHdlZWtcbiAgICAgIGZvciAodmFyIGR4ID0gMDsgZHggPCAzICogdzsgZHggKz0gdykge1xuICAgICAgICBmb3IgKHZhciBkeSA9IDA7IGR5IDwgMyAqIGg7IGR5ICs9IGgpIHtcbiAgICAgICAgICBjb25zdCBjYW5Db2xsZWN0ID0gaXNTYW1lQ29sb3IoaW1hZ2UsIHsgeDogeCArIGR4LCB5OiB5ICsgZHksIC4uLmNhbkNvbGxlY3RDb2xvciB9KTtcbiAgICAgICAgICBpZiAoIWNhbkNvbGxlY3QpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCd3YWl0IGFsbCB3ZWVrbHkgbWlzc2lvbiBjb21wbGV0ZScpO1xuICAgICAgICAgICAgZmluaXNoUm91bmQodHJ1ZSk7XG4gICAgICAgICAgICBzdGF0ZS5vblJ1bm5pbmcoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgY29uc29sZS5sb2coJ2NsaWNrIG9wZW4nKTtcbiAgICAgIHJlcm91dGVyLnNjcmVlbi50YXAod2Vla2x5TWlzc2lvbkJveEJ0bnMub3BlbkJveCk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuXG4gICAgICAvLyBUT0RPOiBsZXQgdXNlciBzZWxlY3QgdGhlIGl0ZW0gdGhleSB3YW50IGluIHRoZSBmdXR1cmVcbiAgICAgIC8vIHNlbGVjdCB0aGUgbGVmdCBib3R0b20gb25lXG4gICAgICBjb25zb2xlLmxvZygnc2VsZWN0IHJpZ2h0IGJvdHRvbSBpdGVtJyk7XG4gICAgICByZXJvdXRlci5zY3JlZW4udGFwKHsgeDogeCArIDIgKiB3LCB5OiB5ICsgMiAqIGggfSk7XG4gICAgICBVdGlscy5zbGVlcChDT05TVEFOVFMuc2xlZXBNZWRpdW0pO1xuXG4gICAgICBjb25zb2xlLmxvZygncmVjZWl2ZSByaWdodCBib3R0b20gaXRlbScpO1xuICAgICAgcmVyb3V0ZXIuc2NyZWVuLnRhcCh3ZWVrbHlNaXNzaW9uQm94QnRucy5yZWNlaXZlUmV3YXJkKTtcblxuICAgICAgLy8gZW50ZXIgcmVjZWl2ZSBjb25maXJtIHBhZ2VcbiAgICAgIGZpbmlzaFJvdW5kKHRydWUpO1xuICAgICAgc3RhdGUub25SdW5uaW5nKCk7XG4gICAgfSxcblxuICAgIGRlYnVnOiB0cnVlLFxuICB9KTtcbn1cblxuY29uc3QgYWNoaWV2ZW1lbnRNaXNzaW9uID0gbmV3IFBhZ2UoXG4gICdhY2hpZXZlbWVudE1pc3Npb24nLFxuICBbXG4gICAgLy8gdG9kYXkgbWlzc2lvbiBiZ1xuICAgIHsgeDogMjM1LCB5OiA1NSwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICAgIHsgeDogMjMxLCB5OiA3MSwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuICAgIHsgeDogNTg4LCB5OiA3MiwgcjogMjQ3LCBnOiAyNDcsIGI6IDI0NyB9LFxuXG4gICAgLy8gbGVmdCBzZWN0aW9uIHdvcmxkIHJlY29yZCBiZyBsZWZ0IGJvdHRvbVxuICAgIHsgeDogMTYsIHk6IDI5MywgcjogMjUsIGc6IDQwLCBiOiA3NCB9LFxuXG4gICAgLy8gcGxheWVyIGhlYWRcbiAgICB7IHg6IDc1LCB5OiA4OCwgcjogNjYsIGc6IDU5LCBiOiA5MCB9LFxuXG4gICAgLy8gYmFja1xuICAgIHsgeDogMzEsIHk6IDMxNiwgcjogMjE0LCBnOiAyMTksIGI6IDIxNCB9LFxuICBdLFxuICB7IHg6IDU4MCwgeTogMjc4IH0sIC8vIGNvbXBsZXRlIHdlZWtseSBtaXNzaW9uIGJveFxuICB7IHg6IDQxLCB5OiAzMjAgfVxuKTtcblxuY29uc3Qgd2Vla2x5TWlzc2lvbkJveCA9IG5ldyBQYWdlKFxuICAnd2Vla2x5TWlzc2lvbkJveCcsXG4gIFtcbiAgICAvLyBuYXYgYmFyIHJpZ2h0IHBhcnQgKHAsIHN0YXIgLi4uKVxuICAgIHsgeDogMjk5LCB5OiAxMywgcjogMjE0LCBnOiAyMTQsIGI6IDIxNCB9LFxuICAgIHsgeDogMzE4LCB5OiA5LCByOiAyMzgsIGc6IDIzNCwgYjogMjM4IH0sXG4gICAgeyB4OiAzMTMsIHk6IDksIHI6IDIzOCwgZzogMjM0LCBiOiAyMzggfSxcbiAgICB7IHg6IDM5MiwgeTogOSwgcjogMjMyLCBnOiAyMjksIGI6IDIzMiB9LFxuICAgIHsgeDogMzg1LCB5OiAyLCByOiAyMTQsIGc6IDIxNCwgYjogMjE0IH0sXG4gICAgeyB4OiA0OTYsIHk6IDEzLCByOiAyMzgsIGc6IDE2NiwgYjogMTYgfSxcbiAgICB7IHg6IDQ4MywgeTogNCwgcjogMjE0LCBnOiAyMTksIGI6IDIxNiB9LFxuICAgIHsgeDogNTk3LCB5OiAxMCwgcjogMjEzLCBnOiAyMjYsIGI6IDIzOCB9LFxuICAgIHsgeDogNjI4LCB5OiAxNCwgcjogMjE0LCBnOiAyMTEsIGI6IDIxNCB9LFxuXG4gICAgLy8gYmcgb2YgdGFibGVcbiAgICB7IHg6IDE0LCB5OiA4MiwgcjogNjUsIGc6IDY1LCBiOiA2NyB9LFxuICAgIHsgeDogMTYsIHk6IDI4OCwgcjogMzMsIGc6IDQ0LCBiOiA1OCB9LFxuICAgIHsgeDogNjE1LCB5OiAxMDAsIHI6IDMzLCBnOiAzNiwgYjogNDEgfSxcbiAgICB7IHg6IDYxMywgeTogMjgzLCByOiAzMywgZzogNDQsIGI6IDU4IH0sXG5cbiAgICAvLyBkZXNjcmlwdGlvbiBmb290ZXJcbiAgICB7IHg6IDgwLCB5OiAzMDcsIHI6IDIwMiwgZzogMjAxLCBiOiAxOTYgfSxcbiAgICB7IHg6IDg5LCB5OiAzMTUsIHI6IDQ5LCBnOiA2MSwgYjogMzQgfSxcbiAgICB7IHg6IDEwMywgeTogMzE5LCByOiA3MywgZzogODMsIGI6IDY2IH0sXG5cbiAgICAvLyBiYWNrIGJ0blxuICAgIHsgeDogMjQsIHk6IDMxNCwgcjogMjE0LCBnOiAyMTQsIGI6IDIxNCB9LFxuICAgIHsgeDogNDIsIHk6IDMxNywgcjogMjE0LCBnOiAyMTksIGI6IDIxNCB9LFxuICAgIHsgeDogMzEsIHk6IDMzMSwgcjogMjE0LCBnOiAyMTksIGI6IDIxNCB9LFxuICBdLFxuICB7IHg6IDQxLCB5OiAzMjAgfSwgLy8gYmFjayBidG5cbiAgeyB4OiA0MSwgeTogMzIwIH1cbik7XG5cbmNvbnN0IHdlZWtseU1pc3Npb25Cb3hCdG5zID0ge1xuICBvcGVuQm94OiB7IHg6IDQxOCwgeTogMzI1IH0sXG4gIHJlY2VpdmVSZXdhcmQ6IHsgeDogNTYxLCB5OiAzMjYgfSxcbn07XG5cbmNvbnN0IG1heEN1cnJlbmN5QWxlcnQgPSBuZXcgUGFnZShcbiAgJ21heEN1cnJlbmN5QWxlcnQnLFxuICBbXG4gICAgLy8gbWF4IGN1cnJlbmN5IGFsZXJ0IHRpdGxlXG4gICAgeyB4OiAyMzIsIHk6IDQ2LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAyNzQsIHk6IDUyLCByOiAxMzcsIGc6IDEzOSwgYjogMTQ2IH0sXG4gICAgeyB4OiAzMTQsIHk6IDUzLCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG4gICAgeyB4OiAzNzYsIHk6IDUzLCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiAzOTUsIHk6IDUzLCByOiAxNiwgZzogMjQsIGI6IDMzIH0sXG4gICAgeyB4OiA0NTUsIHk6IDU1LCByOiAxOTcsIGc6IDE5OCwgYjogMjA2IH0sXG5cbiAgICAvLyB4XG4gICAgeyB4OiA2MDUsIHk6IDQ0LCByOiA3NCwgZzogNzIsIGI6IDc0IH0sXG5cbiAgICAvLyBva1xuICAgIHsgeDogMjkyLCB5OiAzMTIsIHI6IDgsIGc6IDEwNSwgYjogMjQ3IH0sXG4gICAgeyB4OiAzMjMsIHk6IDMwOSwgcjogMjU0LCBnOiAyNTQsIGI6IDI1NSB9LFxuICAgIHsgeDogMzYxLCB5OiAzMTIsIHI6IDgsIGc6IDEwNSwgYjogMjQ3IH0sXG4gIF0sXG4gIHsgeDogNjA1LCB5OiA0NiB9LCAvLyB4XG4gIHsgeDogNjA1LCB5OiA0NiB9XG4pO1xuIiwiaW1wb3J0IHsgVXRpbHMsIFBhZ2UgfSBmcm9tICdSZXJvdXRlcic7XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVIZXgoaGV4OiBzdHJpbmcpIHtcbiAgdHJ5IHtcbiAgICBpZiAodHlwZW9mIHhEZWNvZGVIZXggIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4geERlY29kZUhleChoZXgpIHx8ICcnO1xuICAgIH1cbiAgfSBjYXRjaCAoZSkge31cbiAgcmV0dXJuICcnO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaXNJbWFnZU1hdGNoQ29sb3JDbnQoXG4gIGltZzogSW1hZ2UsXG4gIGNvbG9yQ250czogW2xlZnRUb3A6IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSwgcmlnaHRCb3R0b206IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfSwgY29sb3JDbnQ6IHsgW2NvbG9yOiBzdHJpbmddOiBudW1iZXIgfV1bXVxuKSB7XG4gIGZvciAoY29uc3QgW2xlZnRUb3AsIHJpZ2h0Qm90dG9tLCBjb2xvckNudEV4cGVjdGVkXSBvZiBjb2xvckNudHMpIHtcbiAgICBjb25zdCBjb2xvckNudCA9IGdldENvbG9yQ291bnRJblJhbmdlKGltZywgbGVmdFRvcCwgcmlnaHRCb3R0b20pO1xuICAgIGZvciAoY29uc3QgayBvZiBPYmplY3Qua2V5cyhjb2xvckNudEV4cGVjdGVkKSkge1xuICAgICAgY29uc3QgZXhwZWN0ZWQgPSBjb2xvckNudEV4cGVjdGVkW2sgYXMga2V5b2YgdHlwZW9mIGNvbG9yQ250RXhwZWN0ZWRdO1xuICAgICAgY29uc3QgYWN0dWFsID0gY29sb3JDbnRba10gfHwgMDtcbiAgICAgIGlmIChNYXRoLmFicyhleHBlY3RlZCAtIGFjdHVhbCkgPiAyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGAke2t9IGV4cGVjdGVkICR7ZXhwZWN0ZWR9IGFjdHVhbCAke2FjdHVhbH1gKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIFNhdmVQYWdlUmVmZXJlbmNlKGltZzogSW1hZ2UsIHBhZ2U6IFBhZ2UpIHtcbiAgY29uc3QgeyBuYW1lLCBwb2ludHMgfSA9IHBhZ2U7XG4gIGNvbnN0IHJhZGl1cyA9IDM7XG4gIGNvbnN0IHJnYmE6IFtudW1iZXIsIG51bWJlciwgbnVtYmVyLCBudW1iZXJdID0gWzI1NSwgMjAsIDE0NywgMF07XG4gIGZvciAoY29uc3QgeyB4LCB5IH0gb2YgcG9pbnRzKSB7XG4gICAgZHJhd0NpcmNsZShpbWcsIHgsIHksIHJhZGl1cywgLi4ucmdiYSk7XG4gIH1cbiAgc2F2ZUltYWdlKGltZywgYC9zZGNhcmQvUGljdHVyZXMvU2NyZWVuc2hvdHMvcm9ib3Rtb24vbWxiLyR7bmFtZX0ucG5nYCk7XG4gIGNvbnNvbGUubG9nKGBbU2F2ZVBhZ2VSZWZlcmVuY2VdOiAke25hbWV9YCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleGVjdXRlQ29tbWFuZHMoLi4uY29tbWFuZHM6IHN0cmluZ1tdKTogc3RyaW5nW10ge1xuICBjb25zdCByZXN1bHRzOiBzdHJpbmdbXSA9IFtdO1xuICBmb3IgKGNvbnN0IGNvbW1hbmQgb2YgY29tbWFuZHMpIHtcbiAgICBjb25zdCByZXMgPSBleGVjdXRlKGNvbW1hbmQpO1xuICAgIGlmIChlbmRzV2l0aChyZXMsICdleGl0IHN0YXR1cyAxJykpIHtcbiAgICAgIGNvbnNvbGUubG9nKGBbRXJyb3JdOiAke2NvbW1hbmR9IDpcXG4gJHtyZXN9XFxuYCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGNvbnNvbGUubG9nKGBbT2tdOiAke2NvbW1hbmR9IDpcXG4gJHtyZXN9XFxuYCk7XG4gICAgICBjb25zb2xlLmxvZyhgW09rXTogJHtjb21tYW5kfWApO1xuICAgIH1cbiAgICByZXN1bHRzLnB1c2gocmVzKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVuZHNXaXRoKHN0cjogc3RyaW5nLCBzdWZmaXg6IHN0cmluZyk6IGJvb2xlYW4ge1xuICByZXR1cm4gc3RyLmluZGV4T2Yoc3VmZml4LCBzdHIubGVuZ3RoIC0gc3VmZml4Lmxlbmd0aCkgIT09IC0xO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYXJyYXlGaW5kPFQ+KGFycjogVFtdLCBjb25kaXRpb246IChlbDogVCkgPT4gYm9vbGVhbik6IFQgfCB1bmRlZmluZWQge1xuICBmb3IgKGNvbnN0IGVsIG9mIGFycikge1xuICAgIGlmIChjb25kaXRpb24oZWwpKSB7XG4gICAgICByZXR1cm4gZWw7XG4gICAgfVxuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBpc1NhbWVDb2xvcihpbWFnZTogSW1hZ2UgfCBSR0IsIHRhcmdldDogWFlSR0IgfCBSR0IsIHRocmVzOiBudW1iZXIgPSAwLjgpOiBib29sZWFuIHtcbiAgbGV0IGltYWdlUkdCOiBSR0IgfCB1bmRlZmluZWQ7XG4gIGlmICgncicgaW4gaW1hZ2UpIHtcbiAgICAvLyBpbWFnZSBpcyBSR0JcbiAgICBpbWFnZVJHQiA9IGltYWdlO1xuICB9IGVsc2UgaWYgKCd4JyBpbiB0YXJnZXQpIHtcbiAgICAvLyBpbWFnZSBpcyBJbWFnZSwgdGFyZ2V0IGlzIFhZUkdCXG4gICAgaW1hZ2VSR0IgPSBnZXRJbWFnZUNvbG9yKGltYWdlLCB0YXJnZXQueCwgdGFyZ2V0LnkpO1xuICB9XG5cbiAgaWYgKGltYWdlUkdCID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3RhcmdldCBpcyBub3QgWFlSR0InKTtcbiAgfVxuXG4gIGNvbnN0IHNjb3JlID0gVXRpbHMuaWRlbnRpdHlDb2xvcihpbWFnZVJHQiwgdGFyZ2V0KTtcbiAgcmV0dXJuIHNjb3JlID4gdGhyZXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRQb2ludHNJblJhbmdlKGltYWdlOiBJbWFnZSwgbGVmdFRvcDogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9LCByaWdodEJvdHRvbTogeyB4OiBudW1iZXI7IHk6IG51bWJlciB9KTogWFlSR0JbXSB7XG4gIGNvbnN0IHBvaW50czogWFlSR0JbXSA9IFtdO1xuICBjb25zdCB7IHg6IHgxLCB5OiB5MSB9ID0gbGVmdFRvcDtcbiAgY29uc3QgeyB4OiB4MiwgeTogeTIgfSA9IHJpZ2h0Qm90dG9tO1xuICBmb3IgKGxldCB4ID0geDE7IHggPD0geDI7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSB5MTsgeSA8PSB5MjsgeSsrKSB7XG4gICAgICBjb25zdCB7IHIsIGcsIGIgfSA9IGdldEltYWdlQ29sb3IoaW1hZ2UsIHgsIHkpO1xuICAgICAgcG9pbnRzLnB1c2goeyB4LCB5LCByLCBnLCBiIH0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcG9pbnRzO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0Q29sb3JDb3VudEluUmFuZ2UoaW1hZ2U6IEltYWdlLCBsZWZ0VG9wOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyIH0sIHJpZ2h0Qm90dG9tOiB7IHg6IG51bWJlcjsgeTogbnVtYmVyIH0pOiB7IFtjb2xvcjogc3RyaW5nXTogbnVtYmVyIH0ge1xuICBjb25zdCBjbnQ6IHsgW2NvbG9yOiBzdHJpbmddOiBudW1iZXIgfSA9IHt9O1xuICBjb25zdCB7IHg6IHgxLCB5OiB5MSB9ID0gbGVmdFRvcDtcbiAgY29uc3QgeyB4OiB4MiwgeTogeTIgfSA9IHJpZ2h0Qm90dG9tO1xuICBmb3IgKGxldCB4ID0geDE7IHggPD0geDI7IHgrKykge1xuICAgIGZvciAobGV0IHkgPSB5MTsgeSA8PSB5MjsgeSsrKSB7XG4gICAgICBjb25zdCB7IHIsIGcsIGIgfSA9IGdldEltYWdlQ29sb3IoaW1hZ2UsIHgsIHkpO1xuICAgICAgY29uc3QgY29sb3IgPSBgJHtyfS0ke2d9LSR7Yn1gO1xuICAgICAgaWYgKGNudFtjb2xvcl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjbnRbY29sb3JdID0gMDtcbiAgICAgIH1cbiAgICAgIGNudFtjb2xvcl0rKztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGNudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzU2FtZUNvbG9yQ291bnQoY250MTogeyBbY29sb3I6IHN0cmluZ106IG51bWJlciB9LCBjbnQyOiB7IFtjb2xvcjogc3RyaW5nXTogbnVtYmVyIH0pOiBib29sZWFuIHtcbiAgY29uc3Qga2V5czEgPSBPYmplY3Qua2V5cyhjbnQxKTtcbiAgY29uc3Qga2V5czIgPSBPYmplY3Qua2V5cyhjbnQyKTtcbiAgaWYgKGtleXMxLmxlbmd0aCAhPT0ga2V5czIubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGZvciAoY29uc3Qga2V5IG9mIGtleXMxKSB7XG4gICAgaWYgKGNudDFba2V5XSAhPT0gY250MltrZXldKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIHJldHVybiB0cnVlO1xufVxuIiwiZXhwb3J0IGNvbnN0IEdJVF9WRVJTSU9OID0gJzI1MDMwMV8xJztcbmV4cG9ydCBjb25zdCBQUk9EVUNUSU9OX1ZFUlNJT05fQ09ERTogc3RyaW5nID0gJzE1LjY5JztcbiIsIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCcpO1xudmFyIGVudHJ5VW5iaW5kID0gcmVxdWlyZSgnLi4vLi4vaW50ZXJuYWxzL2VudHJ5LXVuYmluZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGVudHJ5VW5iaW5kKCdBcnJheScsICdmaW5kSW5kZXgnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbicpO1xudmFyIHBhdGggPSByZXF1aXJlKCcuLi8uLi9pbnRlcm5hbHMvcGF0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGguT2JqZWN0LmFzc2lnbjtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgdHJ5VG9TdHJpbmcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdHJ5LXRvLXN0cmluZycpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxuLy8gYEFzc2VydDogSXNDYWxsYWJsZShhcmd1bWVudCkgaXMgdHJ1ZWBcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIGlmIChpc0NhbGxhYmxlKGFyZ3VtZW50KSkgcmV0dXJuIGFyZ3VtZW50O1xuICB0aHJvdyBuZXcgJFR5cGVFcnJvcih0cnlUb1N0cmluZyhhcmd1bWVudCkgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uJyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHdlbGxLbm93blN5bWJvbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy93ZWxsLWtub3duLXN5bWJvbCcpO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtY3JlYXRlJyk7XG52YXIgZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpLmY7XG5cbnZhciBVTlNDT1BBQkxFUyA9IHdlbGxLbm93blN5bWJvbCgndW5zY29wYWJsZXMnKTtcbnZhciBBcnJheVByb3RvdHlwZSA9IEFycmF5LnByb3RvdHlwZTtcblxuLy8gQXJyYXkucHJvdG90eXBlW0BAdW5zY29wYWJsZXNdXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS1AQHVuc2NvcGFibGVzXG5pZiAoQXJyYXlQcm90b3R5cGVbVU5TQ09QQUJMRVNdID09PSB1bmRlZmluZWQpIHtcbiAgZGVmaW5lUHJvcGVydHkoQXJyYXlQcm90b3R5cGUsIFVOU0NPUEFCTEVTLCB7XG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIHZhbHVlOiBjcmVhdGUobnVsbClcbiAgfSk7XG59XG5cbi8vIGFkZCBhIGtleSB0byBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICBBcnJheVByb3RvdHlwZVtVTlNDT1BBQkxFU11ba2V5XSA9IHRydWU7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xuXG52YXIgJFN0cmluZyA9IFN0cmluZztcbnZhciAkVHlwZUVycm9yID0gVHlwZUVycm9yO1xuXG4vLyBgQXNzZXJ0OiBUeXBlKGFyZ3VtZW50KSBpcyBPYmplY3RgXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICBpZiAoaXNPYmplY3QoYXJndW1lbnQpKSByZXR1cm4gYXJndW1lbnQ7XG4gIHRocm93IG5ldyAkVHlwZUVycm9yKCRTdHJpbmcoYXJndW1lbnQpICsgJyBpcyBub3QgYW4gb2JqZWN0Jyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIGxlbmd0aE9mQXJyYXlMaWtlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2xlbmd0aC1vZi1hcnJheS1saWtlJyk7XG5cbi8vIGBBcnJheS5wcm90b3R5cGUueyBpbmRleE9mLCBpbmNsdWRlcyB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSW5kZXhlZE9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IGxlbmd0aE9mQXJyYXlMaWtlKE8pO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPT0gZWwpIHdoaWxlIChsZW5ndGggPiBpbmRleCkge1xuICAgICAgdmFsdWUgPSBPW2luZGV4KytdO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZSAtLSBOYU4gY2hlY2tcbiAgICAgIGlmICh2YWx1ZSAhPT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIHtcbiAgICAgIGlmICgoSVNfSU5DTFVERVMgfHwgaW5kZXggaW4gTykgJiYgT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5pbmNsdWRlc2AgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluY2x1ZGVzXG4gIGluY2x1ZGVzOiBjcmVhdGVNZXRob2QodHJ1ZSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuaW5kZXhPZmAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmluZGV4b2ZcbiAgaW5kZXhPZjogY3JlYXRlTWV0aG9kKGZhbHNlKVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBiaW5kID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtY29udGV4dCcpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIEluZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1vYmplY3QnKTtcbnZhciBsZW5ndGhPZkFycmF5TGlrZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9sZW5ndGgtb2YtYXJyYXktbGlrZScpO1xudmFyIGFycmF5U3BlY2llc0NyZWF0ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG52YXIgcHVzaCA9IHVuY3VycnlUaGlzKFtdLnB1c2gpO1xuXG4vLyBgQXJyYXkucHJvdG90eXBlLnsgZm9yRWFjaCwgbWFwLCBmaWx0ZXIsIHNvbWUsIGV2ZXJ5LCBmaW5kLCBmaW5kSW5kZXgsIGZpbHRlclJlamVjdCB9YCBtZXRob2RzIGltcGxlbWVudGF0aW9uXG52YXIgY3JlYXRlTWV0aG9kID0gZnVuY3Rpb24gKFRZUEUpIHtcbiAgdmFyIElTX01BUCA9IFRZUEUgPT09IDE7XG4gIHZhciBJU19GSUxURVIgPSBUWVBFID09PSAyO1xuICB2YXIgSVNfU09NRSA9IFRZUEUgPT09IDM7XG4gIHZhciBJU19FVkVSWSA9IFRZUEUgPT09IDQ7XG4gIHZhciBJU19GSU5EX0lOREVYID0gVFlQRSA9PT0gNjtcbiAgdmFyIElTX0ZJTFRFUl9SRUpFQ1QgPSBUWVBFID09PSA3O1xuICB2YXIgTk9fSE9MRVMgPSBUWVBFID09PSA1IHx8IElTX0ZJTkRfSU5ERVg7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGNhbGxiYWNrZm4sIHRoYXQsIHNwZWNpZmljQ3JlYXRlKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCgkdGhpcyk7XG4gICAgdmFyIHNlbGYgPSBJbmRleGVkT2JqZWN0KE8pO1xuICAgIHZhciBib3VuZEZ1bmN0aW9uID0gYmluZChjYWxsYmFja2ZuLCB0aGF0KTtcbiAgICB2YXIgbGVuZ3RoID0gbGVuZ3RoT2ZBcnJheUxpa2Uoc2VsZik7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgY3JlYXRlID0gc3BlY2lmaWNDcmVhdGUgfHwgYXJyYXlTcGVjaWVzQ3JlYXRlO1xuICAgIHZhciB0YXJnZXQgPSBJU19NQVAgPyBjcmVhdGUoJHRoaXMsIGxlbmd0aCkgOiBJU19GSUxURVIgfHwgSVNfRklMVEVSX1JFSkVDVCA/IGNyZWF0ZSgkdGhpcywgMCkgOiB1bmRlZmluZWQ7XG4gICAgdmFyIHZhbHVlLCByZXN1bHQ7XG4gICAgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChOT19IT0xFUyB8fCBpbmRleCBpbiBzZWxmKSB7XG4gICAgICB2YWx1ZSA9IHNlbGZbaW5kZXhdO1xuICAgICAgcmVzdWx0ID0gYm91bmRGdW5jdGlvbih2YWx1ZSwgaW5kZXgsIE8pO1xuICAgICAgaWYgKFRZUEUpIHtcbiAgICAgICAgaWYgKElTX01BUCkgdGFyZ2V0W2luZGV4XSA9IHJlc3VsdDsgLy8gbWFwXG4gICAgICAgIGVsc2UgaWYgKHJlc3VsdCkgc3dpdGNoIChUWVBFKSB7XG4gICAgICAgICAgY2FzZSAzOiByZXR1cm4gdHJ1ZTsgICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWx1ZTsgICAgICAgICAgICAgLy8gZmluZFxuICAgICAgICAgIGNhc2UgNjogcmV0dXJuIGluZGV4OyAgICAgICAgICAgICAvLyBmaW5kSW5kZXhcbiAgICAgICAgICBjYXNlIDI6IHB1c2godGFyZ2V0LCB2YWx1ZSk7ICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBzd2l0Y2ggKFRZUEUpIHtcbiAgICAgICAgICBjYXNlIDQ6IHJldHVybiBmYWxzZTsgICAgICAgICAgICAgLy8gZXZlcnlcbiAgICAgICAgICBjYXNlIDc6IHB1c2godGFyZ2V0LCB2YWx1ZSk7ICAgICAgLy8gZmlsdGVyUmVqZWN0XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIElTX0ZJTkRfSU5ERVggPyAtMSA6IElTX1NPTUUgfHwgSVNfRVZFUlkgPyBJU19FVkVSWSA6IHRhcmdldDtcbiAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAvLyBgQXJyYXkucHJvdG90eXBlLmZvckVhY2hgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5mb3JlYWNoXG4gIGZvckVhY2g6IGNyZWF0ZU1ldGhvZCgwKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5tYXBgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5tYXBcbiAgbWFwOiBjcmVhdGVNZXRob2QoMSksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZmlsdGVyYCBtZXRob2RcbiAgLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmlsdGVyXG4gIGZpbHRlcjogY3JlYXRlTWV0aG9kKDIpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLnNvbWVgIG1ldGhvZFxuICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5LnByb3RvdHlwZS5zb21lXG4gIHNvbWU6IGNyZWF0ZU1ldGhvZCgzKSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5ldmVyeWAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmV2ZXJ5XG4gIGV2ZXJ5OiBjcmVhdGVNZXRob2QoNCksXG4gIC8vIGBBcnJheS5wcm90b3R5cGUuZmluZGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZpbmRcbiAgZmluZDogY3JlYXRlTWV0aG9kKDUpLFxuICAvLyBgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleGAgbWV0aG9kXG4gIC8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtYXJyYXkucHJvdG90eXBlLmZpbmRJbmRleFxuICBmaW5kSW5kZXg6IGNyZWF0ZU1ldGhvZCg2KSxcbiAgLy8gYEFycmF5LnByb3RvdHlwZS5maWx0ZXJSZWplY3RgIG1ldGhvZFxuICAvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1hcnJheS1maWx0ZXJpbmdcbiAgZmlsdGVyUmVqZWN0OiBjcmVhdGVNZXRob2QoNylcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1hcnJheScpO1xudmFyIGlzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY29uc3RydWN0b3InKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTtcbnZhciAkQXJyYXkgPSBBcnJheTtcblxuLy8gYSBwYXJ0IG9mIGBBcnJheVNwZWNpZXNDcmVhdGVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheXNwZWNpZXNjcmVhdGVcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsQXJyYXkpIHtcbiAgdmFyIEM7XG4gIGlmIChpc0FycmF5KG9yaWdpbmFsQXJyYXkpKSB7XG4gICAgQyA9IG9yaWdpbmFsQXJyYXkuY29uc3RydWN0b3I7XG4gICAgLy8gY3Jvc3MtcmVhbG0gZmFsbGJhY2tcbiAgICBpZiAoaXNDb25zdHJ1Y3RvcihDKSAmJiAoQyA9PT0gJEFycmF5IHx8IGlzQXJyYXkoQy5wcm90b3R5cGUpKSkgQyA9IHVuZGVmaW5lZDtcbiAgICBlbHNlIGlmIChpc09iamVjdChDKSkge1xuICAgICAgQyA9IENbU1BFQ0lFU107XG4gICAgICBpZiAoQyA9PT0gbnVsbCkgQyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gcmV0dXJuIEMgPT09IHVuZGVmaW5lZCA/ICRBcnJheSA6IEM7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGFycmF5U3BlY2llc0NvbnN0cnVjdG9yID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FycmF5LXNwZWNpZXMtY29uc3RydWN0b3InKTtcblxuLy8gYEFycmF5U3BlY2llc0NyZWF0ZWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLWFycmF5c3BlY2llc2NyZWF0ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWxBcnJheSwgbGVuZ3RoKSB7XG4gIHJldHVybiBuZXcgKGFycmF5U3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsQXJyYXkpKShsZW5ndGggPT09IDAgPyAwIDogbGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG5cbnZhciB0b1N0cmluZyA9IHVuY3VycnlUaGlzKHt9LnRvU3RyaW5nKTtcbnZhciBzdHJpbmdTbGljZSA9IHVuY3VycnlUaGlzKCcnLnNsaWNlKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHN0cmluZ1NsaWNlKHRvU3RyaW5nKGl0KSwgOCwgLTEpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBUT19TVFJJTkdfVEFHX1NVUFBPUlQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tc3RyaW5nLXRhZy1zdXBwb3J0Jyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGNsYXNzb2ZSYXcgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFRPX1NUUklOR19UQUcgPSB3ZWxsS25vd25TeW1ib2woJ3RvU3RyaW5nVGFnJyk7XG52YXIgJE9iamVjdCA9IE9iamVjdDtcblxuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBDT1JSRUNUX0FSR1VNRU5UUyA9IGNsYXNzb2ZSYXcoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG59O1xuXG4vLyBnZXR0aW5nIHRhZyBmcm9tIEVTNisgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgXG5tb2R1bGUuZXhwb3J0cyA9IFRPX1NUUklOR19UQUdfU1VQUE9SVCA/IGNsYXNzb2ZSYXcgOiBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIHRhZywgcmVzdWx0O1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAodGFnID0gdHJ5R2V0KE8gPSAkT2JqZWN0KGl0KSwgVE9fU1RSSU5HX1RBRykpID09ICdzdHJpbmcnID8gdGFnXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBDT1JSRUNUX0FSR1VNRU5UUyA/IGNsYXNzb2ZSYXcoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAocmVzdWx0ID0gY2xhc3NvZlJhdyhPKSkgPT09ICdPYmplY3QnICYmIGlzQ2FsbGFibGUoTy5jYWxsZWUpID8gJ0FyZ3VtZW50cycgOiByZXN1bHQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgb3duS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vd24ta2V5cycpO1xudmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0YXJnZXQsIHNvdXJjZSwgZXhjZXB0aW9ucykge1xuICB2YXIga2V5cyA9IG93bktleXMoc291cmNlKTtcbiAgdmFyIGRlZmluZVByb3BlcnR5ID0gZGVmaW5lUHJvcGVydHlNb2R1bGUuZjtcbiAgdmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvck1vZHVsZS5mO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGtleXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIga2V5ID0ga2V5c1tpXTtcbiAgICBpZiAoIWhhc093bih0YXJnZXQsIGtleSkgJiYgIShleGNlcHRpb25zICYmIGhhc093bihleGNlcHRpb25zLCBrZXkpKSkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgIH1cbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGRlZmluZVByb3BlcnR5TW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1kZWZpbmUtcHJvcGVydHknKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcblxubW9kdWxlLmV4cG9ydHMgPSBERVNDUklQVE9SUyA/IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgcmV0dXJuIGRlZmluZVByb3BlcnR5TW9kdWxlLmYob2JqZWN0LCBrZXksIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcigxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnR5Jyk7XG52YXIgbWFrZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvbWFrZS1idWlsdC1pbicpO1xudmFyIGRlZmluZUdsb2JhbFByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RlZmluZS1nbG9iYWwtcHJvcGVydHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWx1ZSwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIG9wdGlvbnMgPSB7fTtcbiAgdmFyIHNpbXBsZSA9IG9wdGlvbnMuZW51bWVyYWJsZTtcbiAgdmFyIG5hbWUgPSBvcHRpb25zLm5hbWUgIT09IHVuZGVmaW5lZCA/IG9wdGlvbnMubmFtZSA6IGtleTtcbiAgaWYgKGlzQ2FsbGFibGUodmFsdWUpKSBtYWtlQnVpbHRJbih2YWx1ZSwgbmFtZSwgb3B0aW9ucyk7XG4gIGlmIChvcHRpb25zLmdsb2JhbCkge1xuICAgIGlmIChzaW1wbGUpIE9ba2V5XSA9IHZhbHVlO1xuICAgIGVsc2UgZGVmaW5lR2xvYmFsUHJvcGVydHkoa2V5LCB2YWx1ZSk7XG4gIH0gZWxzZSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghb3B0aW9ucy51bnNhZmUpIGRlbGV0ZSBPW2tleV07XG4gICAgICBlbHNlIGlmIChPW2tleV0pIHNpbXBsZSA9IHRydWU7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHsgLyogZW1wdHkgKi8gfVxuICAgIGlmIChzaW1wbGUpIE9ba2V5XSA9IHZhbHVlO1xuICAgIGVsc2UgZGVmaW5lUHJvcGVydHlNb2R1bGUuZihPLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgY29uZmlndXJhYmxlOiAhb3B0aW9ucy5ub25Db25maWd1cmFibGUsXG4gICAgICB3cml0YWJsZTogIW9wdGlvbnMubm9uV3JpdGFibGVcbiAgICB9KTtcbiAgfSByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHNhZmVcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICB0cnkge1xuICAgIGRlZmluZVByb3BlcnR5KGdsb2JhbCwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBnbG9iYWxba2V5XSA9IHZhbHVlO1xuICB9IHJldHVybiB2YWx1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcblxuLy8gRGV0ZWN0IElFOCdzIGluY29tcGxldGUgZGVmaW5lUHJvcGVydHkgaW1wbGVtZW50YXRpb25cbm1vZHVsZS5leHBvcnRzID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAxLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KVsxXSAhPT0gNztcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRvY3VtZW50QWxsID0gdHlwZW9mIGRvY3VtZW50ID09ICdvYmplY3QnICYmIGRvY3VtZW50LmFsbDtcblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1Jc0hUTUxEREEtaW50ZXJuYWwtc2xvdFxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHVuaWNvcm4vbm8tdHlwZW9mLXVuZGVmaW5lZCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xudmFyIElTX0hUTUxEREEgPSB0eXBlb2YgZG9jdW1lbnRBbGwgPT0gJ3VuZGVmaW5lZCcgJiYgZG9jdW1lbnRBbGwgIT09IHVuZGVmaW5lZDtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGFsbDogZG9jdW1lbnRBbGwsXG4gIElTX0hUTUxEREE6IElTX0hUTUxEREFcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xuXG52YXIgZG9jdW1lbnQgPSBnbG9iYWwuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBFWElTVFMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBFWElTVFMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gdHlwZW9mIG5hdmlnYXRvciAhPSAndW5kZWZpbmVkJyAmJiBTdHJpbmcobmF2aWdhdG9yLnVzZXJBZ2VudCkgfHwgJyc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbmdpbmUtdXNlci1hZ2VudCcpO1xuXG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIERlbm8gPSBnbG9iYWwuRGVubztcbnZhciB2ZXJzaW9ucyA9IHByb2Nlc3MgJiYgcHJvY2Vzcy52ZXJzaW9ucyB8fCBEZW5vICYmIERlbm8udmVyc2lvbjtcbnZhciB2OCA9IHZlcnNpb25zICYmIHZlcnNpb25zLnY4O1xudmFyIG1hdGNoLCB2ZXJzaW9uO1xuXG5pZiAodjgpIHtcbiAgbWF0Y2ggPSB2OC5zcGxpdCgnLicpO1xuICAvLyBpbiBvbGQgQ2hyb21lLCB2ZXJzaW9ucyBvZiBWOCBpc24ndCBWOCA9IENocm9tZSAvIDEwXG4gIC8vIGJ1dCB0aGVpciBjb3JyZWN0IHZlcnNpb25zIGFyZSBub3QgaW50ZXJlc3RpbmcgZm9yIHVzXG4gIHZlcnNpb24gPSBtYXRjaFswXSA+IDAgJiYgbWF0Y2hbMF0gPCA0ID8gMSA6ICsobWF0Y2hbMF0gKyBtYXRjaFsxXSk7XG59XG5cbi8vIEJyb3dzZXJGUyBOb2RlSlMgYHByb2Nlc3NgIHBvbHlmaWxsIGluY29ycmVjdGx5IHNldCBgLnY4YCB0byBgMC4wYFxuLy8gc28gY2hlY2sgYHVzZXJBZ2VudGAgZXZlbiBpZiBgLnY4YCBleGlzdHMsIGJ1dCAwXG5pZiAoIXZlcnNpb24gJiYgdXNlckFnZW50KSB7XG4gIG1hdGNoID0gdXNlckFnZW50Lm1hdGNoKC9FZGdlXFwvKFxcZCspLyk7XG4gIGlmICghbWF0Y2ggfHwgbWF0Y2hbMV0gPj0gNzQpIHtcbiAgICBtYXRjaCA9IHVzZXJBZ2VudC5tYXRjaCgvQ2hyb21lXFwvKFxcZCspLyk7XG4gICAgaWYgKG1hdGNoKSB2ZXJzaW9uID0gK21hdGNoWzFdO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdmVyc2lvbjtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2xvYmFsJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENPTlNUUlVDVE9SLCBNRVRIT0QpIHtcbiAgcmV0dXJuIHVuY3VycnlUaGlzKGdsb2JhbFtDT05TVFJVQ1RPUl0ucHJvdG90eXBlW01FVEhPRF0pO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIElFOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSBbXG4gICdjb25zdHJ1Y3RvcicsXG4gICdoYXNPd25Qcm9wZXJ0eScsXG4gICdpc1Byb3RvdHlwZU9mJyxcbiAgJ3Byb3BlcnR5SXNFbnVtZXJhYmxlJyxcbiAgJ3RvTG9jYWxlU3RyaW5nJyxcbiAgJ3RvU3RyaW5nJyxcbiAgJ3ZhbHVlT2YnXG5dO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcicpLmY7XG52YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpO1xudmFyIGRlZmluZUJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWJ1aWx0LWluJyk7XG52YXIgZGVmaW5lR2xvYmFsUHJvcGVydHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVmaW5lLWdsb2JhbC1wcm9wZXJ0eScpO1xudmFyIGNvcHlDb25zdHJ1Y3RvclByb3BlcnRpZXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY29weS1jb25zdHJ1Y3Rvci1wcm9wZXJ0aWVzJyk7XG52YXIgaXNGb3JjZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtZm9yY2VkJyk7XG5cbi8qXG4gIG9wdGlvbnMudGFyZ2V0ICAgICAgICAgLSBuYW1lIG9mIHRoZSB0YXJnZXQgb2JqZWN0XG4gIG9wdGlvbnMuZ2xvYmFsICAgICAgICAgLSB0YXJnZXQgaXMgdGhlIGdsb2JhbCBvYmplY3RcbiAgb3B0aW9ucy5zdGF0ICAgICAgICAgICAtIGV4cG9ydCBhcyBzdGF0aWMgbWV0aG9kcyBvZiB0YXJnZXRcbiAgb3B0aW9ucy5wcm90byAgICAgICAgICAtIGV4cG9ydCBhcyBwcm90b3R5cGUgbWV0aG9kcyBvZiB0YXJnZXRcbiAgb3B0aW9ucy5yZWFsICAgICAgICAgICAtIHJlYWwgcHJvdG90eXBlIG1ldGhvZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMuZm9yY2VkICAgICAgICAgLSBleHBvcnQgZXZlbiBpZiB0aGUgbmF0aXZlIGZlYXR1cmUgaXMgYXZhaWxhYmxlXG4gIG9wdGlvbnMuYmluZCAgICAgICAgICAgLSBiaW5kIG1ldGhvZHMgdG8gdGhlIHRhcmdldCwgcmVxdWlyZWQgZm9yIHRoZSBgcHVyZWAgdmVyc2lvblxuICBvcHRpb25zLndyYXAgICAgICAgICAgIC0gd3JhcCBjb25zdHJ1Y3RvcnMgdG8gcHJldmVudGluZyBnbG9iYWwgcG9sbHV0aW9uLCByZXF1aXJlZCBmb3IgdGhlIGBwdXJlYCB2ZXJzaW9uXG4gIG9wdGlvbnMudW5zYWZlICAgICAgICAgLSB1c2UgdGhlIHNpbXBsZSBhc3NpZ25tZW50IG9mIHByb3BlcnR5IGluc3RlYWQgb2YgZGVsZXRlICsgZGVmaW5lUHJvcGVydHlcbiAgb3B0aW9ucy5zaGFtICAgICAgICAgICAtIGFkZCBhIGZsYWcgdG8gbm90IGNvbXBsZXRlbHkgZnVsbCBwb2x5ZmlsbHNcbiAgb3B0aW9ucy5lbnVtZXJhYmxlICAgICAtIGV4cG9ydCBhcyBlbnVtZXJhYmxlIHByb3BlcnR5XG4gIG9wdGlvbnMuZG9udENhbGxHZXRTZXQgLSBwcmV2ZW50IGNhbGxpbmcgYSBnZXR0ZXIgb24gdGFyZ2V0XG4gIG9wdGlvbnMubmFtZSAgICAgICAgICAgLSB0aGUgLm5hbWUgb2YgdGhlIGZ1bmN0aW9uIGlmIGl0IGRvZXMgbm90IG1hdGNoIHRoZSBrZXlcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvcHRpb25zLCBzb3VyY2UpIHtcbiAgdmFyIFRBUkdFVCA9IG9wdGlvbnMudGFyZ2V0O1xuICB2YXIgR0xPQkFMID0gb3B0aW9ucy5nbG9iYWw7XG4gIHZhciBTVEFUSUMgPSBvcHRpb25zLnN0YXQ7XG4gIHZhciBGT1JDRUQsIHRhcmdldCwga2V5LCB0YXJnZXRQcm9wZXJ0eSwgc291cmNlUHJvcGVydHksIGRlc2NyaXB0b3I7XG4gIGlmIChHTE9CQUwpIHtcbiAgICB0YXJnZXQgPSBnbG9iYWw7XG4gIH0gZWxzZSBpZiAoU1RBVElDKSB7XG4gICAgdGFyZ2V0ID0gZ2xvYmFsW1RBUkdFVF0gfHwgZGVmaW5lR2xvYmFsUHJvcGVydHkoVEFSR0VULCB7fSk7XG4gIH0gZWxzZSB7XG4gICAgdGFyZ2V0ID0gKGdsb2JhbFtUQVJHRVRdIHx8IHt9KS5wcm90b3R5cGU7XG4gIH1cbiAgaWYgKHRhcmdldCkgZm9yIChrZXkgaW4gc291cmNlKSB7XG4gICAgc291cmNlUHJvcGVydHkgPSBzb3VyY2Vba2V5XTtcbiAgICBpZiAob3B0aW9ucy5kb250Q2FsbEdldFNldCkge1xuICAgICAgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSk7XG4gICAgICB0YXJnZXRQcm9wZXJ0eSA9IGRlc2NyaXB0b3IgJiYgZGVzY3JpcHRvci52YWx1ZTtcbiAgICB9IGVsc2UgdGFyZ2V0UHJvcGVydHkgPSB0YXJnZXRba2V5XTtcbiAgICBGT1JDRUQgPSBpc0ZvcmNlZChHTE9CQUwgPyBrZXkgOiBUQVJHRVQgKyAoU1RBVElDID8gJy4nIDogJyMnKSArIGtleSwgb3B0aW9ucy5mb3JjZWQpO1xuICAgIC8vIGNvbnRhaW5lZCBpbiB0YXJnZXRcbiAgICBpZiAoIUZPUkNFRCAmJiB0YXJnZXRQcm9wZXJ0eSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAodHlwZW9mIHNvdXJjZVByb3BlcnR5ID09IHR5cGVvZiB0YXJnZXRQcm9wZXJ0eSkgY29udGludWU7XG4gICAgICBjb3B5Q29uc3RydWN0b3JQcm9wZXJ0aWVzKHNvdXJjZVByb3BlcnR5LCB0YXJnZXRQcm9wZXJ0eSk7XG4gICAgfVxuICAgIC8vIGFkZCBhIGZsYWcgdG8gbm90IGNvbXBsZXRlbHkgZnVsbCBwb2x5ZmlsbHNcbiAgICBpZiAob3B0aW9ucy5zaGFtIHx8ICh0YXJnZXRQcm9wZXJ0eSAmJiB0YXJnZXRQcm9wZXJ0eS5zaGFtKSkge1xuICAgICAgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KHNvdXJjZVByb3BlcnR5LCAnc2hhbScsIHRydWUpO1xuICAgIH1cbiAgICBkZWZpbmVCdWlsdEluKHRhcmdldCwga2V5LCBzb3VyY2VQcm9wZXJ0eSwgb3B0aW9ucyk7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcy1jbGF1c2UnKTtcbnZhciBhQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYS1jYWxsYWJsZScpO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciBiaW5kID0gdW5jdXJyeVRoaXModW5jdXJyeVRoaXMuYmluZCk7XG5cbi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQpIHtcbiAgYUNhbGxhYmxlKGZuKTtcbiAgcmV0dXJuIHRoYXQgPT09IHVuZGVmaW5lZCA/IGZuIDogTkFUSVZFX0JJTkQgPyBiaW5kKGZuLCB0aGF0KSA6IGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLWZ1bmN0aW9uLXByb3RvdHlwZS1iaW5kIC0tIHNhZmVcbiAgdmFyIHRlc3QgPSAoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KS5iaW5kKCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnMgLS0gc2FmZVxuICByZXR1cm4gdHlwZW9mIHRlc3QgIT0gJ2Z1bmN0aW9uJyB8fCB0ZXN0Lmhhc093blByb3BlcnR5KCdwcm90b3R5cGUnKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIE5BVElWRV9CSU5EID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLWJpbmQtbmF0aXZlJyk7XG5cbnZhciBjYWxsID0gRnVuY3Rpb24ucHJvdG90eXBlLmNhbGw7XG5cbm1vZHVsZS5leHBvcnRzID0gTkFUSVZFX0JJTkQgPyBjYWxsLmJpbmQoY2FsbCkgOiBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBjYWxsLmFwcGx5KGNhbGwsIGFyZ3VtZW50cyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcblxudmFyIEZ1bmN0aW9uUHJvdG90eXBlID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxudmFyIGdldERlc2NyaXB0b3IgPSBERVNDUklQVE9SUyAmJiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG52YXIgRVhJU1RTID0gaGFzT3duKEZ1bmN0aW9uUHJvdG90eXBlLCAnbmFtZScpO1xuLy8gYWRkaXRpb25hbCBwcm90ZWN0aW9uIGZyb20gbWluaWZpZWQgLyBtYW5nbGVkIC8gZHJvcHBlZCBmdW5jdGlvbiBuYW1lc1xudmFyIFBST1BFUiA9IEVYSVNUUyAmJiAoZnVuY3Rpb24gc29tZXRoaW5nKCkgeyAvKiBlbXB0eSAqLyB9KS5uYW1lID09PSAnc29tZXRoaW5nJztcbnZhciBDT05GSUdVUkFCTEUgPSBFWElTVFMgJiYgKCFERVNDUklQVE9SUyB8fCAoREVTQ1JJUFRPUlMgJiYgZ2V0RGVzY3JpcHRvcihGdW5jdGlvblByb3RvdHlwZSwgJ25hbWUnKS5jb25maWd1cmFibGUpKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEVYSVNUUzogRVhJU1RTLFxuICBQUk9QRVI6IFBST1BFUixcbiAgQ09ORklHVVJBQkxFOiBDT05GSUdVUkFCTEVcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2xhc3NvZlJhdyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jbGFzc29mLXJhdycpO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChmbikge1xuICAvLyBOYXNob3JuIGJ1ZzpcbiAgLy8gICBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTEyOFxuICAvLyAgIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8xMTMwXG4gIGlmIChjbGFzc29mUmF3KGZuKSA9PT0gJ0Z1bmN0aW9uJykgcmV0dXJuIHVuY3VycnlUaGlzKGZuKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTkFUSVZFX0JJTkQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tYmluZC1uYXRpdmUnKTtcblxudmFyIEZ1bmN0aW9uUHJvdG90eXBlID0gRnVuY3Rpb24ucHJvdG90eXBlO1xudmFyIGNhbGwgPSBGdW5jdGlvblByb3RvdHlwZS5jYWxsO1xudmFyIHVuY3VycnlUaGlzV2l0aEJpbmQgPSBOQVRJVkVfQklORCAmJiBGdW5jdGlvblByb3RvdHlwZS5iaW5kLmJpbmQoY2FsbCwgY2FsbCk7XG5cbm1vZHVsZS5leHBvcnRzID0gTkFUSVZFX0JJTkQgPyB1bmN1cnJ5VGhpc1dpdGhCaW5kIDogZnVuY3Rpb24gKGZuKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGNhbGwuYXBwbHkoZm4sIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG5cbnZhciBhRnVuY3Rpb24gPSBmdW5jdGlvbiAoYXJndW1lbnQpIHtcbiAgcmV0dXJuIGlzQ2FsbGFibGUoYXJndW1lbnQpID8gYXJndW1lbnQgOiB1bmRlZmluZWQ7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lc3BhY2UsIG1ldGhvZCkge1xuICByZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA8IDIgPyBhRnVuY3Rpb24oZ2xvYmFsW25hbWVzcGFjZV0pIDogZ2xvYmFsW25hbWVzcGFjZV0gJiYgZ2xvYmFsW25hbWVzcGFjZV1bbWV0aG9kXTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYUNhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2EtY2FsbGFibGUnKTtcbnZhciBpc051bGxPclVuZGVmaW5lZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZCcpO1xuXG4vLyBgR2V0TWV0aG9kYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtZ2V0bWV0aG9kXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChWLCBQKSB7XG4gIHZhciBmdW5jID0gVltQXTtcbiAgcmV0dXJuIGlzTnVsbE9yVW5kZWZpbmVkKGZ1bmMpID8gdW5kZWZpbmVkIDogYUNhbGxhYmxlKGZ1bmMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgJiYgaXQuTWF0aCA9PT0gTWF0aCAmJiBpdDtcbn07XG5cbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG5tb2R1bGUuZXhwb3J0cyA9XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1nbG9iYWwtdGhpcyAtLSBzYWZlXG4gIGNoZWNrKHR5cGVvZiBnbG9iYWxUaGlzID09ICdvYmplY3QnICYmIGdsb2JhbFRoaXMpIHx8XG4gIGNoZWNrKHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93KSB8fFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1nbG9iYWxzIC0tIHNhZmVcbiAgY2hlY2sodHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgc2VsZikgfHxcbiAgY2hlY2sodHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwpIHx8XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuYyAtLSBmYWxsYmFja1xuICAoZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSkoKSB8fCB0aGlzIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tb2JqZWN0Jyk7XG5cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IHVuY3VycnlUaGlzKHt9Lmhhc093blByb3BlcnR5KTtcblxuLy8gYEhhc093blByb3BlcnR5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaGFzb3ducHJvcGVydHlcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtaGFzb3duIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0Lmhhc093biB8fCBmdW5jdGlvbiBoYXNPd24oaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkodG9PYmplY3QoaXQpLCBrZXkpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0ge307XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2V0QnVpbHRJbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtYnVpbHQtaW4nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBnZXRCdWlsdEluKCdkb2N1bWVudCcsICdkb2N1bWVudEVsZW1lbnQnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgY3JlYXRlRWxlbWVudCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudCcpO1xuXG4vLyBUaGFua3MgdG8gSUU4IGZvciBpdHMgZnVubnkgZGVmaW5lUHJvcGVydHlcbm1vZHVsZS5leHBvcnRzID0gIURFU0NSSVBUT1JTICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjcmVhdGVFbGVtZW50KCdkaXYnKSwgJ2EnLCB7XG4gICAgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9XG4gIH0pLmEgIT09IDc7XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZi1yYXcnKTtcblxudmFyICRPYmplY3QgPSBPYmplY3Q7XG52YXIgc3BsaXQgPSB1bmN1cnJ5VGhpcygnJy5zcGxpdCk7XG5cbi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG5tb2R1bGUuZXhwb3J0cyA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gdGhyb3dzIGFuIGVycm9yIGluIHJoaW5vLCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL21vemlsbGEvcmhpbm8vaXNzdWVzLzM0NlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zIC0tIHNhZmVcbiAgcmV0dXJuICEkT2JqZWN0KCd6JykucHJvcGVydHlJc0VudW1lcmFibGUoMCk7XG59KSA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gY2xhc3NvZihpdCkgPT09ICdTdHJpbmcnID8gc3BsaXQoaXQsICcnKSA6ICRPYmplY3QoaXQpO1xufSA6ICRPYmplY3Q7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIHN0b3JlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZScpO1xuXG52YXIgZnVuY3Rpb25Ub1N0cmluZyA9IHVuY3VycnlUaGlzKEZ1bmN0aW9uLnRvU3RyaW5nKTtcblxuLy8gdGhpcyBoZWxwZXIgYnJva2VuIGluIGBjb3JlLWpzQDMuNC4xLTMuNC40YCwgc28gd2UgY2FuJ3QgdXNlIGBzaGFyZWRgIGhlbHBlclxuaWYgKCFpc0NhbGxhYmxlKHN0b3JlLmluc3BlY3RTb3VyY2UpKSB7XG4gIHN0b3JlLmluc3BlY3RTb3VyY2UgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gZnVuY3Rpb25Ub1N0cmluZyhpdCk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3RvcmUuaW5zcGVjdFNvdXJjZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBOQVRJVkVfV0VBS19NQVAgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2Vhay1tYXAtYmFzaWMtZGV0ZWN0aW9uJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9jcmVhdGUtbm9uLWVudW1lcmFibGUtcHJvcGVydHknKTtcbnZhciBoYXNPd24gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGFzLW93bi1wcm9wZXJ0eScpO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQtc3RvcmUnKTtcbnZhciBzaGFyZWRLZXkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkLWtleScpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaGlkZGVuLWtleXMnKTtcblxudmFyIE9CSkVDVF9BTFJFQURZX0lOSVRJQUxJWkVEID0gJ09iamVjdCBhbHJlYWR5IGluaXRpYWxpemVkJztcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIFdlYWtNYXAgPSBnbG9iYWwuV2Vha01hcDtcbnZhciBzZXQsIGdldCwgaGFzO1xuXG52YXIgZW5mb3JjZSA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaGFzKGl0KSA/IGdldChpdCkgOiBzZXQoaXQsIHt9KTtcbn07XG5cbnZhciBnZXR0ZXJGb3IgPSBmdW5jdGlvbiAoVFlQRSkge1xuICByZXR1cm4gZnVuY3Rpb24gKGl0KSB7XG4gICAgdmFyIHN0YXRlO1xuICAgIGlmICghaXNPYmplY3QoaXQpIHx8IChzdGF0ZSA9IGdldChpdCkpLnR5cGUgIT09IFRZUEUpIHtcbiAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0luY29tcGF0aWJsZSByZWNlaXZlciwgJyArIFRZUEUgKyAnIHJlcXVpcmVkJyk7XG4gICAgfSByZXR1cm4gc3RhdGU7XG4gIH07XG59O1xuXG5pZiAoTkFUSVZFX1dFQUtfTUFQIHx8IHNoYXJlZC5zdGF0ZSkge1xuICB2YXIgc3RvcmUgPSBzaGFyZWQuc3RhdGUgfHwgKHNoYXJlZC5zdGF0ZSA9IG5ldyBXZWFrTWFwKCkpO1xuICAvKiBlc2xpbnQtZGlzYWJsZSBuby1zZWxmLWFzc2lnbiAtLSBwcm90b3R5cGUgbWV0aG9kcyBwcm90ZWN0aW9uICovXG4gIHN0b3JlLmdldCA9IHN0b3JlLmdldDtcbiAgc3RvcmUuaGFzID0gc3RvcmUuaGFzO1xuICBzdG9yZS5zZXQgPSBzdG9yZS5zZXQ7XG4gIC8qIGVzbGludC1lbmFibGUgbm8tc2VsZi1hc3NpZ24gLS0gcHJvdG90eXBlIG1ldGhvZHMgcHJvdGVjdGlvbiAqL1xuICBzZXQgPSBmdW5jdGlvbiAoaXQsIG1ldGFkYXRhKSB7XG4gICAgaWYgKHN0b3JlLmhhcyhpdCkpIHRocm93IG5ldyBUeXBlRXJyb3IoT0JKRUNUX0FMUkVBRFlfSU5JVElBTElaRUQpO1xuICAgIG1ldGFkYXRhLmZhY2FkZSA9IGl0O1xuICAgIHN0b3JlLnNldChpdCwgbWV0YWRhdGEpO1xuICAgIHJldHVybiBtZXRhZGF0YTtcbiAgfTtcbiAgZ2V0ID0gZnVuY3Rpb24gKGl0KSB7XG4gICAgcmV0dXJuIHN0b3JlLmdldChpdCkgfHwge307XG4gIH07XG4gIGhhcyA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBzdG9yZS5oYXMoaXQpO1xuICB9O1xufSBlbHNlIHtcbiAgdmFyIFNUQVRFID0gc2hhcmVkS2V5KCdzdGF0ZScpO1xuICBoaWRkZW5LZXlzW1NUQVRFXSA9IHRydWU7XG4gIHNldCA9IGZ1bmN0aW9uIChpdCwgbWV0YWRhdGEpIHtcbiAgICBpZiAoaGFzT3duKGl0LCBTVEFURSkpIHRocm93IG5ldyBUeXBlRXJyb3IoT0JKRUNUX0FMUkVBRFlfSU5JVElBTElaRUQpO1xuICAgIG1ldGFkYXRhLmZhY2FkZSA9IGl0O1xuICAgIGNyZWF0ZU5vbkVudW1lcmFibGVQcm9wZXJ0eShpdCwgU1RBVEUsIG1ldGFkYXRhKTtcbiAgICByZXR1cm4gbWV0YWRhdGE7XG4gIH07XG4gIGdldCA9IGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBoYXNPd24oaXQsIFNUQVRFKSA/IGl0W1NUQVRFXSA6IHt9O1xuICB9O1xuICBoYXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgICByZXR1cm4gaGFzT3duKGl0LCBTVEFURSk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IHNldCxcbiAgZ2V0OiBnZXQsXG4gIGhhczogaGFzLFxuICBlbmZvcmNlOiBlbmZvcmNlLFxuICBnZXR0ZXJGb3I6IGdldHRlckZvclxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NsYXNzb2YtcmF3Jyk7XG5cbi8vIGBJc0FycmF5YCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNhcnJheVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLWFycmF5LWlzYXJyYXkgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIGlzQXJyYXkoYXJndW1lbnQpIHtcbiAgcmV0dXJuIGNsYXNzb2YoYXJndW1lbnQpID09PSAnQXJyYXknO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZG9jdW1lbnRBbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZG9jdW1lbnQtYWxsJyk7XG5cbnZhciBkb2N1bWVudEFsbCA9ICRkb2N1bWVudEFsbC5hbGw7XG5cbi8vIGBJc0NhbGxhYmxlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNjYWxsYWJsZVxubW9kdWxlLmV4cG9ydHMgPSAkZG9jdW1lbnRBbGwuSVNfSFRNTEREQSA/IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gdHlwZW9mIGFyZ3VtZW50ID09ICdmdW5jdGlvbicgfHwgYXJndW1lbnQgPT09IGRvY3VtZW50QWxsO1xufSA6IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gdHlwZW9mIGFyZ3VtZW50ID09ICdmdW5jdGlvbic7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG52YXIgaXNDYWxsYWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1jYWxsYWJsZScpO1xudmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY2xhc3NvZicpO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgaW5zcGVjdFNvdXJjZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZScpO1xuXG52YXIgbm9vcCA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbnZhciBlbXB0eSA9IFtdO1xudmFyIGNvbnN0cnVjdCA9IGdldEJ1aWx0SW4oJ1JlZmxlY3QnLCAnY29uc3RydWN0Jyk7XG52YXIgY29uc3RydWN0b3JSZWdFeHAgPSAvXlxccyooPzpjbGFzc3xmdW5jdGlvbilcXGIvO1xudmFyIGV4ZWMgPSB1bmN1cnJ5VGhpcyhjb25zdHJ1Y3RvclJlZ0V4cC5leGVjKTtcbnZhciBJTkNPUlJFQ1RfVE9fU1RSSU5HID0gIWNvbnN0cnVjdG9yUmVnRXhwLnRlc3Qobm9vcCk7XG5cbnZhciBpc0NvbnN0cnVjdG9yTW9kZXJuID0gZnVuY3Rpb24gaXNDb25zdHJ1Y3Rvcihhcmd1bWVudCkge1xuICBpZiAoIWlzQ2FsbGFibGUoYXJndW1lbnQpKSByZXR1cm4gZmFsc2U7XG4gIHRyeSB7XG4gICAgY29uc3RydWN0KG5vb3AsIGVtcHR5LCBhcmd1bWVudCk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG52YXIgaXNDb25zdHJ1Y3RvckxlZ2FjeSA9IGZ1bmN0aW9uIGlzQ29uc3RydWN0b3IoYXJndW1lbnQpIHtcbiAgaWYgKCFpc0NhbGxhYmxlKGFyZ3VtZW50KSkgcmV0dXJuIGZhbHNlO1xuICBzd2l0Y2ggKGNsYXNzb2YoYXJndW1lbnQpKSB7XG4gICAgY2FzZSAnQXN5bmNGdW5jdGlvbic6XG4gICAgY2FzZSAnR2VuZXJhdG9yRnVuY3Rpb24nOlxuICAgIGNhc2UgJ0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24nOiByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyB3ZSBjYW4ndCBjaGVjayAucHJvdG90eXBlIHNpbmNlIGNvbnN0cnVjdG9ycyBwcm9kdWNlZCBieSAuYmluZCBoYXZlbid0IGl0XG4gICAgLy8gYEZ1bmN0aW9uI3RvU3RyaW5nYCB0aHJvd3Mgb24gc29tZSBidWlsdC1pdCBmdW5jdGlvbiBpbiBzb21lIGxlZ2FjeSBlbmdpbmVzXG4gICAgLy8gKGZvciBleGFtcGxlLCBgRE9NUXVhZGAgYW5kIHNpbWlsYXIgaW4gRkY0MS0pXG4gICAgcmV0dXJuIElOQ09SUkVDVF9UT19TVFJJTkcgfHwgISFleGVjKGNvbnN0cnVjdG9yUmVnRXhwLCBpbnNwZWN0U291cmNlKGFyZ3VtZW50KSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG5cbmlzQ29uc3RydWN0b3JMZWdhY3kuc2hhbSA9IHRydWU7XG5cbi8vIGBJc0NvbnN0cnVjdG9yYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtaXNjb25zdHJ1Y3RvclxubW9kdWxlLmV4cG9ydHMgPSAhY29uc3RydWN0IHx8IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGNhbGxlZDtcbiAgcmV0dXJuIGlzQ29uc3RydWN0b3JNb2Rlcm4oaXNDb25zdHJ1Y3Rvck1vZGVybi5jYWxsKVxuICAgIHx8ICFpc0NvbnN0cnVjdG9yTW9kZXJuKE9iamVjdClcbiAgICB8fCAhaXNDb25zdHJ1Y3Rvck1vZGVybihmdW5jdGlvbiAoKSB7IGNhbGxlZCA9IHRydWU7IH0pXG4gICAgfHwgY2FsbGVkO1xufSkgPyBpc0NvbnN0cnVjdG9yTGVnYWN5IDogaXNDb25zdHJ1Y3Rvck1vZGVybjtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcblxudmFyIHJlcGxhY2VtZW50ID0gLyN8XFwucHJvdG90eXBlXFwuLztcblxudmFyIGlzRm9yY2VkID0gZnVuY3Rpb24gKGZlYXR1cmUsIGRldGVjdGlvbikge1xuICB2YXIgdmFsdWUgPSBkYXRhW25vcm1hbGl6ZShmZWF0dXJlKV07XG4gIHJldHVybiB2YWx1ZSA9PT0gUE9MWUZJTEwgPyB0cnVlXG4gICAgOiB2YWx1ZSA9PT0gTkFUSVZFID8gZmFsc2VcbiAgICA6IGlzQ2FsbGFibGUoZGV0ZWN0aW9uKSA/IGZhaWxzKGRldGVjdGlvbilcbiAgICA6ICEhZGV0ZWN0aW9uO1xufTtcblxudmFyIG5vcm1hbGl6ZSA9IGlzRm9yY2VkLm5vcm1hbGl6ZSA9IGZ1bmN0aW9uIChzdHJpbmcpIHtcbiAgcmV0dXJuIFN0cmluZyhzdHJpbmcpLnJlcGxhY2UocmVwbGFjZW1lbnQsICcuJykudG9Mb3dlckNhc2UoKTtcbn07XG5cbnZhciBkYXRhID0gaXNGb3JjZWQuZGF0YSA9IHt9O1xudmFyIE5BVElWRSA9IGlzRm9yY2VkLk5BVElWRSA9ICdOJztcbnZhciBQT0xZRklMTCA9IGlzRm9yY2VkLlBPTFlGSUxMID0gJ1AnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzRm9yY2VkO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gd2UgY2FuJ3QgdXNlIGp1c3QgYGl0ID09IG51bGxgIHNpbmNlIG9mIGBkb2N1bWVudC5hbGxgIHNwZWNpYWwgY2FzZVxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1Jc0hUTUxEREEtaW50ZXJuYWwtc2xvdC1hZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpdCA9PT0gbnVsbCB8fCBpdCA9PT0gdW5kZWZpbmVkO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgJGRvY3VtZW50QWxsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2RvY3VtZW50LWFsbCcpO1xuXG52YXIgZG9jdW1lbnRBbGwgPSAkZG9jdW1lbnRBbGwuYWxsO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICRkb2N1bWVudEFsbC5JU19IVE1MRERBID8gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT0gJ29iamVjdCcgPyBpdCAhPT0gbnVsbCA6IGlzQ2FsbGFibGUoaXQpIHx8IGl0ID09PSBkb2N1bWVudEFsbDtcbn0gOiBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogaXNDYWxsYWJsZShpdCk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSBmYWxzZTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnZXRCdWlsdEluID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dldC1idWlsdC1pbicpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc1Byb3RvdHlwZU9mID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1pcy1wcm90b3R5cGUtb2YnKTtcbnZhciBVU0VfU1lNQk9MX0FTX1VJRCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy91c2Utc3ltYm9sLWFzLXVpZCcpO1xuXG52YXIgJE9iamVjdCA9IE9iamVjdDtcblxubW9kdWxlLmV4cG9ydHMgPSBVU0VfU1lNQk9MX0FTX1VJRCA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgJFN5bWJvbCA9IGdldEJ1aWx0SW4oJ1N5bWJvbCcpO1xuICByZXR1cm4gaXNDYWxsYWJsZSgkU3ltYm9sKSAmJiBpc1Byb3RvdHlwZU9mKCRTeW1ib2wucHJvdG90eXBlLCAkT2JqZWN0KGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWxlbmd0aCcpO1xuXG4vLyBgTGVuZ3RoT2ZBcnJheUxpa2VgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1sZW5ndGhvZmFycmF5bGlrZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiB0b0xlbmd0aChvYmoubGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBpc0NhbGxhYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLWNhbGxhYmxlJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIENPTkZJR1VSQUJMRV9GVU5DVElPTl9OQU1FID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLW5hbWUnKS5DT05GSUdVUkFCTEU7XG52YXIgaW5zcGVjdFNvdXJjZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pbnNwZWN0LXNvdXJjZScpO1xudmFyIEludGVybmFsU3RhdGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW50ZXJuYWwtc3RhdGUnKTtcblxudmFyIGVuZm9yY2VJbnRlcm5hbFN0YXRlID0gSW50ZXJuYWxTdGF0ZU1vZHVsZS5lbmZvcmNlO1xudmFyIGdldEludGVybmFsU3RhdGUgPSBJbnRlcm5hbFN0YXRlTW9kdWxlLmdldDtcbnZhciAkU3RyaW5nID0gU3RyaW5nO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSBzYWZlXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgc3RyaW5nU2xpY2UgPSB1bmN1cnJ5VGhpcygnJy5zbGljZSk7XG52YXIgcmVwbGFjZSA9IHVuY3VycnlUaGlzKCcnLnJlcGxhY2UpO1xudmFyIGpvaW4gPSB1bmN1cnJ5VGhpcyhbXS5qb2luKTtcblxudmFyIENPTkZJR1VSQUJMRV9MRU5HVEggPSBERVNDUklQVE9SUyAmJiAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gZGVmaW5lUHJvcGVydHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAnbGVuZ3RoJywgeyB2YWx1ZTogOCB9KS5sZW5ndGggIT09IDg7XG59KTtcblxudmFyIFRFTVBMQVRFID0gU3RyaW5nKFN0cmluZykuc3BsaXQoJ1N0cmluZycpO1xuXG52YXIgbWFrZUJ1aWx0SW4gPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh2YWx1ZSwgbmFtZSwgb3B0aW9ucykge1xuICBpZiAoc3RyaW5nU2xpY2UoJFN0cmluZyhuYW1lKSwgMCwgNykgPT09ICdTeW1ib2woJykge1xuICAgIG5hbWUgPSAnWycgKyByZXBsYWNlKCRTdHJpbmcobmFtZSksIC9eU3ltYm9sXFwoKFteKV0qKVxcKS8sICckMScpICsgJ10nO1xuICB9XG4gIGlmIChvcHRpb25zICYmIG9wdGlvbnMuZ2V0dGVyKSBuYW1lID0gJ2dldCAnICsgbmFtZTtcbiAgaWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5zZXR0ZXIpIG5hbWUgPSAnc2V0ICcgKyBuYW1lO1xuICBpZiAoIWhhc093bih2YWx1ZSwgJ25hbWUnKSB8fCAoQ09ORklHVVJBQkxFX0ZVTkNUSU9OX05BTUUgJiYgdmFsdWUubmFtZSAhPT0gbmFtZSkpIHtcbiAgICBpZiAoREVTQ1JJUFRPUlMpIGRlZmluZVByb3BlcnR5KHZhbHVlLCAnbmFtZScsIHsgdmFsdWU6IG5hbWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9KTtcbiAgICBlbHNlIHZhbHVlLm5hbWUgPSBuYW1lO1xuICB9XG4gIGlmIChDT05GSUdVUkFCTEVfTEVOR1RIICYmIG9wdGlvbnMgJiYgaGFzT3duKG9wdGlvbnMsICdhcml0eScpICYmIHZhbHVlLmxlbmd0aCAhPT0gb3B0aW9ucy5hcml0eSkge1xuICAgIGRlZmluZVByb3BlcnR5KHZhbHVlLCAnbGVuZ3RoJywgeyB2YWx1ZTogb3B0aW9ucy5hcml0eSB9KTtcbiAgfVxuICB0cnkge1xuICAgIGlmIChvcHRpb25zICYmIGhhc093bihvcHRpb25zLCAnY29uc3RydWN0b3InKSAmJiBvcHRpb25zLmNvbnN0cnVjdG9yKSB7XG4gICAgICBpZiAoREVTQ1JJUFRPUlMpIGRlZmluZVByb3BlcnR5KHZhbHVlLCAncHJvdG90eXBlJywgeyB3cml0YWJsZTogZmFsc2UgfSk7XG4gICAgLy8gaW4gVjggfiBDaHJvbWUgNTMsIHByb3RvdHlwZXMgb2Ygc29tZSBtZXRob2RzLCBsaWtlIGBBcnJheS5wcm90b3R5cGUudmFsdWVzYCwgYXJlIG5vbi13cml0YWJsZVxuICAgIH0gZWxzZSBpZiAodmFsdWUucHJvdG90eXBlKSB2YWx1ZS5wcm90b3R5cGUgPSB1bmRlZmluZWQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbiAgdmFyIHN0YXRlID0gZW5mb3JjZUludGVybmFsU3RhdGUodmFsdWUpO1xuICBpZiAoIWhhc093bihzdGF0ZSwgJ3NvdXJjZScpKSB7XG4gICAgc3RhdGUuc291cmNlID0gam9pbihURU1QTEFURSwgdHlwZW9mIG5hbWUgPT0gJ3N0cmluZycgPyBuYW1lIDogJycpO1xuICB9IHJldHVybiB2YWx1ZTtcbn07XG5cbi8vIGFkZCBmYWtlIEZ1bmN0aW9uI3RvU3RyaW5nIGZvciBjb3JyZWN0IHdvcmsgd3JhcHBlZCBtZXRob2RzIC8gY29uc3RydWN0b3JzIHdpdGggbWV0aG9kcyBsaWtlIExvRGFzaCBpc05hdGl2ZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWV4dGVuZC1uYXRpdmUgLS0gcmVxdWlyZWRcbkZ1bmN0aW9uLnByb3RvdHlwZS50b1N0cmluZyA9IG1ha2VCdWlsdEluKGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICByZXR1cm4gaXNDYWxsYWJsZSh0aGlzKSAmJiBnZXRJbnRlcm5hbFN0YXRlKHRoaXMpLnNvdXJjZSB8fCBpbnNwZWN0U291cmNlKHRoaXMpO1xufSwgJ3RvU3RyaW5nJyk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5cbi8vIGBNYXRoLnRydW5jYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtbWF0aC50cnVuY1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW1hdGgtdHJ1bmMgLS0gc2FmZVxubW9kdWxlLmV4cG9ydHMgPSBNYXRoLnRydW5jIHx8IGZ1bmN0aW9uIHRydW5jKHgpIHtcbiAgdmFyIG4gPSAreDtcbiAgcmV0dXJuIChuID4gMCA/IGZsb29yIDogY2VpbCkobik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTtcbnZhciBvYmplY3RLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlTeW1ib2xzTW9kdWxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1nZXQtb3duLXByb3BlcnR5LXN5bWJvbHMnKTtcbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtcHJvcGVydHktaXMtZW51bWVyYWJsZScpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLW9iamVjdCcpO1xudmFyIEluZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1hc3NpZ24gLS0gc2FmZVxudmFyICRhc3NpZ24gPSBPYmplY3QuYXNzaWduO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1kZWZpbmVwcm9wZXJ0eSAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xudmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIGNvbmNhdCA9IHVuY3VycnlUaGlzKFtdLmNvbmNhdCk7XG5cbi8vIGBPYmplY3QuYXNzaWduYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmFzc2lnblxubW9kdWxlLmV4cG9ydHMgPSAhJGFzc2lnbiB8fCBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIHNob3VsZCBoYXZlIGNvcnJlY3Qgb3JkZXIgb2Ygb3BlcmF0aW9ucyAoRWRnZSBidWcpXG4gIGlmIChERVNDUklQVE9SUyAmJiAkYXNzaWduKHsgYjogMSB9LCAkYXNzaWduKGRlZmluZVByb3BlcnR5KHt9LCAnYScsIHtcbiAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgZGVmaW5lUHJvcGVydHkodGhpcywgJ2InLCB7XG4gICAgICAgIHZhbHVlOiAzLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9KSwgeyBiOiAyIH0pKS5iICE9PSAxKSByZXR1cm4gdHJ1ZTtcbiAgLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG4gIHZhciBBID0ge307XG4gIHZhciBCID0ge307XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1zeW1ib2wgLS0gc2FmZVxuICB2YXIgc3ltYm9sID0gU3ltYm9sKCdhc3NpZ24gZGV0ZWN0aW9uJyk7XG4gIHZhciBhbHBoYWJldCA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdCc7XG4gIEFbc3ltYm9sXSA9IDc7XG4gIGFscGhhYmV0LnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChjaHIpIHsgQltjaHJdID0gY2hyOyB9KTtcbiAgcmV0dXJuICRhc3NpZ24oe30sIEEpW3N5bWJvbF0gIT09IDcgfHwgb2JqZWN0S2V5cygkYXNzaWduKHt9LCBCKSkuam9pbignJykgIT09IGFscGhhYmV0O1xufSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFycyAtLSByZXF1aXJlZCBmb3IgYC5sZW5ndGhgXG4gIHZhciBUID0gdG9PYmplY3QodGFyZ2V0KTtcbiAgdmFyIGFyZ3VtZW50c0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gIHZhciBpbmRleCA9IDE7XG4gIHZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHNNb2R1bGUuZjtcbiAgdmFyIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUuZjtcbiAgd2hpbGUgKGFyZ3VtZW50c0xlbmd0aCA+IGluZGV4KSB7XG4gICAgdmFyIFMgPSBJbmRleGVkT2JqZWN0KGFyZ3VtZW50c1tpbmRleCsrXSk7XG4gICAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPyBjb25jYXQob2JqZWN0S2V5cyhTKSwgZ2V0T3duUHJvcGVydHlTeW1ib2xzKFMpKSA6IG9iamVjdEtleXMoUyk7XG4gICAgdmFyIGxlbmd0aCA9IGtleXMubGVuZ3RoO1xuICAgIHZhciBqID0gMDtcbiAgICB2YXIga2V5O1xuICAgIHdoaWxlIChsZW5ndGggPiBqKSB7XG4gICAgICBrZXkgPSBrZXlzW2orK107XG4gICAgICBpZiAoIURFU0NSSVBUT1JTIHx8IGNhbGwocHJvcGVydHlJc0VudW1lcmFibGUsIFMsIGtleSkpIFRba2V5XSA9IFNba2V5XTtcbiAgICB9XG4gIH0gcmV0dXJuIFQ7XG59IDogJGFzc2lnbjtcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGdsb2JhbCBBY3RpdmVYT2JqZWN0IC0tIG9sZCBJRSwgV1NIICovXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgZGVmaW5lUHJvcGVydGllc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZGVmaW5lLXByb3BlcnRpZXMnKTtcbnZhciBlbnVtQnVnS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xudmFyIGh0bWwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaHRtbCcpO1xudmFyIGRvY3VtZW50Q3JlYXRlRWxlbWVudCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kb2N1bWVudC1jcmVhdGUtZWxlbWVudCcpO1xudmFyIHNoYXJlZEtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQta2V5Jyk7XG5cbnZhciBHVCA9ICc+JztcbnZhciBMVCA9ICc8JztcbnZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbnZhciBTQ1JJUFQgPSAnc2NyaXB0JztcbnZhciBJRV9QUk9UTyA9IHNoYXJlZEtleSgnSUVfUFJPVE8nKTtcblxudmFyIEVtcHR5Q29uc3RydWN0b3IgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG5cbnZhciBzY3JpcHRUYWcgPSBmdW5jdGlvbiAoY29udGVudCkge1xuICByZXR1cm4gTFQgKyBTQ1JJUFQgKyBHVCArIGNvbnRlbnQgKyBMVCArICcvJyArIFNDUklQVCArIEdUO1xufTtcblxuLy8gQ3JlYXRlIG9iamVjdCB3aXRoIGZha2UgYG51bGxgIHByb3RvdHlwZTogdXNlIEFjdGl2ZVggT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBOdWxsUHJvdG9PYmplY3RWaWFBY3RpdmVYID0gZnVuY3Rpb24gKGFjdGl2ZVhEb2N1bWVudCkge1xuICBhY3RpdmVYRG9jdW1lbnQud3JpdGUoc2NyaXB0VGFnKCcnKSk7XG4gIGFjdGl2ZVhEb2N1bWVudC5jbG9zZSgpO1xuICB2YXIgdGVtcCA9IGFjdGl2ZVhEb2N1bWVudC5wYXJlbnRXaW5kb3cuT2JqZWN0O1xuICBhY3RpdmVYRG9jdW1lbnQgPSBudWxsOyAvLyBhdm9pZCBtZW1vcnkgbGVha1xuICByZXR1cm4gdGVtcDtcbn07XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBOdWxsUHJvdG9PYmplY3RWaWFJRnJhbWUgPSBmdW5jdGlvbiAoKSB7XG4gIC8vIFRocmFzaCwgd2FzdGUgYW5kIHNvZG9teTogSUUgR0MgYnVnXG4gIHZhciBpZnJhbWUgPSBkb2N1bWVudENyZWF0ZUVsZW1lbnQoJ2lmcmFtZScpO1xuICB2YXIgSlMgPSAnamF2YScgKyBTQ1JJUFQgKyAnOic7XG4gIHZhciBpZnJhbWVEb2N1bWVudDtcbiAgaWZyYW1lLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIGh0bWwuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzQ3NVxuICBpZnJhbWUuc3JjID0gU3RyaW5nKEpTKTtcbiAgaWZyYW1lRG9jdW1lbnQgPSBpZnJhbWUuY29udGVudFdpbmRvdy5kb2N1bWVudDtcbiAgaWZyYW1lRG9jdW1lbnQub3BlbigpO1xuICBpZnJhbWVEb2N1bWVudC53cml0ZShzY3JpcHRUYWcoJ2RvY3VtZW50LkY9T2JqZWN0JykpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICByZXR1cm4gaWZyYW1lRG9jdW1lbnQuRjtcbn07XG5cbi8vIENoZWNrIGZvciBkb2N1bWVudC5kb21haW4gYW5kIGFjdGl2ZSB4IHN1cHBvcnRcbi8vIE5vIG5lZWQgdG8gdXNlIGFjdGl2ZSB4IGFwcHJvYWNoIHdoZW4gZG9jdW1lbnQuZG9tYWluIGlzIG5vdCBzZXRcbi8vIHNlZSBodHRwczovL2dpdGh1Yi5jb20vZXMtc2hpbXMvZXM1LXNoaW0vaXNzdWVzLzE1MFxuLy8gdmFyaWF0aW9uIG9mIGh0dHBzOi8vZ2l0aHViLmNvbS9raXRjYW1icmlkZ2UvZXM1LXNoaW0vY29tbWl0LzRmNzM4YWMwNjYzNDZcbi8vIGF2b2lkIElFIEdDIGJ1Z1xudmFyIGFjdGl2ZVhEb2N1bWVudDtcbnZhciBOdWxsUHJvdG9PYmplY3QgPSBmdW5jdGlvbiAoKSB7XG4gIHRyeSB7XG4gICAgYWN0aXZlWERvY3VtZW50ID0gbmV3IEFjdGl2ZVhPYmplY3QoJ2h0bWxmaWxlJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGlnbm9yZSAqLyB9XG4gIE51bGxQcm90b09iamVjdCA9IHR5cGVvZiBkb2N1bWVudCAhPSAndW5kZWZpbmVkJ1xuICAgID8gZG9jdW1lbnQuZG9tYWluICYmIGFjdGl2ZVhEb2N1bWVudFxuICAgICAgPyBOdWxsUHJvdG9PYmplY3RWaWFBY3RpdmVYKGFjdGl2ZVhEb2N1bWVudCkgLy8gb2xkIElFXG4gICAgICA6IE51bGxQcm90b09iamVjdFZpYUlGcmFtZSgpXG4gICAgOiBOdWxsUHJvdG9PYmplY3RWaWFBY3RpdmVYKGFjdGl2ZVhEb2N1bWVudCk7IC8vIFdTSFxuICB2YXIgbGVuZ3RoID0gZW51bUJ1Z0tleXMubGVuZ3RoO1xuICB3aGlsZSAobGVuZ3RoLS0pIGRlbGV0ZSBOdWxsUHJvdG9PYmplY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tsZW5ndGhdXTtcbiAgcmV0dXJuIE51bGxQcm90b09iamVjdCgpO1xufTtcblxuaGlkZGVuS2V5c1tJRV9QUk9UT10gPSB0cnVlO1xuXG4vLyBgT2JqZWN0LmNyZWF0ZWAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5jcmVhdGVcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtY3JlYXRlIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmNyZWF0ZSB8fCBmdW5jdGlvbiBjcmVhdGUoTywgUHJvcGVydGllcykge1xuICB2YXIgcmVzdWx0O1xuICBpZiAoTyAhPT0gbnVsbCkge1xuICAgIEVtcHR5Q29uc3RydWN0b3JbUFJPVE9UWVBFXSA9IGFuT2JqZWN0KE8pO1xuICAgIHJlc3VsdCA9IG5ldyBFbXB0eUNvbnN0cnVjdG9yKCk7XG4gICAgRW1wdHlDb25zdHJ1Y3RvcltQUk9UT1RZUEVdID0gbnVsbDtcbiAgICAvLyBhZGQgXCJfX3Byb3RvX19cIiBmb3IgT2JqZWN0LmdldFByb3RvdHlwZU9mIHBvbHlmaWxsXG4gICAgcmVzdWx0W0lFX1BST1RPXSA9IE87XG4gIH0gZWxzZSByZXN1bHQgPSBOdWxsUHJvdG9PYmplY3QoKTtcbiAgcmV0dXJuIFByb3BlcnRpZXMgPT09IHVuZGVmaW5lZCA/IHJlc3VsdCA6IGRlZmluZVByb3BlcnRpZXNNb2R1bGUuZihyZXN1bHQsIFByb3BlcnRpZXMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIFY4X1BST1RPVFlQRV9ERUZJTkVfQlVHID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Y4LXByb3RvdHlwZS1kZWZpbmUtYnVnJyk7XG52YXIgZGVmaW5lUHJvcGVydHlNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWRlZmluZS1wcm9wZXJ0eScpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FuLW9iamVjdCcpO1xudmFyIHRvSW5kZXhlZE9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbmRleGVkLW9iamVjdCcpO1xudmFyIG9iamVjdEtleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LWtleXMnKTtcblxuLy8gYE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmRlZmluZXByb3BlcnRpZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydGllcyAtLSBzYWZlXG5leHBvcnRzLmYgPSBERVNDUklQVE9SUyAmJiAhVjhfUFJPVE9UWVBFX0RFRklORV9CVUcgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyA6IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoTywgUHJvcGVydGllcykge1xuICBhbk9iamVjdChPKTtcbiAgdmFyIHByb3BzID0gdG9JbmRleGVkT2JqZWN0KFByb3BlcnRpZXMpO1xuICB2YXIga2V5cyA9IG9iamVjdEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSBkZWZpbmVQcm9wZXJ0eU1vZHVsZS5mKE8sIGtleSA9IGtleXNbaW5kZXgrK10sIHByb3BzW2tleV0pO1xuICByZXR1cm4gTztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZGVzY3JpcHRvcnMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pZTgtZG9tLWRlZmluZScpO1xudmFyIFY4X1BST1RPVFlQRV9ERUZJTkVfQlVHID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3Y4LXByb3RvdHlwZS1kZWZpbmUtYnVnJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG52YXIgdG9Qcm9wZXJ0eUtleSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1wcm9wZXJ0eS1rZXknKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWRlZmluZXByb3BlcnR5IC0tIHNhZmVcbnZhciAkZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5ZGVzY3JpcHRvciAtLSBzYWZlXG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG52YXIgRU5VTUVSQUJMRSA9ICdlbnVtZXJhYmxlJztcbnZhciBDT05GSUdVUkFCTEUgPSAnY29uZmlndXJhYmxlJztcbnZhciBXUklUQUJMRSA9ICd3cml0YWJsZSc7XG5cbi8vIGBPYmplY3QuZGVmaW5lUHJvcGVydHlgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3QuZGVmaW5lcHJvcGVydHlcbmV4cG9ydHMuZiA9IERFU0NSSVBUT1JTID8gVjhfUFJPVE9UWVBFX0RFRklORV9CVUcgPyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmICh0eXBlb2YgTyA9PT0gJ2Z1bmN0aW9uJyAmJiBQID09PSAncHJvdG90eXBlJyAmJiAndmFsdWUnIGluIEF0dHJpYnV0ZXMgJiYgV1JJVEFCTEUgaW4gQXR0cmlidXRlcyAmJiAhQXR0cmlidXRlc1tXUklUQUJMRV0pIHtcbiAgICB2YXIgY3VycmVudCA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCk7XG4gICAgaWYgKGN1cnJlbnQgJiYgY3VycmVudFtXUklUQUJMRV0pIHtcbiAgICAgIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICAgICAgQXR0cmlidXRlcyA9IHtcbiAgICAgICAgY29uZmlndXJhYmxlOiBDT05GSUdVUkFCTEUgaW4gQXR0cmlidXRlcyA/IEF0dHJpYnV0ZXNbQ09ORklHVVJBQkxFXSA6IGN1cnJlbnRbQ09ORklHVVJBQkxFXSxcbiAgICAgICAgZW51bWVyYWJsZTogRU5VTUVSQUJMRSBpbiBBdHRyaWJ1dGVzID8gQXR0cmlidXRlc1tFTlVNRVJBQkxFXSA6IGN1cnJlbnRbRU5VTUVSQUJMRV0sXG4gICAgICAgIHdyaXRhYmxlOiBmYWxzZVxuICAgICAgfTtcbiAgICB9XG4gIH0gcmV0dXJuICRkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKTtcbn0gOiAkZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9Qcm9wZXJ0eUtleShQKTtcbiAgYW5PYmplY3QoQXR0cmlidXRlcyk7XG4gIGlmIChJRThfRE9NX0RFRklORSkgdHJ5IHtcbiAgICByZXR1cm4gJGRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlcnJvcikgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IG5ldyAkVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCcpO1xuICBpZiAoJ3ZhbHVlJyBpbiBBdHRyaWJ1dGVzKSBPW1BdID0gQXR0cmlidXRlcy52YWx1ZTtcbiAgcmV0dXJuIE87XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Rlc2NyaXB0b3JzJyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi1jYWxsJyk7XG52YXIgcHJvcGVydHlJc0VudW1lcmFibGVNb2R1bGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvb2JqZWN0LXByb3BlcnR5LWlzLWVudW1lcmFibGUnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eURlc2NyaXB0b3IgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvY3JlYXRlLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnZhciB0b0luZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW5kZXhlZC1vYmplY3QnKTtcbnZhciB0b1Byb3BlcnR5S2V5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByb3BlcnR5LWtleScpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaWU4LWRvbS1kZWZpbmUnKTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3IgLS0gc2FmZVxudmFyICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG4vLyBgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcmAgbWV0aG9kXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5nZXRvd25wcm9wZXJ0eWRlc2NyaXB0b3JcbmV4cG9ydHMuZiA9IERFU0NSSVBUT1JTID8gJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKSB7XG4gIE8gPSB0b0luZGV4ZWRPYmplY3QoTyk7XG4gIFAgPSB0b1Byb3BlcnR5S2V5KFApO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUCk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKGhhc093bihPLCBQKSkgcmV0dXJuIGNyZWF0ZVByb3BlcnR5RGVzY3JpcHRvcighY2FsbChwcm9wZXJ0eUlzRW51bWVyYWJsZU1vZHVsZS5mLCBPLCBQKSwgT1tQXSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGludGVybmFsT2JqZWN0S2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGVudW1CdWdLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2VudW0tYnVnLWtleXMnKTtcblxudmFyIGhpZGRlbktleXMgPSBlbnVtQnVnS2V5cy5jb25jYXQoJ2xlbmd0aCcsICdwcm90b3R5cGUnKTtcblxuLy8gYE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmdldG93bnByb3BlcnR5bmFtZXNcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHluYW1lcyAtLSBzYWZlXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyB8fCBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eU5hbWVzKE8pIHtcbiAgcmV0dXJuIGludGVybmFsT2JqZWN0S2V5cyhPLCBoaWRkZW5LZXlzKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5c3ltYm9scyAtLSBzYWZlXG5leHBvcnRzLmYgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHVuY3VycnlUaGlzKHt9LmlzUHJvdG90eXBlT2YpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHVuY3VycnlUaGlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2Z1bmN0aW9uLXVuY3VycnktdGhpcycpO1xudmFyIGhhc093biA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oYXMtb3duLXByb3BlcnR5Jyk7XG52YXIgdG9JbmRleGVkT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLWluZGV4ZWQtb2JqZWN0Jyk7XG52YXIgaW5kZXhPZiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pbmNsdWRlcycpLmluZGV4T2Y7XG52YXIgaGlkZGVuS2V5cyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9oaWRkZW4ta2V5cycpO1xuXG52YXIgcHVzaCA9IHVuY3VycnlUaGlzKFtdLnB1c2gpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIG5hbWVzKSB7XG4gIHZhciBPID0gdG9JbmRleGVkT2JqZWN0KG9iamVjdCk7XG4gIHZhciBpID0gMDtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICB2YXIga2V5O1xuICBmb3IgKGtleSBpbiBPKSAhaGFzT3duKGhpZGRlbktleXMsIGtleSkgJiYgaGFzT3duKE8sIGtleSkgJiYgcHVzaChyZXN1bHQsIGtleSk7XG4gIC8vIERvbid0IGVudW0gYnVnICYgaGlkZGVuIGtleXNcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIGlmIChoYXNPd24oTywga2V5ID0gbmFtZXNbaSsrXSkpIHtcbiAgICB+aW5kZXhPZihyZXN1bHQsIGtleSkgfHwgcHVzaChyZXN1bHQsIGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaW50ZXJuYWxPYmplY3RLZXlzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW51bS1idWcta2V5cycpO1xuXG4vLyBgT2JqZWN0LmtleXNgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1vYmplY3Qua2V5c1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1rZXlzIC0tIHNhZmVcbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiBpbnRlcm5hbE9iamVjdEtleXMoTywgZW51bUJ1Z0tleXMpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkcHJvcGVydHlJc0VudW1lcmFibGUgPSB7fS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yIC0tIHNhZmVcbnZhciBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xuXG4vLyBOYXNob3JuIH4gSkRLOCBidWdcbnZhciBOQVNIT1JOX0JVRyA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvciAmJiAhJHByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwoeyAxOiAyIH0sIDEpO1xuXG4vLyBgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZWAgbWV0aG9kIGltcGxlbWVudGF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLW9iamVjdC5wcm90b3R5cGUucHJvcGVydHlpc2VudW1lcmFibGVcbmV4cG9ydHMuZiA9IE5BU0hPUk5fQlVHID8gZnVuY3Rpb24gcHJvcGVydHlJc0VudW1lcmFibGUoVikge1xuICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0aGlzLCBWKTtcbiAgcmV0dXJuICEhZGVzY3JpcHRvciAmJiBkZXNjcmlwdG9yLmVudW1lcmFibGU7XG59IDogJHByb3BlcnR5SXNFbnVtZXJhYmxlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1vYmplY3QnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG5cbi8vIGBPcmRpbmFyeVRvUHJpbWl0aXZlYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb3JkaW5hcnl0b3ByaW1pdGl2ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5wdXQsIHByZWYpIHtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChwcmVmID09PSAnc3RyaW5nJyAmJiBpc0NhbGxhYmxlKGZuID0gaW5wdXQudG9TdHJpbmcpICYmICFpc09iamVjdCh2YWwgPSBjYWxsKGZuLCBpbnB1dCkpKSByZXR1cm4gdmFsO1xuICBpZiAoaXNDYWxsYWJsZShmbiA9IGlucHV0LnZhbHVlT2YpICYmICFpc09iamVjdCh2YWwgPSBjYWxsKGZuLCBpbnB1dCkpKSByZXR1cm4gdmFsO1xuICBpZiAocHJlZiAhPT0gJ3N0cmluZycgJiYgaXNDYWxsYWJsZShmbiA9IGlucHV0LnRvU3RyaW5nKSAmJiAhaXNPYmplY3QodmFsID0gY2FsbChmbiwgaW5wdXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdldEJ1aWx0SW4gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZ2V0LWJ1aWx0LWluJyk7XG52YXIgdW5jdXJyeVRoaXMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tdW5jdXJyeS10aGlzJyk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1uYW1lcycpO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvYW4tb2JqZWN0Jyk7XG5cbnZhciBjb25jYXQgPSB1bmN1cnJ5VGhpcyhbXS5jb25jYXQpO1xuXG4vLyBhbGwgb2JqZWN0IGtleXMsIGluY2x1ZGVzIG5vbi1lbnVtZXJhYmxlIGFuZCBzeW1ib2xzXG5tb2R1bGUuZXhwb3J0cyA9IGdldEJ1aWx0SW4oJ1JlZmxlY3QnLCAnb3duS2V5cycpIHx8IGZ1bmN0aW9uIG93bktleXMoaXQpIHtcbiAgdmFyIGtleXMgPSBnZXRPd25Qcm9wZXJ0eU5hbWVzTW9kdWxlLmYoYW5PYmplY3QoaXQpKTtcbiAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IGdldE93blByb3BlcnR5U3ltYm9sc01vZHVsZS5mO1xuICByZXR1cm4gZ2V0T3duUHJvcGVydHlTeW1ib2xzID8gY29uY2F0KGtleXMsIGdldE93blByb3BlcnR5U3ltYm9scyhpdCkpIDoga2V5cztcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGdsb2JhbDtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBpc051bGxPclVuZGVmaW5lZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1udWxsLW9yLXVuZGVmaW5lZCcpO1xuXG52YXIgJFR5cGVFcnJvciA9IFR5cGVFcnJvcjtcblxuLy8gYFJlcXVpcmVPYmplY3RDb2VyY2libGVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1yZXF1aXJlb2JqZWN0Y29lcmNpYmxlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXNOdWxsT3JVbmRlZmluZWQoaXQpKSB0aHJvdyBuZXcgJFR5cGVFcnJvcihcIkNhbid0IGNhbGwgbWV0aG9kIG9uIFwiICsgaXQpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHNoYXJlZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zaGFyZWQnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdWlkJyk7XG5cbnZhciBrZXlzID0gc2hhcmVkKCdrZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4ga2V5c1trZXldIHx8IChrZXlzW2tleV0gPSB1aWQoa2V5KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBkZWZpbmVHbG9iYWxQcm9wZXJ0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZWZpbmUtZ2xvYmFsLXByb3BlcnR5Jyk7XG5cbnZhciBTSEFSRUQgPSAnX19jb3JlLWpzX3NoYXJlZF9fJztcbnZhciBzdG9yZSA9IGdsb2JhbFtTSEFSRURdIHx8IGRlZmluZUdsb2JhbFByb3BlcnR5KFNIQVJFRCwge30pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHN0b3JlO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIElTX1BVUkUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtcHVyZScpO1xudmFyIHN0b3JlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3NoYXJlZC1zdG9yZScpO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogJzMuMzMuMScsXG4gIG1vZGU6IElTX1BVUkUgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxNC0yMDIzIERlbmlzIFB1c2hrYXJldiAoemxvaXJvY2sucnUpJyxcbiAgbGljZW5zZTogJ2h0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2Jsb2IvdjMuMzMuMS9MSUNFTlNFJyxcbiAgc291cmNlOiAnaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMnXG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8qIGVzbGludC1kaXNhYmxlIGVzL25vLXN5bWJvbCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZyAqL1xudmFyIFY4X1ZFUlNJT04gPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZW5naW5lLXY4LXZlcnNpb24nKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mYWlscycpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcblxudmFyICRTdHJpbmcgPSBnbG9iYWwuU3RyaW5nO1xuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tb2JqZWN0LWdldG93bnByb3BlcnR5c3ltYm9scyAtLSByZXF1aXJlZCBmb3IgdGVzdGluZ1xubW9kdWxlLmV4cG9ydHMgPSAhIU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgJiYgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgdmFyIHN5bWJvbCA9IFN5bWJvbCgnc3ltYm9sIGRldGVjdGlvbicpO1xuICAvLyBDaHJvbWUgMzggU3ltYm9sIGhhcyBpbmNvcnJlY3QgdG9TdHJpbmcgY29udmVyc2lvblxuICAvLyBgZ2V0LW93bi1wcm9wZXJ0eS1zeW1ib2xzYCBwb2x5ZmlsbCBzeW1ib2xzIGNvbnZlcnRlZCB0byBvYmplY3QgYXJlIG5vdCBTeW1ib2wgaW5zdGFuY2VzXG4gIC8vIG5iOiBEbyBub3QgY2FsbCBgU3RyaW5nYCBkaXJlY3RseSB0byBhdm9pZCB0aGlzIGJlaW5nIG9wdGltaXplZCBvdXQgdG8gYHN5bWJvbCsnJ2Agd2hpY2ggd2lsbCxcbiAgLy8gb2YgY291cnNlLCBmYWlsLlxuICByZXR1cm4gISRTdHJpbmcoc3ltYm9sKSB8fCAhKE9iamVjdChzeW1ib2wpIGluc3RhbmNlb2YgU3ltYm9sKSB8fFxuICAgIC8vIENocm9tZSAzOC00MCBzeW1ib2xzIGFyZSBub3QgaW5oZXJpdGVkIGZyb20gRE9NIGNvbGxlY3Rpb25zIHByb3RvdHlwZXMgdG8gaW5zdGFuY2VzXG4gICAgIVN5bWJvbC5zaGFtICYmIFY4X1ZFUlNJT04gJiYgVjhfVkVSU0lPTiA8IDQxO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgdG9JbnRlZ2VyT3JJbmZpbml0eSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy90by1pbnRlZ2VyLW9yLWluZmluaXR5Jyk7XG5cbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcblxuLy8gSGVscGVyIGZvciBhIHBvcHVsYXIgcmVwZWF0aW5nIGNhc2Ugb2YgdGhlIHNwZWM6XG4vLyBMZXQgaW50ZWdlciBiZSA/IFRvSW50ZWdlcihpbmRleCkuXG4vLyBJZiBpbnRlZ2VyIDwgMCwgbGV0IHJlc3VsdCBiZSBtYXgoKGxlbmd0aCArIGludGVnZXIpLCAwKTsgZWxzZSBsZXQgcmVzdWx0IGJlIG1pbihpbnRlZ2VyLCBsZW5ndGgpLlxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICB2YXIgaW50ZWdlciA9IHRvSW50ZWdlck9ySW5maW5pdHkoaW5kZXgpO1xuICByZXR1cm4gaW50ZWdlciA8IDAgPyBtYXgoaW50ZWdlciArIGxlbmd0aCwgMCkgOiBtaW4oaW50ZWdlciwgbGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIEluZGV4ZWRPYmplY3QgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaW5kZXhlZC1vYmplY3QnKTtcbnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSW5kZXhlZE9iamVjdChyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGl0KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRydW5jID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL21hdGgtdHJ1bmMnKTtcblxuLy8gYFRvSW50ZWdlck9ySW5maW5pdHlgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b2ludGVnZXJvcmluZmluaXR5XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIgbnVtYmVyID0gK2FyZ3VtZW50O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlIC0tIE5hTiBjaGVja1xuICByZXR1cm4gbnVtYmVyICE9PSBudW1iZXIgfHwgbnVtYmVyID09PSAwID8gMCA6IHRydW5jKG51bWJlcik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvSW50ZWdlck9ySW5maW5pdHkgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8taW50ZWdlci1vci1pbmZpbml0eScpO1xuXG52YXIgbWluID0gTWF0aC5taW47XG5cbi8vIGBUb0xlbmd0aGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvbGVuZ3RoXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gYXJndW1lbnQgPiAwID8gbWluKHRvSW50ZWdlck9ySW5maW5pdHkoYXJndW1lbnQpLCAweDFGRkZGRkZGRkZGRkZGKSA6IDA7IC8vIDIgKiogNTMgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgcmVxdWlyZU9iamVjdENvZXJjaWJsZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9yZXF1aXJlLW9iamVjdC1jb2VyY2libGUnKTtcblxudmFyICRPYmplY3QgPSBPYmplY3Q7XG5cbi8vIGBUb09iamVjdGAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvb2JqZWN0XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICByZXR1cm4gJE9iamVjdChyZXF1aXJlT2JqZWN0Q29lcmNpYmxlKGFyZ3VtZW50KSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNhbGwgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZnVuY3Rpb24tY2FsbCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLW9iamVjdCcpO1xudmFyIGlzU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXN5bWJvbCcpO1xudmFyIGdldE1ldGhvZCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nZXQtbWV0aG9kJyk7XG52YXIgb3JkaW5hcnlUb1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vcmRpbmFyeS10by1wcmltaXRpdmUnKTtcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyICRUeXBlRXJyb3IgPSBUeXBlRXJyb3I7XG52YXIgVE9fUFJJTUlUSVZFID0gd2VsbEtub3duU3ltYm9sKCd0b1ByaW1pdGl2ZScpO1xuXG4vLyBgVG9QcmltaXRpdmVgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy10b3ByaW1pdGl2ZVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5wdXQsIHByZWYpIHtcbiAgaWYgKCFpc09iamVjdChpbnB1dCkgfHwgaXNTeW1ib2woaW5wdXQpKSByZXR1cm4gaW5wdXQ7XG4gIHZhciBleG90aWNUb1ByaW0gPSBnZXRNZXRob2QoaW5wdXQsIFRPX1BSSU1JVElWRSk7XG4gIHZhciByZXN1bHQ7XG4gIGlmIChleG90aWNUb1ByaW0pIHtcbiAgICBpZiAocHJlZiA9PT0gdW5kZWZpbmVkKSBwcmVmID0gJ2RlZmF1bHQnO1xuICAgIHJlc3VsdCA9IGNhbGwoZXhvdGljVG9QcmltLCBpbnB1dCwgcHJlZik7XG4gICAgaWYgKCFpc09iamVjdChyZXN1bHQpIHx8IGlzU3ltYm9sKHJlc3VsdCkpIHJldHVybiByZXN1bHQ7XG4gICAgdGhyb3cgbmV3ICRUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG4gIH1cbiAgaWYgKHByZWYgPT09IHVuZGVmaW5lZCkgcHJlZiA9ICdudW1iZXInO1xuICByZXR1cm4gb3JkaW5hcnlUb1ByaW1pdGl2ZShpbnB1dCwgcHJlZik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3RvLXByaW1pdGl2ZScpO1xudmFyIGlzU3ltYm9sID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2lzLXN5bWJvbCcpO1xuXG4vLyBgVG9Qcm9wZXJ0eUtleWAgYWJzdHJhY3Qgb3BlcmF0aW9uXG4vLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXRvcHJvcGVydHlrZXlcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHZhciBrZXkgPSB0b1ByaW1pdGl2ZShhcmd1bWVudCwgJ3N0cmluZycpO1xuICByZXR1cm4gaXNTeW1ib2woa2V5KSA/IGtleSA6IGtleSArICcnO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTtcblxudmFyIFRPX1NUUklOR19UQUcgPSB3ZWxsS25vd25TeW1ib2woJ3RvU3RyaW5nVGFnJyk7XG52YXIgdGVzdCA9IHt9O1xuXG50ZXN0W1RPX1NUUklOR19UQUddID0gJ3onO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmluZyh0ZXN0KSA9PT0gJ1tvYmplY3Qgel0nO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRTdHJpbmcgPSBTdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFyZ3VtZW50KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICRTdHJpbmcoYXJndW1lbnQpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHJldHVybiAnT2JqZWN0JztcbiAgfVxufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB1bmN1cnJ5VGhpcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9mdW5jdGlvbi11bmN1cnJ5LXRoaXMnKTtcblxudmFyIGlkID0gMDtcbnZhciBwb3N0Zml4ID0gTWF0aC5yYW5kb20oKTtcbnZhciB0b1N0cmluZyA9IHVuY3VycnlUaGlzKDEuMC50b1N0cmluZyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gJ1N5bWJvbCgnICsgKGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXkpICsgJylfJyArIHRvU3RyaW5nKCsraWQgKyBwb3N0Zml4LCAzNik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgZXMvbm8tc3ltYm9sIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nICovXG52YXIgTkFUSVZFX1NZTUJPTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gTkFUSVZFX1NZTUJPTFxuICAmJiAhU3ltYm9sLnNoYW1cbiAgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJztcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9kZXNjcmlwdG9ycycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZhaWxzJyk7XG5cbi8vIFY4IH4gQ2hyb21lIDM2LVxuLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzMzNFxubW9kdWxlLmV4cG9ydHMgPSBERVNDUklQVE9SUyAmJiBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBlcy9uby1vYmplY3QtZGVmaW5lcHJvcGVydHkgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0sICdwcm90b3R5cGUnLCB7XG4gICAgdmFsdWU6IDQyLFxuICAgIHdyaXRhYmxlOiBmYWxzZVxuICB9KS5wcm90b3R5cGUgIT09IDQyO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2dsb2JhbCcpO1xudmFyIGlzQ2FsbGFibGUgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvaXMtY2FsbGFibGUnKTtcblxudmFyIFdlYWtNYXAgPSBnbG9iYWwuV2Vha01hcDtcblxubW9kdWxlLmV4cG9ydHMgPSBpc0NhbGxhYmxlKFdlYWtNYXApICYmIC9uYXRpdmUgY29kZS8udGVzdChTdHJpbmcoV2Vha01hcCkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9nbG9iYWwnKTtcbnZhciBzaGFyZWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvc2hhcmVkJyk7XG52YXIgaGFzT3duID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2hhcy1vd24tcHJvcGVydHknKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdWlkJyk7XG52YXIgTkFUSVZFX1NZTUJPTCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zeW1ib2wtY29uc3RydWN0b3ItZGV0ZWN0aW9uJyk7XG52YXIgVVNFX1NZTUJPTF9BU19VSUQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdXNlLXN5bWJvbC1hcy11aWQnKTtcblxudmFyIFN5bWJvbCA9IGdsb2JhbC5TeW1ib2w7XG52YXIgV2VsbEtub3duU3ltYm9sc1N0b3JlID0gc2hhcmVkKCd3a3MnKTtcbnZhciBjcmVhdGVXZWxsS25vd25TeW1ib2wgPSBVU0VfU1lNQk9MX0FTX1VJRCA/IFN5bWJvbFsnZm9yJ10gfHwgU3ltYm9sIDogU3ltYm9sICYmIFN5bWJvbC53aXRob3V0U2V0dGVyIHx8IHVpZDtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICBpZiAoIWhhc093bihXZWxsS25vd25TeW1ib2xzU3RvcmUsIG5hbWUpKSB7XG4gICAgV2VsbEtub3duU3ltYm9sc1N0b3JlW25hbWVdID0gTkFUSVZFX1NZTUJPTCAmJiBoYXNPd24oU3ltYm9sLCBuYW1lKVxuICAgICAgPyBTeW1ib2xbbmFtZV1cbiAgICAgIDogY3JlYXRlV2VsbEtub3duU3ltYm9sKCdTeW1ib2wuJyArIG5hbWUpO1xuICB9IHJldHVybiBXZWxsS25vd25TeW1ib2xzU3RvcmVbbmFtZV07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICQgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZXhwb3J0Jyk7XG52YXIgJGZpbmRJbmRleCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hcnJheS1pdGVyYXRpb24nKS5maW5kSW5kZXg7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hZGQtdG8tdW5zY29wYWJsZXMnKTtcblxudmFyIEZJTkRfSU5ERVggPSAnZmluZEluZGV4JztcbnZhciBTS0lQU19IT0xFUyA9IHRydWU7XG5cbi8vIFNob3VsZG4ndCBza2lwIGhvbGVzXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXMvbm8tYXJyYXktcHJvdG90eXBlLWZpbmRpbmRleCAtLSB0ZXN0aW5nXG5pZiAoRklORF9JTkRFWCBpbiBbXSkgQXJyYXkoMSlbRklORF9JTkRFWF0oZnVuY3Rpb24gKCkgeyBTS0lQU19IT0xFUyA9IGZhbHNlOyB9KTtcblxuLy8gYEFycmF5LnByb3RvdHlwZS5maW5kSW5kZXhgIG1ldGhvZFxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUuZmluZGluZGV4XG4kKHsgdGFyZ2V0OiAnQXJyYXknLCBwcm90bzogdHJ1ZSwgZm9yY2VkOiBTS0lQU19IT0xFUyB9LCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kSW5kZXgodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICB9XG59KTtcblxuLy8gaHR0cHM6Ly90YzM5LmVzL2VjbWEyNjIvI3NlYy1hcnJheS5wcm90b3R5cGUtQEB1bnNjb3BhYmxlc1xuYWRkVG9VbnNjb3BhYmxlcyhGSU5EX0lOREVYKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2V4cG9ydCcpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9vYmplY3QtYXNzaWduJyk7XG5cbi8vIGBPYmplY3QuYXNzaWduYCBtZXRob2Rcbi8vIGh0dHBzOi8vdGMzOS5lcy9lY21hMjYyLyNzZWMtb2JqZWN0LmFzc2lnblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVzL25vLW9iamVjdC1hc3NpZ24gLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmdcbiQoeyB0YXJnZXQ6ICdPYmplY3QnLCBzdGF0OiB0cnVlLCBhcml0eTogMiwgZm9yY2VkOiBPYmplY3QuYXNzaWduICE9PSBhc3NpZ24gfSwge1xuICBhc3NpZ246IGFzc2lnblxufSk7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJpbXBvcnQgeyBNTEI5SSB9IGZyb20gJy4vc3JjJztcblxubGV0IG1sYjlpOiBNTEI5SSB8IHVuZGVmaW5lZDtcbmV4cG9ydCBmdW5jdGlvbiBzdGFydChqc29uQ29uZmlnOiBhbnkpIHtcbiAgbWxiOWkgPSBuZXcgTUxCOUkoanNvbkNvbmZpZyk7XG4gIG1sYjlpLnN0YXJ0KCk7XG59XG5leHBvcnQgZnVuY3Rpb24gc3RvcCgpIHtcbiAgaWYgKG1sYjlpID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgbWxiOWkuc3RvcCgpO1xuICBtbGI5aSA9IHVuZGVmaW5lZDtcbn1cblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHt9XG59XG4od2luZG93IGFzIGFueSkuc3RhcnQgPSBzdGFydDtcbih3aW5kb3cgYXMgYW55KS5zdG9wID0gc3RvcDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==
function start(jsonConfig){window.start(jsonConfig);}
function stop(){window.stop();}

